

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 22 13:47:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 2.05
    23                           ; Generated 20/12/2018 GMT
    24                           ; 
    25                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F45K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  007E09                     __pidataCOMRAM:
    59                           	opt callstack 0
    60                           
    61                           ;initializer for _raceColor
    62  007E09  30                 	db	48
    63  007E0A  30                 	db	48
    64  007E0B  30                 	db	48
    65  007E0C  30                 	db	48
    66  007E0D  30                 	db	48
    67  007E0E  30                 	db	48
    68  007E0F  30                 	db	48
    69  007E10  30                 	db	48
    70  007E11  00                 	db	0
    71                           
    72                           ;initializer for _sensorVals
    73  007E12  FF                 	db	255
    74  007E13  FF                 	db	255
    75  007E14  FF                 	db	255
    76  007E15  FF                 	db	255
    77  007E16  FF                 	db	255
    78                           
    79                           ;initializer for _RRranges
    80  007E17  8C                 	db	140
    81  007E18  B9                 	db	185
    82  007E19  C3                 	db	195
    83  007E1A  C3                 	db	195
    84  007E1B  FF                 	db	255
    85                           
    86                           ;initializer for _Rranges
    87  007E1C  8C                 	db	140
    88  007E1D  AA                 	db	170
    89  007E1E  D2                 	db	210
    90  007E1F  AF                 	db	175
    91  007E20  FF                 	db	255
    92                           
    93                           ;initializer for _Mranges
    94  007E21  82                 	db	130
    95  007E22  A5                 	db	165
    96  007E23  AF                 	db	175
    97  007E24  BC                 	db	188
    98  007E25  FF                 	db	255
    99                           
   100                           ;initializer for _Lranges
   101  007E26  82                 	db	130
   102  007E27  B2                 	db	178
   103  007E28  B4                 	db	180
   104  007E29  BC                 	db	188
   105  007E2A  FF                 	db	255
   106                           
   107                           ;initializer for _LLranges
   108  007E2B  8C                 	db	140
   109  007E2C  A8                 	db	168
   110  007E2D  B9                 	db	185
   111  007E2E  B9                 	db	185
   112  007E2F  FF                 	db	255
   113                           
   114                           ;initializer for _col
   115  007E30  42                 	db	66
   116                           
   117                           ;initializer for _size
   118  007E31  05                 	db	5
   119  0000                     _ANSELE	set	3900
   120  0000                     _ANSELD	set	3899
   121  0000                     _ANSELB	set	3897
   122  0000                     _ANSELA	set	3896
   123  0000                     _ANSELCbits	set	3898
   124  0000                     _ANSELBbits	set	3897
   125  0000                     _ANSELC	set	3898
   126  0000                     _FSR0	set	4073
   127  0000                     _OSCCONbits	set	4051
   128  0000                     _TRISE	set	3990
   129  0000                     _LATE	set	3981
   130  0000                     _PORTE	set	3972
   131  0000                     _TRISD	set	3989
   132  0000                     _LATD	set	3980
   133  0000                     _PORTD	set	3971
   134  0000                     _TRISC	set	3988
   135  0000                     _LATC	set	3979
   136  0000                     _TRISB	set	3987
   137  0000                     _LATB	set	3978
   138  0000                     _PORTB	set	3969
   139  0000                     _TRISA	set	3986
   140  0000                     _LATA	set	3977
   141  0000                     _PORTA	set	3968
   142  0000                     _ADRESH	set	4036
   143  0000                     _TRISBbits	set	3987
   144  0000                     _ADCON0bits	set	4034
   145  0000                     _ADCON1	set	4033
   146  0000                     _ADCON2bits	set	4032
   147  0000                     _PORTC	set	3970
   148  0000                     _TRISCbits	set	3988
   149  0000                     _BAUDCON1bits	set	4024
   150  0000                     _SPBRGH1	set	4016
   151  0000                     _SPBRG1	set	4015
   152  0000                     _RCSTA1	set	4011
   153  0000                     _TXSTA1	set	4012
   154  0000                     _PIR1bits	set	3998
   155  0000                     _PIE1bits	set	3997
   156                           
   157                           ; #config settings
   158  0000                     
   159                           	psect	cinit
   160  007E32                     __pcinit:
   161                           	opt callstack 0
   162  007E32                     start_initialization:
   163                           	opt callstack 0
   164  007E32                     __initialization:
   165                           	opt callstack 0
   166                           
   167                           ; Initialize objects allocated to COMRAM (41 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169  007E32  0E09               	movlw	low __pidataCOMRAM
   170  007E34  6EF6               	movwf	tblptrl,c
   171  007E36  0E7E               	movlw	high __pidataCOMRAM
   172  007E38  6EF7               	movwf	tblptrh,c
   173  007E3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174  007E3C  6EF8               	movwf	tblptru,c
   175  007E3E  EE00  F001         	lfsr	0,__pdataCOMRAM
   176  007E42  EE10 F029          	lfsr	1,41
   177  007E46                     copy_data0:
   178  007E46  0009               	tblrd		*+
   179  007E48  CFF5 FFEE          	movff	tablat,postinc0
   180  007E4C  50E5               	movf	postdec1,w,c
   181  007E4E  50E1               	movf	fsr1l,w,c
   182  007E50  E1FA               	bnz	copy_data0
   183  007E52                     end_of_initialization:
   184                           	opt callstack 0
   185  007E52                     __end_of__initialization:
   186                           	opt callstack 0
   187  007E52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   188  007E54  6EF8               	movwf	tblptru,c
   189  007E56  0100               	movlb	0
   190  007E58  EFEA  F03E         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	dataCOMRAM
   193  000001                     __pdataCOMRAM:
   194                           	opt callstack 0
   195  000001                     _raceColor:
   196                           	opt callstack 0
   197  000001                     	ds	9
   198  00000A                     _sensorVals:
   199                           	opt callstack 0
   200  00000A                     	ds	5
   201  00000F                     _RRranges:
   202                           	opt callstack 0
   203  00000F                     	ds	5
   204  000014                     _Rranges:
   205                           	opt callstack 0
   206  000014                     	ds	5
   207  000019                     _Mranges:
   208                           	opt callstack 0
   209  000019                     	ds	5
   210  00001E                     _Lranges:
   211                           	opt callstack 0
   212  00001E                     	ds	5
   213  000023                     _LLranges:
   214                           	opt callstack 0
   215  000023                     	ds	5
   216  000028                     _col:
   217                           	opt callstack 0
   218  000028                     	ds	1
   219  000029                     _size:
   220                           	opt callstack 0
   221  000029                     	ds	1
   222                           
   223                           	psect	cstackCOMRAM
   224  00002A                     __pcstackCOMRAM:
   225                           	opt callstack 0
   226  00002A                     ??_setADCChannel:
   227  00002A                     ?___lwdiv:
   228                           	opt callstack 0
   229  00002A                     ___lwdiv@dividend:
   230                           	opt callstack 0
   231                           
   232                           ; 2 bytes @ 0x0
   233  00002A                     	ds	2
   234  00002C                     setADCChannel@channel:
   235                           	opt callstack 0
   236  00002C                     ___lwdiv@divisor:
   237                           	opt callstack 0
   238                           
   239                           ; 2 bytes @ 0x2
   240  00002C                     	ds	2
   241  00002E                     ___lwdiv@quotient:
   242                           	opt callstack 0
   243                           
   244                           ; 2 bytes @ 0x4
   245  00002E                     	ds	2
   246  000030                     ___lwdiv@counter:
   247                           	opt callstack 0
   248                           
   249                           ; 1 bytes @ 0x6
   250  000030                     	ds	1
   251  000031                     ??_aveSensor:
   252                           
   253                           ; 1 bytes @ 0x7
   254  000031                     	ds	1
   255  000032                     aveSensor@s:
   256                           	opt callstack 0
   257                           
   258                           ; 1 bytes @ 0x8
   259  000032                     	ds	1
   260  000033                     aveSensor@measurements:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x9
   264  000033                     	ds	2
   265  000035                     aveSensor@result:
   266                           	opt callstack 0
   267                           
   268                           ; 1 bytes @ 0xB
   269  000035                     	ds	1
   270  000036                     aveSensor@a:
   271                           	opt callstack 0
   272                           
   273                           ; 1 bytes @ 0xC
   274  000036                     	ds	1
   275  000037                     
   276                           ; 1 bytes @ 0xD
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 77 in file "sanic.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, status,2, status,0, cstack
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   296 ;;      Params:         0       0       0       0       0       0       0
   297 ;;      Locals:         0       0       0       0       0       0       0
   298 ;;      Temps:          0       0       0       0       0       0       0
   299 ;;      Totals:         0       0       0       0       0       0       0
   300 ;;Total ram usage:        0 bytes
   301 ;; Hardware stack levels required when called:    2
   302 ;; This function calls:
   303 ;;		_aveSensor
   304 ;;		_init
   305 ;;		_setupADC
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text0
   312  007DD4                     __ptext0:
   313                           	opt callstack 0
   314  007DD4                     _main:
   315                           	opt callstack 29
   316                           
   317                           ;sanic.c: 94:     init();
   318                           
   319                           ;incstack = 0
   320  007DD4  ECE3  F03E         	call	_init	;wreg free
   321                           
   322                           ;sanic.c: 95:     setupADC();
   323  007DD8  ECF3  F03E         	call	_setupADC	;wreg free
   324  007DDC                     l1018:
   325                           
   326                           ;sanic.c: 97:         PORTA = aveSensor(12);
   327  007DDC  0E0C               	movlw	12
   328  007DDE  EC46  F03F         	call	_aveSensor
   329  007DE2  6E80               	movwf	3968,c	;volatile
   330  007DE4  D7FB               	goto	l1018
   331  007DE6                     __end_of_main:
   332                           	opt callstack 0
   333                           
   334 ;; *************** function _setupADC *****************
   335 ;; Defined at:
   336 ;;		line 43 in file "./functions.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   350 ;;      Params:         0       0       0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; This function calls:
   357 ;;		Nothing
   358 ;; This function is called by:
   359 ;;		_main
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text1
   364  007DE6                     __ptext1:
   365                           	opt callstack 0
   366  007DE6                     _setupADC:
   367                           	opt callstack 30
   368                           
   369                           ;./functions.c: 44:     ADCON2bits.ADCS = 0b100;
   370                           
   371                           ;incstack = 0
   372  007DE6  50C0               	movf	4032,w,c	;volatile
   373  007DE8  0BF8               	andlw	-8
   374  007DEA  0904               	iorlw	4
   375  007DEC  6EC0               	movwf	4032,c	;volatile
   376                           
   377                           ;./functions.c: 45:     ADCON1 = 0;
   378  007DEE  0E00               	movlw	0
   379  007DF0  6EC1               	movwf	4033,c	;volatile
   380                           
   381                           ;./functions.c: 46:     ADCON0bits.CHS = 0b01100;
   382  007DF2  50C2               	movf	4034,w,c	;volatile
   383  007DF4  0B83               	andlw	-125
   384  007DF6  0930               	iorlw	48
   385  007DF8  6EC2               	movwf	4034,c	;volatile
   386                           
   387                           ;./functions.c: 47:     ADCON2bits.ADFM = 0;
   388  007DFA  9EC0               	bcf	4032,7,c	;volatile
   389                           
   390                           ;./functions.c: 48:     ADCON2bits.ACQT = 0b101;
   391  007DFC  50C0               	movf	4032,w,c	;volatile
   392  007DFE  0BC7               	andlw	-57
   393  007E00  0928               	iorlw	40
   394  007E02  6EC0               	movwf	4032,c	;volatile
   395                           
   396                           ;./functions.c: 49:     ADCON0bits.ADON = 1;
   397  007E04  80C2               	bsf	4034,0,c	;volatile
   398  007E06  0012               	return		;funcret
   399  007E08                     __end_of_setupADC:
   400                           	opt callstack 0
   401                           
   402 ;; *************** function _init *****************
   403 ;; Defined at:
   404 ;;		line 108 in file "sanic.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   418 ;;      Params:         0       0       0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    1
   425 ;; This function calls:
   426 ;;		_clearPorts
   427 ;;		_setupOSC
   428 ;;		_setupSerial
   429 ;; This function is called by:
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text2
   435  007DC6                     __ptext2:
   436                           	opt callstack 0
   437  007DC6                     _init:
   438                           	opt callstack 29
   439                           
   440                           ;sanic.c: 109:     setupOSC();
   441                           
   442                           ;incstack = 0
   443  007DC6  ECDE  F03E         	call	_setupOSC	;wreg free
   444                           
   445                           ;sanic.c: 110:     clearPorts();
   446  007DCA  EC92  F03F         	call	_clearPorts	;wreg free
   447                           
   448                           ;sanic.c: 111:     setupSerial();
   449  007DCE  EC2E  F03F         	call	_setupSerial	;wreg free
   450  007DD2  0012               	return		;funcret
   451  007DD4                     __end_of_init:
   452                           	opt callstack 0
   453                           
   454 ;; *************** function _setupSerial *****************
   455 ;; Defined at:
   456 ;;		line 22 in file "./functions.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   470 ;;      Params:         0       0       0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_init
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text3
   484  007E5C                     __ptext3:
   485                           	opt callstack 0
   486  007E5C                     _setupSerial:
   487                           	opt callstack 29
   488                           
   489                           ;./functions.c: 23:     PIE1bits.RC1IE = 0;
   490                           
   491                           ;incstack = 0
   492  007E5C  9A9D               	bcf	3997,5,c	;volatile
   493                           
   494                           ;./functions.c: 24:     PIE1bits.TX1IE = 0;
   495  007E5E  989D               	bcf	3997,4,c	;volatile
   496                           
   497                           ;./functions.c: 25:     PIR1bits.RCIF = 0;
   498  007E60  9A9E               	bcf	3998,5,c	;volatile
   499                           
   500                           ;./functions.c: 27:     FSR0 = 0;
   501  007E62  0E00               	movlw	0
   502  007E64  6EEA               	movwf	fsr0h,c	;volatile
   503  007E66  0E00               	movlw	0
   504  007E68  6EE9               	movwf	fsr0l,c	;volatile
   505                           
   506                           ;./functions.c: 28:     TXSTA1 = 0b00100100;
   507  007E6A  0E24               	movlw	36
   508  007E6C  6EAC               	movwf	4012,c	;volatile
   509                           
   510                           ;./functions.c: 29:     RCSTA1 = 0b10010000;
   511  007E6E  0E90               	movlw	144
   512  007E70  6EAB               	movwf	4011,c	;volatile
   513                           
   514                           ;./functions.c: 31:     SPBRG1 = 25;
   515  007E72  0E19               	movlw	25
   516  007E74  6EAF               	movwf	4015,c	;volatile
   517                           
   518                           ;./functions.c: 32:     SPBRGH1 = 0;
   519  007E76  0E00               	movlw	0
   520  007E78  6EB0               	movwf	4016,c	;volatile
   521                           
   522                           ;./functions.c: 33:     BAUDCON1bits.BRG16 = 0;
   523  007E7A  96B8               	bcf	4024,3,c	;volatile
   524                           
   525                           ;./functions.c: 34:     TRISCbits.RC6 = 1;
   526  007E7C  8C94               	bsf	3988,6,c	;volatile
   527                           
   528                           ;./functions.c: 35:     TRISCbits.RC7 = 1;
   529  007E7E  8E94               	bsf	3988,7,c	;volatile
   530                           
   531                           ;./functions.c: 37:     PORTC = 0;
   532  007E80  0E00               	movlw	0
   533  007E82  6E82               	movwf	3970,c	;volatile
   534                           
   535                           ;./functions.c: 38:     ANSELC = 0;
   536  007E84  0E00               	movlw	0
   537  007E86  010F               	movlb	15	; () banked
   538  007E88  6F3A               	movwf	58,b	;volatile
   539                           
   540                           ; BSR set to: 15
   541  007E8A  0012               	return		;funcret
   542  007E8C                     __end_of_setupSerial:
   543                           	opt callstack 0
   544                           
   545 ;; *************** function _setupOSC *****************
   546 ;; Defined at:
   547 ;;		line 159 in file "./functions.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,2
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   561 ;;      Params:         0       0       0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		_init
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text4
   575  007DBC                     __ptext4:
   576                           	opt callstack 0
   577  007DBC                     _setupOSC:
   578                           	opt callstack 29
   579                           
   580                           ;./functions.c: 160:     OSCCONbits.IRCF = 0b101;
   581                           
   582                           ; BSR set to: 15
   583                           ;incstack = 0
   584  007DBC  50D3               	movf	4051,w,c	;volatile
   585  007DBE  0B8F               	andlw	-113
   586  007DC0  0950               	iorlw	80
   587  007DC2  6ED3               	movwf	4051,c	;volatile
   588  007DC4  0012               	return		;funcret
   589  007DC6                     __end_of_setupOSC:
   590                           	opt callstack 0
   591                           
   592 ;; *************** function _clearPorts *****************
   593 ;; Defined at:
   594 ;;		line 129 in file "./functions.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   608 ;;      Params:         0       0       0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_init
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text5
   622  007F24                     __ptext5:
   623                           	opt callstack 0
   624  007F24                     _clearPorts:
   625                           	opt callstack 29
   626                           
   627                           ;./functions.c: 130:     PORTA = 0;
   628                           
   629                           ;incstack = 0
   630  007F24  0E00               	movlw	0
   631  007F26  6E80               	movwf	3968,c	;volatile
   632                           
   633                           ;./functions.c: 131:     LATA = 0;
   634  007F28  0E00               	movlw	0
   635  007F2A  6E89               	movwf	3977,c	;volatile
   636                           
   637                           ;./functions.c: 132:     TRISA = 0;
   638  007F2C  0E00               	movlw	0
   639  007F2E  6E92               	movwf	3986,c	;volatile
   640                           
   641                           ;./functions.c: 133:     ANSELA = 0;
   642  007F30  0E00               	movlw	0
   643  007F32  010F               	movlb	15	; () banked
   644  007F34  6F38               	movwf	56,b	;volatile
   645                           
   646                           ;./functions.c: 135:     PORTB = 0;
   647  007F36  0E00               	movlw	0
   648  007F38  6E81               	movwf	3969,c	;volatile
   649                           
   650                           ;./functions.c: 136:     LATB = 0;
   651  007F3A  0E00               	movlw	0
   652  007F3C  6E8A               	movwf	3978,c	;volatile
   653                           
   654                           ;./functions.c: 137:     TRISB = 0;
   655  007F3E  0E00               	movlw	0
   656  007F40  6E93               	movwf	3987,c	;volatile
   657                           
   658                           ;./functions.c: 138:     ANSELB = 0;
   659  007F42  0E00               	movlw	0
   660  007F44  6F39               	movwf	57,b	;volatile
   661                           
   662                           ;./functions.c: 140:     PORTC = 0;
   663  007F46  0E00               	movlw	0
   664  007F48  6E82               	movwf	3970,c	;volatile
   665                           
   666                           ;./functions.c: 141:     LATC = 0;
   667  007F4A  0E00               	movlw	0
   668  007F4C  6E8B               	movwf	3979,c	;volatile
   669                           
   670                           ;./functions.c: 142:     TRISC = 0;
   671  007F4E  0E00               	movlw	0
   672  007F50  6E94               	movwf	3988,c	;volatile
   673                           
   674                           ;./functions.c: 143:     ANSELC = 0;
   675  007F52  0E00               	movlw	0
   676  007F54  6F3A               	movwf	58,b	;volatile
   677                           
   678                           ;./functions.c: 145:     PORTD = 0;
   679  007F56  0E00               	movlw	0
   680  007F58  6E83               	movwf	3971,c	;volatile
   681                           
   682                           ;./functions.c: 146:     LATD = 0;
   683  007F5A  0E00               	movlw	0
   684  007F5C  6E8C               	movwf	3980,c	;volatile
   685                           
   686                           ;./functions.c: 147:     TRISD = 0;
   687  007F5E  0E00               	movlw	0
   688  007F60  6E95               	movwf	3989,c	;volatile
   689                           
   690                           ;./functions.c: 148:     ANSELD = 0;
   691  007F62  0E00               	movlw	0
   692  007F64  6F3B               	movwf	59,b	;volatile
   693                           
   694                           ;./functions.c: 150:     PORTE = 0;
   695  007F66  0E00               	movlw	0
   696  007F68  6E84               	movwf	3972,c	;volatile
   697                           
   698                           ;./functions.c: 151:     LATE = 0;
   699  007F6A  0E00               	movlw	0
   700  007F6C  6E8D               	movwf	3981,c	;volatile
   701                           
   702                           ;./functions.c: 152:     TRISE = 0;
   703  007F6E  0E00               	movlw	0
   704  007F70  6E96               	movwf	3990,c	;volatile
   705                           
   706                           ;./functions.c: 153:     ANSELE = 0;
   707  007F72  0E00               	movlw	0
   708  007F74  6F3C               	movwf	60,b	;volatile
   709                           
   710                           ;./functions.c: 154:     raceColor[3] = 1;
   711  007F76  0E01               	movlw	1
   712  007F78  6E04               	movwf	_raceColor+3,c
   713                           
   714                           ; BSR set to: 15
   715  007F7A  0012               	return		;funcret
   716  007F7C                     __end_of_clearPorts:
   717                           	opt callstack 0
   718                           
   719 ;; *************** function _aveSensor *****************
   720 ;; Defined at:
   721 ;;		line 101 in file "./functions.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  s               1    wreg     unsigned char 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  s               1    8[COMRAM] unsigned char 
   726 ;;  a               1   12[COMRAM] unsigned char 
   727 ;;  measurements    2    9[COMRAM] unsigned int 
   728 ;;  result          1   11[COMRAM] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      unsigned char 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   738 ;;      Params:         0       0       0       0       0       0       0
   739 ;;      Locals:         5       0       0       0       0       0       0
   740 ;;      Temps:          1       0       0       0       0       0       0
   741 ;;      Totals:         6       0       0       0       0       0       0
   742 ;;Total ram usage:        6 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    1
   745 ;; This function calls:
   746 ;;		___lwdiv
   747 ;;		_readADC
   748 ;;		_setADCChannel
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text6
   755  007E8C                     __ptext6:
   756                           	opt callstack 0
   757  007E8C                     _aveSensor:
   758                           	opt callstack 29
   759                           
   760                           ; BSR set to: 15
   761                           ;incstack = 0
   762                           ;aveSensor@s stored from wreg
   763  007E8C  6E32               	movwf	aveSensor@s,c
   764                           
   765                           ;./functions.c: 102:     setADCChannel(s);
   766  007E8E  5032               	movf	aveSensor@s,w,c
   767  007E90  ECBE  F03F         	call	_setADCChannel
   768                           
   769                           ;./functions.c: 103:     unsigned int measurements = 0;
   770  007E94  0E00               	movlw	0
   771  007E96  6E34               	movwf	aveSensor@measurements+1,c
   772  007E98  0E00               	movlw	0
   773  007E9A  6E33               	movwf	aveSensor@measurements,c
   774                           
   775                           ;./functions.c: 105:     for (unsigned char a = 0; a < 10; a++){
   776  007E9C  0E00               	movlw	0
   777  007E9E  6E36               	movwf	aveSensor@a,c
   778  007EA0                     l1004:
   779                           
   780                           ;./functions.c: 106:         measurements += readADC();
   781  007EA0  ECD9  F03E         	call	_readADC	;wreg free
   782  007EA4  6E31               	movwf	??_aveSensor& (0+255),c
   783  007EA6  5031               	movf	??_aveSensor,w,c
   784  007EA8  2633               	addwf	aveSensor@measurements,f,c
   785  007EAA  0E00               	movlw	0
   786  007EAC  2234               	addwfc	aveSensor@measurements+1,f,c
   787                           
   788                           ;./functions.c: 107:     }
   789  007EAE  2A36               	incf	aveSensor@a,f,c
   790  007EB0  0E09               	movlw	9
   791  007EB2  6436               	cpfsgt	aveSensor@a,c
   792  007EB4  D7F5               	goto	l1004
   793                           
   794                           ;./functions.c: 109:     unsigned char result = measurements / 10;
   795  007EB6  C033  F02A         	movff	aveSensor@measurements,___lwdiv@dividend
   796  007EBA  C034  F02B         	movff	aveSensor@measurements+1,___lwdiv@dividend+1
   797  007EBE  0E00               	movlw	0
   798  007EC0  6E2D               	movwf	___lwdiv@divisor+1,c
   799  007EC2  0E0A               	movlw	10
   800  007EC4  6E2C               	movwf	___lwdiv@divisor,c
   801  007EC6  EC69  F03F         	call	___lwdiv	;wreg free
   802  007ECA  502A               	movf	?___lwdiv,w,c
   803  007ECC  6E35               	movwf	aveSensor@result,c
   804                           
   805                           ;./functions.c: 111:     return result;
   806  007ECE  5035               	movf	aveSensor@result,w,c
   807  007ED0  0012               	return		;funcret
   808  007ED2                     __end_of_aveSensor:
   809                           	opt callstack 0
   810                           
   811 ;; *************** function _setADCChannel *****************
   812 ;; Defined at:
   813 ;;		line 55 in file "./functions.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  channel         1    wreg     unsigned char 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  channel         1    2[COMRAM] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   827 ;;      Params:         0       0       0       0       0       0       0
   828 ;;      Locals:         1       0       0       0       0       0       0
   829 ;;      Temps:          2       0       0       0       0       0       0
   830 ;;      Totals:         3       0       0       0       0       0       0
   831 ;;Total ram usage:        3 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_aveSensor
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text7
   841  007F7C                     __ptext7:
   842                           	opt callstack 0
   843  007F7C                     _setADCChannel:
   844                           	opt callstack 29
   845                           
   846                           ;incstack = 0
   847                           ;setADCChannel@channel stored from wreg
   848  007F7C  6E2C               	movwf	setADCChannel@channel,c
   849                           
   850                           ;./functions.c: 56:     ADCON0bits.CHS = channel;
   851  007F7E  C02C  F02A         	movff	setADCChannel@channel,??_setADCChannel
   852  007F82  462A               	rlncf	??_setADCChannel,f,c
   853  007F84  462A               	rlncf	??_setADCChannel,f,c
   854  007F86  50C2               	movf	4034,w,c	;volatile
   855  007F88  182A               	xorwf	??_setADCChannel,w,c
   856  007F8A  0B83               	andlw	-125
   857  007F8C  182A               	xorwf	??_setADCChannel,w,c
   858  007F8E  6EC2               	movwf	4034,c	;volatile
   859                           
   860                           ;./functions.c: 58:     switch (channel){
   861  007F90  D01C               	goto	l848
   862  007F92                     l104:
   863                           
   864                           ;./functions.c: 60:         TRISBbits.TRISB2 = 1;
   865  007F92  8493               	bsf	3987,2,c	;volatile
   866                           
   867                           ;./functions.c: 61:         ANSELBbits.ANSB2 = 1;
   868  007F94  010F               	movlb	15	; () banked
   869  007F96  8539               	bsf	57,2,b	;volatile
   870                           
   871                           ;./functions.c: 62:         break;
   872  007F98  0012               	return	
   873  007F9A                     l106:
   874                           
   875                           ;./functions.c: 64:         TRISBbits.TRISB3 = 1;
   876  007F9A  8693               	bsf	3987,3,c	;volatile
   877                           
   878                           ;./functions.c: 65:         ANSELBbits.ANSB3 = 1;
   879  007F9C  010F               	movlb	15	; () banked
   880  007F9E  8739               	bsf	57,3,b	;volatile
   881                           
   882                           ;./functions.c: 66:         break;
   883  007FA0  0012               	return	
   884  007FA2                     l107:
   885                           
   886                           ;./functions.c: 68:         TRISBbits.TRISB1 = 1;
   887  007FA2  8293               	bsf	3987,1,c	;volatile
   888                           
   889                           ;./functions.c: 69:         ANSELBbits.ANSB1 = 1;
   890  007FA4  010F               	movlb	15	; () banked
   891  007FA6  8339               	bsf	57,1,b	;volatile
   892                           
   893                           ;./functions.c: 70:         break;
   894  007FA8  0012               	return	
   895  007FAA                     l108:
   896                           
   897                           ;./functions.c: 72:         TRISBbits.TRISB0 = 1;
   898  007FAA  8093               	bsf	3987,0,c	;volatile
   899                           
   900                           ;./functions.c: 73:         ANSELBbits.ANSB0 = 1;
   901  007FAC  010F               	movlb	15	; () banked
   902  007FAE  8139               	bsf	57,0,b	;volatile
   903                           
   904                           ;./functions.c: 74:         break;
   905  007FB0  0012               	return	
   906  007FB2                     l109:
   907                           
   908                           ;./functions.c: 76:         TRISBbits.TRISB5 = 1;
   909  007FB2  8A93               	bsf	3987,5,c	;volatile
   910                           
   911                           ;./functions.c: 77:         ANSELBbits.ANSB5 = 1;
   912  007FB4  010F               	movlb	15	; () banked
   913  007FB6  8B39               	bsf	57,5,b	;volatile
   914                           
   915                           ;./functions.c: 78:         break;
   916  007FB8  0012               	return	
   917  007FBA                     l110:
   918                           
   919                           ;./functions.c: 80:         TRISCbits.TRISC3 = 1;
   920  007FBA  8694               	bsf	3988,3,c	;volatile
   921                           
   922                           ;./functions.c: 81:         ANSELCbits.ANSC3 = 1;
   923  007FBC  010F               	movlb	15	; () banked
   924  007FBE  873A               	bsf	58,3,b	;volatile
   925                           
   926                           ;./functions.c: 82:         break;
   927  007FC0  0012               	return	
   928  007FC2                     l111:
   929                           
   930                           ;./functions.c: 85:         TRISBbits.TRISB0 = 1;
   931  007FC2  8093               	bsf	3987,0,c	;volatile
   932                           
   933                           ;./functions.c: 86:         ANSELBbits.ANSB0 = 1;
   934  007FC4  010F               	movlb	15	; () banked
   935  007FC6  8139               	bsf	57,0,b	;volatile
   936                           
   937                           ;./functions.c: 87:         break;
   938  007FC8  0012               	return	
   939  007FCA                     l848:
   940  007FCA  502C               	movf	setADCChannel@channel,w,c
   941  007FCC  6E2A               	movwf	??_setADCChannel& (0+255),c
   942  007FCE  6A2B               	clrf	(??_setADCChannel+1)& (0+255),c
   943                           
   944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   945                           ; Switch size 1, requested type "simple"
   946                           ; Number of cases is 1, Range of values is 0 to 0
   947                           ; switch strategies available:
   948                           ; Name         Instructions Cycles
   949                           ; simple_byte            4     3 (average)
   950                           ;	Chosen strategy is simple_byte
   951  007FD0  502B               	movf	??_setADCChannel+1,w,c
   952  007FD2  0A00               	xorlw	0	; case 0
   953  007FD4  A4D8               	btfss	status,2,c
   954  007FD6  D7F5               	goto	l111
   955                           
   956                           ; Switch size 1, requested type "simple"
   957                           ; Number of cases is 6, Range of values is 8 to 15
   958                           ; switch strategies available:
   959                           ; Name         Instructions Cycles
   960                           ; simple_byte           19    10 (average)
   961                           ;	Chosen strategy is simple_byte
   962  007FD8  502A               	movf	??_setADCChannel,w,c
   963  007FDA  0A08               	xorlw	8	; case 8
   964  007FDC  B4D8               	btfsc	status,2,c
   965  007FDE  D7D9               	goto	l104
   966  007FE0  0A01               	xorlw	1	; case 9
   967  007FE2  B4D8               	btfsc	status,2,c
   968  007FE4  D7DA               	goto	l106
   969  007FE6  0A03               	xorlw	3	; case 10
   970  007FE8  B4D8               	btfsc	status,2,c
   971  007FEA  D7DB               	goto	l107
   972  007FEC  0A06               	xorlw	6	; case 12
   973  007FEE  B4D8               	btfsc	status,2,c
   974  007FF0  D7DC               	goto	l108
   975  007FF2  0A01               	xorlw	1	; case 13
   976  007FF4  B4D8               	btfsc	status,2,c
   977  007FF6  D7DD               	goto	l109
   978  007FF8  0A02               	xorlw	2	; case 15
   979  007FFA  B4D8               	btfsc	status,2,c
   980  007FFC  D7DE               	goto	l110
   981  007FFE  D7E1               	goto	l111
   982  008000                     __end_of_setADCChannel:
   983                           	opt callstack 0
   984                           
   985 ;; *************** function _readADC *****************
   986 ;; Defined at:
   987 ;;		line 93 in file "./functions.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      unsigned char 
   994 ;; Registers used:
   995 ;;		wreg, status,2
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         0       0       0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_aveSensor
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text8
  1015  007DB2                     __ptext8:
  1016                           	opt callstack 0
  1017  007DB2                     _readADC:
  1018                           	opt callstack 29
  1019                           
  1020                           ;./functions.c: 94:     ADCON0bits.GO = 1;
  1021                           
  1022                           ; BSR set to: 15
  1023                           ;incstack = 0
  1024  007DB2  82C2               	bsf	4034,1,c	;volatile
  1025  007DB4                     l115:
  1026  007DB4  B2C2               	btfsc	4034,1,c	;volatile
  1027  007DB6  D7FE               	goto	l115
  1028                           
  1029                           ;./functions.c: 97:     return ADRESH;
  1030  007DB8  50C4               	movf	4036,w,c	;volatile
  1031  007DBA  0012               	return		;funcret
  1032  007DBC                     __end_of_readADC:
  1033                           	opt callstack 0
  1034                           
  1035 ;; *************** function ___lwdiv *****************
  1036 ;; Defined at:
  1037 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  dividend        2    0[COMRAM] unsigned int 
  1040 ;;  divisor         2    2[COMRAM] unsigned int 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  quotient        2    4[COMRAM] unsigned int 
  1043 ;;  counter         1    6[COMRAM] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  2    0[COMRAM] unsigned int 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1053 ;;      Params:         4       0       0       0       0       0       0
  1054 ;;      Locals:         3       0       0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0
  1056 ;;      Totals:         7       0       0       0       0       0       0
  1057 ;;Total ram usage:        7 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_aveSensor
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text9
  1067  007ED2                     __ptext9:
  1068                           	opt callstack 0
  1069  007ED2                     ___lwdiv:
  1070                           	opt callstack 29
  1071                           
  1072                           ;incstack = 0
  1073  007ED2  0E00               	movlw	0
  1074  007ED4  6E2F               	movwf	___lwdiv@quotient+1,c
  1075  007ED6  0E00               	movlw	0
  1076  007ED8  6E2E               	movwf	___lwdiv@quotient,c
  1077  007EDA  502C               	movf	___lwdiv@divisor,w,c
  1078  007EDC  102D               	iorwf	___lwdiv@divisor+1,w,c
  1079  007EDE  B4D8               	btfsc	status,2,c
  1080  007EE0  D01C               	goto	l650
  1081  007EE2  0E01               	movlw	1
  1082  007EE4  6E30               	movwf	___lwdiv@counter,c
  1083  007EE6  D004               	goto	l980
  1084  007EE8                     l978:
  1085  007EE8  90D8               	bcf	status,0,c
  1086  007EEA  362C               	rlcf	___lwdiv@divisor,f,c
  1087  007EEC  362D               	rlcf	___lwdiv@divisor+1,f,c
  1088  007EEE  2A30               	incf	___lwdiv@counter,f,c
  1089  007EF0                     l980:
  1090  007EF0  AE2D               	btfss	___lwdiv@divisor+1,7,c
  1091  007EF2  D7FA               	goto	l978
  1092  007EF4                     u90:
  1093  007EF4  90D8               	bcf	status,0,c
  1094  007EF6  362E               	rlcf	___lwdiv@quotient,f,c
  1095  007EF8  362F               	rlcf	___lwdiv@quotient+1,f,c
  1096  007EFA  502C               	movf	___lwdiv@divisor,w,c
  1097  007EFC  5C2A               	subwf	___lwdiv@dividend,w,c
  1098  007EFE  502D               	movf	___lwdiv@divisor+1,w,c
  1099  007F00  582B               	subwfb	___lwdiv@dividend+1,w,c
  1100  007F02  A0D8               	btfss	status,0,c
  1101  007F04  D005               	goto	l990
  1102  007F06  502C               	movf	___lwdiv@divisor,w,c
  1103  007F08  5E2A               	subwf	___lwdiv@dividend,f,c
  1104  007F0A  502D               	movf	___lwdiv@divisor+1,w,c
  1105  007F0C  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  1106  007F0E  802E               	bsf	___lwdiv@quotient,0,c
  1107  007F10                     l990:
  1108  007F10  90D8               	bcf	status,0,c
  1109  007F12  322D               	rrcf	___lwdiv@divisor+1,f,c
  1110  007F14  322C               	rrcf	___lwdiv@divisor,f,c
  1111  007F16  2E30               	decfsz	___lwdiv@counter,f,c
  1112  007F18  D7ED               	goto	u90
  1113  007F1A                     l650:
  1114  007F1A  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  1115  007F1E  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1116  007F22  0012               	return		;funcret
  1117  007F24                     __end_of___lwdiv:
  1118                           	opt callstack 0
  1119  0000                     
  1120                           	psect	rparam
  1121  0000                     tosu	equ	0xFFF
  1122                           tosh	equ	0xFFE
  1123                           tosl	equ	0xFFD
  1124                           stkptr	equ	0xFFC
  1125                           pclatu	equ	0xFFB
  1126                           pclath	equ	0xFFA
  1127                           pcl	equ	0xFF9
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           prodh	equ	0xFF4
  1133                           prodl	equ	0xFF3
  1134                           indf0	equ	0xFEF
  1135                           postinc0	equ	0xFEE
  1136                           postdec0	equ	0xFED
  1137                           preinc0	equ	0xFEC
  1138                           plusw0	equ	0xFEB
  1139                           fsr0h	equ	0xFEA
  1140                           fsr0l	equ	0xFE9
  1141                           wreg	equ	0xFE8
  1142                           indf1	equ	0xFE7
  1143                           postinc1	equ	0xFE6
  1144                           postdec1	equ	0xFE5
  1145                           preinc1	equ	0xFE4
  1146                           plusw1	equ	0xFE3
  1147                           fsr1h	equ	0xFE2
  1148                           fsr1l	equ	0xFE1
  1149                           bsr	equ	0xFE0
  1150                           indf2	equ	0xFDF
  1151                           postinc2	equ	0xFDE
  1152                           postdec2	equ	0xFDD
  1153                           preinc2	equ	0xFDC
  1154                           plusw2	equ	0xFDB
  1155                           fsr2h	equ	0xFDA
  1156                           fsr2l	equ	0xFD9
  1157                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        41
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_aveSensor
    _aveSensor->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     459
                          _aveSensor
                               _init
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aveSensor                                            6     6      0     459
                                              7 COMRAM     6     6      0
                            ___lwdiv
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (2) _setADCChannel                                        3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _aveSensor
     ___lwdiv
     _readADC
     _setADCChannel
   _init
     _clearPorts
     _setupOSC
     _setupSerial
   _setupADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      36       1       56.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36       9        0.0%
DATA                 0      0      36      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 22 13:47:27 2019

                     u90 7EF4             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l110 7FBA                      l111 7FC2                      l104 7F92  
                    l106 7F9A                      l115 7DB4                      l107 7FA2  
                    l108 7FAA                      l109 7FB2                      l650 7F1A  
                    l848 7FCA                      l980 7EF0                      l990 7F10  
                    l978 7EE8             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _col 0028                     l1004 7EA0                     l1018 7DDC  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _FSR0 000FE9                     _LATE 000F8D  
                   _main 7DD4                     _init 7DC6                     _size 0029  
                   fsr1l 000FE1            __CFG_BORV$190 000000                     start 0000  
          __CFG_IESO$OFF 000000             ___param_bank 000000             _BAUDCON1bits 000FB8  
                  ?_main 002A                    ?_init 002A          __end_of___lwdiv 7F24  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96   __size_of_setADCChannel 0084            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_readADC 7DBC  
         __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000                    tablat 000FF5  
                  status 000FD8           __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000  
        __initialization 7E32             __end_of_main 7DE6             __end_of_init 7DD4  
                 ??_main 0037                   ??_init 002A            __activetblptr 000002  
                 _ADCON1 000FC1                   _ADRESH 000FC4                   _ANSELA 000F38  
                 _ANSELB 000F39                   _ANSELC 000F3A                   _ANSELD 000F3B  
                 _ANSELE 000F3C           __CFG_WDTEN$OFF 000000                   _RCSTA1 000FAB  
                 _SPBRG1 000FAF                   _TXSTA1 000FAC            _setADCChannel 7F7C  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___lwdiv 002E  
              ??_readADC 002A             __pdataCOMRAM 0001         __end_of_setupADC 7E08  
       __end_of_setupOSC 7DC6                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8             ?_setupSerial 002A               __accesstop 0060  
__end_of__initialization 7E52           ?_setADCChannel 002A            ___rparam_used 000001  
         __pcstackCOMRAM 002A     setADCChannel@channel 002C       __size_of_aveSensor 0046  
        __CFG_PLLCFG$OFF 000000               _clearPorts 7F24       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000                  _SPBRGH1 000FB0          ??_setADCChannel 002A  
      __end_of_aveSensor 7ED2          __CFG_PWRTEN$OFF 000000                  _Lranges 001E  
                __Hparam 0000                  _Mranges 0019                  __Lparam 0000  
              ?_setupADC 002A                  _Rranges 0014                ?_setupOSC 002A  
                ___lwdiv 7ED2                  __pcinit 7E32                  __ramtop 0600  
                __ptext0 7DD4                  __ptext1 7DE6                  __ptext2 7DC6  
                __ptext3 7E5C                  __ptext4 7DBC                  __ptext5 7F24  
                __ptext6 7E8C                  __ptext7 7F7C                  __ptext8 7DB2  
                __ptext9 7ED2                  _readADC 7DB2     end_of_initialization 7E52  
   __size_of_setupSerial 0030            __Lmediumconst 0000              ?_clearPorts 002A  
             aveSensor@a 0036               aveSensor@s 0032               ??_setupADC 002A  
             ??_setupOSC 002A                  postdec1 000FE5                  postinc0 000FEE  
             _sensorVals 000A                _TRISBbits 000F93                _TRISCbits 000F94  
  aveSensor@measurements 0033            __pidataCOMRAM 7E09      start_initialization 7E32  
    __size_of_clearPorts 0058         ___lwdiv@dividend 002A                _aveSensor 7E8C  
               ?___lwdiv 002A        __size_of_setupADC 0022        __size_of_setupOSC 000A  
       __CFG_PRICLKEN$ON 000000                 ?_readADC 002A                _raceColor 0001  
       ___lwdiv@quotient 002E    __end_of_setADCChannel 8000                 _PIE1bits 000F9D  
           ??_clearPorts 002A                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
             ?_aveSensor 002A               _ADCON0bits 000FC2               _ADCON2bits 000FC0  
               _LLranges 0023            ??_setupSerial 002A       __end_of_clearPorts 7F7C  
              copy_data0 7E46                 _RRranges 000F                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTD2 000000  
       __size_of___lwdiv 0052               _ANSELBbits 000F39               _ANSELCbits 000F3A  
       __size_of_readADC 000A          ___lwdiv@divisor 002C          ___lwdiv@counter 0030  
          __size_of_main 0012            __size_of_init 000E      __end_of_setupSerial 7E8C  
               _setupADC 7DE6                 _setupOSC 7DBC              ??_aveSensor 0031  
             _OSCCONbits 000FD3          aveSensor@result 0035        __CFG_T3CMX$PORTC0 000000  
            _setupSerial 7E5C        __CFG_FOSC$INTIO67 000000  
