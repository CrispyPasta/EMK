

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 26 18:01:06 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F45K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  006D1E                     __pidataCOMRAM:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _col
    95  006D1E  42                 	db	66
    96                           
    97                           ;initializer for _size
    98  006D1F  05                 	db	5
    99                           
   100                           ;initializer for _Lranges
   101  006D20  82                 	db	130
   102  006D21  B2                 	db	178
   103  006D22  B4                 	db	180
   104  006D23  BC                 	db	188
   105  006D24  FF                 	db	255
   106                           
   107                           ;initializer for _LLranges
   108  006D25  8C                 	db	140
   109  006D26  A8                 	db	168
   110  006D27  B9                 	db	185
   111  006D28  B9                 	db	185
   112  006D29  FF                 	db	255
   113                           
   114                           	psect	idataBANK0
   115  007326                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for PRC@F6024
   119  007326  0A                 	db	10
   120  007327  57                 	db	87
   121  007328  68                 	db	104
   122  007329  61                 	db	97
   123  00732A  74                 	db	116
   124  00732B  20                 	db	32
   125  00732C  63                 	db	99
   126  00732D  6F                 	db	111
   127  00732E  6C                 	db	108
   128  00732F  6F                 	db	111
   129  007330  72                 	db	114
   130  007331  20                 	db	32
   131  007332  73                 	db	115
   132  007333  68                 	db	104
   133  007334  6F                 	db	111
   134  007335  75                 	db	117
   135  007336  6C                 	db	108
   136  007337  64                 	db	100
   137  007338  20                 	db	32
   138  007339  73                 	db	115
   139  00733A  61                 	db	97
   140  00733B  6E                 	db	110
   141  00733C  69                 	db	105
   142  00733D  63                 	db	99
   143  00733E  20                 	db	32
   144  00733F  72                 	db	114
   145  007340  61                 	db	97
   146  007341  63                 	db	99
   147  007342  65                 	db	101
   148  007343  3F                 	db	63
   149  007344  0A                 	db	10
   150  007345  00                 	db	0
   151                           
   152                           ;initializer for capTouch@F6042
   153  007346  0A                 	db	10
   154  007347  53                 	db	83
   155  007348  61                 	db	97
   156  007349  6E                 	db	110
   157  00734A  69                 	db	105
   158  00734B  63                 	db	99
   159  00734C  20                 	db	32
   160  00734D  77                 	db	119
   161  00734E  61                 	db	97
   162  00734F  69                 	db	105
   163  007350  74                 	db	116
   164  007351  73                 	db	115
   165  007352  20                 	db	32
   166  007353  66                 	db	102
   167  007354  6F                 	db	111
   168  007355  72                 	db	114
   169  007356  20                 	db	32
   170  007357  61                 	db	97
   171  007358  20                 	db	32
   172  007359  74                 	db	116
   173  00735A  6F                 	db	111
   174  00735B  75                 	db	117
   175  00735C  63                 	db	99
   176  00735D  68                 	db	104
   177  00735E  0A                 	db	10
   178  00735F  00                 	db	0
   179                           
   180                           ;initializer for RCE@F6099
   181  007360  0A                 	db	10
   182  007361  53                 	db	83
   183  007362  61                 	db	97
   184  007363  6E                 	db	110
   185  007364  69                 	db	105
   186  007365  63                 	db	99
   187  007366  20                 	db	32
   188  007367  72                 	db	114
   189  007368  61                 	db	97
   190  007369  63                 	db	99
   191  00736A  65                 	db	101
   192  00736B  73                 	db	115
   193  00736C  20                 	db	32
   194  00736D  00                 	db	0
   195                           
   196                           ;initializer for classifyColors@F6061
   197  00736E  5B                 	db	low _LLranges
   198  00736F  00                 	db	high _LLranges
   199  007370  56                 	db	low _Lranges
   200  007371  00                 	db	high _Lranges
   201  007372  E1                 	db	low _Mranges
   202  007373  00                 	db	high _Mranges
   203  007374  DC                 	db	low _Rranges
   204  007375  00                 	db	high _Rranges
   205  007376  D7                 	db	low _RRranges
   206  007377  00                 	db	high _RRranges
   207                           
   208                           ;initializer for _raceColor
   209  007378  30                 	db	48
   210  007379  30                 	db	48
   211  00737A  30                 	db	48
   212  00737B  30                 	db	48
   213  00737C  31                 	db	49
   214  00737D  30                 	db	48
   215  00737E  30                 	db	48
   216  00737F  30                 	db	48
   217  007380  00                 	db	0
   218                           
   219                           ;initializer for error@F6083
   220  007381  45                 	db	69
   221  007382  52                 	db	82
   222  007383  52                 	db	82
   223  007384  4F                 	db	79
   224  007385  52                 	db	82
   225  007386  0A                 	db	10
   226  007387  00                 	db	0
   227                           
   228                           ;initializer for _sensorChannels
   229  007388  0C                 	db	12
   230  007389  0A                 	db	10
   231  00738A  08                 	db	8
   232  00738B  09                 	db	9
   233  00738C  0D                 	db	13
   234  00738D  0F                 	db	15
   235                           
   236                           ;initializer for PRC@F6026
   237  00738E  0A                 	db	10
   238  00738F  53                 	db	83
   239  007390  65                 	db	101
   240  007391  74                 	db	116
   241  007392  00                 	db	0
   242                           
   243                           ;initializer for calibrate@F6015
   244  007393  0C                 	db	12
   245  007394  08                 	db	8
   246  007395  09                 	db	9
   247  007396  0A                 	db	10
   248  007397  0D                 	db	13
   249                           
   250                           ;initializer for _sensorVals
   251  007398  78                 	db	120
   252  007399  AA                 	db	170
   253  00739A  AA                 	db	170
   254  00739B  BE                 	db	190
   255  00739C  FA                 	db	250
   256                           
   257                           ;initializer for _RRranges
   258  00739D  8C                 	db	140
   259  00739E  B9                 	db	185
   260  00739F  C3                 	db	195
   261  0073A0  C3                 	db	195
   262  0073A1  FF                 	db	255
   263                           
   264                           ;initializer for _Rranges
   265  0073A2  8C                 	db	140
   266  0073A3  AA                 	db	170
   267  0073A4  AF                 	db	175
   268  0073A5  D2                 	db	210
   269  0073A6  FF                 	db	255
   270                           
   271                           ;initializer for _Mranges
   272  0073A7  82                 	db	130
   273  0073A8  A5                 	db	165
   274  0073A9  AF                 	db	175
   275  0073AA  BC                 	db	188
   276  0073AB  FF                 	db	255
   277  0000                     _T6CON	set	3914
   278  0000                     _PR6	set	3915
   279  0000                     _TMR6	set	3916
   280  0000                     _ANSELCbits	set	3898
   281  0000                     _ANSELBbits	set	3897
   282  0000                     _ANSELE	set	3900
   283  0000                     _ANSELD	set	3899
   284  0000                     _ANSELC	set	3898
   285  0000                     _ANSELB	set	3897
   286  0000                     _ANSELA	set	3896
   287  0000                     _T4CONbits	set	3921
   288  0000                     _TMR4	set	3923
   289  0000                     _T4CON	set	3921
   290  0000                     _CCPTMRS1	set	3912
   291  0000                     _CCPR5L	set	3925
   292  0000                     _PR4	set	3922
   293  0000                     _CCP5CON	set	3924
   294  0000                     _CCPTMRS0	set	3913
   295  0000                     _FSR0	set	4073
   296  0000                     _TMR1	set	4046
   297  0000                     _T1CONbits	set	4045
   298  0000                     _INTCONbits	set	4082
   299  0000                     _T1CON	set	4045
   300  0000                     _PIR5bits	set	3966
   301  0000                     _ADRESH	set	4036
   302  0000                     _TRISBbits	set	3987
   303  0000                     _TXREG	set	4013
   304  0000                     _PORTEbits	set	3972
   305  0000                     _PORTCbits	set	3970
   306  0000                     _RCREG	set	4014
   307  0000                     _PORTAbits	set	3968
   308  0000                     _ADCON0bits	set	4034
   309  0000                     _ADCON1	set	4033
   310  0000                     _ADCON2bits	set	4032
   311  0000                     _BAUDCON1bits	set	4024
   312  0000                     _SPBRGH1	set	4016
   313  0000                     _SPBRG1	set	4015
   314  0000                     _RCSTA1	set	4011
   315  0000                     _TXSTA1	set	4012
   316  0000                     _OSCCONbits	set	4051
   317  0000                     _TRISE	set	3990
   318  0000                     _LATE	set	3981
   319  0000                     _PORTE	set	3972
   320  0000                     _TRISD	set	3989
   321  0000                     _LATD	set	3980
   322  0000                     _PORTD	set	3971
   323  0000                     _TRISC	set	3988
   324  0000                     _LATC	set	3979
   325  0000                     _PORTC	set	3970
   326  0000                     _TRISB	set	3987
   327  0000                     _LATB	set	3978
   328  0000                     _PORTB	set	3969
   329  0000                     _TRISA	set	3986
   330  0000                     _LATA	set	3977
   331  0000                     _PORTA	set	3968
   332  0000                     _PIE5bits	set	3965
   333  0000                     _TRISEbits	set	3990
   334  0000                     _T2CONbits	set	4026
   335  0000                     _PIE1bits	set	3997
   336  0000                     _TMR2	set	4028
   337  0000                     _T2CON	set	4026
   338  0000                     _TRISCbits	set	3988
   339  0000                     _CCPR1L	set	4030
   340  0000                     _PR2	set	4027
   341  0000                     _CCP1CON	set	4029
   342  0000                     _PIR1bits	set	3998
   343                           
   344                           ; #config settings
   345  0000                     
   346                           	psect	cinit
   347  007096                     __pcinit:
   348                           	opt callstack 0
   349  007096                     start_initialization:
   350                           	opt callstack 0
   351  007096                     __initialization:
   352                           	opt callstack 0
   353                           
   354                           ; Initialize objects allocated to BANK0 (134 bytes)
   355                           ; load TBLPTR registers with __pidataBANK0
   356  007096  0E26               	movlw	low __pidataBANK0
   357  007098  6EF6               	movwf	tblptrl,c
   358  00709A  0E73               	movlw	high __pidataBANK0
   359  00709C  6EF7               	movwf	tblptrh,c
   360  00709E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   361  0070A0  6EF8               	movwf	tblptru,c
   362  0070A2  EE00  F060         	lfsr	0,__pdataBANK0
   363  0070A6  EE10 F086          	lfsr	1,134
   364  0070AA                     copy_data0:
   365  0070AA  0009               	tblrd		*+
   366  0070AC  CFF5 FFEE          	movff	tablat,postinc0
   367  0070B0  50E5               	movf	postdec1,w,c
   368  0070B2  50E1               	movf	fsr1l,w,c
   369  0070B4  E1FA               	bnz	copy_data0
   370                           
   371                           ; Initialize objects allocated to COMRAM (12 bytes)
   372                           ; load TBLPTR registers with __pidataCOMRAM
   373  0070B6  0E1E               	movlw	low __pidataCOMRAM
   374  0070B8  6EF6               	movwf	tblptrl,c
   375  0070BA  0E6D               	movlw	high __pidataCOMRAM
   376  0070BC  6EF7               	movwf	tblptrh,c
   377  0070BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   378  0070C0  6EF8               	movwf	tblptru,c
   379  0070C2  EE00  F054         	lfsr	0,__pdataCOMRAM
   380  0070C6  EE10 F00C          	lfsr	1,12
   381  0070CA                     copy_data1:
   382  0070CA  0009               	tblrd		*+
   383  0070CC  CFF5 FFEE          	movff	tablat,postinc0
   384  0070D0  50E5               	movf	postdec1,w,c
   385  0070D2  50E1               	movf	fsr1l,w,c
   386  0070D4  E1FA               	bnz	copy_data1
   387                           
   388                           ; Clear objects allocated to BANK0 (5 bytes)
   389  0070D6  0100               	movlb	0
   390  0070D8  6BFE               	clrf	(__pbssBANK0+4)& (0+255),b
   391  0070DA  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   392  0070DC  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   393  0070DE  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   394  0070E0  6BFA               	clrf	__pbssBANK0& (0+255),b
   395  0070E2                     end_of_initialization:
   396                           	opt callstack 0
   397  0070E2                     __end_of__initialization:
   398                           	opt callstack 0
   399  0070E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   400  0070E4  6EF8               	movwf	tblptru,c
   401  0070E6  0100               	movlb	0
   402  0070E8  EF84  F036         	goto	_main	;jump to C main() function
   403                           
   404                           	psect	dataCOMRAM
   405  000054                     __pdataCOMRAM:
   406                           	opt callstack 0
   407  000054                     _col:
   408                           	opt callstack 0
   409  000054                     	ds	1
   410  000055                     _size:
   411                           	opt callstack 0
   412  000055                     	ds	1
   413  000056                     _Lranges:
   414                           	opt callstack 0
   415  000056                     	ds	5
   416  00005B                     _LLranges:
   417                           	opt callstack 0
   418  00005B                     	ds	5
   419                           
   420                           	psect	bssBANK0
   421  0000FA                     __pbssBANK0:
   422                           	opt callstack 0
   423  0000FA                     _colorsDetected:
   424                           	opt callstack 0
   425  0000FA                     	ds	5
   426                           
   427                           	psect	dataBANK0
   428  000060                     __pdataBANK0:
   429                           	opt callstack 0
   430  000060                     PRC@F6024:
   431                           	opt callstack 0
   432  000060                     	ds	32
   433  000080                     capTouch@F6042:
   434                           	opt callstack 0
   435  000080                     	ds	26
   436  00009A                     RCE@F6099:
   437                           	opt callstack 0
   438  00009A                     	ds	14
   439  0000A8                     classifyColors@F6061:
   440                           	opt callstack 0
   441  0000A8                     	ds	10
   442  0000B2                     _raceColor:
   443                           	opt callstack 0
   444  0000B2                     	ds	9
   445  0000BB                     error@F6083:
   446                           	opt callstack 0
   447  0000BB                     	ds	7
   448  0000C2                     _sensorChannels:
   449                           	opt callstack 0
   450  0000C2                     	ds	6
   451  0000C8                     PRC@F6026:
   452                           	opt callstack 0
   453  0000C8                     	ds	5
   454  0000CD                     calibrate@F6015:
   455                           	opt callstack 0
   456  0000CD                     	ds	5
   457  0000D2                     _sensorVals:
   458                           	opt callstack 0
   459  0000D2                     	ds	5
   460  0000D7                     _RRranges:
   461                           	opt callstack 0
   462  0000D7                     	ds	5
   463  0000DC                     _Rranges:
   464                           	opt callstack 0
   465  0000DC                     	ds	5
   466  0000E1                     _Mranges:
   467                           	opt callstack 0
   468  0000E1                     	ds	5
   469                           
   470                           	psect	cstackBANK0
   471  0000E6                     __pcstackBANK0:
   472                           	opt callstack 0
   473  0000E6                     RCE@message:
   474                           	opt callstack 0
   475                           
   476                           ; 14 bytes @ 0x0
   477  0000E6                     	ds	14
   478  0000F4                     RCE@commandReceived:
   479                           	opt callstack 0
   480                           
   481                           ; 3 bytes @ 0xE
   482  0000F4                     	ds	3
   483  0000F7                     RCE@nCharsReceived:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0x11
   487  0000F7                     	ds	1
   488  0000F8                     RCE@a:
   489                           	opt callstack 0
   490                           
   491                           ; 1 bytes @ 0x12
   492  0000F8                     	ds	1
   493  0000F9                     RCE@a_1345:
   494                           	opt callstack 0
   495                           
   496                           ; 1 bytes @ 0x13
   497  0000F9                     	ds	1
   498                           
   499                           	psect	cstackCOMRAM
   500  000001                     __pcstackCOMRAM:
   501                           	opt callstack 0
   502  000001                     ??_classifyColors:
   503  000001                     ??_displayColorDetected:
   504  000001                     ??_setADCChannel:
   505  000001                     ?_abs:
   506                           	opt callstack 0
   507  000001                     ?___xxtofl:
   508                           	opt callstack 0
   509  000001                     determineDirection@rc:
   510                           	opt callstack 0
   511  000001                     trans@s:
   512                           	opt callstack 0
   513  000001                     abs@a:
   514                           	opt callstack 0
   515  000001                     ___xxtofl@val:
   516                           	opt callstack 0
   517                           
   518                           ; 4 bytes @ 0x0
   519  000001                     	ds	1
   520  000002                     error@message:
   521                           	opt callstack 0
   522                           
   523                           ; 7 bytes @ 0x1
   524  000002                     	ds	1
   525  000003                     ??_abs:
   526  000003                     displayColorDetected@sensor:
   527                           	opt callstack 0
   528  000003                     setADCChannel@channel:
   529                           	opt callstack 0
   530                           
   531                           ; 1 bytes @ 0x2
   532  000003                     	ds	1
   533  000004                     ??_aveSensor:
   534                           
   535                           ; 1 bytes @ 0x3
   536  000004                     	ds	1
   537  000005                     ??___xxtofl:
   538  000005                     classifyColors@sensorRanges:
   539                           	opt callstack 0
   540                           
   541                           ; 10 bytes @ 0x4
   542  000005                     	ds	1
   543  000006                     aveSensor@s:
   544                           	opt callstack 0
   545                           
   546                           ; 1 bytes @ 0x5
   547  000006                     	ds	1
   548  000007                     aveSensor@measurements:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x6
   552  000007                     	ds	2
   553  000009                     aveSensor@result:
   554                           	opt callstack 0
   555  000009                     error@a:
   556                           	opt callstack 0
   557  000009                     ___xxtofl@sign:
   558                           	opt callstack 0
   559                           
   560                           ; 1 bytes @ 0x8
   561  000009                     	ds	1
   562  00000A                     ??_PRC:
   563  00000A                     aveSensor@a:
   564                           	opt callstack 0
   565  00000A                     ___xxtofl@exp:
   566                           	opt callstack 0
   567                           
   568                           ; 1 bytes @ 0x9
   569  00000A                     	ds	1
   570  00000B                     readAllSensors@a:
   571                           	opt callstack 0
   572  00000B                     ___xxtofl@arg:
   573                           	opt callstack 0
   574                           
   575                           ; 4 bytes @ 0xA
   576  00000B                     	ds	1
   577  00000C                     PRC@message:
   578                           	opt callstack 0
   579                           
   580                           ; 32 bytes @ 0xB
   581  00000C                     	ds	3
   582  00000F                     ?___flmul:
   583                           	opt callstack 0
   584  00000F                     classifyColors@a:
   585                           	opt callstack 0
   586  00000F                     ___flmul@b:
   587                           	opt callstack 0
   588                           
   589                           ; 4 bytes @ 0xE
   590  00000F                     	ds	4
   591  000013                     ___flmul@a:
   592                           	opt callstack 0
   593                           
   594                           ; 4 bytes @ 0x12
   595  000013                     	ds	4
   596  000017                     ??___flmul:
   597                           
   598                           ; 1 bytes @ 0x16
   599  000017                     	ds	4
   600  00001B                     ___flmul@sign:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x1A
   604  00001B                     	ds	1
   605  00001C                     ___flmul@grs:
   606                           	opt callstack 0
   607                           
   608                           ; 4 bytes @ 0x1B
   609  00001C                     	ds	4
   610  000020                     ___flmul@aexp:
   611                           	opt callstack 0
   612                           
   613                           ; 1 bytes @ 0x1F
   614  000020                     	ds	1
   615  000021                     ___flmul@bexp:
   616                           	opt callstack 0
   617                           
   618                           ; 1 bytes @ 0x20
   619  000021                     	ds	1
   620  000022                     ___flmul@prod:
   621                           	opt callstack 0
   622                           
   623                           ; 4 bytes @ 0x21
   624  000022                     	ds	4
   625  000026                     ___flmul@temp:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x25
   629  000026                     	ds	2
   630  000028                     ?___fltol:
   631                           	opt callstack 0
   632  000028                     ___fltol@f1:
   633                           	opt callstack 0
   634                           
   635                           ; 4 bytes @ 0x27
   636  000028                     	ds	4
   637  00002C                     ??___fltol:
   638  00002C                     PRC@message2:
   639                           	opt callstack 0
   640                           
   641                           ; 5 bytes @ 0x2B
   642  00002C                     	ds	4
   643  000030                     ___fltol@sign1:
   644                           	opt callstack 0
   645                           
   646                           ; 1 bytes @ 0x2F
   647  000030                     	ds	1
   648  000031                     PRC@a:
   649                           	opt callstack 0
   650  000031                     ___fltol@exp1:
   651                           	opt callstack 0
   652                           
   653                           ; 1 bytes @ 0x30
   654  000031                     	ds	1
   655  000032                     PRC@a_1179:
   656                           	opt callstack 0
   657  000032                     msDelay@delayInMs:
   658                           	opt callstack 0
   659                           
   660                           ; 1 bytes @ 0x31
   661  000032                     	ds	1
   662  000033                     PRC@a_1180:
   663                           	opt callstack 0
   664  000033                     oneSecDelay@a:
   665                           	opt callstack 0
   666  000033                     capTouch@message:
   667                           	opt callstack 0
   668                           
   669                           ; 26 bytes @ 0x32
   670  000033                     	ds	1
   671  000034                     PRC@a_1181:
   672                           	opt callstack 0
   673  000034                     pyCal@a:
   674                           	opt callstack 0
   675  000034                     calibrate@sensors:
   676                           	opt callstack 0
   677                           
   678                           ; 5 bytes @ 0x33
   679  000034                     	ds	1
   680  000035                     PRC@a_1182:
   681                           	opt callstack 0
   682                           
   683                           ; 1 bytes @ 0x34
   684  000035                     	ds	1
   685  000036                     PRC@a_1183:
   686                           	opt callstack 0
   687                           
   688                           ; 1 bytes @ 0x35
   689  000036                     	ds	1
   690  000037                     PRC@a_1184:
   691                           	opt callstack 0
   692                           
   693                           ; 1 bytes @ 0x36
   694  000037                     	ds	1
   695  000038                     PRC@a_1185:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0x37
   699  000038                     	ds	1
   700  000039                     calibrate@samples:
   701                           	opt callstack 0
   702  000039                     PRC@a_1186:
   703                           	opt callstack 0
   704                           
   705                           ; 1 bytes @ 0x38
   706  000039                     	ds	1
   707  00003A                     calibrate@samples_1169:
   708                           	opt callstack 0
   709                           
   710                           ; 1 bytes @ 0x39
   711  00003A                     	ds	1
   712  00003B                     calibrate@samples_1170:
   713                           	opt callstack 0
   714                           
   715                           ; 1 bytes @ 0x3A
   716  00003B                     	ds	1
   717  00003C                     calibrate@samples_1171:
   718                           	opt callstack 0
   719                           
   720                           ; 1 bytes @ 0x3B
   721  00003C                     	ds	1
   722  00003D                     calibrate@samples_1172:
   723                           	opt callstack 0
   724                           
   725                           ; 1 bytes @ 0x3C
   726  00003D                     	ds	1
   727  00003E                     calibrate@temp:
   728                           	opt callstack 0
   729                           
   730                           ; 1 bytes @ 0x3D
   731  00003E                     	ds	17
   732  00004F                     capTouch@touch1:
   733                           	opt callstack 0
   734                           
   735                           ; 1 bytes @ 0x4E
   736  00004F                     	ds	1
   737  000050                     capTouch@touch2:
   738                           	opt callstack 0
   739                           
   740                           ; 1 bytes @ 0x4F
   741  000050                     	ds	1
   742  000051                     capTouch@a:
   743                           	opt callstack 0
   744                           
   745                           ; 1 bytes @ 0x50
   746  000051                     	ds	1
   747  000052                     ??_RCE:
   748                           
   749                           ; 1 bytes @ 0x51
   750  000052                     	ds	2
   751  000054                     
   752                           ; 1 bytes @ 0x53
   753 ;;
   754 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   755 ;;
   756 ;; *************** function _main *****************
   757 ;; Defined at:
   758 ;;		line 94 in file "sanic.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   772 ;;      Params:         0       0       0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels required when called:    5
   778 ;; This function calls:
   779 ;;		_RCE
   780 ;;		_init
   781 ;; This function is called by:
   782 ;;		Startup code after reset
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text0
   787  006D08                     __ptext0:
   788                           	opt callstack 0
   789  006D08                     _main:
   790                           	opt callstack 26
   791                           
   792                           ;sanic.c: 111:     init();
   793                           
   794                           ;incstack = 0
   795  006D08  ECB4  F036         	call	_init	;wreg free
   796                           
   797                           ;sanic.c: 112:     RCE();
   798  006D0C  EC77  F03A         	call	_RCE	;wreg free
   799  006D10                     l497:
   800  006D10  D7FF               	goto	l497
   801  006D12                     __end_of_main:
   802                           	opt callstack 0
   803                           
   804 ;; *************** function _init *****************
   805 ;; Defined at:
   806 ;;		line 123 in file "sanic.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         0       0       0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    1
   827 ;; This function calls:
   828 ;;		_clearPorts
   829 ;;		_setupADC
   830 ;;		_setupOSC
   831 ;;		_setupSerial
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text1
   838  006D68                     __ptext1:
   839                           	opt callstack 0
   840  006D68                     _init:
   841                           	opt callstack 29
   842                           
   843                           ;sanic.c: 124:     raceColor[3] = 1;
   844                           
   845                           ;incstack = 0
   846  006D68  0E01               	movlw	1
   847  006D6A  0100               	movlb	0	; () banked
   848  006D6C  6FB5               	movwf	(_raceColor+3)& (0+255),b
   849                           
   850                           ; BSR set to: 0
   851                           ;sanic.c: 125:     setupOSC();
   852  006D6E  EC7F  F036         	call	_setupOSC	;wreg free
   853                           
   854                           ;sanic.c: 126:     clearPorts();
   855  006D72  EC76  F038         	call	_clearPorts	;wreg free
   856                           
   857                           ;sanic.c: 127:     setupSerial();
   858  006D76  EC34  F037         	call	_setupSerial	;wreg free
   859                           
   860                           ;sanic.c: 128:     setupADC();
   861  006D7A  EC01  F037         	call	_setupADC	;wreg free
   862  006D7E  0012               	return		;funcret
   863  006D80                     __end_of_init:
   864                           	opt callstack 0
   865                           
   866 ;; *************** function _setupSerial *****************
   867 ;; Defined at:
   868 ;;		line 96 in file "./functions.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   882 ;;      Params:         0       0       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0
   885 ;;      Totals:         0       0       0       0       0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_init
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text2
   896  006E68                     __ptext2:
   897                           	opt callstack 0
   898  006E68                     _setupSerial:
   899                           	opt callstack 29
   900                           
   901                           ;./functions.c: 98:     PIE1bits.RC1IE = 0;
   902                           
   903                           ;incstack = 0
   904  006E68  9A9D               	bcf	3997,5,c	;volatile
   905                           
   906                           ;./functions.c: 99:     PIE1bits.TX1IE = 0;
   907  006E6A  989D               	bcf	3997,4,c	;volatile
   908                           
   909                           ;./functions.c: 100:     PIR1bits.RCIF = 0;
   910  006E6C  9A9E               	bcf	3998,5,c	;volatile
   911                           
   912                           ;./functions.c: 102:     FSR0 = 0;
   913  006E6E  0E00               	movlw	0
   914  006E70  6EEA               	movwf	fsr0h,c	;volatile
   915  006E72  0E00               	movlw	0
   916  006E74  6EE9               	movwf	fsr0l,c	;volatile
   917                           
   918                           ;./functions.c: 103:     TXSTA1 = 0b00100100;
   919  006E76  0E24               	movlw	36
   920  006E78  6EAC               	movwf	4012,c	;volatile
   921                           
   922                           ;./functions.c: 104:     RCSTA1 = 0b10010000;
   923  006E7A  0E90               	movlw	144
   924  006E7C  6EAB               	movwf	4011,c	;volatile
   925                           
   926                           ;./functions.c: 106:     SPBRG1 = 25;
   927  006E7E  0E19               	movlw	25
   928  006E80  6EAF               	movwf	4015,c	;volatile
   929                           
   930                           ;./functions.c: 107:     SPBRGH1 = 0;
   931  006E82  0E00               	movlw	0
   932  006E84  6EB0               	movwf	4016,c	;volatile
   933                           
   934                           ;./functions.c: 108:     BAUDCON1bits.BRG16 = 0;
   935  006E86  96B8               	bcf	4024,3,c	;volatile
   936                           
   937                           ;./functions.c: 109:     TRISCbits.RC6 = 1;
   938  006E88  8C94               	bsf	3988,6,c	;volatile
   939                           
   940                           ;./functions.c: 110:     TRISCbits.RC7 = 1;
   941  006E8A  8E94               	bsf	3988,7,c	;volatile
   942                           
   943                           ;./functions.c: 112:     PORTC = 0;
   944  006E8C  0E00               	movlw	0
   945  006E8E  6E82               	movwf	3970,c	;volatile
   946                           
   947                           ;./functions.c: 113:     ANSELC = 0;
   948  006E90  0E00               	movlw	0
   949  006E92  010F               	movlb	15	; () banked
   950  006E94  6F3A               	movwf	58,b	;volatile
   951                           
   952                           ; BSR set to: 15
   953  006E96  0012               	return		;funcret
   954  006E98                     __end_of_setupSerial:
   955                           	opt callstack 0
   956                           
   957 ;; *************** function _setupOSC *****************
   958 ;; Defined at:
   959 ;;		line 90 in file "./functions.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   973 ;;      Params:         0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_init
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text3
   987  006CFE                     __ptext3:
   988                           	opt callstack 0
   989  006CFE                     _setupOSC:
   990                           	opt callstack 29
   991                           
   992                           ;./functions.c: 92:     OSCCONbits.IRCF = 0b101;
   993                           
   994                           ; BSR set to: 15
   995                           ;incstack = 0
   996  006CFE  50D3               	movf	4051,w,c	;volatile
   997  006D00  0B8F               	andlw	-113
   998  006D02  0950               	iorlw	80
   999  006D04  6ED3               	movwf	4051,c	;volatile
  1000  006D06  0012               	return		;funcret
  1001  006D08                     __end_of_setupOSC:
  1002                           	opt callstack 0
  1003                           
  1004 ;; *************** function _clearPorts *****************
  1005 ;; Defined at:
  1006 ;;		line 59 in file "./functions.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1020 ;;      Params:         0       0       0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0
  1023 ;;      Totals:         0       0       0       0       0       0       0
  1024 ;;Total ram usage:        0 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		_init
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text4
  1034  0070EC                     __ptext4:
  1035                           	opt callstack 0
  1036  0070EC                     _clearPorts:
  1037                           	opt callstack 29
  1038                           
  1039                           ;./functions.c: 61:     PORTA = 0;
  1040                           
  1041                           ;incstack = 0
  1042  0070EC  0E00               	movlw	0
  1043  0070EE  6E80               	movwf	3968,c	;volatile
  1044                           
  1045                           ;./functions.c: 62:     LATA = 0;
  1046  0070F0  0E00               	movlw	0
  1047  0070F2  6E89               	movwf	3977,c	;volatile
  1048                           
  1049                           ;./functions.c: 63:     TRISA = 0;
  1050  0070F4  0E00               	movlw	0
  1051  0070F6  6E92               	movwf	3986,c	;volatile
  1052                           
  1053                           ;./functions.c: 64:     ANSELA = 0;
  1054  0070F8  0E00               	movlw	0
  1055  0070FA  010F               	movlb	15	; () banked
  1056  0070FC  6F38               	movwf	56,b	;volatile
  1057                           
  1058                           ;./functions.c: 66:     PORTB = 0;
  1059  0070FE  0E00               	movlw	0
  1060  007100  6E81               	movwf	3969,c	;volatile
  1061                           
  1062                           ;./functions.c: 67:     LATB = 0;
  1063  007102  0E00               	movlw	0
  1064  007104  6E8A               	movwf	3978,c	;volatile
  1065                           
  1066                           ;./functions.c: 68:     TRISB = 0;
  1067  007106  0E00               	movlw	0
  1068  007108  6E93               	movwf	3987,c	;volatile
  1069                           
  1070                           ;./functions.c: 69:     ANSELB = 0;
  1071  00710A  0E00               	movlw	0
  1072  00710C  6F39               	movwf	57,b	;volatile
  1073                           
  1074                           ;./functions.c: 71:     PORTC = 0;
  1075  00710E  0E00               	movlw	0
  1076  007110  6E82               	movwf	3970,c	;volatile
  1077                           
  1078                           ;./functions.c: 72:     LATC = 0;
  1079  007112  0E00               	movlw	0
  1080  007114  6E8B               	movwf	3979,c	;volatile
  1081                           
  1082                           ;./functions.c: 73:     TRISC = 0;
  1083  007116  0E00               	movlw	0
  1084  007118  6E94               	movwf	3988,c	;volatile
  1085                           
  1086                           ;./functions.c: 74:     ANSELC = 0;
  1087  00711A  0E00               	movlw	0
  1088  00711C  6F3A               	movwf	58,b	;volatile
  1089                           
  1090                           ;./functions.c: 76:     PORTD = 0;
  1091  00711E  0E00               	movlw	0
  1092  007120  6E83               	movwf	3971,c	;volatile
  1093                           
  1094                           ;./functions.c: 77:     LATD = 0;
  1095  007122  0E00               	movlw	0
  1096  007124  6E8C               	movwf	3980,c	;volatile
  1097                           
  1098                           ;./functions.c: 78:     TRISD = 0;
  1099  007126  0E00               	movlw	0
  1100  007128  6E95               	movwf	3989,c	;volatile
  1101                           
  1102                           ;./functions.c: 79:     ANSELD = 0;
  1103  00712A  0E00               	movlw	0
  1104  00712C  6F3B               	movwf	59,b	;volatile
  1105                           
  1106                           ;./functions.c: 81:     PORTE = 0;
  1107  00712E  0E00               	movlw	0
  1108  007130  6E84               	movwf	3972,c	;volatile
  1109                           
  1110                           ;./functions.c: 82:     LATE = 0;
  1111  007132  0E00               	movlw	0
  1112  007134  6E8D               	movwf	3981,c	;volatile
  1113                           
  1114                           ;./functions.c: 83:     TRISE = 0;
  1115  007136  0E00               	movlw	0
  1116  007138  6E96               	movwf	3990,c	;volatile
  1117                           
  1118                           ;./functions.c: 84:     ANSELE = 0;
  1119  00713A  0E00               	movlw	0
  1120  00713C  6F3C               	movwf	60,b	;volatile
  1121                           
  1122                           ;./functions.c: 85:     raceColor[3] = 1;
  1123  00713E  0E01               	movlw	1
  1124  007140  0100               	movlb	0	; () banked
  1125  007142  6FB5               	movwf	(_raceColor+3)& (0+255),b
  1126                           
  1127                           ; BSR set to: 0
  1128  007144  0012               	return		;funcret
  1129  007146                     __end_of_clearPorts:
  1130                           	opt callstack 0
  1131                           
  1132 ;; *************** function _RCE *****************
  1133 ;; Defined at:
  1134 ;;		line 131 in file "sanic.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  a               1   19[BANK0 ] unsigned char 
  1139 ;;  a               1   18[BANK0 ] unsigned char 
  1140 ;;  message        14    0[BANK0 ] unsigned char [14]
  1141 ;;  commandRecei    3   14[BANK0 ] unsigned char [3]
  1142 ;;  nCharsReceiv    1   17[BANK0 ] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1152 ;;      Params:         0       0       0       0       0       0       0
  1153 ;;      Locals:         0      20       0       0       0       0       0
  1154 ;;      Temps:          2       0       0       0       0       0       0
  1155 ;;      Totals:         2      20       0       0       0       0       0
  1156 ;;Total ram usage:       22 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    4
  1159 ;; This function calls:
  1160 ;;		_PRC
  1161 ;;		_calibrate
  1162 ;;		_capTouch
  1163 ;;		_error
  1164 ;;		_navigate
  1165 ;;		_pyCal
  1166 ;;		_trans
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text5
  1173  0074EE                     __ptext5:
  1174                           	opt callstack 0
  1175  0074EE                     _RCE:
  1176                           	opt callstack 26
  1177                           
  1178                           ;sanic.c: 133:         PORTD = 0b10100100;
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;incstack = 0
  1182                           ;sanic.c: 132:     while(1){
  1183  0074EE  0EA4               	movlw	164
  1184  0074F0  6E83               	movwf	3971,c	;volatile
  1185                           
  1186                           ;sanic.c: 135:         unsigned char message[] = "\nSanic races ";
  1187  0074F2  EE20  F09A         	lfsr	2,RCE@F6099
  1188  0074F6  EE10  F0E6         	lfsr	1,RCE@message
  1189  0074FA  0E0D               	movlw	13
  1190  0074FC                     u2621:
  1191  0074FC  CFDB FFE3          	movff	plusw2,plusw1
  1192  007500  06E8               	decf	wreg,f,c
  1193  007502  E2FC               	bc	u2621
  1194                           
  1195                           ;sanic.c: 137:         for (unsigned char a = 0; a < 13; a++)
  1196  007504  0E00               	movlw	0
  1197  007506  0100               	movlb	0	; () banked
  1198  007508  6FF8               	movwf	RCE@a& (0+255),b
  1199  00750A                     l3588:
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;sanic.c: 138:         {;sanic.c: 139:             trans(message[a]);
  1203  00750A  0EE6               	movlw	low RCE@message
  1204  00750C  25F8               	addwf	RCE@a& (0+255),w,b
  1205  00750E  6ED9               	movwf	fsr2l,c
  1206  007510  6ADA               	clrf	fsr2h,c
  1207  007512  0E00               	movlw	high RCE@message
  1208  007514  22DA               	addwfc	fsr2h,f,c
  1209  007516  50DF               	movf	indf2,w,c
  1210  007518  EC89  F036         	call	_trans
  1211                           
  1212                           ;sanic.c: 140:         }
  1213  00751C  0100               	movlb	0	; () banked
  1214  00751E  2BF8               	incf	RCE@a& (0+255),f,b
  1215                           
  1216                           ; BSR set to: 0
  1217  007520  0E0C               	movlw	12
  1218  007522  65F8               	cpfsgt	RCE@a& (0+255),b
  1219  007524  D7F2               	goto	l3588
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;sanic.c: 142:         if (raceColor[3] == 1){
  1223  007526  05B5               	decf	(_raceColor+3)& (0+255),w,b
  1224  007528  A4D8               	btfss	status,2,c
  1225  00752A  D004               	goto	l3598
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;sanic.c: 143:             trans('B');
  1229  00752C  0E42               	movlw	66
  1230  00752E  EC89  F036         	call	_trans
  1231                           
  1232                           ;sanic.c: 144:         }
  1233  007532  D011               	goto	l512
  1234  007534                     l3598:
  1235                           
  1236                           ; BSR set to: 0
  1237  007534  05B4               	decf	(_raceColor+2)& (0+255),w,b
  1238  007536  A4D8               	btfss	status,2,c
  1239  007538  D004               	goto	l3602
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;sanic.c: 146:             trans('R');
  1243  00753A  0E52               	movlw	82
  1244  00753C  EC89  F036         	call	_trans
  1245                           
  1246                           ;sanic.c: 147:         }
  1247  007540  D00A               	goto	l512
  1248  007542                     l3602:
  1249                           
  1250                           ; BSR set to: 0
  1251  007542  05B3               	decf	(_raceColor+1)& (0+255),w,b
  1252  007544  A4D8               	btfss	status,2,c
  1253  007546  D004               	goto	l3606
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;sanic.c: 149:             trans('G');
  1257  007548  0E47               	movlw	71
  1258  00754A  EC89  F036         	call	_trans
  1259                           
  1260                           ;sanic.c: 150:         }
  1261  00754E  D003               	goto	l512
  1262  007550                     l3606:
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;sanic.c: 152:             trans('n');
  1266  007550  0E6E               	movlw	110
  1267  007552  EC89  F036         	call	_trans
  1268  007556                     l512:
  1269                           
  1270                           ;sanic.c: 154:         trans('\n');
  1271  007556  0E0A               	movlw	10
  1272  007558  EC89  F036         	call	_trans
  1273                           
  1274                           ;sanic.c: 157:         INTCONbits.GIE = 0;
  1275  00755C  9EF2               	bcf	4082,7,c	;volatile
  1276                           
  1277                           ;sanic.c: 158:         INTCONbits.PEIE = 0;
  1278  00755E  9CF2               	bcf	4082,6,c	;volatile
  1279                           
  1280                           ;sanic.c: 159:         unsigned char nCharsReceived = 0;
  1281  007560  0E00               	movlw	0
  1282  007562  0100               	movlb	0	; () banked
  1283  007564  6FF7               	movwf	RCE@nCharsReceived& (0+255),b
  1284                           
  1285                           ;sanic.c: 160:         unsigned char commandReceived[3];;sanic.c: 162:         while(nCh
      +                          arsReceived < 3){
  1286  007566  D00B               	goto	l3618
  1287  007568                     l518:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;sanic.c: 163:             if (PIR1bits.RC1IF){
  1291  007568  AA9E               	btfss	3998,5,c	;volatile
  1292  00756A  D009               	goto	l3618
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;sanic.c: 164:                 commandReceived[nCharsReceived] = RCREG;
  1296  00756C  0EF4               	movlw	low RCE@commandReceived
  1297  00756E  25F7               	addwf	RCE@nCharsReceived& (0+255),w,b
  1298  007570  6ED9               	movwf	fsr2l,c
  1299  007572  6ADA               	clrf	fsr2h,c
  1300  007574  0E00               	movlw	high RCE@commandReceived
  1301  007576  22DA               	addwfc	fsr2h,f,c
  1302  007578  CFAE FFDF          	movff	4014,indf2	;volatile
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;sanic.c: 165:                 nCharsReceived++;
  1306  00757C  2BF7               	incf	RCE@nCharsReceived& (0+255),f,b
  1307  00757E                     l3618:
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;sanic.c: 162:         while(nCharsReceived < 3){
  1311  00757E  0E02               	movlw	2
  1312  007580  65F7               	cpfsgt	RCE@nCharsReceived& (0+255),b
  1313  007582  D7F2               	goto	l518
  1314  007584  D012               	goto	l3634
  1315  007586                     l3620:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;sanic.c: 173:             capTouch();
  1319  007586  ECD6  F038         	call	_capTouch	;wreg free
  1320                           
  1321                           ;sanic.c: 174:             break;
  1322  00758A  D027               	goto	l3636
  1323  00758C                     l3622:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;sanic.c: 176:             PRC();
  1327  00758C  EC37  F03C         	call	_PRC	;wreg free
  1328                           
  1329                           ;sanic.c: 177:             break;
  1330  007590  D024               	goto	l3636
  1331  007592                     l3624:
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;sanic.c: 179:             navigate();
  1335  007592  EC20  F038         	call	_navigate	;wreg free
  1336                           
  1337                           ;sanic.c: 180:             break;
  1338  007596  D021               	goto	l3636
  1339  007598                     l3626:
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;sanic.c: 182:             pyCal();
  1343  007598  ECF9  F037         	call	_pyCal	;wreg free
  1344                           
  1345                           ;sanic.c: 183:             break;
  1346  00759C  D01E               	goto	l3636
  1347  00759E                     l3628:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;sanic.c: 185:             calibrate();
  1351  00759E  ECF9  F03C         	call	_calibrate	;wreg free
  1352                           
  1353                           ;sanic.c: 186:             break;
  1354  0075A2  D01B               	goto	l3636
  1355  0075A4                     l3630:
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;sanic.c: 189:             error();
  1359  0075A4  EC7E  F037         	call	_error	;wreg free
  1360                           
  1361                           ;sanic.c: 190:             break;
  1362  0075A8  D018               	goto	l3636
  1363  0075AA                     l3634:
  1364                           
  1365                           ; BSR set to: 0
  1366  0075AA  51F4               	movf	RCE@commandReceived& (0+255),w,b
  1367  0075AC  6E52               	movwf	??_RCE& (0+255),c
  1368  0075AE  6A53               	clrf	(??_RCE+1)& (0+255),c
  1369                           
  1370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1371                           ; Switch size 1, requested type "simple"
  1372                           ; Number of cases is 1, Range of values is 0 to 0
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte            4     3 (average)
  1376                           ;	Chosen strategy is simple_byte
  1377  0075B0  5053               	movf	??_RCE+1,w,c
  1378  0075B2  0A00               	xorlw	0	; case 0
  1379  0075B4  A4D8               	btfss	status,2,c
  1380  0075B6  D7F6               	goto	l3630
  1381                           
  1382                           ; BSR set to: 0
  1383                           ; Switch size 1, requested type "simple"
  1384                           ; Number of cases is 5, Range of values is 67 to 82
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte           16     9 (average)
  1388                           ;	Chosen strategy is simple_byte
  1389  0075B8  5052               	movf	??_RCE,w,c
  1390  0075BA  0A43               	xorlw	67	; case 67
  1391  0075BC  B4D8               	btfsc	status,2,c
  1392  0075BE  D7EF               	goto	l3628
  1393  0075C0  0A0D               	xorlw	13	; case 78
  1394  0075C2  B4D8               	btfsc	status,2,c
  1395  0075C4  D7E6               	goto	l3624
  1396  0075C6  0A1E               	xorlw	30	; case 80
  1397  0075C8  B4D8               	btfsc	status,2,c
  1398  0075CA  D7E0               	goto	l3622
  1399  0075CC  0A01               	xorlw	1	; case 81
  1400  0075CE  B4D8               	btfsc	status,2,c
  1401  0075D0  D7E3               	goto	l3626
  1402  0075D2  0A03               	xorlw	3	; case 82
  1403  0075D4  B4D8               	btfsc	status,2,c
  1404  0075D6  D7D7               	goto	l3620
  1405  0075D8  D7E5               	goto	l3630
  1406  0075DA                     l3636:
  1407                           
  1408                           ;sanic.c: 193:         for (unsigned char a = 0; a < 3; a++){
  1409  0075DA  0E00               	movlw	0
  1410  0075DC  0100               	movlb	0	; () banked
  1411  0075DE  6FF9               	movwf	RCE@a_1345& (0+255),b
  1412  0075E0                     l3642:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;sanic.c: 194:             commandReceived[a] = 0;
  1416  0075E0  0EF4               	movlw	low RCE@commandReceived
  1417  0075E2  25F9               	addwf	RCE@a_1345& (0+255),w,b
  1418  0075E4  6ED9               	movwf	fsr2l,c
  1419  0075E6  6ADA               	clrf	fsr2h,c
  1420  0075E8  0E00               	movlw	high RCE@commandReceived
  1421  0075EA  22DA               	addwfc	fsr2h,f,c
  1422  0075EC  0E00               	movlw	0
  1423  0075EE  6EDF               	movwf	indf2,c
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;sanic.c: 195:         }
  1427  0075F0  2BF9               	incf	RCE@a_1345& (0+255),f,b
  1428                           
  1429                           ; BSR set to: 0
  1430  0075F2  0E02               	movlw	2
  1431  0075F4  65F9               	cpfsgt	RCE@a_1345& (0+255),b
  1432  0075F6  D7F4               	goto	l3642
  1433  0075F8  D77A               	goto	_RCE
  1434  0075FA                     __end_of_RCE:
  1435                           	opt callstack 0
  1436                           
  1437 ;; *************** function _pyCal *****************
  1438 ;; Defined at:
  1439 ;;		line 410 in file "./functions.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  a               1   51[COMRAM] unsigned char 
  1444 ;;  done            1    0        unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1454 ;;      Params:         0       0       0       0       0       0       0
  1455 ;;      Locals:         2       0       0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0
  1457 ;;      Totals:         2       0       0       0       0       0       0
  1458 ;;Total ram usage:        2 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    2
  1461 ;; This function calls:
  1462 ;;		_aveSensor
  1463 ;;		_msDelay
  1464 ;;		_setupADC
  1465 ;;		_trans
  1466 ;; This function is called by:
  1467 ;;		_RCE
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text6
  1472  006FF2                     __ptext6:
  1473                           	opt callstack 0
  1474  006FF2                     _pyCal:
  1475                           	opt callstack 27
  1476                           
  1477                           ;./functions.c: 412:     setupADC();
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;incstack = 0
  1481  006FF2  EC01  F037         	call	_setupADC	;wreg free
  1482                           
  1483                           ;./functions.c: 413:     PORTD = 0b00001100;
  1484  006FF6  0E0C               	movlw	12
  1485  006FF8  6E83               	movwf	3971,c	;volatile
  1486  006FFA                     
  1487                           ;./functions.c: 416:     {;./functions.c: 417:         msDelay(10);
  1488  006FFA  0E0A               	movlw	10
  1489  006FFC  ECA3  F038         	call	_msDelay
  1490                           
  1491                           ;./functions.c: 418:         for (unsigned char a = 0; a < 5; a++)
  1492  007000  0E00               	movlw	0
  1493  007002  6E34               	movwf	pyCal@a,c
  1494  007004                     l3490:
  1495                           
  1496                           ;./functions.c: 419:         {;./functions.c: 420:             trans(aveSensor(sensorCha
      +                          nnels[a]));
  1497  007004  0EC2               	movlw	low _sensorChannels
  1498  007006  2434               	addwf	pyCal@a,w,c
  1499  007008  6ED9               	movwf	fsr2l,c
  1500  00700A  6ADA               	clrf	fsr2h,c
  1501  00700C  0E00               	movlw	high _sensorChannels
  1502  00700E  22DA               	addwfc	fsr2h,f,c
  1503  007010  50DF               	movf	indf2,w,c
  1504  007012  ECD6  F037         	call	_aveSensor
  1505  007016  EC89  F036         	call	_trans
  1506                           
  1507                           ;./functions.c: 421:         }
  1508  00701A  2A34               	incf	pyCal@a,f,c
  1509  00701C  0E04               	movlw	4
  1510  00701E  6434               	cpfsgt	pyCal@a,c
  1511  007020  D7F1               	goto	l3490
  1512                           
  1513                           ;./functions.c: 422:         trans('\n');
  1514  007022  0E0A               	movlw	10
  1515  007024  EC89  F036         	call	_trans
  1516                           
  1517                           ;./functions.c: 424:         if (PIR1bits.RC1IF)
  1518  007028  AA9E               	btfss	3998,5,c	;volatile
  1519  00702A  D7E7               	goto	l3480
  1520                           
  1521                           ;./functions.c: 425:         {;./functions.c: 426:             PIR1bits.RC1IF = 0;
  1522  00702C  9A9E               	bcf	3998,5,c	;volatile
  1523                           
  1524                           ;./functions.c: 427:             if (RCREG == 'S' || RCREG == 's')
  1525  00702E  0E53               	movlw	83
  1526  007030  18AE               	xorwf	4014,w,c	;volatile
  1527  007032  B4D8               	btfsc	status,2,c
  1528  007034  0012               	return	
  1529  007036  0E73               	movlw	115
  1530  007038  18AE               	xorwf	4014,w,c	;volatile
  1531  00703A  B4D8               	btfsc	status,2,c
  1532  00703C  0012               	return	
  1533  00703E  D7DD               	goto	l3480
  1534  007040                     __end_of_pyCal:
  1535                           	opt callstack 0
  1536                           
  1537 ;; *************** function _navigate *****************
  1538 ;; Defined at:
  1539 ;;		line 435 in file "./functions.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1553 ;;      Params:         0       0       0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0
  1556 ;;      Totals:         0       0       0       0       0       0       0
  1557 ;;Total ram usage:        0 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    3
  1560 ;; This function calls:
  1561 ;;		_classifyColors
  1562 ;;		_determineDirection
  1563 ;;		_displayColorDetected
  1564 ;;		_displayRaceColor
  1565 ;;		_msDelay
  1566 ;;		_readAllSensors
  1567 ;;		_setupADC
  1568 ;;		_setupPWMLeft
  1569 ;;		_setupPWMRight
  1570 ;;		_stopMotors
  1571 ;;		_testBlack
  1572 ;; This function is called by:
  1573 ;;		_RCE
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text7
  1578  007040                     __ptext7:
  1579                           	opt callstack 0
  1580  007040                     _navigate:
  1581                           	opt callstack 26
  1582                           
  1583                           ;./functions.c: 436:     displayRaceColor();
  1584                           
  1585                           ;incstack = 0
  1586  007040  ECB7  F037         	call	_displayRaceColor	;wreg free
  1587                           
  1588                           ;./functions.c: 437:     setupPWMLeft();
  1589  007044  EC12  F037         	call	_setupPWMLeft	;wreg free
  1590                           
  1591                           ;./functions.c: 438:     setupPWMRight();
  1592  007048  EC23  F037         	call	_setupPWMRight	;wreg free
  1593  00704C                     l304:
  1594                           
  1595                           ;./functions.c: 440:         setupADC();
  1596  00704C  EC01  F037         	call	_setupADC	;wreg free
  1597                           
  1598                           ;./functions.c: 441:         readAllSensors();
  1599  007050  EC99  F037         	call	_readAllSensors	;wreg free
  1600                           
  1601                           ;./functions.c: 442:         classifyColors();
  1602  007054  ECFD  F03A         	call	_classifyColors	;wreg free
  1603                           
  1604                           ;./functions.c: 443:         displayColorDetected(2);
  1605  007058  0E02               	movlw	2
  1606  00705A  ECD6  F039         	call	_displayColorDetected
  1607                           
  1608                           ;./functions.c: 444:         determineDirection();
  1609  00705E  EC51  F039         	call	_determineDirection	;wreg free
  1610                           
  1611                           ;./functions.c: 445:         msDelay(50);
  1612  007062  0E32               	movlw	50
  1613  007064  ECA3  F038         	call	_msDelay
  1614                           
  1615                           ;./functions.c: 446:         msDelay(50);
  1616  007068  0E32               	movlw	50
  1617  00706A  ECA3  F038         	call	_msDelay
  1618                           
  1619                           ;./functions.c: 449:         if (PIR1bits.RC1IF)
  1620  00706E  AA9E               	btfss	3998,5,c	;volatile
  1621  007070  D00C               	goto	l3532
  1622                           
  1623                           ;./functions.c: 450:         {;./functions.c: 451:             PIR1bits.RC1IF = 0;
  1624  007072  9A9E               	bcf	3998,5,c	;volatile
  1625                           
  1626                           ;./functions.c: 452:             if (RCREG == 'S' || RCREG == 's')
  1627  007074  0E53               	movlw	83
  1628  007076  18AE               	xorwf	4014,w,c	;volatile
  1629  007078  B4D8               	btfsc	status,2,c
  1630  00707A  D004               	goto	u2570
  1631  00707C  0E73               	movlw	115
  1632  00707E  18AE               	xorwf	4014,w,c	;volatile
  1633  007080  A4D8               	btfss	status,2,c
  1634  007082  D7E4               	goto	l304
  1635  007084                     u2570:
  1636                           
  1637                           ;./functions.c: 453:             {;./functions.c: 454:                 stopMotors();
  1638  007084  EC95  F036         	call	_stopMotors	;wreg free
  1639  007088  0012               	return	
  1640  00708A                     l3532:
  1641  00708A  EC65  F037         	call	_testBlack	;wreg free
  1642  00708E  0AAA               	xorlw	170
  1643  007090  B4D8               	btfsc	status,2,c
  1644  007092  D7F8               	goto	u2570
  1645  007094  D7DB               	goto	l304
  1646  007096                     __end_of_navigate:
  1647                           	opt callstack 0
  1648                           
  1649 ;; *************** function _testBlack *****************
  1650 ;; Defined at:
  1651 ;;		line 682 in file "./functions.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      unsigned char 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1665 ;;      Params:         0       0       0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0
  1668 ;;      Totals:         0       0       0       0       0       0       0
  1669 ;;Total ram usage:        0 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_navigate
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text8
  1679  006ECA                     __ptext8:
  1680                           	opt callstack 0
  1681  006ECA                     _testBlack:
  1682                           	opt callstack 28
  1683                           
  1684                           ;./functions.c: 683:     if (sensorVals[0] < LLranges[3]){
  1685                           
  1686                           ;incstack = 0
  1687  006ECA  505E               	movf	_LLranges+3,w,c
  1688  006ECC  0100               	movlb	0	; () banked
  1689  006ECE  5DD2               	subwf	_sensorVals& (0+255),w,b
  1690  006ED0  B0D8               	btfsc	status,0,c
  1691  006ED2  D002               	goto	l3018
  1692  006ED4                     u2020:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;./functions.c: 684:         return 0x0;
  1696  006ED4  0E00               	movlw	0
  1697  006ED6  0012               	return	
  1698  006ED8                     l3018:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;./functions.c: 686:     if (sensorVals[1] < Lranges[3]){
  1702  006ED8  5059               	movf	_Lranges+3,w,c
  1703  006EDA  5DD3               	subwf	(_sensorVals+1)& (0+255),w,b
  1704  006EDC  A0D8               	btfss	status,0,c
  1705  006EDE  D7FA               	goto	u2020
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;./functions.c: 689:     if (sensorVals[2] < Mranges[3]){
  1709  006EE0  51E4               	movf	(_Mranges+3)& (0+255),w,b
  1710  006EE2  5DD4               	subwf	(_sensorVals+2)& (0+255),w,b
  1711  006EE4  A0D8               	btfss	status,0,c
  1712  006EE6  D7F6               	goto	u2020
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;./functions.c: 692:     if (sensorVals[3] < Rranges[3]){
  1716  006EE8  51DF               	movf	(_Rranges+3)& (0+255),w,b
  1717  006EEA  5DD5               	subwf	(_sensorVals+3)& (0+255),w,b
  1718  006EEC  A0D8               	btfss	status,0,c
  1719  006EEE  D7F2               	goto	u2020
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;./functions.c: 695:     if (sensorVals[4] < RRranges[3]){
  1723  006EF0  51DA               	movf	(_RRranges+3)& (0+255),w,b
  1724  006EF2  5DD6               	subwf	(_sensorVals+4)& (0+255),w,b
  1725  006EF4  A0D8               	btfss	status,0,c
  1726  006EF6  D7EE               	goto	u2020
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;./functions.c: 698:     return 0xAA;
  1730  006EF8  0EAA               	movlw	170
  1731                           
  1732                           ; BSR set to: 0
  1733  006EFA  0012               	return		;funcret
  1734  006EFC                     __end_of_testBlack:
  1735                           	opt callstack 0
  1736                           
  1737 ;; *************** function _stopMotors *****************
  1738 ;; Defined at:
  1739 ;;		line 781 in file "./functions.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1753 ;;      Params:         0       0       0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_navigate
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text9
  1767  006D2A                     __ptext9:
  1768                           	opt callstack 0
  1769  006D2A                     _stopMotors:
  1770                           	opt callstack 28
  1771                           
  1772                           ;./functions.c: 782:     PORTCbits.RC0 = 0;
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;incstack = 0
  1776  006D2A  9082               	bcf	3970,0,c	;volatile
  1777                           
  1778                           ;./functions.c: 783:     PORTCbits.RC1 = 0;
  1779  006D2C  9282               	bcf	3970,1,c	;volatile
  1780                           
  1781                           ;./functions.c: 784:     TRISCbits.TRISC2 = 1;
  1782  006D2E  8494               	bsf	3988,2,c	;volatile
  1783                           
  1784                           ;./functions.c: 785:     PORTEbits.RE0 = 0;
  1785  006D30  9084               	bcf	3972,0,c	;volatile
  1786                           
  1787                           ;./functions.c: 786:     PORTEbits.RE1 = 0;
  1788  006D32  9284               	bcf	3972,1,c	;volatile
  1789                           
  1790                           ;./functions.c: 787:     TRISEbits.TRISE2 = 1;
  1791  006D34  8496               	bsf	3990,2,c	;volatile
  1792                           
  1793                           ;./functions.c: 788:     PORTA = 0;
  1794  006D36  0E00               	movlw	0
  1795  006D38  6E80               	movwf	3968,c	;volatile
  1796  006D3A  0012               	return		;funcret
  1797  006D3C                     __end_of_stopMotors:
  1798                           	opt callstack 0
  1799                           
  1800 ;; *************** function _setupPWMRight *****************
  1801 ;; Defined at:
  1802 ;;		line 40 in file "./functions.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1816 ;;      Params:         0       0       0       0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0
  1819 ;;      Totals:         0       0       0       0       0       0       0
  1820 ;;Total ram usage:        0 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_navigate
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text10
  1830  006E46                     __ptext10:
  1831                           	opt callstack 0
  1832  006E46                     _setupPWMRight:
  1833                           	opt callstack 28
  1834                           
  1835                           ;./functions.c: 42:     CCP5CON = 0;
  1836                           
  1837                           ;incstack = 0
  1838  006E46  0E00               	movlw	0
  1839  006E48  010F               	movlb	15	; () banked
  1840  006E4A  6F54               	movwf	84,b	;volatile
  1841                           
  1842                           ; BSR set to: 15
  1843                           ;./functions.c: 43:     PR4 = 255;
  1844  006E4C  6952               	setf	82,b	;volatile
  1845                           
  1846                           ; BSR set to: 15
  1847                           ;./functions.c: 44:     CCPR5L = 255;
  1848  006E4E  6955               	setf	85,b	;volatile
  1849                           
  1850                           ; BSR set to: 15
  1851                           ;./functions.c: 46:     TRISEbits.RE2 = 0;
  1852  006E50  9496               	bcf	3990,2,c	;volatile
  1853                           
  1854                           ;./functions.c: 48:     CCPTMRS1 = 0b00000100;
  1855  006E52  0E04               	movlw	4
  1856  006E54  6F48               	movwf	72,b	;volatile
  1857                           
  1858                           ;./functions.c: 49:     CCP5CON = 0b00001100;
  1859  006E56  0E0C               	movlw	12
  1860  006E58  6F54               	movwf	84,b	;volatile
  1861                           
  1862                           ;./functions.c: 50:     T4CON = 0b00000000;
  1863  006E5A  0E00               	movlw	0
  1864  006E5C  6F51               	movwf	81,b	;volatile
  1865                           
  1866                           ;./functions.c: 51:     TMR4 = 0;
  1867  006E5E  0E00               	movlw	0
  1868  006E60  6F53               	movwf	83,b	;volatile
  1869                           
  1870                           ; BSR set to: 15
  1871                           ;./functions.c: 52:     PIE5bits.TMR4IE = 0;
  1872  006E62  907D               	bcf	3965,0,c	;volatile
  1873                           
  1874                           ; BSR set to: 15
  1875                           ;./functions.c: 53:     T4CONbits.TMR4ON = 1;
  1876  006E64  8551               	bsf	81,2,b	;volatile
  1877                           
  1878                           ; BSR set to: 15
  1879  006E66  0012               	return		;funcret
  1880  006E68                     __end_of_setupPWMRight:
  1881                           	opt callstack 0
  1882                           
  1883 ;; *************** function _setupPWMLeft *****************
  1884 ;; Defined at:
  1885 ;;		line 23 in file "./functions.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         0       0       0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_navigate
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text11
  1913  006E24                     __ptext11:
  1914                           	opt callstack 0
  1915  006E24                     _setupPWMLeft:
  1916                           	opt callstack 28
  1917                           
  1918                           ;./functions.c: 25:     CCP1CON = 0;
  1919                           
  1920                           ; BSR set to: 15
  1921                           ;incstack = 0
  1922  006E24  0E00               	movlw	0
  1923  006E26  6EBD               	movwf	4029,c	;volatile
  1924                           
  1925                           ;./functions.c: 26:     PR2 = 255;
  1926  006E28  68BB               	setf	4027,c	;volatile
  1927                           
  1928                           ;./functions.c: 27:     CCPR1L = 255;
  1929  006E2A  68BE               	setf	4030,c	;volatile
  1930                           
  1931                           ;./functions.c: 29:     TRISCbits.RC2 = 0;
  1932  006E2C  9494               	bcf	3988,2,c	;volatile
  1933                           
  1934                           ;./functions.c: 31:     CCPTMRS0 = 0;
  1935  006E2E  0E00               	movlw	0
  1936  006E30  010F               	movlb	15	; () banked
  1937  006E32  6F49               	movwf	73,b	;volatile
  1938                           
  1939                           ;./functions.c: 32:     CCP1CON = 0b00001100;
  1940  006E34  0E0C               	movlw	12
  1941  006E36  6EBD               	movwf	4029,c	;volatile
  1942                           
  1943                           ;./functions.c: 33:     T2CON = 0b00000000;
  1944  006E38  0E00               	movlw	0
  1945  006E3A  6EBA               	movwf	4026,c	;volatile
  1946                           
  1947                           ;./functions.c: 34:     TMR2 = 0;
  1948  006E3C  0E00               	movlw	0
  1949  006E3E  6EBC               	movwf	4028,c	;volatile
  1950                           
  1951                           ; BSR set to: 15
  1952                           ;./functions.c: 35:     PIE1bits.TMR1IE = 0;
  1953  006E40  909D               	bcf	3997,0,c	;volatile
  1954                           
  1955                           ; BSR set to: 15
  1956                           ;./functions.c: 36:     T2CONbits.TMR2ON = 1;
  1957  006E42  84BA               	bsf	4026,2,c	;volatile
  1958                           
  1959                           ; BSR set to: 15
  1960  006E44  0012               	return		;funcret
  1961  006E46                     __end_of_setupPWMLeft:
  1962                           	opt callstack 0
  1963                           
  1964 ;; *************** function _setupADC *****************
  1965 ;; Defined at:
  1966 ;;		line 119 in file "./functions.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         0       0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_pyCal
  1990 ;;		_navigate
  1991 ;;		_init
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text12
  1996  006E02                     __ptext12:
  1997                           	opt callstack 0
  1998  006E02                     _setupADC:
  1999                           	opt callstack 29
  2000                           
  2001                           ;./functions.c: 121:     ADCON2bits.ADCS = 0b100;
  2002                           
  2003                           ; BSR set to: 15
  2004                           ;incstack = 0
  2005  006E02  50C0               	movf	4032,w,c	;volatile
  2006  006E04  0BF8               	andlw	-8
  2007  006E06  0904               	iorlw	4
  2008  006E08  6EC0               	movwf	4032,c	;volatile
  2009                           
  2010                           ;./functions.c: 122:     ADCON1 = 0;
  2011  006E0A  0E00               	movlw	0
  2012  006E0C  6EC1               	movwf	4033,c	;volatile
  2013                           
  2014                           ;./functions.c: 123:     ADCON0bits.CHS = 0b01100;
  2015  006E0E  50C2               	movf	4034,w,c	;volatile
  2016  006E10  0B83               	andlw	-125
  2017  006E12  0930               	iorlw	48
  2018  006E14  6EC2               	movwf	4034,c	;volatile
  2019                           
  2020                           ;./functions.c: 124:     ADCON2bits.ADFM = 0;
  2021  006E16  9EC0               	bcf	4032,7,c	;volatile
  2022                           
  2023                           ;./functions.c: 125:     ADCON2bits.ACQT = 0b101;
  2024  006E18  50C0               	movf	4032,w,c	;volatile
  2025  006E1A  0BC7               	andlw	-57
  2026  006E1C  0928               	iorlw	40
  2027  006E1E  6EC0               	movwf	4032,c	;volatile
  2028                           
  2029                           ;./functions.c: 126:     ADCON0bits.ADON = 1;
  2030  006E20  80C2               	bsf	4034,0,c	;volatile
  2031  006E22  0012               	return		;funcret
  2032  006E24                     __end_of_setupADC:
  2033                           	opt callstack 0
  2034                           
  2035 ;; *************** function _readAllSensors *****************
  2036 ;; Defined at:
  2037 ;;		line 813 in file "./functions.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  a               2   10[COMRAM] unsigned int 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2051 ;;      Params:         0       0       0       0       0       0       0
  2052 ;;      Locals:         2       0       0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0
  2054 ;;      Totals:         2       0       0       0       0       0       0
  2055 ;;Total ram usage:        2 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    2
  2058 ;; This function calls:
  2059 ;;		_aveSensor
  2060 ;; This function is called by:
  2061 ;;		_navigate
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text13
  2066  006F32                     __ptext13:
  2067                           	opt callstack 0
  2068  006F32                     _readAllSensors:
  2069                           	opt callstack 26
  2070                           
  2071                           ;./functions.c: 814:     for (unsigned a = 0; a < 5; a++){
  2072                           
  2073                           ;incstack = 0
  2074  006F32  0E00               	movlw	0
  2075  006F34  6E0C               	movwf	readAllSensors@a+1,c
  2076  006F36  0E00               	movlw	0
  2077  006F38  6E0B               	movwf	readAllSensors@a,c
  2078  006F3A                     l2912:
  2079                           
  2080                           ;./functions.c: 815:         sensorVals[a] = aveSensor(sensorChannels[a]);
  2081  006F3A  0ED2               	movlw	low _sensorVals
  2082  006F3C  240B               	addwf	readAllSensors@a,w,c
  2083  006F3E  6ED9               	movwf	fsr2l,c
  2084  006F40  0E00               	movlw	high _sensorVals
  2085  006F42  200C               	addwfc	readAllSensors@a+1,w,c
  2086  006F44  6EDA               	movwf	fsr2h,c
  2087  006F46  0EC2               	movlw	low _sensorChannels
  2088  006F48  240B               	addwf	readAllSensors@a,w,c
  2089  006F4A  6EE1               	movwf	fsr1l,c
  2090  006F4C  0E00               	movlw	high _sensorChannels
  2091  006F4E  200C               	addwfc	readAllSensors@a+1,w,c
  2092  006F50  6EE2               	movwf	fsr1h,c
  2093  006F52  50E7               	movf	indf1,w,c
  2094  006F54  ECD6  F037         	call	_aveSensor
  2095  006F58  6EDF               	movwf	indf2,c
  2096                           
  2097                           ;./functions.c: 816:     }
  2098  006F5A  4A0B               	infsnz	readAllSensors@a,f,c
  2099  006F5C  2A0C               	incf	readAllSensors@a+1,f,c
  2100  006F5E  500C               	movf	readAllSensors@a+1,w,c
  2101  006F60  E105               	bnz	u1850
  2102  006F62  0E05               	movlw	5
  2103  006F64  5C0B               	subwf	readAllSensors@a,w,c
  2104  006F66  B0D8               	btfsc	status,0,c
  2105  006F68  0012               	return	
  2106  006F6A  D7E7               	goto	l2912
  2107  006F6C                     u1850:
  2108  006F6C  0012               	return		;funcret
  2109  006F6E                     __end_of_readAllSensors:
  2110                           	opt callstack 0
  2111                           
  2112 ;; *************** function _displayRaceColor *****************
  2113 ;; Defined at:
  2114 ;;		line 793 in file "./functions.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2128 ;;      Params:         0       0       0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_navigate
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text14
  2142  006F6E                     __ptext14:
  2143                           	opt callstack 0
  2144  006F6E                     _displayRaceColor:
  2145                           	opt callstack 28
  2146                           
  2147                           ;./functions.c: 794:     if (raceColor[0]){
  2148                           
  2149                           ;incstack = 0
  2150  006F6E  0100               	movlb	0	; () banked
  2151  006F70  51B2               	movf	_raceColor& (0+255),w,b
  2152  006F72  B4D8               	btfsc	status,2,c
  2153  006F74  D003               	goto	l2888
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;./functions.c: 795:         PORTD = 0b10111111;
  2157  006F76  0EBF               	movlw	191
  2158  006F78  6E83               	movwf	3971,c	;volatile
  2159                           
  2160                           ;./functions.c: 796:     }
  2161  006F7A  0012               	return	
  2162  006F7C                     l2888:
  2163                           
  2164                           ; BSR set to: 0
  2165  006F7C  51B3               	movf	(_raceColor+1)& (0+255),w,b
  2166  006F7E  B4D8               	btfsc	status,2,c
  2167  006F80  D003               	goto	l2892
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;./functions.c: 798:         PORTD = 0b10000010;
  2171  006F82  0E82               	movlw	130
  2172  006F84  6E83               	movwf	3971,c	;volatile
  2173                           
  2174                           ;./functions.c: 799:     }
  2175  006F86  0012               	return	
  2176  006F88                     l2892:
  2177                           
  2178                           ; BSR set to: 0
  2179  006F88  51B4               	movf	(_raceColor+2)& (0+255),w,b
  2180  006F8A  B4D8               	btfsc	status,2,c
  2181  006F8C  D003               	goto	l2896
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;./functions.c: 801:         PORTD = 0b10001000;
  2185  006F8E  0E88               	movlw	136
  2186  006F90  6E83               	movwf	3971,c	;volatile
  2187                           
  2188                           ;./functions.c: 802:     }
  2189  006F92  0012               	return	
  2190  006F94                     l2896:
  2191                           
  2192                           ; BSR set to: 0
  2193  006F94  51B5               	movf	(_raceColor+3)& (0+255),w,b
  2194  006F96  B4D8               	btfsc	status,2,c
  2195  006F98  D003               	goto	l2900
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;./functions.c: 804:         PORTD = 0b10000000;
  2199  006F9A  0E80               	movlw	128
  2200  006F9C  6E83               	movwf	3971,c	;volatile
  2201                           
  2202                           ;./functions.c: 805:     }
  2203  006F9E  0012               	return	
  2204  006FA0                     l2900:
  2205                           
  2206                           ; BSR set to: 0
  2207  006FA0  51B6               	movf	(_raceColor+4)& (0+255),w,b
  2208  006FA2  B4D8               	btfsc	status,2,c
  2209  006FA4  0012               	return	
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;./functions.c: 807:         PORTD = 0b11001000;
  2213  006FA6  0EC8               	movlw	200
  2214  006FA8  6E83               	movwf	3971,c	;volatile
  2215  006FAA  0012               	return	
  2216  006FAC                     __end_of_displayRaceColor:
  2217                           	opt callstack 0
  2218                           
  2219 ;; *************** function _displayColorDetected *****************
  2220 ;; Defined at:
  2221 ;;		line 728 in file "./functions.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  sensor          1    wreg     unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  sensor          1    2[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2235 ;;      Params:         0       0       0       0       0       0       0
  2236 ;;      Locals:         1       0       0       0       0       0       0
  2237 ;;      Temps:          2       0       0       0       0       0       0
  2238 ;;      Totals:         3       0       0       0       0       0       0
  2239 ;;Total ram usage:        3 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_navigate
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text15
  2249  0073AC                     __ptext15:
  2250                           	opt callstack 0
  2251  0073AC                     _displayColorDetected:
  2252                           	opt callstack 28
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;incstack = 0
  2256                           ;displayColorDetected@sensor stored from wreg
  2257  0073AC  6E03               	movwf	displayColorDetected@sensor,c
  2258                           
  2259                           ;./functions.c: 729:     switch (colorsDetected[sensor])
  2260  0073AE  D024               	goto	l2952
  2261  0073B0                     l404:
  2262                           
  2263                           ;./functions.c: 732:         PORTAbits.RA0 = 1;
  2264  0073B0  8080               	bsf	3968,0,c	;volatile
  2265                           
  2266                           ;./functions.c: 733:         PORTAbits.RA1 = 0;
  2267  0073B2  9280               	bcf	3968,1,c	;volatile
  2268                           
  2269                           ;./functions.c: 734:         PORTAbits.RA2 = 0;
  2270  0073B4  9480               	bcf	3968,2,c	;volatile
  2271                           
  2272                           ;./functions.c: 735:         PORTAbits.RA3 = 0;
  2273  0073B6  9680               	bcf	3968,3,c	;volatile
  2274                           
  2275                           ;./functions.c: 736:         PORTAbits.RA4 = 0;
  2276  0073B8  9880               	bcf	3968,4,c	;volatile
  2277                           
  2278                           ;./functions.c: 737:         break;
  2279  0073BA  0012               	return	
  2280  0073BC                     l406:
  2281                           
  2282                           ;./functions.c: 739:         PORTAbits.RA0 = 0;
  2283  0073BC  9080               	bcf	3968,0,c	;volatile
  2284                           
  2285                           ;./functions.c: 740:         PORTAbits.RA1 = 1;
  2286  0073BE  8280               	bsf	3968,1,c	;volatile
  2287                           
  2288                           ;./functions.c: 741:         PORTAbits.RA2 = 0;
  2289  0073C0  9480               	bcf	3968,2,c	;volatile
  2290                           
  2291                           ;./functions.c: 742:         PORTAbits.RA3 = 0;
  2292  0073C2  9680               	bcf	3968,3,c	;volatile
  2293                           
  2294                           ;./functions.c: 743:         PORTAbits.RA4 = 0;
  2295  0073C4  9880               	bcf	3968,4,c	;volatile
  2296                           
  2297                           ;./functions.c: 744:         break;
  2298  0073C6  0012               	return	
  2299  0073C8                     l407:
  2300                           
  2301                           ;./functions.c: 746:         PORTAbits.RA0 = 0;
  2302  0073C8  9080               	bcf	3968,0,c	;volatile
  2303                           
  2304                           ;./functions.c: 747:         PORTAbits.RA1 = 0;
  2305  0073CA  9280               	bcf	3968,1,c	;volatile
  2306                           
  2307                           ;./functions.c: 748:         PORTAbits.RA2 = 1;
  2308  0073CC  8480               	bsf	3968,2,c	;volatile
  2309                           
  2310                           ;./functions.c: 749:         PORTAbits.RA3 = 0;
  2311  0073CE  9680               	bcf	3968,3,c	;volatile
  2312                           
  2313                           ;./functions.c: 750:         PORTAbits.RA4 = 0;
  2314  0073D0  9880               	bcf	3968,4,c	;volatile
  2315                           
  2316                           ;./functions.c: 751:         break;
  2317  0073D2  0012               	return	
  2318  0073D4                     l408:
  2319                           
  2320                           ;./functions.c: 753:         PORTAbits.RA0 = 0;
  2321  0073D4  9080               	bcf	3968,0,c	;volatile
  2322                           
  2323                           ;./functions.c: 754:         PORTAbits.RA1 = 0;
  2324  0073D6  9280               	bcf	3968,1,c	;volatile
  2325                           
  2326                           ;./functions.c: 755:         PORTAbits.RA2 = 0;
  2327  0073D8  9480               	bcf	3968,2,c	;volatile
  2328                           
  2329                           ;./functions.c: 756:         PORTAbits.RA3 = 1;
  2330  0073DA  8680               	bsf	3968,3,c	;volatile
  2331                           
  2332                           ;./functions.c: 757:         PORTAbits.RA4 = 0;
  2333  0073DC  9880               	bcf	3968,4,c	;volatile
  2334                           
  2335                           ;./functions.c: 758:         break;
  2336  0073DE  0012               	return	
  2337  0073E0                     l409:
  2338                           
  2339                           ;./functions.c: 760:         PORTAbits.RA0 = 0;
  2340  0073E0  9080               	bcf	3968,0,c	;volatile
  2341                           
  2342                           ;./functions.c: 761:         PORTAbits.RA1 = 0;
  2343  0073E2  9280               	bcf	3968,1,c	;volatile
  2344                           
  2345                           ;./functions.c: 762:         PORTAbits.RA2 = 0;
  2346  0073E4  9480               	bcf	3968,2,c	;volatile
  2347                           
  2348                           ;./functions.c: 763:         PORTAbits.RA3 = 0;
  2349  0073E6  9680               	bcf	3968,3,c	;volatile
  2350                           
  2351                           ;./functions.c: 764:         PORTAbits.RA4 = 1;
  2352  0073E8  8880               	bsf	3968,4,c	;volatile
  2353                           
  2354                           ;./functions.c: 765:         break;
  2355  0073EA  0012               	return	
  2356  0073EC                     l410:
  2357                           
  2358                           ;./functions.c: 768:         PORTAbits.RA0 = 1;
  2359  0073EC  8080               	bsf	3968,0,c	;volatile
  2360                           
  2361                           ;./functions.c: 769:         PORTAbits.RA1 = 1;
  2362  0073EE  8280               	bsf	3968,1,c	;volatile
  2363                           
  2364                           ;./functions.c: 770:         PORTAbits.RA2 = 1;
  2365  0073F0  8480               	bsf	3968,2,c	;volatile
  2366                           
  2367                           ;./functions.c: 771:         PORTAbits.RA3 = 1;
  2368  0073F2  8680               	bsf	3968,3,c	;volatile
  2369                           
  2370                           ;./functions.c: 772:         PORTAbits.RA4 = 1;
  2371  0073F4  8880               	bsf	3968,4,c	;volatile
  2372                           
  2373                           ;./functions.c: 773:         break;
  2374  0073F6  0012               	return	
  2375  0073F8                     l2952:
  2376  0073F8  0EFA               	movlw	low _colorsDetected
  2377  0073FA  2403               	addwf	displayColorDetected@sensor,w,c
  2378  0073FC  6ED9               	movwf	fsr2l,c
  2379  0073FE  6ADA               	clrf	fsr2h,c
  2380  007400  0E00               	movlw	high _colorsDetected
  2381  007402  22DA               	addwfc	fsr2h,f,c
  2382  007404  50DF               	movf	indf2,w,c
  2383  007406  6E01               	movwf	??_displayColorDetected& (0+255),c
  2384  007408  6A02               	clrf	(??_displayColorDetected+1)& (0+255),c
  2385                           
  2386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 1, Range of values is 0 to 0
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte            4     3 (average)
  2392                           ;	Chosen strategy is simple_byte
  2393  00740A  5002               	movf	??_displayColorDetected+1,w,c
  2394  00740C  0A00               	xorlw	0	; case 0
  2395  00740E  A4D8               	btfss	status,2,c
  2396  007410  D7ED               	goto	l410
  2397                           
  2398                           ; Switch size 1, requested type "simple"
  2399                           ; Number of cases is 5, Range of values is 66 to 110
  2400                           ; switch strategies available:
  2401                           ; Name         Instructions Cycles
  2402                           ; simple_byte           16     9 (average)
  2403                           ;	Chosen strategy is simple_byte
  2404  007412  5001               	movf	??_displayColorDetected,w,c
  2405  007414  0A42               	xorlw	66	; case 66
  2406  007416  B4D8               	btfsc	status,2,c
  2407  007418  D7DD               	goto	l408
  2408  00741A  0A05               	xorlw	5	; case 71
  2409  00741C  B4D8               	btfsc	status,2,c
  2410  00741E  D7CE               	goto	l406
  2411  007420  0A15               	xorlw	21	; case 82
  2412  007422  B4D8               	btfsc	status,2,c
  2413  007424  D7D1               	goto	l407
  2414  007426  0A05               	xorlw	5	; case 87
  2415  007428  B4D8               	btfsc	status,2,c
  2416  00742A  D7C2               	goto	l404
  2417  00742C  0A39               	xorlw	57	; case 110
  2418  00742E  B4D8               	btfsc	status,2,c
  2419  007430  D7D7               	goto	l409
  2420  007432  D7DC               	goto	l410
  2421  007434                     __end_of_displayColorDetected:
  2422                           	opt callstack 0
  2423                           
  2424 ;; *************** function _determineDirection *****************
  2425 ;; Defined at:
  2426 ;;		line 632 in file "./functions.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  rc              1    0[COMRAM] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2440 ;;      Params:         0       0       0       0       0       0       0
  2441 ;;      Locals:         1       0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0
  2443 ;;      Totals:         1       0       0       0       0       0       0
  2444 ;;Total ram usage:        1 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		_hardLeft
  2449 ;;		_hardRight
  2450 ;;		_left
  2451 ;;		_right
  2452 ;;		_searchMode
  2453 ;;		_straight
  2454 ;; This function is called by:
  2455 ;;		_navigate
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text16
  2460  0072A2                     __ptext16:
  2461                           	opt callstack 0
  2462  0072A2                     _determineDirection:
  2463                           	opt callstack 26
  2464                           
  2465                           ;./functions.c: 635:     unsigned char rc = 0;
  2466                           
  2467                           ;incstack = 0
  2468  0072A2  0E00               	movlw	0
  2469  0072A4  6E01               	movwf	determineDirection@rc,c
  2470                           
  2471                           ;./functions.c: 636:     if (raceColor[0])
  2472  0072A6  0100               	movlb	0	; () banked
  2473  0072A8  51B2               	movf	_raceColor& (0+255),w,b
  2474  0072AA  B4D8               	btfsc	status,2,c
  2475  0072AC  D002               	goto	l2962
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;./functions.c: 637:     {;./functions.c: 638:         rc = 'W';
  2479  0072AE  0E57               	movlw	87
  2480  0072B0  D013               	goto	L4
  2481  0072B2                     l2962:
  2482                           
  2483                           ; BSR set to: 0
  2484  0072B2  51B3               	movf	(_raceColor+1)& (0+255),w,b
  2485  0072B4  B4D8               	btfsc	status,2,c
  2486  0072B6  D002               	goto	l2966
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;./functions.c: 641:     {;./functions.c: 642:         rc = 'G';
  2490  0072B8  0E47               	movlw	71
  2491  0072BA  D00E               	goto	L4
  2492  0072BC                     l2966:
  2493                           
  2494                           ; BSR set to: 0
  2495  0072BC  51B4               	movf	(_raceColor+2)& (0+255),w,b
  2496  0072BE  B4D8               	btfsc	status,2,c
  2497  0072C0  D002               	goto	l2970
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;./functions.c: 645:     {;./functions.c: 646:         rc = 'R';
  2501  0072C2  0E52               	movlw	82
  2502  0072C4  D009               	goto	L4
  2503  0072C6                     l2970:
  2504                           
  2505                           ; BSR set to: 0
  2506  0072C6  51B5               	movf	(_raceColor+3)& (0+255),w,b
  2507  0072C8  B4D8               	btfsc	status,2,c
  2508  0072CA  D002               	goto	l2974
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;./functions.c: 649:     {;./functions.c: 650:         rc = 'B';
  2512  0072CC  0E42               	movlw	66
  2513  0072CE  D004               	goto	L4
  2514  0072D0                     l2974:
  2515                           
  2516                           ; BSR set to: 0
  2517  0072D0  51B6               	movf	(_raceColor+4)& (0+255),w,b
  2518  0072D2  B4D8               	btfsc	status,2,c
  2519  0072D4  D002               	goto	l361
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;./functions.c: 653:     {;./functions.c: 654:         rc = 'n';
  2523  0072D6  0E6E               	movlw	110
  2524  0072D8                     L4:
  2525  0072D8  6E01               	movwf	determineDirection@rc,c
  2526  0072DA                     l361:
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;./functions.c: 658:     if (colorsDetected[2] == rc){
  2530                           
  2531                           ; BSR set to: 0
  2532  0072DA  5001               	movf	determineDirection@rc,w,c
  2533  0072DC  19FC               	xorwf	(_colorsDetected+2)& (0+255),w,b
  2534  0072DE  A4D8               	btfss	status,2,c
  2535  0072E0  D003               	goto	l2986
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;./functions.c: 659:         straight();
  2539  0072E2  ECF4  F036         	call	_straight	;wreg free
  2540  0072E6  0012               	return	
  2541  0072E8                     l2986:
  2542                           
  2543                           ; BSR set to: 0
  2544  0072E8  5001               	movf	determineDirection@rc,w,c
  2545  0072EA  19FB               	xorwf	(_colorsDetected+1)& (0+255),w,b
  2546  0072EC  A4D8               	btfss	status,2,c
  2547  0072EE  D003               	goto	l2990
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;./functions.c: 664:         left();
  2551  0072F0  ECDA  F036         	call	_left	;wreg free
  2552                           
  2553                           ;./functions.c: 665:     }
  2554  0072F4  0012               	return	
  2555  0072F6                     l2990:
  2556                           
  2557                           ; BSR set to: 0
  2558  0072F6  5001               	movf	determineDirection@rc,w,c
  2559  0072F8  19FD               	xorwf	(_colorsDetected+3)& (0+255),w,b
  2560  0072FA  A4D8               	btfss	status,2,c
  2561  0072FC  D003               	goto	l2994
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;./functions.c: 667:         right();
  2565  0072FE  ECE7  F036         	call	_right	;wreg free
  2566                           
  2567                           ;./functions.c: 668:     }
  2568  007302  0012               	return	
  2569  007304                     l2994:
  2570                           
  2571                           ; BSR set to: 0
  2572  007304  5001               	movf	determineDirection@rc,w,c
  2573  007306  19FA               	xorwf	_colorsDetected& (0+255),w,b
  2574  007308  A4D8               	btfss	status,2,c
  2575  00730A  D003               	goto	l2998
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;./functions.c: 670:         hardLeft();
  2579  00730C  ECC0  F036         	call	_hardLeft	;wreg free
  2580                           
  2581                           ;./functions.c: 671:     }
  2582  007310  0012               	return	
  2583  007312                     l2998:
  2584                           
  2585                           ; BSR set to: 0
  2586  007312  5001               	movf	determineDirection@rc,w,c
  2587  007314  19FE               	xorwf	(_colorsDetected+4)& (0+255),w,b
  2588  007316  A4D8               	btfss	status,2,c
  2589  007318  D003               	goto	l3002
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;./functions.c: 673:         hardRight();
  2593  00731A  ECCD  F036         	call	_hardRight	;wreg free
  2594                           
  2595                           ;./functions.c: 674:     }
  2596  00731E  0012               	return	
  2597  007320                     l3002:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;./functions.c: 676:         searchMode();
  2601  007320  EC7A  F036         	call	_searchMode	;wreg free
  2602  007324  0012               	return		;funcret
  2603  007326                     __end_of_determineDirection:
  2604                           	opt callstack 0
  2605                           
  2606 ;; *************** function _straight *****************
  2607 ;; Defined at:
  2608 ;;		line 506 in file "./functions.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2622 ;;      Params:         0       0       0       0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0
  2625 ;;      Totals:         0       0       0       0       0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_determineDirection
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text17
  2636  006DE8                     __ptext17:
  2637                           	opt callstack 0
  2638  006DE8                     _straight:
  2639                           	opt callstack 27
  2640                           
  2641                           ;./functions.c: 507:     PORTAbits.RA5 = 1;
  2642                           
  2643                           ;incstack = 0
  2644  006DE8  8A80               	bsf	3968,5,c	;volatile
  2645                           
  2646                           ;./functions.c: 508:     PORTAbits.RA6 = 0;
  2647  006DEA  9C80               	bcf	3968,6,c	;volatile
  2648                           
  2649                           ;./functions.c: 509:     PORTAbits.RA7 = 0;
  2650  006DEC  9E80               	bcf	3968,7,c	;volatile
  2651                           
  2652                           ;./functions.c: 511:     PORTCbits.RC0 = 0;
  2653  006DEE  9082               	bcf	3970,0,c	;volatile
  2654                           
  2655                           ;./functions.c: 512:     PORTCbits.RC1 = 1;
  2656  006DF0  8282               	bsf	3970,1,c	;volatile
  2657                           
  2658                           ;./functions.c: 514:     PORTEbits.RE0 = 0;
  2659  006DF2  9084               	bcf	3972,0,c	;volatile
  2660                           
  2661                           ;./functions.c: 515:     PORTEbits.RE1 = 1;
  2662  006DF4  8284               	bsf	3972,1,c	;volatile
  2663                           
  2664                           ;./functions.c: 517:     CCPR1L = 100;
  2665  006DF6  0E64               	movlw	100
  2666  006DF8  6EBE               	movwf	4030,c	;volatile
  2667                           
  2668                           ;./functions.c: 518:     CCPR5L = 100;
  2669  006DFA  0E64               	movlw	100
  2670  006DFC  010F               	movlb	15	; () banked
  2671  006DFE  6F55               	movwf	85,b	;volatile
  2672                           
  2673                           ; BSR set to: 15
  2674  006E00  0012               	return		;funcret
  2675  006E02                     __end_of_straight:
  2676                           	opt callstack 0
  2677                           
  2678 ;; *************** function _searchMode *****************
  2679 ;; Defined at:
  2680 ;;		line 493 in file "./functions.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2694 ;;      Params:         0       0       0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0
  2697 ;;      Totals:         0       0       0       0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    1
  2701 ;; This function calls:
  2702 ;;		_timer1setup
  2703 ;; This function is called by:
  2704 ;;		_determineDirection
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text18
  2709  006CF4                     __ptext18:
  2710                           	opt callstack 0
  2711  006CF4                     _searchMode:
  2712                           	opt callstack 26
  2713                           
  2714                           ;./functions.c: 494:     timer1setup();
  2715                           
  2716                           ; BSR set to: 15
  2717                           ;incstack = 0
  2718  006CF4  ECA8  F036         	call	_timer1setup	;wreg free
  2719  006CF8                     l328:
  2720                           
  2721                           ;./functions.c: 495:     while(!PIR1bits.TMR1IF){
  2722  006CF8  B09E               	btfsc	3998,0,c	;volatile
  2723  006CFA  0012               	return	
  2724  006CFC  D7FD               	goto	l328
  2725  006CFE                     __end_of_searchMode:
  2726                           	opt callstack 0
  2727                           
  2728 ;; *************** function _timer1setup *****************
  2729 ;; Defined at:
  2730 ;;		line 963 in file "./functions.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2744 ;;      Params:         0       0       0       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0
  2747 ;;      Totals:         0       0       0       0       0       0       0
  2748 ;;Total ram usage:        0 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_searchMode
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text19
  2758  006D50                     __ptext19:
  2759                           	opt callstack 0
  2760  006D50                     _timer1setup:
  2761                           	opt callstack 26
  2762                           
  2763                           ;./functions.c: 964:     T1CON = 0b00110010;
  2764                           
  2765                           ;incstack = 0
  2766  006D50  0E32               	movlw	50
  2767  006D52  6ECD               	movwf	4045,c	;volatile
  2768                           
  2769                           ;./functions.c: 965:     INTCONbits.PEIE = 1;
  2770  006D54  8CF2               	bsf	4082,6,c	;volatile
  2771                           
  2772                           ;./functions.c: 966:     INTCONbits.GIE = 1;
  2773  006D56  8EF2               	bsf	4082,7,c	;volatile
  2774                           
  2775                           ;./functions.c: 967:     PIE1bits.TMR1IE = 1;
  2776  006D58  809D               	bsf	3997,0,c	;volatile
  2777                           
  2778                           ;./functions.c: 968:     PIR1bits.TMR1IF = 0;
  2779  006D5A  909E               	bcf	3998,0,c	;volatile
  2780                           
  2781                           ;./functions.c: 969:     TMR1 = 0;
  2782  006D5C  0E00               	movlw	0
  2783  006D5E  6ECF               	movwf	4047,c	;volatile
  2784  006D60  0E00               	movlw	0
  2785  006D62  6ECE               	movwf	4046,c	;volatile
  2786                           
  2787                           ;./functions.c: 970:     T1CONbits.TMR1ON = 1;
  2788  006D64  80CD               	bsf	4045,0,c	;volatile
  2789  006D66  0012               	return		;funcret
  2790  006D68                     __end_of_timer1setup:
  2791                           	opt callstack 0
  2792                           
  2793 ;; *************** function _right *****************
  2794 ;; Defined at:
  2795 ;;		line 553 in file "./functions.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2809 ;;      Params:         0       0       0       0       0       0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0
  2812 ;;      Totals:         0       0       0       0       0       0       0
  2813 ;;Total ram usage:        0 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_determineDirection
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text20
  2823  006DCE                     __ptext20:
  2824                           	opt callstack 0
  2825  006DCE                     _right:
  2826                           	opt callstack 27
  2827                           
  2828                           ;./functions.c: 554:     PORTAbits.RA5 = 0;
  2829                           
  2830                           ;incstack = 0
  2831  006DCE  9A80               	bcf	3968,5,c	;volatile
  2832                           
  2833                           ;./functions.c: 555:     PORTAbits.RA6 = 1;
  2834  006DD0  8C80               	bsf	3968,6,c	;volatile
  2835                           
  2836                           ;./functions.c: 556:     PORTAbits.RA7 = 0;
  2837  006DD2  9E80               	bcf	3968,7,c	;volatile
  2838                           
  2839                           ;./functions.c: 558:     PORTCbits.RC0 = 0;
  2840  006DD4  9082               	bcf	3970,0,c	;volatile
  2841                           
  2842                           ;./functions.c: 559:     PORTCbits.RC1 = 1;
  2843  006DD6  8282               	bsf	3970,1,c	;volatile
  2844                           
  2845                           ;./functions.c: 561:     PORTEbits.RE0 = 0;
  2846  006DD8  9084               	bcf	3972,0,c	;volatile
  2847                           
  2848                           ;./functions.c: 562:     PORTEbits.RE1 = 1;
  2849  006DDA  8284               	bsf	3972,1,c	;volatile
  2850                           
  2851                           ;./functions.c: 564:     CCPR1L = 100;
  2852  006DDC  0E64               	movlw	100
  2853  006DDE  6EBE               	movwf	4030,c	;volatile
  2854                           
  2855                           ;./functions.c: 565:     CCPR5L = 50;
  2856  006DE0  0E32               	movlw	50
  2857  006DE2  010F               	movlb	15	; () banked
  2858  006DE4  6F55               	movwf	85,b	;volatile
  2859                           
  2860                           ; BSR set to: 15
  2861  006DE6  0012               	return		;funcret
  2862  006DE8                     __end_of_right:
  2863                           	opt callstack 0
  2864                           
  2865 ;; *************** function _left *****************
  2866 ;; Defined at:
  2867 ;;		line 521 in file "./functions.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2881 ;;      Params:         0       0       0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_determineDirection
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text21
  2895  006DB4                     __ptext21:
  2896                           	opt callstack 0
  2897  006DB4                     _left:
  2898                           	opt callstack 27
  2899                           
  2900                           ;./functions.c: 522:     PORTAbits.RA5 = 0;
  2901                           
  2902                           ; BSR set to: 15
  2903                           ;incstack = 0
  2904  006DB4  9A80               	bcf	3968,5,c	;volatile
  2905                           
  2906                           ;./functions.c: 523:     PORTAbits.RA6 = 0;
  2907  006DB6  9C80               	bcf	3968,6,c	;volatile
  2908                           
  2909                           ;./functions.c: 524:     PORTAbits.RA7 = 1;
  2910  006DB8  8E80               	bsf	3968,7,c	;volatile
  2911                           
  2912                           ;./functions.c: 526:     PORTCbits.RC0 = 0;
  2913  006DBA  9082               	bcf	3970,0,c	;volatile
  2914                           
  2915                           ;./functions.c: 527:     PORTCbits.RC1 = 1;
  2916  006DBC  8282               	bsf	3970,1,c	;volatile
  2917                           
  2918                           ;./functions.c: 529:     PORTEbits.RE0 = 0;
  2919  006DBE  9084               	bcf	3972,0,c	;volatile
  2920                           
  2921                           ;./functions.c: 530:     PORTEbits.RE1 = 1;
  2922  006DC0  8284               	bsf	3972,1,c	;volatile
  2923                           
  2924                           ;./functions.c: 532:     CCPR1L = 50;
  2925  006DC2  0E32               	movlw	50
  2926  006DC4  6EBE               	movwf	4030,c	;volatile
  2927                           
  2928                           ;./functions.c: 533:     CCPR5L = 100;
  2929  006DC6  0E64               	movlw	100
  2930  006DC8  010F               	movlb	15	; () banked
  2931  006DCA  6F55               	movwf	85,b	;volatile
  2932                           
  2933                           ; BSR set to: 15
  2934  006DCC  0012               	return		;funcret
  2935  006DCE                     __end_of_left:
  2936                           	opt callstack 0
  2937                           
  2938 ;; *************** function _hardRight *****************
  2939 ;; Defined at:
  2940 ;;		line 569 in file "./functions.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2954 ;;      Params:         0       0       0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_determineDirection
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text22
  2968  006D9A                     __ptext22:
  2969                           	opt callstack 0
  2970  006D9A                     _hardRight:
  2971                           	opt callstack 27
  2972                           
  2973                           ;./functions.c: 570:     PORTAbits.RA5 = 0;
  2974                           
  2975                           ; BSR set to: 15
  2976                           ;incstack = 0
  2977  006D9A  9A80               	bcf	3968,5,c	;volatile
  2978                           
  2979                           ;./functions.c: 571:     PORTAbits.RA6 = 1;
  2980  006D9C  8C80               	bsf	3968,6,c	;volatile
  2981                           
  2982                           ;./functions.c: 572:     PORTAbits.RA7 = 0;
  2983  006D9E  9E80               	bcf	3968,7,c	;volatile
  2984                           
  2985                           ;./functions.c: 574:     PORTCbits.RC0 = 0;
  2986  006DA0  9082               	bcf	3970,0,c	;volatile
  2987                           
  2988                           ;./functions.c: 575:     PORTCbits.RC1 = 1;
  2989  006DA2  8282               	bsf	3970,1,c	;volatile
  2990                           
  2991                           ;./functions.c: 577:     PORTEbits.RE0 = 0;
  2992  006DA4  9084               	bcf	3972,0,c	;volatile
  2993                           
  2994                           ;./functions.c: 578:     PORTEbits.RE1 = 1;
  2995  006DA6  8284               	bsf	3972,1,c	;volatile
  2996                           
  2997                           ;./functions.c: 580:     CCPR1L = 100;
  2998  006DA8  0E64               	movlw	100
  2999  006DAA  6EBE               	movwf	4030,c	;volatile
  3000                           
  3001                           ;./functions.c: 581:     CCPR5L = 0;
  3002  006DAC  0E00               	movlw	0
  3003  006DAE  010F               	movlb	15	; () banked
  3004  006DB0  6F55               	movwf	85,b	;volatile
  3005                           
  3006                           ; BSR set to: 15
  3007  006DB2  0012               	return		;funcret
  3008  006DB4                     __end_of_hardRight:
  3009                           	opt callstack 0
  3010                           
  3011 ;; *************** function _hardLeft *****************
  3012 ;; Defined at:
  3013 ;;		line 537 in file "./functions.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3027 ;;      Params:         0       0       0       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0
  3030 ;;      Totals:         0       0       0       0       0       0       0
  3031 ;;Total ram usage:        0 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_determineDirection
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text23
  3041  006D80                     __ptext23:
  3042                           	opt callstack 0
  3043  006D80                     _hardLeft:
  3044                           	opt callstack 27
  3045                           
  3046                           ;./functions.c: 538:     PORTAbits.RA5 = 0;
  3047                           
  3048                           ; BSR set to: 15
  3049                           ;incstack = 0
  3050  006D80  9A80               	bcf	3968,5,c	;volatile
  3051                           
  3052                           ;./functions.c: 539:     PORTAbits.RA6 = 0;
  3053  006D82  9C80               	bcf	3968,6,c	;volatile
  3054                           
  3055                           ;./functions.c: 540:     PORTAbits.RA7 = 1;
  3056  006D84  8E80               	bsf	3968,7,c	;volatile
  3057                           
  3058                           ;./functions.c: 542:     PORTCbits.RC0 = 0;
  3059  006D86  9082               	bcf	3970,0,c	;volatile
  3060                           
  3061                           ;./functions.c: 543:     PORTCbits.RC1 = 1;
  3062  006D88  8282               	bsf	3970,1,c	;volatile
  3063                           
  3064                           ;./functions.c: 545:     PORTEbits.RE0 = 0;
  3065  006D8A  9084               	bcf	3972,0,c	;volatile
  3066                           
  3067                           ;./functions.c: 546:     PORTEbits.RE1 = 1;
  3068  006D8C  8284               	bsf	3972,1,c	;volatile
  3069                           
  3070                           ;./functions.c: 548:     CCPR1L = 0;
  3071  006D8E  0E00               	movlw	0
  3072  006D90  6EBE               	movwf	4030,c	;volatile
  3073                           
  3074                           ;./functions.c: 549:     CCPR5L = 100;
  3075  006D92  0E64               	movlw	100
  3076  006D94  010F               	movlb	15	; () banked
  3077  006D96  6F55               	movwf	85,b	;volatile
  3078                           
  3079                           ; BSR set to: 15
  3080  006D98  0012               	return		;funcret
  3081  006D9A                     __end_of_hardLeft:
  3082                           	opt callstack 0
  3083                           
  3084 ;; *************** function _classifyColors *****************
  3085 ;; Defined at:
  3086 ;;		line 703 in file "./functions.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  a               1   14[COMRAM] unsigned char 
  3091 ;;  sensorRanges   10    4[COMRAM] PTR unsigned char [5]
  3092 ;;		 -> RRranges(5), Rranges(5), Mranges(5), Lranges(5), 
  3093 ;;		 -> LLranges(5), 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3103 ;;      Params:         0       0       0       0       0       0       0
  3104 ;;      Locals:        11       0       0       0       0       0       0
  3105 ;;      Temps:          4       0       0       0       0       0       0
  3106 ;;      Totals:        15       0       0       0       0       0       0
  3107 ;;Total ram usage:       15 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_navigate
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text24
  3117  0075FA                     __ptext24:
  3118                           	opt callstack 0
  3119  0075FA                     _classifyColors:
  3120                           	opt callstack 28
  3121                           
  3122                           ;./functions.c: 704:     unsigned char* sensorRanges[] = {LLranges, Lranges, Mranges, Rr
      +                          anges, RRranges};
  3123                           
  3124                           ; BSR set to: 15
  3125                           ;incstack = 0
  3126  0075FA  EE20  F0A8         	lfsr	2,classifyColors@F6061
  3127  0075FE  EE10  F005         	lfsr	1,classifyColors@sensorRanges
  3128  007602  0E09               	movlw	9
  3129  007604                     u1861:
  3130  007604  CFDB FFE3          	movff	plusw2,plusw1
  3131  007608  06E8               	decf	wreg,f,c
  3132  00760A  E2FC               	bc	u1861
  3133                           
  3134                           ;./functions.c: 706:     for (unsigned char a = 0; a < 5; a++){
  3135  00760C  0E00               	movlw	0
  3136  00760E  6E0F               	movwf	classifyColors@a,c
  3137  007610                     l2926:
  3138                           
  3139                           ;./functions.c: 707:         if (sensorVals[a] < sensorRanges[a][0]){
  3140  007610  500F               	movf	classifyColors@a,w,c
  3141  007612  0D02               	mullw	2
  3142  007614  0E05               	movlw	low classifyColors@sensorRanges
  3143  007616  24F3               	addwf	prodl,w,c
  3144  007618  6ED9               	movwf	fsr2l,c
  3145  00761A  0E00               	movlw	high classifyColors@sensorRanges
  3146  00761C  20F4               	addwfc	prodh,w,c
  3147  00761E  6EDA               	movwf	fsr2h,c
  3148  007620  CFDE F001          	movff	postinc2,??_classifyColors
  3149  007624  CFDD F002          	movff	postdec2,??_classifyColors+1
  3150  007628  C001  FFD9         	movff	??_classifyColors,fsr2l
  3151  00762C  C002  FFDA         	movff	??_classifyColors+1,fsr2h
  3152  007630  0ED2               	movlw	low _sensorVals
  3153  007632  240F               	addwf	classifyColors@a,w,c
  3154  007634  6EE1               	movwf	fsr1l,c
  3155  007636  6AE2               	clrf	fsr1h,c
  3156  007638  0E00               	movlw	high _sensorVals
  3157  00763A  22E2               	addwfc	fsr1h,f,c
  3158  00763C  50DE               	movf	postinc2,w,c
  3159  00763E  5CE6               	subwf	postinc1,w,c
  3160  007640  B0D8               	btfsc	status,0,c
  3161  007642  D008               	goto	l2930
  3162                           
  3163                           ;./functions.c: 708:             colorsDetected[a] = 'W';
  3164  007644  0EFA               	movlw	low _colorsDetected
  3165  007646  240F               	addwf	classifyColors@a,w,c
  3166  007648  6ED9               	movwf	fsr2l,c
  3167  00764A  6ADA               	clrf	fsr2h,c
  3168  00764C  0E00               	movlw	high _colorsDetected
  3169  00764E  22DA               	addwfc	fsr2h,f,c
  3170  007650  0E57               	movlw	87
  3171  007652  D067               	goto	L5
  3172  007654                     l2930:
  3173  007654  500F               	movf	classifyColors@a,w,c
  3174  007656  0D02               	mullw	2
  3175  007658  0E05               	movlw	low classifyColors@sensorRanges
  3176  00765A  24F3               	addwf	prodl,w,c
  3177  00765C  6ED9               	movwf	fsr2l,c
  3178  00765E  0E00               	movlw	high classifyColors@sensorRanges
  3179  007660  20F4               	addwfc	prodh,w,c
  3180  007662  6EDA               	movwf	fsr2h,c
  3181  007664  EE10 F001          	lfsr	1,1
  3182  007668  50DE               	movf	postinc2,w,c
  3183  00766A  26E1               	addwf	fsr1l,f,c
  3184  00766C  50DD               	movf	postdec2,w,c
  3185  00766E  22E2               	addwfc	fsr1h,f,c
  3186  007670  0ED2               	movlw	low _sensorVals
  3187  007672  240F               	addwf	classifyColors@a,w,c
  3188  007674  6ED9               	movwf	fsr2l,c
  3189  007676  6ADA               	clrf	fsr2h,c
  3190  007678  0E00               	movlw	high _sensorVals
  3191  00767A  22DA               	addwfc	fsr2h,f,c
  3192  00767C  50E6               	movf	postinc1,w,c
  3193  00767E  5CDE               	subwf	postinc2,w,c
  3194  007680  B0D8               	btfsc	status,0,c
  3195  007682  D008               	goto	l2934
  3196                           
  3197                           ;./functions.c: 711:             colorsDetected[a] = 'G';
  3198  007684  0EFA               	movlw	low _colorsDetected
  3199  007686  240F               	addwf	classifyColors@a,w,c
  3200  007688  6ED9               	movwf	fsr2l,c
  3201  00768A  6ADA               	clrf	fsr2h,c
  3202  00768C  0E00               	movlw	high _colorsDetected
  3203  00768E  22DA               	addwfc	fsr2h,f,c
  3204  007690  0E47               	movlw	71
  3205  007692  D047               	goto	L5
  3206  007694                     l2934:
  3207  007694  500F               	movf	classifyColors@a,w,c
  3208  007696  0D02               	mullw	2
  3209  007698  0E05               	movlw	low classifyColors@sensorRanges
  3210  00769A  24F3               	addwf	prodl,w,c
  3211  00769C  6ED9               	movwf	fsr2l,c
  3212  00769E  0E00               	movlw	high classifyColors@sensorRanges
  3213  0076A0  20F4               	addwfc	prodh,w,c
  3214  0076A2  6EDA               	movwf	fsr2h,c
  3215  0076A4  EE10 F002          	lfsr	1,2
  3216  0076A8  50DE               	movf	postinc2,w,c
  3217  0076AA  26E1               	addwf	fsr1l,f,c
  3218  0076AC  50DD               	movf	postdec2,w,c
  3219  0076AE  22E2               	addwfc	fsr1h,f,c
  3220  0076B0  0ED2               	movlw	low _sensorVals
  3221  0076B2  240F               	addwf	classifyColors@a,w,c
  3222  0076B4  6ED9               	movwf	fsr2l,c
  3223  0076B6  6ADA               	clrf	fsr2h,c
  3224  0076B8  0E00               	movlw	high _sensorVals
  3225  0076BA  22DA               	addwfc	fsr2h,f,c
  3226  0076BC  50E6               	movf	postinc1,w,c
  3227  0076BE  5CDE               	subwf	postinc2,w,c
  3228  0076C0  B0D8               	btfsc	status,0,c
  3229  0076C2  D008               	goto	l2938
  3230                           
  3231                           ;./functions.c: 714:             colorsDetected[a] = 'R';
  3232  0076C4  0EFA               	movlw	low _colorsDetected
  3233  0076C6  240F               	addwf	classifyColors@a,w,c
  3234  0076C8  6ED9               	movwf	fsr2l,c
  3235  0076CA  6ADA               	clrf	fsr2h,c
  3236  0076CC  0E00               	movlw	high _colorsDetected
  3237  0076CE  22DA               	addwfc	fsr2h,f,c
  3238  0076D0  0E52               	movlw	82
  3239  0076D2  D027               	goto	L5
  3240  0076D4                     l2938:
  3241  0076D4  500F               	movf	classifyColors@a,w,c
  3242  0076D6  0D02               	mullw	2
  3243  0076D8  0E05               	movlw	low classifyColors@sensorRanges
  3244  0076DA  24F3               	addwf	prodl,w,c
  3245  0076DC  6ED9               	movwf	fsr2l,c
  3246  0076DE  0E00               	movlw	high classifyColors@sensorRanges
  3247  0076E0  20F4               	addwfc	prodh,w,c
  3248  0076E2  6EDA               	movwf	fsr2h,c
  3249  0076E4  EE10 F003          	lfsr	1,3
  3250  0076E8  50DE               	movf	postinc2,w,c
  3251  0076EA  26E1               	addwf	fsr1l,f,c
  3252  0076EC  50DD               	movf	postdec2,w,c
  3253  0076EE  22E2               	addwfc	fsr1h,f,c
  3254  0076F0  0ED2               	movlw	low _sensorVals
  3255  0076F2  240F               	addwf	classifyColors@a,w,c
  3256  0076F4  6ED9               	movwf	fsr2l,c
  3257  0076F6  6ADA               	clrf	fsr2h,c
  3258  0076F8  0E00               	movlw	high _sensorVals
  3259  0076FA  22DA               	addwfc	fsr2h,f,c
  3260  0076FC  50E6               	movf	postinc1,w,c
  3261  0076FE  5CDE               	subwf	postinc2,w,c
  3262  007700  B0D8               	btfsc	status,0,c
  3263  007702  D008               	goto	l2942
  3264                           
  3265                           ;./functions.c: 717:             colorsDetected[a] = 'B';
  3266  007704  0EFA               	movlw	low _colorsDetected
  3267  007706  240F               	addwf	classifyColors@a,w,c
  3268  007708  6ED9               	movwf	fsr2l,c
  3269  00770A  6ADA               	clrf	fsr2h,c
  3270  00770C  0E00               	movlw	high _colorsDetected
  3271  00770E  22DA               	addwfc	fsr2h,f,c
  3272  007710  0E42               	movlw	66
  3273  007712  D007               	goto	L5
  3274  007714                     l2942:
  3275                           
  3276                           ;./functions.c: 720:             colorsDetected[a] = 'n';
  3277  007714  0EFA               	movlw	low _colorsDetected
  3278  007716  240F               	addwf	classifyColors@a,w,c
  3279  007718  6ED9               	movwf	fsr2l,c
  3280  00771A  6ADA               	clrf	fsr2h,c
  3281  00771C  0E00               	movlw	high _colorsDetected
  3282  00771E  22DA               	addwfc	fsr2h,f,c
  3283  007720  0E6E               	movlw	110
  3284  007722                     L5:
  3285  007722  6EDF               	movwf	indf2,c
  3286                           
  3287                           ;./functions.c: 722:     }
  3288  007724  2A0F               	incf	classifyColors@a,f,c
  3289  007726  0E04               	movlw	4
  3290  007728  640F               	cpfsgt	classifyColors@a,c
  3291  00772A  D772               	goto	l2926
  3292  00772C  0012               	return	
  3293  00772E                     __end_of_classifyColors:
  3294                           	opt callstack 0
  3295                           
  3296 ;; *************** function _capTouch *****************
  3297 ;; Defined at:
  3298 ;;		line 464 in file "./functions.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  a               1   80[COMRAM] unsigned char 
  3303 ;;  message        26   50[COMRAM] unsigned char [26]
  3304 ;;  change          2    0        int 
  3305 ;;  touch2          1   79[COMRAM] unsigned char 
  3306 ;;  touch1          1   78[COMRAM] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3316 ;;      Params:         0       0       0       0       0       0       0
  3317 ;;      Locals:        31       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0
  3319 ;;      Totals:        31       0       0       0       0       0       0
  3320 ;;Total ram usage:       31 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    2
  3323 ;; This function calls:
  3324 ;;		_abs
  3325 ;;		_aveSensor
  3326 ;;		_msDelay
  3327 ;;		_trans
  3328 ;; This function is called by:
  3329 ;;		_RCE
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text25
  3334  0071AC                     __ptext25:
  3335                           	opt callstack 0
  3336  0071AC                     _capTouch:
  3337                           	opt callstack 27
  3338                           
  3339                           ;./functions.c: 466:     unsigned char message[] = "\nSanic waits for a touch\n";
  3340                           
  3341                           ;incstack = 0
  3342  0071AC  EE20  F080         	lfsr	2,capTouch@F6042
  3343  0071B0  EE10  F033         	lfsr	1,capTouch@message
  3344  0071B4  0E19               	movlw	25
  3345  0071B6                     u2591:
  3346  0071B6  CFDB FFE3          	movff	plusw2,plusw1
  3347  0071BA  06E8               	decf	wreg,f,c
  3348  0071BC  E2FC               	bc	u2591
  3349                           
  3350                           ;./functions.c: 468:     for (unsigned char a = 0; a < 25; a++)
  3351  0071BE  0E00               	movlw	0
  3352  0071C0  6E51               	movwf	capTouch@a,c
  3353  0071C2                     l3546:
  3354                           
  3355                           ;./functions.c: 469:     {;./functions.c: 470:         trans(message[a]);
  3356  0071C2  0E33               	movlw	low capTouch@message
  3357  0071C4  2451               	addwf	capTouch@a,w,c
  3358  0071C6  6ED9               	movwf	fsr2l,c
  3359  0071C8  6ADA               	clrf	fsr2h,c
  3360  0071CA  0E00               	movlw	high capTouch@message
  3361  0071CC  22DA               	addwfc	fsr2h,f,c
  3362  0071CE  50DF               	movf	indf2,w,c
  3363  0071D0  EC89  F036         	call	_trans
  3364                           
  3365                           ;./functions.c: 471:     }
  3366  0071D4  2A51               	incf	capTouch@a,f,c
  3367  0071D6  0E18               	movlw	24
  3368  0071D8  6451               	cpfsgt	capTouch@a,c
  3369  0071DA  D7F3               	goto	l3546
  3370                           
  3371                           ;./functions.c: 474:     unsigned char touch1 = 0;
  3372  0071DC  0E00               	movlw	0
  3373  0071DE  6E4F               	movwf	capTouch@touch1,c
  3374                           
  3375                           ;./functions.c: 475:     unsigned char touch2 = 0;
  3376  0071E0  0E00               	movlw	0
  3377  0071E2  6E50               	movwf	capTouch@touch2,c
  3378  0071E4                     l3554:
  3379                           
  3380                           ;./functions.c: 478:         touch1 = aveSensor(15);
  3381  0071E4  0E0F               	movlw	15
  3382  0071E6  ECD6  F037         	call	_aveSensor
  3383  0071EA  6E4F               	movwf	capTouch@touch1,c
  3384                           
  3385                           ;./functions.c: 479:         msDelay(5);
  3386  0071EC  0E05               	movlw	5
  3387  0071EE  ECA3  F038         	call	_msDelay
  3388                           
  3389                           ;./functions.c: 480:         touch2 = aveSensor(15);
  3390  0071F2  0E0F               	movlw	15
  3391  0071F4  ECD6  F037         	call	_aveSensor
  3392  0071F8  6E50               	movwf	capTouch@touch2,c
  3393                           
  3394                           ;./functions.c: 484:         if (abs(touch2 - touch1) > 50){
  3395  0071FA  504F               	movf	capTouch@touch1,w,c
  3396  0071FC  5C50               	subwf	capTouch@touch2,w,c
  3397  0071FE  6E01               	movwf	abs@a,c
  3398  007200  6A02               	clrf	abs@a+1,c
  3399  007202  A0D8               	btfss	status,0,c
  3400  007204  0602               	decf	abs@a+1,f,c
  3401  007206  EC4C  F037         	call	_abs	;wreg free
  3402  00720A  BE02               	btfsc	?_abs+1,7,c
  3403  00720C  D7EB               	goto	l3554
  3404  00720E  5002               	movf	?_abs+1,w,c
  3405  007210  E105               	bnz	l322
  3406  007212  0E33               	movlw	51
  3407  007214  5C01               	subwf	?_abs,w,c
  3408  007216  B0D8               	btfsc	status,0,c
  3409  007218  0012               	return	
  3410  00721A  D7E4               	goto	l3554
  3411  00721C                     l322:
  3412  00721C  0012               	return		;funcret
  3413  00721E                     __end_of_capTouch:
  3414                           	opt callstack 0
  3415                           
  3416 ;; *************** function _abs *****************
  3417 ;; Defined at:
  3418 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  a               2    0[COMRAM] int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2    0[COMRAM] int 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         2       0       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0
  3434 ;;      Temps:          2       0       0       0       0       0       0
  3435 ;;      Totals:         4       0       0       0       0       0       0
  3436 ;;Total ram usage:        4 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_capTouch
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text26
  3446  006E98                     __ptext26:
  3447                           	opt callstack 0
  3448  006E98                     _abs:
  3449                           	opt callstack 28
  3450                           
  3451                           ;incstack = 0
  3452  006E98  BE02               	btfsc	abs@a+1,7,c
  3453  006E9A  D005               	goto	u2070
  3454  006E9C  5002               	movf	abs@a+1,w,c
  3455  006E9E  E110               	bnz	l1211
  3456  006EA0  0401               	decf	abs@a,w,c
  3457  006EA2  B0D8               	btfsc	status,0,c
  3458  006EA4  D00D               	goto	l1211
  3459  006EA6                     u2070:
  3460  006EA6  C001  F003         	movff	abs@a,??_abs
  3461  006EAA  C002  F004         	movff	abs@a+1,??_abs+1
  3462  006EAE  1E03               	comf	??_abs,f,c
  3463  006EB0  1E04               	comf	??_abs+1,f,c
  3464  006EB2  4A03               	infsnz	??_abs,f,c
  3465  006EB4  2A04               	incf	??_abs+1,f,c
  3466  006EB6  C003  F001         	movff	??_abs,?_abs
  3467  006EBA  C004  F002         	movff	??_abs+1,?_abs+1
  3468  006EBE  0012               	return	
  3469  006EC0                     l1211:
  3470  006EC0  C001  F001         	movff	abs@a,?_abs
  3471  006EC4  C002  F002         	movff	abs@a+1,?_abs+1
  3472  006EC8  0012               	return		;funcret
  3473  006ECA                     __end_of_abs:
  3474                           	opt callstack 0
  3475                           
  3476 ;; *************** function _calibrate *****************
  3477 ;; Defined at:
  3478 ;;		line 137 in file "./functions.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  samples         1   60[COMRAM] unsigned char 
  3483 ;;  samples         1   59[COMRAM] unsigned char 
  3484 ;;  samples         1   58[COMRAM] unsigned char 
  3485 ;;  samples         1   57[COMRAM] unsigned char 
  3486 ;;  samples         1   56[COMRAM] unsigned char 
  3487 ;;  sensors         5   51[COMRAM] unsigned char [5]
  3488 ;;  temp            1   61[COMRAM] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3498 ;;      Params:         0       0       0       0       0       0       0
  3499 ;;      Locals:        11       0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0
  3501 ;;      Totals:        11       0       0       0       0       0       0
  3502 ;;Total ram usage:       11 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    3
  3505 ;; This function calls:
  3506 ;;		_aveSensor
  3507 ;;		_oneSecDelay
  3508 ;; This function is called by:
  3509 ;;		_RCE
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text27
  3514  0079F2                     __ptext27:
  3515                           	opt callstack 0
  3516  0079F2                     _calibrate:
  3517                           	opt callstack 26
  3518                           
  3519                           ;./functions.c: 139:     PORTA = 0;
  3520                           
  3521                           ;incstack = 0
  3522  0079F2  0E00               	movlw	0
  3523  0079F4  6E80               	movwf	3968,c	;volatile
  3524                           
  3525                           ;./functions.c: 140:     unsigned char sensors[5] = {12, 8, 9, 10, 13};
  3526  0079F6  EE20  F0CD         	lfsr	2,calibrate@F6015
  3527  0079FA  EE10  F034         	lfsr	1,calibrate@sensors
  3528  0079FE  0E04               	movlw	4
  3529  007A00                     u2081:
  3530  007A00  CFDB FFE3          	movff	plusw2,plusw1
  3531  007A04  06E8               	decf	wreg,f,c
  3532  007A06  E2FC               	bc	u2081
  3533                           
  3534                           ;./functions.c: 143:     PORTD = 0b11000001;
  3535  007A08  0EC1               	movlw	193
  3536  007A0A  6E83               	movwf	3971,c	;volatile
  3537                           
  3538                           ;./functions.c: 144:     oneSecDelay();
  3539  007A0C  EC9E  F036         	call	_oneSecDelay	;wreg free
  3540                           
  3541                           ;./functions.c: 145:     oneSecDelay();
  3542  007A10  EC9E  F036         	call	_oneSecDelay	;wreg free
  3543                           
  3544                           ;./functions.c: 146:     oneSecDelay();
  3545  007A14  EC9E  F036         	call	_oneSecDelay	;wreg free
  3546                           
  3547                           ;./functions.c: 147:     oneSecDelay();
  3548  007A18  EC9E  F036         	call	_oneSecDelay	;wreg free
  3549                           
  3550                           ;./functions.c: 148:     oneSecDelay();
  3551  007A1C  EC9E  F036         	call	_oneSecDelay	;wreg free
  3552                           
  3553                           ;./functions.c: 149:     oneSecDelay();
  3554  007A20  EC9E  F036         	call	_oneSecDelay	;wreg free
  3555                           
  3556                           ;./functions.c: 150:     for (unsigned char samples = 0; samples < 250; samples++)
  3557  007A24  0E00               	movlw	0
  3558  007A26  6E39               	movwf	calibrate@samples,c
  3559  007A28                     l3096:
  3560                           
  3561                           ;./functions.c: 151:     {;./functions.c: 152:         temp = aveSensor(12);
  3562  007A28  0E0C               	movlw	12
  3563  007A2A  ECD6  F037         	call	_aveSensor
  3564  007A2E  6E3E               	movwf	calibrate@temp,c
  3565                           
  3566                           ;./functions.c: 153:         if (temp >= LLranges[0])
  3567  007A30  505B               	movf	_LLranges,w,c
  3568  007A32  5C3E               	subwf	calibrate@temp,w,c
  3569  007A34  B0D8               	btfsc	status,0,c
  3570                           
  3571                           ;./functions.c: 154:         {;./functions.c: 155:             LLranges[0] = temp;
  3572  007A36  C03E  F05B         	movff	calibrate@temp,_LLranges
  3573                           
  3574                           ;./functions.c: 157:         temp = aveSensor(10);
  3575  007A3A  0E0A               	movlw	10
  3576  007A3C  ECD6  F037         	call	_aveSensor
  3577  007A40  6E3E               	movwf	calibrate@temp,c
  3578                           
  3579                           ;./functions.c: 158:         if (temp >= Lranges[0])
  3580  007A42  5056               	movf	_Lranges,w,c
  3581  007A44  5C3E               	subwf	calibrate@temp,w,c
  3582  007A46  B0D8               	btfsc	status,0,c
  3583                           
  3584                           ;./functions.c: 159:         {;./functions.c: 160:             Lranges[0] = temp;
  3585  007A48  C03E  F056         	movff	calibrate@temp,_Lranges
  3586                           
  3587                           ;./functions.c: 162:         temp = aveSensor(8);
  3588  007A4C  0E08               	movlw	8
  3589  007A4E  ECD6  F037         	call	_aveSensor
  3590  007A52  6E3E               	movwf	calibrate@temp,c
  3591                           
  3592                           ;./functions.c: 163:         if (temp >= LLranges[0])
  3593  007A54  505B               	movf	_LLranges,w,c
  3594  007A56  5C3E               	subwf	calibrate@temp,w,c
  3595  007A58  B0D8               	btfsc	status,0,c
  3596                           
  3597                           ;./functions.c: 164:         {;./functions.c: 165:             Mranges[0] = temp;
  3598  007A5A  C03E  F0E1         	movff	calibrate@temp,_Mranges
  3599                           
  3600                           ;./functions.c: 167:         temp = aveSensor(9);
  3601  007A5E  0E09               	movlw	9
  3602  007A60  ECD6  F037         	call	_aveSensor
  3603  007A64  6E3E               	movwf	calibrate@temp,c
  3604                           
  3605                           ;./functions.c: 168:         if (temp >= LLranges[0])
  3606  007A66  505B               	movf	_LLranges,w,c
  3607  007A68  5C3E               	subwf	calibrate@temp,w,c
  3608  007A6A  B0D8               	btfsc	status,0,c
  3609                           
  3610                           ;./functions.c: 169:         {;./functions.c: 170:             Rranges[0] = temp;
  3611  007A6C  C03E  F0DC         	movff	calibrate@temp,_Rranges
  3612                           
  3613                           ;./functions.c: 172:         temp = aveSensor(13);
  3614  007A70  0E0D               	movlw	13
  3615  007A72  ECD6  F037         	call	_aveSensor
  3616  007A76  6E3E               	movwf	calibrate@temp,c
  3617                           
  3618                           ;./functions.c: 173:         if (temp >= LLranges[0])
  3619  007A78  505B               	movf	_LLranges,w,c
  3620  007A7A  5C3E               	subwf	calibrate@temp,w,c
  3621  007A7C  B0D8               	btfsc	status,0,c
  3622                           
  3623                           ;./functions.c: 174:         {;./functions.c: 175:             RRranges[0] = temp;
  3624  007A7E  C03E  F0D7         	movff	calibrate@temp,_RRranges
  3625                           
  3626                           ;./functions.c: 177:     }
  3627  007A82  2A39               	incf	calibrate@samples,f,c
  3628  007A84  0EF9               	movlw	249
  3629  007A86  6439               	cpfsgt	calibrate@samples,c
  3630  007A88  D7CF               	goto	l3096
  3631                           
  3632                           ;./functions.c: 178:     PORTAbits.RA0 = 1;
  3633  007A8A  8080               	bsf	3968,0,c	;volatile
  3634                           
  3635                           ;./functions.c: 179:     PORTD = 0b10000010;
  3636  007A8C  0E82               	movlw	130
  3637  007A8E  6E83               	movwf	3971,c	;volatile
  3638                           
  3639                           ;./functions.c: 181:     oneSecDelay();
  3640  007A90  EC9E  F036         	call	_oneSecDelay	;wreg free
  3641                           
  3642                           ;./functions.c: 182:     oneSecDelay();
  3643  007A94  EC9E  F036         	call	_oneSecDelay	;wreg free
  3644                           
  3645                           ;./functions.c: 183:     oneSecDelay();
  3646  007A98  EC9E  F036         	call	_oneSecDelay	;wreg free
  3647                           
  3648                           ;./functions.c: 184:     oneSecDelay();
  3649  007A9C  EC9E  F036         	call	_oneSecDelay	;wreg free
  3650                           
  3651                           ;./functions.c: 185:     oneSecDelay();
  3652  007AA0  EC9E  F036         	call	_oneSecDelay	;wreg free
  3653                           
  3654                           ;./functions.c: 186:     oneSecDelay();
  3655  007AA4  EC9E  F036         	call	_oneSecDelay	;wreg free
  3656                           
  3657                           ;./functions.c: 187:     for (unsigned char samples = 0; samples < 250; samples++)
  3658  007AA8  0E00               	movlw	0
  3659  007AAA  6E3A               	movwf	calibrate@samples_1169,c
  3660  007AAC                     l3148:
  3661                           
  3662                           ;./functions.c: 188:     {;./functions.c: 189:         temp = aveSensor(12);
  3663  007AAC  0E0C               	movlw	12
  3664  007AAE  ECD6  F037         	call	_aveSensor
  3665  007AB2  6E3E               	movwf	calibrate@temp,c
  3666                           
  3667                           ;./functions.c: 190:         if (temp >= LLranges[1])
  3668  007AB4  505C               	movf	_LLranges+1,w,c
  3669  007AB6  5C3E               	subwf	calibrate@temp,w,c
  3670  007AB8  B0D8               	btfsc	status,0,c
  3671                           
  3672                           ;./functions.c: 191:         {;./functions.c: 192:             LLranges[1] = temp;
  3673  007ABA  C03E  F05C         	movff	calibrate@temp,_LLranges+1
  3674                           
  3675                           ;./functions.c: 194:         temp = aveSensor(10);
  3676  007ABE  0E0A               	movlw	10
  3677  007AC0  ECD6  F037         	call	_aveSensor
  3678  007AC4  6E3E               	movwf	calibrate@temp,c
  3679                           
  3680                           ;./functions.c: 195:         if (temp >= Lranges[1])
  3681  007AC6  5057               	movf	_Lranges+1,w,c
  3682  007AC8  5C3E               	subwf	calibrate@temp,w,c
  3683  007ACA  B0D8               	btfsc	status,0,c
  3684                           
  3685                           ;./functions.c: 196:         {;./functions.c: 197:             Lranges[1] = temp;
  3686  007ACC  C03E  F057         	movff	calibrate@temp,_Lranges+1
  3687                           
  3688                           ;./functions.c: 199:         temp = aveSensor(8);
  3689  007AD0  0E08               	movlw	8
  3690  007AD2  ECD6  F037         	call	_aveSensor
  3691  007AD6  6E3E               	movwf	calibrate@temp,c
  3692                           
  3693                           ;./functions.c: 200:         if (temp >= LLranges[1])
  3694  007AD8  505C               	movf	_LLranges+1,w,c
  3695  007ADA  5C3E               	subwf	calibrate@temp,w,c
  3696  007ADC  B0D8               	btfsc	status,0,c
  3697                           
  3698                           ;./functions.c: 201:         {;./functions.c: 202:             Mranges[1] = temp;
  3699  007ADE  C03E  F0E2         	movff	calibrate@temp,_Mranges+1
  3700                           
  3701                           ;./functions.c: 204:         temp = aveSensor(9);
  3702  007AE2  0E09               	movlw	9
  3703  007AE4  ECD6  F037         	call	_aveSensor
  3704  007AE8  6E3E               	movwf	calibrate@temp,c
  3705                           
  3706                           ;./functions.c: 205:         if (temp >= LLranges[1])
  3707  007AEA  505C               	movf	_LLranges+1,w,c
  3708  007AEC  5C3E               	subwf	calibrate@temp,w,c
  3709  007AEE  B0D8               	btfsc	status,0,c
  3710                           
  3711                           ;./functions.c: 206:         {;./functions.c: 207:             Rranges[1] = temp;
  3712  007AF0  C03E  F0DD         	movff	calibrate@temp,_Rranges+1
  3713                           
  3714                           ;./functions.c: 209:         temp = aveSensor(13);
  3715  007AF4  0E0D               	movlw	13
  3716  007AF6  ECD6  F037         	call	_aveSensor
  3717  007AFA  6E3E               	movwf	calibrate@temp,c
  3718                           
  3719                           ;./functions.c: 210:         if (temp >= LLranges[1])
  3720  007AFC  505C               	movf	_LLranges+1,w,c
  3721  007AFE  5C3E               	subwf	calibrate@temp,w,c
  3722  007B00  B0D8               	btfsc	status,0,c
  3723                           
  3724                           ;./functions.c: 211:         {;./functions.c: 212:             RRranges[1] = temp;
  3725  007B02  C03E  F0D8         	movff	calibrate@temp,_RRranges+1
  3726                           
  3727                           ;./functions.c: 214:     }
  3728  007B06  2A3A               	incf	calibrate@samples_1169,f,c
  3729  007B08  0EF9               	movlw	249
  3730  007B0A  643A               	cpfsgt	calibrate@samples_1169,c
  3731  007B0C  D7CF               	goto	l3148
  3732                           
  3733                           ;./functions.c: 215:     PORTAbits.RA1 = 1;
  3734  007B0E  8280               	bsf	3968,1,c	;volatile
  3735                           
  3736                           ;./functions.c: 216:     PORTD = 0b10001000;
  3737  007B10  0E88               	movlw	136
  3738  007B12  6E83               	movwf	3971,c	;volatile
  3739                           
  3740                           ;./functions.c: 218:     oneSecDelay();
  3741  007B14  EC9E  F036         	call	_oneSecDelay	;wreg free
  3742                           
  3743                           ;./functions.c: 219:     oneSecDelay();
  3744  007B18  EC9E  F036         	call	_oneSecDelay	;wreg free
  3745                           
  3746                           ;./functions.c: 220:     oneSecDelay();
  3747  007B1C  EC9E  F036         	call	_oneSecDelay	;wreg free
  3748                           
  3749                           ;./functions.c: 221:     oneSecDelay();
  3750  007B20  EC9E  F036         	call	_oneSecDelay	;wreg free
  3751                           
  3752                           ;./functions.c: 222:     oneSecDelay();
  3753  007B24  EC9E  F036         	call	_oneSecDelay	;wreg free
  3754                           
  3755                           ;./functions.c: 223:     oneSecDelay();
  3756  007B28  EC9E  F036         	call	_oneSecDelay	;wreg free
  3757                           
  3758                           ;./functions.c: 224:     for (unsigned char samples = 0; samples < 250; samples++)
  3759  007B2C  0E00               	movlw	0
  3760  007B2E  6E3B               	movwf	calibrate@samples_1170,c
  3761  007B30                     l3200:
  3762                           
  3763                           ;./functions.c: 225:     {;./functions.c: 226:         temp = aveSensor(12);
  3764  007B30  0E0C               	movlw	12
  3765  007B32  ECD6  F037         	call	_aveSensor
  3766  007B36  6E3E               	movwf	calibrate@temp,c
  3767                           
  3768                           ;./functions.c: 227:         if (temp >= LLranges[2])
  3769  007B38  505D               	movf	_LLranges+2,w,c
  3770  007B3A  5C3E               	subwf	calibrate@temp,w,c
  3771  007B3C  B0D8               	btfsc	status,0,c
  3772                           
  3773                           ;./functions.c: 228:         {;./functions.c: 229:             LLranges[2] = temp;
  3774  007B3E  C03E  F05D         	movff	calibrate@temp,_LLranges+2
  3775                           
  3776                           ;./functions.c: 231:         temp = aveSensor(10);
  3777  007B42  0E0A               	movlw	10
  3778  007B44  ECD6  F037         	call	_aveSensor
  3779  007B48  6E3E               	movwf	calibrate@temp,c
  3780                           
  3781                           ;./functions.c: 232:         if (temp >= Lranges[2])
  3782  007B4A  5058               	movf	_Lranges+2,w,c
  3783  007B4C  5C3E               	subwf	calibrate@temp,w,c
  3784  007B4E  B0D8               	btfsc	status,0,c
  3785                           
  3786                           ;./functions.c: 233:         {;./functions.c: 234:             Lranges[2] = temp;
  3787  007B50  C03E  F058         	movff	calibrate@temp,_Lranges+2
  3788                           
  3789                           ;./functions.c: 236:         temp = aveSensor(8);
  3790  007B54  0E08               	movlw	8
  3791  007B56  ECD6  F037         	call	_aveSensor
  3792  007B5A  6E3E               	movwf	calibrate@temp,c
  3793                           
  3794                           ;./functions.c: 237:         if (temp >= LLranges[2])
  3795  007B5C  505D               	movf	_LLranges+2,w,c
  3796  007B5E  5C3E               	subwf	calibrate@temp,w,c
  3797  007B60  B0D8               	btfsc	status,0,c
  3798                           
  3799                           ;./functions.c: 238:         {;./functions.c: 239:             Mranges[2] = temp;
  3800  007B62  C03E  F0E3         	movff	calibrate@temp,_Mranges+2
  3801                           
  3802                           ;./functions.c: 241:         temp = aveSensor(9);
  3803  007B66  0E09               	movlw	9
  3804  007B68  ECD6  F037         	call	_aveSensor
  3805  007B6C  6E3E               	movwf	calibrate@temp,c
  3806                           
  3807                           ;./functions.c: 242:         if (temp >= LLranges[2])
  3808  007B6E  505D               	movf	_LLranges+2,w,c
  3809  007B70  5C3E               	subwf	calibrate@temp,w,c
  3810  007B72  B0D8               	btfsc	status,0,c
  3811                           
  3812                           ;./functions.c: 243:         {;./functions.c: 244:             Rranges[2] = temp;
  3813  007B74  C03E  F0DE         	movff	calibrate@temp,_Rranges+2
  3814                           
  3815                           ;./functions.c: 246:         temp = aveSensor(13);
  3816  007B78  0E0D               	movlw	13
  3817  007B7A  ECD6  F037         	call	_aveSensor
  3818  007B7E  6E3E               	movwf	calibrate@temp,c
  3819                           
  3820                           ;./functions.c: 247:         if (temp >= LLranges[2])
  3821  007B80  505D               	movf	_LLranges+2,w,c
  3822  007B82  5C3E               	subwf	calibrate@temp,w,c
  3823  007B84  B0D8               	btfsc	status,0,c
  3824                           
  3825                           ;./functions.c: 248:         {;./functions.c: 249:             RRranges[2] = temp;
  3826  007B86  C03E  F0D9         	movff	calibrate@temp,_RRranges+2
  3827                           
  3828                           ;./functions.c: 251:     }
  3829  007B8A  2A3B               	incf	calibrate@samples_1170,f,c
  3830  007B8C  0EF9               	movlw	249
  3831  007B8E  643B               	cpfsgt	calibrate@samples_1170,c
  3832  007B90  D7CF               	goto	l3200
  3833                           
  3834                           ;./functions.c: 252:     PORTAbits.RA2 = 1;
  3835  007B92  8480               	bsf	3968,2,c	;volatile
  3836                           
  3837                           ;./functions.c: 253:     PORTD = 0b10000000;
  3838  007B94  0E80               	movlw	128
  3839  007B96  6E83               	movwf	3971,c	;volatile
  3840                           
  3841                           ;./functions.c: 255:     oneSecDelay();
  3842  007B98  EC9E  F036         	call	_oneSecDelay	;wreg free
  3843                           
  3844                           ;./functions.c: 256:     oneSecDelay();
  3845  007B9C  EC9E  F036         	call	_oneSecDelay	;wreg free
  3846                           
  3847                           ;./functions.c: 257:     oneSecDelay();
  3848  007BA0  EC9E  F036         	call	_oneSecDelay	;wreg free
  3849                           
  3850                           ;./functions.c: 258:     oneSecDelay();
  3851  007BA4  EC9E  F036         	call	_oneSecDelay	;wreg free
  3852                           
  3853                           ;./functions.c: 259:     oneSecDelay();
  3854  007BA8  EC9E  F036         	call	_oneSecDelay	;wreg free
  3855                           
  3856                           ;./functions.c: 260:     oneSecDelay();
  3857  007BAC  EC9E  F036         	call	_oneSecDelay	;wreg free
  3858                           
  3859                           ;./functions.c: 261:     for (unsigned char samples = 0; samples < 250; samples++)
  3860  007BB0  0E00               	movlw	0
  3861  007BB2  6E3C               	movwf	calibrate@samples_1171,c
  3862  007BB4                     l3252:
  3863                           
  3864                           ;./functions.c: 262:     {;./functions.c: 263:         temp = aveSensor(12);
  3865  007BB4  0E0C               	movlw	12
  3866  007BB6  ECD6  F037         	call	_aveSensor
  3867  007BBA  6E3E               	movwf	calibrate@temp,c
  3868                           
  3869                           ;./functions.c: 264:         if (temp >= LLranges[3])
  3870  007BBC  505E               	movf	_LLranges+3,w,c
  3871  007BBE  5C3E               	subwf	calibrate@temp,w,c
  3872  007BC0  B0D8               	btfsc	status,0,c
  3873                           
  3874                           ;./functions.c: 265:         {;./functions.c: 266:             LLranges[3] = temp;
  3875  007BC2  C03E  F05E         	movff	calibrate@temp,_LLranges+3
  3876                           
  3877                           ;./functions.c: 268:         temp = aveSensor(10);
  3878  007BC6  0E0A               	movlw	10
  3879  007BC8  ECD6  F037         	call	_aveSensor
  3880  007BCC  6E3E               	movwf	calibrate@temp,c
  3881                           
  3882                           ;./functions.c: 269:         if (temp >= Lranges[3])
  3883  007BCE  5059               	movf	_Lranges+3,w,c
  3884  007BD0  5C3E               	subwf	calibrate@temp,w,c
  3885  007BD2  B0D8               	btfsc	status,0,c
  3886                           
  3887                           ;./functions.c: 270:         {;./functions.c: 271:             Lranges[3] = temp;
  3888  007BD4  C03E  F059         	movff	calibrate@temp,_Lranges+3
  3889                           
  3890                           ;./functions.c: 273:         temp = aveSensor(8);
  3891  007BD8  0E08               	movlw	8
  3892  007BDA  ECD6  F037         	call	_aveSensor
  3893  007BDE  6E3E               	movwf	calibrate@temp,c
  3894                           
  3895                           ;./functions.c: 274:         if (temp >= LLranges[3])
  3896  007BE0  505E               	movf	_LLranges+3,w,c
  3897  007BE2  5C3E               	subwf	calibrate@temp,w,c
  3898  007BE4  B0D8               	btfsc	status,0,c
  3899                           
  3900                           ;./functions.c: 275:         {;./functions.c: 276:             Mranges[3] = temp;
  3901  007BE6  C03E  F0E4         	movff	calibrate@temp,_Mranges+3
  3902                           
  3903                           ;./functions.c: 278:         temp = aveSensor(9);
  3904  007BEA  0E09               	movlw	9
  3905  007BEC  ECD6  F037         	call	_aveSensor
  3906  007BF0  6E3E               	movwf	calibrate@temp,c
  3907                           
  3908                           ;./functions.c: 279:         if (temp >= LLranges[3])
  3909  007BF2  505E               	movf	_LLranges+3,w,c
  3910  007BF4  5C3E               	subwf	calibrate@temp,w,c
  3911  007BF6  B0D8               	btfsc	status,0,c
  3912                           
  3913                           ;./functions.c: 280:         {;./functions.c: 281:             Rranges[3] = temp;
  3914  007BF8  C03E  F0DF         	movff	calibrate@temp,_Rranges+3
  3915                           
  3916                           ;./functions.c: 283:         temp = aveSensor(13);
  3917  007BFC  0E0D               	movlw	13
  3918  007BFE  ECD6  F037         	call	_aveSensor
  3919  007C02  6E3E               	movwf	calibrate@temp,c
  3920                           
  3921                           ;./functions.c: 284:         if (temp >= LLranges[3])
  3922  007C04  505E               	movf	_LLranges+3,w,c
  3923  007C06  5C3E               	subwf	calibrate@temp,w,c
  3924  007C08  B0D8               	btfsc	status,0,c
  3925                           
  3926                           ;./functions.c: 285:         {;./functions.c: 286:             RRranges[3] = temp;
  3927  007C0A  C03E  F0DA         	movff	calibrate@temp,_RRranges+3
  3928                           
  3929                           ;./functions.c: 288:     }
  3930  007C0E  2A3C               	incf	calibrate@samples_1171,f,c
  3931  007C10  0EF9               	movlw	249
  3932  007C12  643C               	cpfsgt	calibrate@samples_1171,c
  3933  007C14  D7CF               	goto	l3252
  3934                           
  3935                           ;./functions.c: 289:     PORTAbits.RA3 = 1;
  3936  007C16  8680               	bsf	3968,3,c	;volatile
  3937                           
  3938                           ;./functions.c: 290:     PORTD = 0b11001000;
  3939  007C18  0EC8               	movlw	200
  3940  007C1A  6E83               	movwf	3971,c	;volatile
  3941                           
  3942                           ;./functions.c: 292:     oneSecDelay();
  3943  007C1C  EC9E  F036         	call	_oneSecDelay	;wreg free
  3944                           
  3945                           ;./functions.c: 293:     oneSecDelay();
  3946  007C20  EC9E  F036         	call	_oneSecDelay	;wreg free
  3947                           
  3948                           ;./functions.c: 294:     oneSecDelay();
  3949  007C24  EC9E  F036         	call	_oneSecDelay	;wreg free
  3950                           
  3951                           ;./functions.c: 295:     oneSecDelay();
  3952  007C28  EC9E  F036         	call	_oneSecDelay	;wreg free
  3953                           
  3954                           ;./functions.c: 296:     oneSecDelay();
  3955  007C2C  EC9E  F036         	call	_oneSecDelay	;wreg free
  3956                           
  3957                           ;./functions.c: 297:     oneSecDelay();
  3958  007C30  EC9E  F036         	call	_oneSecDelay	;wreg free
  3959                           
  3960                           ;./functions.c: 298:     for (unsigned char samples = 0; samples < 250; samples++)
  3961  007C34  0E00               	movlw	0
  3962  007C36  6E3D               	movwf	calibrate@samples_1172,c
  3963  007C38                     l3304:
  3964                           
  3965                           ;./functions.c: 299:     {;./functions.c: 300:         temp = aveSensor(12);
  3966  007C38  0E0C               	movlw	12
  3967  007C3A  ECD6  F037         	call	_aveSensor
  3968  007C3E  6E3E               	movwf	calibrate@temp,c
  3969                           
  3970                           ;./functions.c: 301:         if (temp >= LLranges[4])
  3971  007C40  505F               	movf	_LLranges+4,w,c
  3972  007C42  5C3E               	subwf	calibrate@temp,w,c
  3973  007C44  B0D8               	btfsc	status,0,c
  3974                           
  3975                           ;./functions.c: 302:         {;./functions.c: 303:             LLranges[4] = temp;
  3976  007C46  C03E  F05F         	movff	calibrate@temp,_LLranges+4
  3977                           
  3978                           ;./functions.c: 305:         temp = aveSensor(10);
  3979  007C4A  0E0A               	movlw	10
  3980  007C4C  ECD6  F037         	call	_aveSensor
  3981  007C50  6E3E               	movwf	calibrate@temp,c
  3982                           
  3983                           ;./functions.c: 306:         if (temp >= Lranges[4])
  3984  007C52  505A               	movf	_Lranges+4,w,c
  3985  007C54  5C3E               	subwf	calibrate@temp,w,c
  3986  007C56  B0D8               	btfsc	status,0,c
  3987                           
  3988                           ;./functions.c: 307:         {;./functions.c: 308:             Lranges[4] = temp;
  3989  007C58  C03E  F05A         	movff	calibrate@temp,_Lranges+4
  3990                           
  3991                           ;./functions.c: 310:         temp = aveSensor(8);
  3992  007C5C  0E08               	movlw	8
  3993  007C5E  ECD6  F037         	call	_aveSensor
  3994  007C62  6E3E               	movwf	calibrate@temp,c
  3995                           
  3996                           ;./functions.c: 311:         if (temp >= LLranges[4])
  3997  007C64  505F               	movf	_LLranges+4,w,c
  3998  007C66  5C3E               	subwf	calibrate@temp,w,c
  3999  007C68  B0D8               	btfsc	status,0,c
  4000                           
  4001                           ;./functions.c: 312:         {;./functions.c: 313:             Mranges[4] = temp;
  4002  007C6A  C03E  F0E5         	movff	calibrate@temp,_Mranges+4
  4003                           
  4004                           ;./functions.c: 315:         temp = aveSensor(9);
  4005  007C6E  0E09               	movlw	9
  4006  007C70  ECD6  F037         	call	_aveSensor
  4007  007C74  6E3E               	movwf	calibrate@temp,c
  4008                           
  4009                           ;./functions.c: 316:         if (temp >= LLranges[4])
  4010  007C76  505F               	movf	_LLranges+4,w,c
  4011  007C78  5C3E               	subwf	calibrate@temp,w,c
  4012  007C7A  B0D8               	btfsc	status,0,c
  4013                           
  4014                           ;./functions.c: 317:         {;./functions.c: 318:             Rranges[4] = temp;
  4015  007C7C  C03E  F0E0         	movff	calibrate@temp,_Rranges+4
  4016                           
  4017                           ;./functions.c: 320:         temp = aveSensor(13);
  4018  007C80  0E0D               	movlw	13
  4019  007C82  ECD6  F037         	call	_aveSensor
  4020  007C86  6E3E               	movwf	calibrate@temp,c
  4021                           
  4022                           ;./functions.c: 321:         if (temp >= LLranges[4])
  4023  007C88  505F               	movf	_LLranges+4,w,c
  4024  007C8A  5C3E               	subwf	calibrate@temp,w,c
  4025  007C8C  B0D8               	btfsc	status,0,c
  4026                           
  4027                           ;./functions.c: 322:         {;./functions.c: 323:             RRranges[4] = temp;
  4028  007C8E  C03E  F0DB         	movff	calibrate@temp,_RRranges+4
  4029                           
  4030                           ;./functions.c: 325:     }
  4031  007C92  2A3D               	incf	calibrate@samples_1172,f,c
  4032  007C94  0EF9               	movlw	249
  4033  007C96  643D               	cpfsgt	calibrate@samples_1172,c
  4034  007C98  D7CF               	goto	l3304
  4035                           
  4036                           ;./functions.c: 326:     PORTAbits.RA4 = 1;
  4037  007C9A  8880               	bsf	3968,4,c	;volatile
  4038                           
  4039                           ;./functions.c: 327:     oneSecDelay();
  4040  007C9C  EC9E  F036         	call	_oneSecDelay	;wreg free
  4041                           
  4042                           ;./functions.c: 328:     oneSecDelay();
  4043  007CA0  EC9E  F036         	call	_oneSecDelay	;wreg free
  4044                           
  4045                           ;./functions.c: 329:     oneSecDelay();
  4046  007CA4  EC9E  F036         	call	_oneSecDelay	;wreg free
  4047                           
  4048                           ;./functions.c: 331:     PORTA = 0;
  4049  007CA8  0E00               	movlw	0
  4050  007CAA  6E80               	movwf	3968,c	;volatile
  4051  007CAC  0012               	return		;funcret
  4052  007CAE                     __end_of_calibrate:
  4053                           	opt callstack 0
  4054                           
  4055 ;; *************** function _oneSecDelay *****************
  4056 ;; Defined at:
  4057 ;;		line 931 in file "./functions.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  a               1   50[COMRAM] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4071 ;;      Params:         0       0       0       0       0       0       0
  4072 ;;      Locals:         1       0       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0
  4074 ;;      Totals:         1       0       0       0       0       0       0
  4075 ;;Total ram usage:        1 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    2
  4078 ;; This function calls:
  4079 ;;		_msDelay
  4080 ;; This function is called by:
  4081 ;;		_calibrate
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text28
  4086  006D3C                     __ptext28:
  4087                           	opt callstack 0
  4088  006D3C                     _oneSecDelay:
  4089                           	opt callstack 26
  4090                           
  4091                           ;./functions.c: 933:     for (unsigned char a = 0; a < 15; a++)
  4092                           
  4093                           ;incstack = 0
  4094  006D3C  0E00               	movlw	0
  4095  006D3E  6E33               	movwf	oneSecDelay@a,c
  4096  006D40                     l2862:
  4097                           
  4098                           ;./functions.c: 934:     {;./functions.c: 935:         msDelay(63);
  4099  006D40  0E3F               	movlw	63
  4100  006D42  ECA3  F038         	call	_msDelay
  4101                           
  4102                           ;./functions.c: 936:     }
  4103  006D46  2A33               	incf	oneSecDelay@a,f,c
  4104  006D48  0E0E               	movlw	14
  4105  006D4A  6433               	cpfsgt	oneSecDelay@a,c
  4106  006D4C  D7F9               	goto	l2862
  4107  006D4E  0012               	return	
  4108  006D50                     __end_of_oneSecDelay:
  4109                           	opt callstack 0
  4110                           
  4111 ;; *************** function _msDelay *****************
  4112 ;; Defined at:
  4113 ;;		line 941 in file "./functions.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  delayInMs       1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  delayInMs       1   49[COMRAM] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4127 ;;      Params:         0       0       0       0       0       0       0
  4128 ;;      Locals:         1       0       0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0
  4130 ;;      Totals:         1       0       0       0       0       0       0
  4131 ;;Total ram usage:        1 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    1
  4134 ;; This function calls:
  4135 ;;		___flmul
  4136 ;;		___fltol
  4137 ;;		___xxtofl
  4138 ;; This function is called by:
  4139 ;;		_pyCal
  4140 ;;		_navigate
  4141 ;;		_capTouch
  4142 ;;		_oneSecDelay
  4143 ;;		_turn45p
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text29
  4148  007146                     __ptext29:
  4149                           	opt callstack 0
  4150  007146                     _msDelay:
  4151                           	opt callstack 27
  4152                           
  4153                           ;incstack = 0
  4154                           ;msDelay@delayInMs stored from wreg
  4155  007146  6E32               	movwf	msDelay@delayInMs,c
  4156                           
  4157                           ;./functions.c: 941: void msDelay(unsigned char delayInMs);./functions.c: 942: {;./funct
      +                          ions.c: 943:     TMR6 = 0;
  4158  007148  0E00               	movlw	0
  4159  00714A  010F               	movlb	15	; () banked
  4160  00714C  6F4C               	movwf	76,b	;volatile
  4161                           
  4162                           ; BSR set to: 15
  4163                           ;./functions.c: 944:     PR6 = 3.90625 * delayInMs;
  4164  00714E  0E00               	movlw	0
  4165  007150  6E13               	movwf	___flmul@a,c
  4166  007152  0E00               	movlw	0
  4167  007154  6E14               	movwf	___flmul@a+1,c
  4168  007156  0E7A               	movlw	122
  4169  007158  6E15               	movwf	___flmul@a+2,c
  4170  00715A  0E40               	movlw	64
  4171  00715C  6E16               	movwf	___flmul@a+3,c
  4172  00715E  5032               	movf	msDelay@delayInMs,w,c
  4173  007160  6E01               	movwf	___xxtofl@val,c
  4174  007162  6A02               	clrf	___xxtofl@val+1,c
  4175  007164  6A03               	clrf	___xxtofl@val+2,c
  4176  007166  6A04               	clrf	___xxtofl@val+3,c
  4177  007168  0E01               	movlw	1
  4178  00716A  EC97  F03B         	call	___xxtofl
  4179  00716E  C001  F00F         	movff	?___xxtofl,___flmul@b
  4180  007172  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  4181  007176  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  4182  00717A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  4183  00717E  EC57  F03E         	call	___flmul	;wreg free
  4184  007182  C00F  F028         	movff	?___flmul,___fltol@f1
  4185  007186  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  4186  00718A  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  4187  00718E  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  4188  007192  EC1A  F03A         	call	___fltol	;wreg free
  4189  007196  5028               	movf	?___fltol,w,c
  4190  007198  010F               	movlb	15	; () banked
  4191  00719A  6F4B               	movwf	75,b	;volatile
  4192                           
  4193                           ; BSR set to: 15
  4194                           ;./functions.c: 945:     T6CON = 0xFF;
  4195  00719C  694A               	setf	74,b	;volatile
  4196  00719E                     l480:
  4197  00719E  A47E               	btfss	3966,2,c	;volatile
  4198  0071A0  D7FE               	goto	l480
  4199                           
  4200                           ;./functions.c: 948:     PIR5bits.TMR6IF = 0;
  4201  0071A2  947E               	bcf	3966,2,c	;volatile
  4202                           
  4203                           ;./functions.c: 949:     T6CON = 0;
  4204  0071A4  0E00               	movlw	0
  4205  0071A6  010F               	movlb	15	; () banked
  4206  0071A8  6F4A               	movwf	74,b	;volatile
  4207                           
  4208                           ; BSR set to: 15
  4209  0071AA  0012               	return		;funcret
  4210  0071AC                     __end_of_msDelay:
  4211                           	opt callstack 0
  4212                           
  4213 ;; *************** function ___xxtofl *****************
  4214 ;; Defined at:
  4215 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  sign            1    wreg     unsigned char 
  4218 ;;  val             4    0[COMRAM] long 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  sign            1    8[COMRAM] unsigned char 
  4221 ;;  arg             4   10[COMRAM] unsigned long 
  4222 ;;  exp             1    9[COMRAM] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  4    0[COMRAM] unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4232 ;;      Params:         4       0       0       0       0       0       0
  4233 ;;      Locals:         6       0       0       0       0       0       0
  4234 ;;      Temps:          4       0       0       0       0       0       0
  4235 ;;      Totals:        14       0       0       0       0       0       0
  4236 ;;Total ram usage:       14 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_msDelay
  4242 ;;		_timer6Setup
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text30
  4247  00772E                     __ptext30:
  4248                           	opt callstack 0
  4249  00772E                     ___xxtofl:
  4250                           	opt callstack 27
  4251                           
  4252                           ; BSR set to: 15
  4253                           ;incstack = 0
  4254                           ;___xxtofl@sign stored from wreg
  4255  00772E  6E09               	movwf	___xxtofl@sign,c
  4256  007730  5009               	movf	___xxtofl@sign,w,c
  4257  007732  A4D8               	btfss	status,2,c
  4258  007734  AE04               	btfss	___xxtofl@val+3,7,c
  4259  007736  D01A               	goto	l1191
  4260  007738  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4261  00773C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4262  007740  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4263  007744  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4264  007748  1E05               	comf	??___xxtofl,f,c
  4265  00774A  1E06               	comf	??___xxtofl+1,f,c
  4266  00774C  1E07               	comf	??___xxtofl+2,f,c
  4267  00774E  1E08               	comf	??___xxtofl+3,f,c
  4268  007750  2A05               	incf	??___xxtofl,f,c
  4269  007752  0E00               	movlw	0
  4270  007754  2206               	addwfc	??___xxtofl+1,f,c
  4271  007756  2207               	addwfc	??___xxtofl+2,f,c
  4272  007758  2208               	addwfc	??___xxtofl+3,f,c
  4273  00775A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4274  00775E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4275  007762  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4276  007766  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4277  00776A  D008               	goto	l2712
  4278  00776C                     l1191:
  4279  00776C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4280  007770  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4281  007774  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4282  007778  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4283  00777C                     l2712:
  4284  00777C  5001               	movf	___xxtofl@val,w,c
  4285  00777E  1002               	iorwf	___xxtofl@val+1,w,c
  4286  007780  1003               	iorwf	___xxtofl@val+2,w,c
  4287  007782  1004               	iorwf	___xxtofl@val+3,w,c
  4288  007784  A4D8               	btfss	status,2,c
  4289  007786  D009               	goto	l2718
  4290  007788  0E00               	movlw	0
  4291  00778A  6E01               	movwf	?___xxtofl,c
  4292  00778C  0E00               	movlw	0
  4293  00778E  6E02               	movwf	?___xxtofl+1,c
  4294  007790  0E00               	movlw	0
  4295  007792  6E03               	movwf	?___xxtofl+2,c
  4296  007794  0E00               	movlw	0
  4297  007796  6E04               	movwf	?___xxtofl+3,c
  4298  007798  0012               	return	
  4299  00779A                     l2718:
  4300  00779A  0E96               	movlw	150
  4301  00779C  6E0A               	movwf	___xxtofl@exp,c
  4302  00779E  D006               	goto	l2722
  4303  0077A0                     l2720:
  4304  0077A0  2A0A               	incf	___xxtofl@exp,f,c
  4305  0077A2  90D8               	bcf	status,0,c
  4306  0077A4  320E               	rrcf	___xxtofl@arg+3,f,c
  4307  0077A6  320D               	rrcf	___xxtofl@arg+2,f,c
  4308  0077A8  320C               	rrcf	___xxtofl@arg+1,f,c
  4309  0077AA  320B               	rrcf	___xxtofl@arg,f,c
  4310  0077AC                     l2722:
  4311  0077AC  0E00               	movlw	0
  4312  0077AE  140B               	andwf	___xxtofl@arg,w,c
  4313  0077B0  6E05               	movwf	??___xxtofl& (0+255),c
  4314  0077B2  0E00               	movlw	0
  4315  0077B4  140C               	andwf	___xxtofl@arg+1,w,c
  4316  0077B6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  4317  0077B8  0E00               	movlw	0
  4318  0077BA  140D               	andwf	___xxtofl@arg+2,w,c
  4319  0077BC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  4320  0077BE  0EFE               	movlw	254
  4321  0077C0  140E               	andwf	___xxtofl@arg+3,w,c
  4322  0077C2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  4323  0077C4  5005               	movf	??___xxtofl,w,c
  4324  0077C6  1006               	iorwf	??___xxtofl+1,w,c
  4325  0077C8  1007               	iorwf	??___xxtofl+2,w,c
  4326  0077CA  1008               	iorwf	??___xxtofl+3,w,c
  4327  0077CC  B4D8               	btfsc	status,2,c
  4328  0077CE  D00D               	goto	l1198
  4329  0077D0  D7E7               	goto	l2720
  4330  0077D2                     l2724:
  4331  0077D2  2A0A               	incf	___xxtofl@exp,f,c
  4332  0077D4  0E01               	movlw	1
  4333  0077D6  260B               	addwf	___xxtofl@arg,f,c
  4334  0077D8  0E00               	movlw	0
  4335  0077DA  220C               	addwfc	___xxtofl@arg+1,f,c
  4336  0077DC  220D               	addwfc	___xxtofl@arg+2,f,c
  4337  0077DE  220E               	addwfc	___xxtofl@arg+3,f,c
  4338  0077E0  90D8               	bcf	status,0,c
  4339  0077E2  320E               	rrcf	___xxtofl@arg+3,f,c
  4340  0077E4  320D               	rrcf	___xxtofl@arg+2,f,c
  4341  0077E6  320C               	rrcf	___xxtofl@arg+1,f,c
  4342  0077E8  320B               	rrcf	___xxtofl@arg,f,c
  4343  0077EA                     l1198:
  4344  0077EA  0E00               	movlw	0
  4345  0077EC  140B               	andwf	___xxtofl@arg,w,c
  4346  0077EE  6E05               	movwf	??___xxtofl& (0+255),c
  4347  0077F0  0E00               	movlw	0
  4348  0077F2  140C               	andwf	___xxtofl@arg+1,w,c
  4349  0077F4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  4350  0077F6  0E00               	movlw	0
  4351  0077F8  140D               	andwf	___xxtofl@arg+2,w,c
  4352  0077FA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  4353  0077FC  0EFF               	movlw	255
  4354  0077FE  140E               	andwf	___xxtofl@arg+3,w,c
  4355  007800  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  4356  007802  5005               	movf	??___xxtofl,w,c
  4357  007804  1006               	iorwf	??___xxtofl+1,w,c
  4358  007806  1007               	iorwf	??___xxtofl+2,w,c
  4359  007808  1008               	iorwf	??___xxtofl+3,w,c
  4360  00780A  B4D8               	btfsc	status,2,c
  4361  00780C  D007               	goto	l2732
  4362  00780E  D7E1               	goto	l2724
  4363  007810                     l2730:
  4364  007810  060A               	decf	___xxtofl@exp,f,c
  4365  007812  90D8               	bcf	status,0,c
  4366  007814  360B               	rlcf	___xxtofl@arg,f,c
  4367  007816  360C               	rlcf	___xxtofl@arg+1,f,c
  4368  007818  360D               	rlcf	___xxtofl@arg+2,f,c
  4369  00781A  360E               	rlcf	___xxtofl@arg+3,f,c
  4370  00781C                     l2732:
  4371  00781C  BE0D               	btfsc	___xxtofl@arg+2,7,c
  4372  00781E  D003               	goto	u1690
  4373  007820  0E02               	movlw	2
  4374  007822  600A               	cpfslt	___xxtofl@exp,c
  4375  007824  D7F5               	goto	l2730
  4376  007826                     u1690:
  4377  007826  A00A               	btfss	___xxtofl@exp,0,c
  4378  007828  9E0D               	bcf	___xxtofl@arg+2,7,c
  4379  00782A  90D8               	bcf	status,0,c
  4380  00782C  320A               	rrcf	___xxtofl@exp,f,c
  4381  00782E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4382  007832  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  4383  007834  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  4384  007836  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  4385  007838  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4386  00783C  6A07               	clrf	??___xxtofl+2,c
  4387  00783E  6A06               	clrf	??___xxtofl+1,c
  4388  007840  6A05               	clrf	??___xxtofl,c
  4389  007842  5005               	movf	??___xxtofl,w,c
  4390  007844  120B               	iorwf	___xxtofl@arg,f,c
  4391  007846  5006               	movf	??___xxtofl+1,w,c
  4392  007848  120C               	iorwf	___xxtofl@arg+1,f,c
  4393  00784A  5007               	movf	??___xxtofl+2,w,c
  4394  00784C  120D               	iorwf	___xxtofl@arg+2,f,c
  4395  00784E  5008               	movf	??___xxtofl+3,w,c
  4396  007850  120E               	iorwf	___xxtofl@arg+3,f,c
  4397  007852  5009               	movf	___xxtofl@sign,w,c
  4398  007854  A4D8               	btfss	status,2,c
  4399  007856  AE04               	btfss	___xxtofl@val+3,7,c
  4400  007858  D001               	goto	l2748
  4401  00785A  8E0E               	bsf	___xxtofl@arg+3,7,c
  4402  00785C                     l2748:
  4403  00785C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4404  007860  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4405  007864  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4406  007868  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4407  00786C  0012               	return		;funcret
  4408  00786E                     __end_of___xxtofl:
  4409                           	opt callstack 0
  4410                           
  4411 ;; *************** function ___fltol *****************
  4412 ;; Defined at:
  4413 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  f1              4   39[COMRAM] unsigned char 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  exp1            1   48[COMRAM] unsigned char 
  4418 ;;  sign1           1   47[COMRAM] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  4   39[COMRAM] long 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4428 ;;      Params:         4       0       0       0       0       0       0
  4429 ;;      Locals:         2       0       0       0       0       0       0
  4430 ;;      Temps:          4       0       0       0       0       0       0
  4431 ;;      Totals:        10       0       0       0       0       0       0
  4432 ;;Total ram usage:       10 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_msDelay
  4438 ;;		_timer6Setup
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text31
  4443  007434                     __ptext31:
  4444                           	opt callstack 0
  4445  007434                     ___fltol:
  4446                           	opt callstack 27
  4447                           
  4448                           ;incstack = 0
  4449  007434  342A               	rlcf	___fltol@f1+2,w,c
  4450  007436  342B               	rlcf	___fltol@f1+3,w,c
  4451  007438  6E31               	movwf	___fltol@exp1,c
  4452  00743A  5031               	movf	___fltol@exp1,w,c
  4453  00743C  A4D8               	btfss	status,2,c
  4454  00743E  D009               	goto	l2668
  4455  007440                     u1560:
  4456  007440  0E00               	movlw	0
  4457  007442  6E28               	movwf	?___fltol,c
  4458  007444  0E00               	movlw	0
  4459  007446  6E29               	movwf	?___fltol+1,c
  4460  007448  0E00               	movlw	0
  4461  00744A  6E2A               	movwf	?___fltol+2,c
  4462  00744C  0E00               	movlw	0
  4463  00744E  6E2B               	movwf	?___fltol+3,c
  4464  007450  0012               	return	
  4465  007452                     l2668:
  4466  007452  C028  F02C         	movff	___fltol@f1,??___fltol
  4467  007456  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  4468  00745A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  4469  00745E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  4470  007462  0E20               	movlw	32
  4471  007464  D005               	goto	u1570
  4472  007466                     u1575:
  4473  007466  90D8               	bcf	status,0,c
  4474  007468  322F               	rrcf	??___fltol+3,f,c
  4475  00746A  322E               	rrcf	??___fltol+2,f,c
  4476  00746C  322D               	rrcf	??___fltol+1,f,c
  4477  00746E  322C               	rrcf	??___fltol,f,c
  4478  007470                     u1570:
  4479  007470  2EE8               	decfsz	wreg,f,c
  4480  007472  D7F9               	goto	u1575
  4481  007474  502C               	movf	??___fltol,w,c
  4482  007476  6E30               	movwf	___fltol@sign1,c
  4483  007478  8E2A               	bsf	___fltol@f1+2,7,c
  4484  00747A  0EFF               	movlw	255
  4485  00747C  1628               	andwf	___fltol@f1,f,c
  4486  00747E  0EFF               	movlw	255
  4487  007480  1629               	andwf	___fltol@f1+1,f,c
  4488  007482  0EFF               	movlw	255
  4489  007484  162A               	andwf	___fltol@f1+2,f,c
  4490  007486  0E00               	movlw	0
  4491  007488  162B               	andwf	___fltol@f1+3,f,c
  4492  00748A  0E96               	movlw	150
  4493  00748C  5E31               	subwf	___fltol@exp1,f,c
  4494  00748E  AE31               	btfss	___fltol@exp1,7,c
  4495  007490  D00D               	goto	l2688
  4496  007492  5031               	movf	___fltol@exp1,w,c
  4497  007494  0A80               	xorlw	128
  4498  007496  0F97               	addlw	151
  4499  007498  A0D8               	btfss	status,0,c
  4500  00749A  D7D2               	goto	u1560
  4501  00749C                     l2684:
  4502  00749C  90D8               	bcf	status,0,c
  4503  00749E  322B               	rrcf	___fltol@f1+3,f,c
  4504  0074A0  322A               	rrcf	___fltol@f1+2,f,c
  4505  0074A2  3229               	rrcf	___fltol@f1+1,f,c
  4506  0074A4  3228               	rrcf	___fltol@f1,f,c
  4507  0074A6  3E31               	incfsz	___fltol@exp1,f,c
  4508  0074A8  D7F9               	goto	l2684
  4509  0074AA  D00D               	goto	u1610
  4510  0074AC                     l2688:
  4511  0074AC  0E1F               	movlw	31
  4512  0074AE  6431               	cpfsgt	___fltol@exp1,c
  4513  0074B0  D007               	goto	l2696
  4514  0074B2  D7C6               	goto	u1560
  4515  0074B4                     l2694:
  4516  0074B4  90D8               	bcf	status,0,c
  4517  0074B6  3628               	rlcf	___fltol@f1,f,c
  4518  0074B8  3629               	rlcf	___fltol@f1+1,f,c
  4519  0074BA  362A               	rlcf	___fltol@f1+2,f,c
  4520  0074BC  362B               	rlcf	___fltol@f1+3,f,c
  4521  0074BE  0631               	decf	___fltol@exp1,f,c
  4522  0074C0                     l2696:
  4523  0074C0  5031               	movf	___fltol@exp1,w,c
  4524  0074C2  A4D8               	btfss	status,2,c
  4525  0074C4  D7F7               	goto	l2694
  4526  0074C6                     u1610:
  4527  0074C6  5030               	movf	___fltol@sign1,w,c
  4528  0074C8  B4D8               	btfsc	status,2,c
  4529  0074CA  D008               	goto	l2702
  4530  0074CC  1E2B               	comf	___fltol@f1+3,f,c
  4531  0074CE  1E2A               	comf	___fltol@f1+2,f,c
  4532  0074D0  1E29               	comf	___fltol@f1+1,f,c
  4533  0074D2  6C28               	negf	___fltol@f1,c
  4534  0074D4  0E00               	movlw	0
  4535  0074D6  2229               	addwfc	___fltol@f1+1,f,c
  4536  0074D8  222A               	addwfc	___fltol@f1+2,f,c
  4537  0074DA  222B               	addwfc	___fltol@f1+3,f,c
  4538  0074DC                     l2702:
  4539  0074DC  C028  F028         	movff	___fltol@f1,?___fltol
  4540  0074E0  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  4541  0074E4  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  4542  0074E8  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  4543  0074EC  0012               	return		;funcret
  4544  0074EE                     __end_of___fltol:
  4545                           	opt callstack 0
  4546                           
  4547 ;; *************** function ___flmul *****************
  4548 ;; Defined at:
  4549 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  b               4   14[COMRAM] long 
  4552 ;;  a               4   18[COMRAM] long 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  prod            4   33[COMRAM] struct .
  4555 ;;  grs             4   27[COMRAM] unsigned long 
  4556 ;;  temp            2   37[COMRAM] struct .
  4557 ;;  bexp            1   32[COMRAM] unsigned char 
  4558 ;;  aexp            1   31[COMRAM] unsigned char 
  4559 ;;  sign            1   26[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  4   14[COMRAM] unsigned char 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, prodl, prodh
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4569 ;;      Params:         8       0       0       0       0       0       0
  4570 ;;      Locals:        13       0       0       0       0       0       0
  4571 ;;      Temps:          4       0       0       0       0       0       0
  4572 ;;      Totals:        25       0       0       0       0       0       0
  4573 ;;Total ram usage:       25 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_msDelay
  4579 ;;		_timer6Setup
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text32
  4584  007CAE                     __ptext32:
  4585                           	opt callstack 0
  4586  007CAE                     ___flmul:
  4587                           	opt callstack 27
  4588                           
  4589                           ;incstack = 0
  4590  007CAE  5012               	movf	___flmul@b+3,w,c
  4591  007CB0  0B80               	andlw	128
  4592  007CB2  6E1B               	movwf	___flmul@sign,c
  4593  007CB4  5012               	movf	___flmul@b+3,w,c
  4594  007CB6  2412               	addwf	___flmul@b+3,w,c
  4595  007CB8  6E21               	movwf	___flmul@bexp,c
  4596  007CBA  BE11               	btfsc	___flmul@b+2,7,c
  4597  007CBC  8021               	bsf	___flmul@bexp,0,c
  4598  007CBE  5021               	movf	___flmul@bexp,w,c
  4599  007CC0  B4D8               	btfsc	status,2,c
  4600  007CC2  D00D               	goto	l2546
  4601  007CC4  2821               	incf	___flmul@bexp,w,c
  4602  007CC6  A4D8               	btfss	status,2,c
  4603  007CC8  D008               	goto	l2544
  4604  007CCA  0E00               	movlw	0
  4605  007CCC  6E0F               	movwf	___flmul@b,c
  4606  007CCE  0E00               	movlw	0
  4607  007CD0  6E10               	movwf	___flmul@b+1,c
  4608  007CD2  0E00               	movlw	0
  4609  007CD4  6E11               	movwf	___flmul@b+2,c
  4610  007CD6  0E00               	movlw	0
  4611  007CD8  6E12               	movwf	___flmul@b+3,c
  4612  007CDA                     l2544:
  4613  007CDA  8E11               	bsf	___flmul@b+2,7,c
  4614  007CDC  D008               	goto	l2548
  4615  007CDE                     l2546:
  4616  007CDE  0E00               	movlw	0
  4617  007CE0  6E0F               	movwf	___flmul@b,c
  4618  007CE2  0E00               	movlw	0
  4619  007CE4  6E10               	movwf	___flmul@b+1,c
  4620  007CE6  0E00               	movlw	0
  4621  007CE8  6E11               	movwf	___flmul@b+2,c
  4622  007CEA  0E00               	movlw	0
  4623  007CEC  6E12               	movwf	___flmul@b+3,c
  4624  007CEE                     l2548:
  4625  007CEE  5016               	movf	___flmul@a+3,w,c
  4626  007CF0  0B80               	andlw	128
  4627  007CF2  1A1B               	xorwf	___flmul@sign,f,c
  4628  007CF4  5016               	movf	___flmul@a+3,w,c
  4629  007CF6  2416               	addwf	___flmul@a+3,w,c
  4630  007CF8  6E20               	movwf	___flmul@aexp,c
  4631  007CFA  BE15               	btfsc	___flmul@a+2,7,c
  4632  007CFC  8020               	bsf	___flmul@aexp,0,c
  4633  007CFE  5020               	movf	___flmul@aexp,w,c
  4634  007D00  B4D8               	btfsc	status,2,c
  4635  007D02  D00D               	goto	l2564
  4636  007D04  2820               	incf	___flmul@aexp,w,c
  4637  007D06  A4D8               	btfss	status,2,c
  4638  007D08  D008               	goto	l2562
  4639  007D0A  0E00               	movlw	0
  4640  007D0C  6E13               	movwf	___flmul@a,c
  4641  007D0E  0E00               	movlw	0
  4642  007D10  6E14               	movwf	___flmul@a+1,c
  4643  007D12  0E00               	movlw	0
  4644  007D14  6E15               	movwf	___flmul@a+2,c
  4645  007D16  0E00               	movlw	0
  4646  007D18  6E16               	movwf	___flmul@a+3,c
  4647  007D1A                     l2562:
  4648  007D1A  8E15               	bsf	___flmul@a+2,7,c
  4649  007D1C  D008               	goto	l1150
  4650  007D1E                     l2564:
  4651  007D1E  0E00               	movlw	0
  4652  007D20  6E13               	movwf	___flmul@a,c
  4653  007D22  0E00               	movlw	0
  4654  007D24  6E14               	movwf	___flmul@a+1,c
  4655  007D26  0E00               	movlw	0
  4656  007D28  6E15               	movwf	___flmul@a+2,c
  4657  007D2A  0E00               	movlw	0
  4658  007D2C  6E16               	movwf	___flmul@a+3,c
  4659  007D2E                     l1150:
  4660  007D2E  5020               	movf	___flmul@aexp,w,c
  4661  007D30  B4D8               	btfsc	status,2,c
  4662  007D32  D003               	goto	u1440
  4663  007D34  5021               	movf	___flmul@bexp,w,c
  4664  007D36  A4D8               	btfss	status,2,c
  4665  007D38  D009               	goto	l2572
  4666  007D3A                     u1440:
  4667  007D3A  0E00               	movlw	0
  4668  007D3C  6E0F               	movwf	?___flmul,c
  4669  007D3E  0E00               	movlw	0
  4670  007D40  6E10               	movwf	?___flmul+1,c
  4671  007D42  0E00               	movlw	0
  4672  007D44  6E11               	movwf	?___flmul+2,c
  4673  007D46  0E00               	movlw	0
  4674  007D48  6E12               	movwf	?___flmul+3,c
  4675  007D4A  0012               	return	
  4676  007D4C                     l2572:
  4677  007D4C  5015               	movf	___flmul@a+2,w,c
  4678  007D4E  020F               	mulwf	___flmul@b,c
  4679  007D50  CFF3 F026          	movff	prodl,___flmul@temp
  4680  007D54  CFF4 F027          	movff	prodh,___flmul@temp+1
  4681  007D58  5026               	movf	___flmul@temp,w,c
  4682  007D5A  6E1C               	movwf	___flmul@grs,c
  4683  007D5C  6A1D               	clrf	___flmul@grs+1,c
  4684  007D5E  6A1E               	clrf	___flmul@grs+2,c
  4685  007D60  6A1F               	clrf	___flmul@grs+3,c
  4686  007D62  5027               	movf	___flmul@temp+1,w,c
  4687  007D64  6E22               	movwf	___flmul@prod,c
  4688  007D66  6A23               	clrf	___flmul@prod+1,c
  4689  007D68  6A24               	clrf	___flmul@prod+2,c
  4690  007D6A  6A25               	clrf	___flmul@prod+3,c
  4691  007D6C  5014               	movf	___flmul@a+1,w,c
  4692  007D6E  0210               	mulwf	___flmul@b+1,c
  4693  007D70  CFF3 F026          	movff	prodl,___flmul@temp
  4694  007D74  CFF4 F027          	movff	prodh,___flmul@temp+1
  4695  007D78  5026               	movf	___flmul@temp,w,c
  4696  007D7A  261C               	addwf	___flmul@grs,f,c
  4697  007D7C  0E00               	movlw	0
  4698  007D7E  221D               	addwfc	___flmul@grs+1,f,c
  4699  007D80  221E               	addwfc	___flmul@grs+2,f,c
  4700  007D82  221F               	addwfc	___flmul@grs+3,f,c
  4701  007D84  5027               	movf	___flmul@temp+1,w,c
  4702  007D86  2622               	addwf	___flmul@prod,f,c
  4703  007D88  0E00               	movlw	0
  4704  007D8A  2223               	addwfc	___flmul@prod+1,f,c
  4705  007D8C  2224               	addwfc	___flmul@prod+2,f,c
  4706  007D8E  2225               	addwfc	___flmul@prod+3,f,c
  4707  007D90  5013               	movf	___flmul@a,w,c
  4708  007D92  0211               	mulwf	___flmul@b+2,c
  4709  007D94  CFF3 F026          	movff	prodl,___flmul@temp
  4710  007D98  CFF4 F027          	movff	prodh,___flmul@temp+1
  4711  007D9C  5026               	movf	___flmul@temp,w,c
  4712  007D9E  261C               	addwf	___flmul@grs,f,c
  4713  007DA0  0E00               	movlw	0
  4714  007DA2  221D               	addwfc	___flmul@grs+1,f,c
  4715  007DA4  221E               	addwfc	___flmul@grs+2,f,c
  4716  007DA6  221F               	addwfc	___flmul@grs+3,f,c
  4717  007DA8  5027               	movf	___flmul@temp+1,w,c
  4718  007DAA  2622               	addwf	___flmul@prod,f,c
  4719  007DAC  0E00               	movlw	0
  4720  007DAE  2223               	addwfc	___flmul@prod+1,f,c
  4721  007DB0  2224               	addwfc	___flmul@prod+2,f,c
  4722  007DB2  2225               	addwfc	___flmul@prod+3,f,c
  4723  007DB4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4724  007DB8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4725  007DBC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4726  007DC0  6A1C               	clrf	___flmul@grs,c
  4727  007DC2  5013               	movf	___flmul@a,w,c
  4728  007DC4  0210               	mulwf	___flmul@b+1,c
  4729  007DC6  CFF3 F026          	movff	prodl,___flmul@temp
  4730  007DCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  4731  007DCE  5026               	movf	___flmul@temp,w,c
  4732  007DD0  261C               	addwf	___flmul@grs,f,c
  4733  007DD2  5027               	movf	___flmul@temp+1,w,c
  4734  007DD4  221D               	addwfc	___flmul@grs+1,f,c
  4735  007DD6  0E00               	movlw	0
  4736  007DD8  221E               	addwfc	___flmul@grs+2,f,c
  4737  007DDA  0E00               	movlw	0
  4738  007DDC  221F               	addwfc	___flmul@grs+3,f,c
  4739  007DDE  5014               	movf	___flmul@a+1,w,c
  4740  007DE0  020F               	mulwf	___flmul@b,c
  4741  007DE2  CFF3 F026          	movff	prodl,___flmul@temp
  4742  007DE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  4743  007DEA  5026               	movf	___flmul@temp,w,c
  4744  007DEC  261C               	addwf	___flmul@grs,f,c
  4745  007DEE  5027               	movf	___flmul@temp+1,w,c
  4746  007DF0  221D               	addwfc	___flmul@grs+1,f,c
  4747  007DF2  0E00               	movlw	0
  4748  007DF4  221E               	addwfc	___flmul@grs+2,f,c
  4749  007DF6  0E00               	movlw	0
  4750  007DF8  221F               	addwfc	___flmul@grs+3,f,c
  4751  007DFA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4752  007DFE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4753  007E02  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4754  007E06  6A1C               	clrf	___flmul@grs,c
  4755  007E08  5013               	movf	___flmul@a,w,c
  4756  007E0A  020F               	mulwf	___flmul@b,c
  4757  007E0C  CFF3 F026          	movff	prodl,___flmul@temp
  4758  007E10  CFF4 F027          	movff	prodh,___flmul@temp+1
  4759  007E14  5026               	movf	___flmul@temp,w,c
  4760  007E16  261C               	addwf	___flmul@grs,f,c
  4761  007E18  5027               	movf	___flmul@temp+1,w,c
  4762  007E1A  221D               	addwfc	___flmul@grs+1,f,c
  4763  007E1C  0E00               	movlw	0
  4764  007E1E  221E               	addwfc	___flmul@grs+2,f,c
  4765  007E20  0E00               	movlw	0
  4766  007E22  221F               	addwfc	___flmul@grs+3,f,c
  4767  007E24  5015               	movf	___flmul@a+2,w,c
  4768  007E26  0210               	mulwf	___flmul@b+1,c
  4769  007E28  CFF3 F026          	movff	prodl,___flmul@temp
  4770  007E2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  4771  007E30  5026               	movf	___flmul@temp,w,c
  4772  007E32  2622               	addwf	___flmul@prod,f,c
  4773  007E34  5027               	movf	___flmul@temp+1,w,c
  4774  007E36  2223               	addwfc	___flmul@prod+1,f,c
  4775  007E38  0E00               	movlw	0
  4776  007E3A  2224               	addwfc	___flmul@prod+2,f,c
  4777  007E3C  0E00               	movlw	0
  4778  007E3E  2225               	addwfc	___flmul@prod+3,f,c
  4779  007E40  5014               	movf	___flmul@a+1,w,c
  4780  007E42  0211               	mulwf	___flmul@b+2,c
  4781  007E44  CFF3 F026          	movff	prodl,___flmul@temp
  4782  007E48  CFF4 F027          	movff	prodh,___flmul@temp+1
  4783  007E4C  5026               	movf	___flmul@temp,w,c
  4784  007E4E  2622               	addwf	___flmul@prod,f,c
  4785  007E50  5027               	movf	___flmul@temp+1,w,c
  4786  007E52  2223               	addwfc	___flmul@prod+1,f,c
  4787  007E54  0E00               	movlw	0
  4788  007E56  2224               	addwfc	___flmul@prod+2,f,c
  4789  007E58  0E00               	movlw	0
  4790  007E5A  2225               	addwfc	___flmul@prod+3,f,c
  4791  007E5C  5015               	movf	___flmul@a+2,w,c
  4792  007E5E  0211               	mulwf	___flmul@b+2,c
  4793  007E60  CFF3 F026          	movff	prodl,___flmul@temp
  4794  007E64  CFF4 F027          	movff	prodh,___flmul@temp+1
  4795  007E68  5026               	movf	___flmul@temp,w,c
  4796  007E6A  6E17               	movwf	??___flmul& (0+255),c
  4797  007E6C  5027               	movf	___flmul@temp+1,w,c
  4798  007E6E  6E18               	movwf	(??___flmul+1)& (0+255),c
  4799  007E70  6A19               	clrf	(??___flmul+2)& (0+255),c
  4800  007E72  6A1A               	clrf	(??___flmul+3)& (0+255),c
  4801  007E74  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4802  007E78  C018  F019         	movff	??___flmul+1,??___flmul+2
  4803  007E7C  C017  F018         	movff	??___flmul,??___flmul+1
  4804  007E80  6A17               	clrf	??___flmul,c
  4805  007E82  5017               	movf	??___flmul,w,c
  4806  007E84  2622               	addwf	___flmul@prod,f,c
  4807  007E86  5018               	movf	??___flmul+1,w,c
  4808  007E88  2223               	addwfc	___flmul@prod+1,f,c
  4809  007E8A  5019               	movf	??___flmul+2,w,c
  4810  007E8C  2224               	addwfc	___flmul@prod+2,f,c
  4811  007E8E  501A               	movf	??___flmul+3,w,c
  4812  007E90  2225               	addwfc	___flmul@prod+3,f,c
  4813  007E92  C01C  F017         	movff	___flmul@grs,??___flmul
  4814  007E96  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4815  007E9A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4816  007E9E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4817  007EA2  0E19               	movlw	25
  4818  007EA4  D005               	goto	u1450
  4819  007EA6                     u1455:
  4820  007EA6  90D8               	bcf	status,0,c
  4821  007EA8  321A               	rrcf	??___flmul+3,f,c
  4822  007EAA  3219               	rrcf	??___flmul+2,f,c
  4823  007EAC  3218               	rrcf	??___flmul+1,f,c
  4824  007EAE  3217               	rrcf	??___flmul,f,c
  4825  007EB0                     u1450:
  4826  007EB0  2EE8               	decfsz	wreg,f,c
  4827  007EB2  D7F9               	goto	u1455
  4828  007EB4  5017               	movf	??___flmul,w,c
  4829  007EB6  2622               	addwf	___flmul@prod,f,c
  4830  007EB8  5018               	movf	??___flmul+1,w,c
  4831  007EBA  2223               	addwfc	___flmul@prod+1,f,c
  4832  007EBC  5019               	movf	??___flmul+2,w,c
  4833  007EBE  2224               	addwfc	___flmul@prod+2,f,c
  4834  007EC0  501A               	movf	??___flmul+3,w,c
  4835  007EC2  2225               	addwfc	___flmul@prod+3,f,c
  4836  007EC4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4837  007EC8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4838  007ECC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4839  007ED0  6A1C               	clrf	___flmul@grs,c
  4840  007ED2  5020               	movf	___flmul@aexp,w,c
  4841  007ED4  C021  F017         	movff	___flmul@bexp,??___flmul
  4842  007ED8  6A18               	clrf	(??___flmul+1)& (0+255),c
  4843  007EDA  2617               	addwf	??___flmul,f,c
  4844  007EDC  0E00               	movlw	0
  4845  007EDE  2218               	addwfc	??___flmul+1,f,c
  4846  007EE0  0E82               	movlw	130
  4847  007EE2  2417               	addwf	??___flmul,w,c
  4848  007EE4  6E26               	movwf	___flmul@temp,c
  4849  007EE6  0EFF               	movlw	255
  4850  007EE8  2018               	addwfc	??___flmul+1,w,c
  4851  007EEA  6E27               	movwf	___flmul@temp+1,c
  4852  007EEC  D00F               	goto	l2620
  4853  007EEE                     l2614:
  4854  007EEE  90D8               	bcf	status,0,c
  4855  007EF0  3622               	rlcf	___flmul@prod,f,c
  4856  007EF2  3623               	rlcf	___flmul@prod+1,f,c
  4857  007EF4  3624               	rlcf	___flmul@prod+2,f,c
  4858  007EF6  3625               	rlcf	___flmul@prod+3,f,c
  4859  007EF8  BE1F               	btfsc	___flmul@grs+3,7,c
  4860  007EFA  8022               	bsf	___flmul@prod,0,c
  4861  007EFC  90D8               	bcf	status,0,c
  4862  007EFE  361C               	rlcf	___flmul@grs,f,c
  4863  007F00  361D               	rlcf	___flmul@grs+1,f,c
  4864  007F02  361E               	rlcf	___flmul@grs+2,f,c
  4865  007F04  361F               	rlcf	___flmul@grs+3,f,c
  4866  007F06  0626               	decf	___flmul@temp,f,c
  4867  007F08  A0D8               	btfss	status,0,c
  4868  007F0A  0627               	decf	___flmul@temp+1,f,c
  4869  007F0C                     l2620:
  4870  007F0C  AE24               	btfss	___flmul@prod+2,7,c
  4871  007F0E  D7EF               	goto	l2614
  4872  007F10  0E00               	movlw	0
  4873  007F12  6E20               	movwf	___flmul@aexp,c
  4874  007F14  AE1F               	btfss	___flmul@grs+3,7,c
  4875  007F16  D017               	goto	l1159
  4876  007F18  0EFF               	movlw	255
  4877  007F1A  141C               	andwf	___flmul@grs,w,c
  4878  007F1C  6E17               	movwf	??___flmul& (0+255),c
  4879  007F1E  0EFF               	movlw	255
  4880  007F20  141D               	andwf	___flmul@grs+1,w,c
  4881  007F22  6E18               	movwf	(??___flmul+1)& (0+255),c
  4882  007F24  0EFF               	movlw	255
  4883  007F26  141E               	andwf	___flmul@grs+2,w,c
  4884  007F28  6E19               	movwf	(??___flmul+2)& (0+255),c
  4885  007F2A  0E7F               	movlw	127
  4886  007F2C  141F               	andwf	___flmul@grs+3,w,c
  4887  007F2E  6E1A               	movwf	(??___flmul+3)& (0+255),c
  4888  007F30  5017               	movf	??___flmul,w,c
  4889  007F32  1018               	iorwf	??___flmul+1,w,c
  4890  007F34  1019               	iorwf	??___flmul+2,w,c
  4891  007F36  101A               	iorwf	??___flmul+3,w,c
  4892  007F38  B4D8               	btfsc	status,2,c
  4893  007F3A  D003               	goto	l1160
  4894  007F3C                     u1490:
  4895  007F3C  0E01               	movlw	1
  4896  007F3E  6E20               	movwf	___flmul@aexp,c
  4897  007F40  D002               	goto	l1159
  4898  007F42                     l1160:
  4899  007F42  B022               	btfsc	___flmul@prod,0,c
  4900  007F44  D7FB               	goto	u1490
  4901  007F46                     l1159:
  4902  007F46  5020               	movf	___flmul@aexp,w,c
  4903  007F48  B4D8               	btfsc	status,2,c
  4904  007F4A  D01F               	goto	l2640
  4905  007F4C  0E01               	movlw	1
  4906  007F4E  2622               	addwf	___flmul@prod,f,c
  4907  007F50  0E00               	movlw	0
  4908  007F52  2223               	addwfc	___flmul@prod+1,f,c
  4909  007F54  2224               	addwfc	___flmul@prod+2,f,c
  4910  007F56  2225               	addwfc	___flmul@prod+3,f,c
  4911  007F58  A025               	btfss	___flmul@prod+3,0,c
  4912  007F5A  D017               	goto	l2640
  4913  007F5C  C022  F017         	movff	___flmul@prod,??___flmul
  4914  007F60  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4915  007F64  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4916  007F68  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4917  007F6C  341A               	rlcf	??___flmul+3,w,c
  4918  007F6E  321A               	rrcf	??___flmul+3,f,c
  4919  007F70  3219               	rrcf	??___flmul+2,f,c
  4920  007F72  3218               	rrcf	??___flmul+1,f,c
  4921  007F74  3217               	rrcf	??___flmul,f,c
  4922  007F76  C017  F022         	movff	??___flmul,___flmul@prod
  4923  007F7A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4924  007F7E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4925  007F82  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4926  007F86  4A26               	infsnz	___flmul@temp,f,c
  4927  007F88  2A27               	incf	___flmul@temp+1,f,c
  4928  007F8A                     l2640:
  4929  007F8A  BE27               	btfsc	___flmul@temp+1,7,c
  4930  007F8C  D00D               	goto	l2644
  4931  007F8E  5027               	movf	___flmul@temp+1,w,c
  4932  007F90  E103               	bnz	u1530
  4933  007F92  2826               	incf	___flmul@temp,w,c
  4934  007F94  A0D8               	btfss	status,0,c
  4935  007F96  D008               	goto	l2644
  4936  007F98                     u1530:
  4937  007F98  0E00               	movlw	0
  4938  007F9A  6E22               	movwf	___flmul@prod,c
  4939  007F9C  0E00               	movlw	0
  4940  007F9E  6E23               	movwf	___flmul@prod+1,c
  4941  007FA0  0E80               	movlw	128
  4942  007FA2  6E24               	movwf	___flmul@prod+2,c
  4943  007FA4  0E7F               	movlw	127
  4944  007FA6  D020               	goto	L6
  4945  007FA8                     l2644:
  4946  007FA8  BE27               	btfsc	___flmul@temp+1,7,c
  4947  007FAA  D005               	goto	u1540
  4948  007FAC  5027               	movf	___flmul@temp+1,w,c
  4949  007FAE  E10E               	bnz	l1167
  4950  007FB0  0426               	decf	___flmul@temp,w,c
  4951  007FB2  B0D8               	btfsc	status,0,c
  4952  007FB4  D00B               	goto	l1167
  4953  007FB6                     u1540:
  4954  007FB6  0E00               	movlw	0
  4955  007FB8  6E22               	movwf	___flmul@prod,c
  4956  007FBA  0E00               	movlw	0
  4957  007FBC  6E23               	movwf	___flmul@prod+1,c
  4958  007FBE  0E00               	movlw	0
  4959  007FC0  6E24               	movwf	___flmul@prod+2,c
  4960  007FC2  0E00               	movlw	0
  4961  007FC4  6E25               	movwf	___flmul@prod+3,c
  4962  007FC6  0E00               	movlw	0
  4963  007FC8  6E1B               	movwf	___flmul@sign,c
  4964  007FCA  D00F               	goto	l2656
  4965  007FCC                     l1167:
  4966  007FCC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4967  007FD0  0EFF               	movlw	255
  4968  007FD2  1622               	andwf	___flmul@prod,f,c
  4969  007FD4  0EFF               	movlw	255
  4970  007FD6  1623               	andwf	___flmul@prod+1,f,c
  4971  007FD8  0E7F               	movlw	127
  4972  007FDA  1624               	andwf	___flmul@prod+2,f,c
  4973  007FDC  0E00               	movlw	0
  4974  007FDE  1625               	andwf	___flmul@prod+3,f,c
  4975  007FE0  B021               	btfsc	___flmul@bexp,0,c
  4976  007FE2  8E24               	bsf	___flmul@prod+2,7,c
  4977  007FE4  90D8               	bcf	status,0,c
  4978  007FE6  3021               	rrcf	___flmul@bexp,w,c
  4979  007FE8                     L6:
  4980  007FE8  6E25               	movwf	___flmul@prod+3,c
  4981  007FEA                     l2656:
  4982  007FEA  501B               	movf	___flmul@sign,w,c
  4983  007FEC  1225               	iorwf	___flmul@prod+3,f,c
  4984  007FEE  C022  F00F         	movff	___flmul@prod,?___flmul
  4985  007FF2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4986  007FF6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4987  007FFA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4988  007FFE  0012               	return		;funcret
  4989  008000                     __end_of___flmul:
  4990                           	opt callstack 0
  4991                           
  4992 ;; *************** function _aveSensor *****************
  4993 ;; Defined at:
  4994 ;;		line 887 in file "./functions.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  s               1    wreg     unsigned char 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  s               1    5[COMRAM] unsigned char 
  4999 ;;  a               1    9[COMRAM] unsigned char 
  5000 ;;  measurements    2    6[COMRAM] unsigned int 
  5001 ;;  result          1    8[COMRAM] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      unsigned char 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5011 ;;      Params:         0       0       0       0       0       0       0
  5012 ;;      Locals:         5       0       0       0       0       0       0
  5013 ;;      Temps:          2       0       0       0       0       0       0
  5014 ;;      Totals:         7       0       0       0       0       0       0
  5015 ;;Total ram usage:        7 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    1
  5018 ;; This function calls:
  5019 ;;		_readADC
  5020 ;;		_setADCChannel
  5021 ;; This function is called by:
  5022 ;;		_calibrate
  5023 ;;		_pyCal
  5024 ;;		_capTouch
  5025 ;;		_readAllSensors
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text33
  5030  006FAC                     __ptext33:
  5031                           	opt callstack 0
  5032  006FAC                     _aveSensor:
  5033                           	opt callstack 27
  5034                           
  5035                           ;incstack = 0
  5036                           ;aveSensor@s stored from wreg
  5037  006FAC  6E06               	movwf	aveSensor@s,c
  5038                           
  5039                           ;./functions.c: 887: unsigned char aveSensor(unsigned char s);./functions.c: 888: {;./fu
      +                          nctions.c: 889:     setADCChannel(s);
  5040  006FAE  5006               	movf	aveSensor@s,w,c
  5041  006FB0  EC0F  F039         	call	_setADCChannel
  5042                           
  5043                           ;./functions.c: 890:     unsigned int measurements = 0;
  5044  006FB4  0E00               	movlw	0
  5045  006FB6  6E08               	movwf	aveSensor@measurements+1,c
  5046  006FB8  0E00               	movlw	0
  5047  006FBA  6E07               	movwf	aveSensor@measurements,c
  5048                           
  5049                           ;./functions.c: 892:     for (unsigned char a = 0; a < 4; a++)
  5050  006FBC  0E00               	movlw	0
  5051  006FBE  6E0A               	movwf	aveSensor@a,c
  5052  006FC0                     l2762:
  5053                           
  5054                           ;./functions.c: 893:     {;./functions.c: 894:         measurements += readADC();
  5055  006FC0  EC75  F036         	call	_readADC	;wreg free
  5056  006FC4  6E04               	movwf	??_aveSensor& (0+255),c
  5057  006FC6  5004               	movf	??_aveSensor,w,c
  5058  006FC8  2607               	addwf	aveSensor@measurements,f,c
  5059  006FCA  0E00               	movlw	0
  5060  006FCC  2208               	addwfc	aveSensor@measurements+1,f,c
  5061                           
  5062                           ;./functions.c: 895:     }
  5063  006FCE  2A0A               	incf	aveSensor@a,f,c
  5064  006FD0  0E03               	movlw	3
  5065  006FD2  640A               	cpfsgt	aveSensor@a,c
  5066  006FD4  D7F5               	goto	l2762
  5067                           
  5068                           ;./functions.c: 897:     unsigned char result = measurements / 4;
  5069  006FD6  C007  F004         	movff	aveSensor@measurements,??_aveSensor
  5070  006FDA  C008  F005         	movff	aveSensor@measurements+1,??_aveSensor+1
  5071  006FDE  90D8               	bcf	status,0,c
  5072  006FE0  3205               	rrcf	??_aveSensor+1,f,c
  5073  006FE2  3204               	rrcf	??_aveSensor,f,c
  5074  006FE4  90D8               	bcf	status,0,c
  5075  006FE6  3205               	rrcf	??_aveSensor+1,f,c
  5076  006FE8  3204               	rrcf	??_aveSensor,f,c
  5077  006FEA  5004               	movf	??_aveSensor,w,c
  5078  006FEC  6E09               	movwf	aveSensor@result,c
  5079                           
  5080                           ;./functions.c: 899:     return result;
  5081  006FEE  5009               	movf	aveSensor@result,w,c
  5082  006FF0  0012               	return		;funcret
  5083  006FF2                     __end_of_aveSensor:
  5084                           	opt callstack 0
  5085                           
  5086 ;; *************** function _setADCChannel *****************
  5087 ;; Defined at:
  5088 ;;		line 836 in file "./functions.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  channel         1    wreg     unsigned char 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  channel         1    2[COMRAM] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5102 ;;      Params:         0       0       0       0       0       0       0
  5103 ;;      Locals:         1       0       0       0       0       0       0
  5104 ;;      Temps:          2       0       0       0       0       0       0
  5105 ;;      Totals:         3       0       0       0       0       0       0
  5106 ;;Total ram usage:        3 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_aveSensor
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text34
  5116  00721E                     __ptext34:
  5117                           	opt callstack 0
  5118  00721E                     _setADCChannel:
  5119                           	opt callstack 27
  5120                           
  5121                           ;incstack = 0
  5122                           ;setADCChannel@channel stored from wreg
  5123  00721E  6E03               	movwf	setADCChannel@channel,c
  5124                           
  5125                           ;./functions.c: 836: void setADCChannel(unsigned char channel);./functions.c: 837: {;./f
      +                          unctions.c: 838:     ADCON0bits.CHS = channel;
  5126  007220  C003  F001         	movff	setADCChannel@channel,??_setADCChannel
  5127  007224  4601               	rlncf	??_setADCChannel,f,c
  5128  007226  4601               	rlncf	??_setADCChannel,f,c
  5129  007228  50C2               	movf	4034,w,c	;volatile
  5130  00722A  1801               	xorwf	??_setADCChannel,w,c
  5131  00722C  0B83               	andlw	-125
  5132  00722E  1801               	xorwf	??_setADCChannel,w,c
  5133  007230  6EC2               	movwf	4034,c	;volatile
  5134                           
  5135                           ;./functions.c: 840:     switch (channel)
  5136  007232  D01C               	goto	l2520
  5137  007234                     l441:
  5138                           
  5139                           ;./functions.c: 843:         TRISBbits.TRISB2 = 1;
  5140  007234  8493               	bsf	3987,2,c	;volatile
  5141                           
  5142                           ;./functions.c: 844:         ANSELBbits.ANSB2 = 1;
  5143  007236  010F               	movlb	15	; () banked
  5144  007238  8539               	bsf	57,2,b	;volatile
  5145                           
  5146                           ;./functions.c: 845:         break;
  5147  00723A  0012               	return	
  5148  00723C                     l443:
  5149                           
  5150                           ;./functions.c: 847:         TRISBbits.TRISB3 = 1;
  5151  00723C  8693               	bsf	3987,3,c	;volatile
  5152                           
  5153                           ;./functions.c: 848:         ANSELBbits.ANSB3 = 1;
  5154  00723E  010F               	movlb	15	; () banked
  5155  007240  8739               	bsf	57,3,b	;volatile
  5156                           
  5157                           ;./functions.c: 849:         break;
  5158  007242  0012               	return	
  5159  007244                     l444:
  5160                           
  5161                           ;./functions.c: 851:         TRISBbits.TRISB1 = 1;
  5162  007244  8293               	bsf	3987,1,c	;volatile
  5163                           
  5164                           ;./functions.c: 852:         ANSELBbits.ANSB1 = 1;
  5165  007246  010F               	movlb	15	; () banked
  5166  007248  8339               	bsf	57,1,b	;volatile
  5167                           
  5168                           ;./functions.c: 853:         break;
  5169  00724A  0012               	return	
  5170  00724C                     l445:
  5171                           
  5172                           ;./functions.c: 855:         TRISBbits.TRISB0 = 1;
  5173  00724C  8093               	bsf	3987,0,c	;volatile
  5174                           
  5175                           ;./functions.c: 856:         ANSELBbits.ANSB0 = 1;
  5176  00724E  010F               	movlb	15	; () banked
  5177  007250  8139               	bsf	57,0,b	;volatile
  5178                           
  5179                           ;./functions.c: 857:         break;
  5180  007252  0012               	return	
  5181  007254                     l446:
  5182                           
  5183                           ;./functions.c: 859:         TRISBbits.TRISB5 = 1;
  5184  007254  8A93               	bsf	3987,5,c	;volatile
  5185                           
  5186                           ;./functions.c: 860:         ANSELBbits.ANSB5 = 1;
  5187  007256  010F               	movlb	15	; () banked
  5188  007258  8B39               	bsf	57,5,b	;volatile
  5189                           
  5190                           ;./functions.c: 861:         break;
  5191  00725A  0012               	return	
  5192  00725C                     l447:
  5193                           
  5194                           ;./functions.c: 863:         TRISCbits.TRISC3 = 1;
  5195  00725C  8694               	bsf	3988,3,c	;volatile
  5196                           
  5197                           ;./functions.c: 864:         ANSELCbits.ANSC3 = 1;
  5198  00725E  010F               	movlb	15	; () banked
  5199  007260  873A               	bsf	58,3,b	;volatile
  5200                           
  5201                           ;./functions.c: 865:         break;
  5202  007262  0012               	return	
  5203  007264                     l448:
  5204                           
  5205                           ;./functions.c: 868:         TRISBbits.TRISB0 = 1;
  5206  007264  8093               	bsf	3987,0,c	;volatile
  5207                           
  5208                           ;./functions.c: 869:         ANSELBbits.ANSB0 = 1;
  5209  007266  010F               	movlb	15	; () banked
  5210  007268  8139               	bsf	57,0,b	;volatile
  5211                           
  5212                           ;./functions.c: 870:         break;
  5213  00726A  0012               	return	
  5214  00726C                     l2520:
  5215  00726C  5003               	movf	setADCChannel@channel,w,c
  5216  00726E  6E01               	movwf	??_setADCChannel& (0+255),c
  5217  007270  6A02               	clrf	(??_setADCChannel+1)& (0+255),c
  5218                           
  5219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5220                           ; Switch size 1, requested type "simple"
  5221                           ; Number of cases is 1, Range of values is 0 to 0
  5222                           ; switch strategies available:
  5223                           ; Name         Instructions Cycles
  5224                           ; simple_byte            4     3 (average)
  5225                           ;	Chosen strategy is simple_byte
  5226  007272  5002               	movf	??_setADCChannel+1,w,c
  5227  007274  0A00               	xorlw	0	; case 0
  5228  007276  A4D8               	btfss	status,2,c
  5229  007278  D7F5               	goto	l448
  5230                           
  5231                           ; Switch size 1, requested type "simple"
  5232                           ; Number of cases is 6, Range of values is 8 to 15
  5233                           ; switch strategies available:
  5234                           ; Name         Instructions Cycles
  5235                           ; simple_byte           19    10 (average)
  5236                           ;	Chosen strategy is simple_byte
  5237  00727A  5001               	movf	??_setADCChannel,w,c
  5238  00727C  0A08               	xorlw	8	; case 8
  5239  00727E  B4D8               	btfsc	status,2,c
  5240  007280  D7D9               	goto	l441
  5241  007282  0A01               	xorlw	1	; case 9
  5242  007284  B4D8               	btfsc	status,2,c
  5243  007286  D7DA               	goto	l443
  5244  007288  0A03               	xorlw	3	; case 10
  5245  00728A  B4D8               	btfsc	status,2,c
  5246  00728C  D7DB               	goto	l444
  5247  00728E  0A06               	xorlw	6	; case 12
  5248  007290  B4D8               	btfsc	status,2,c
  5249  007292  D7DC               	goto	l445
  5250  007294  0A01               	xorlw	1	; case 13
  5251  007296  B4D8               	btfsc	status,2,c
  5252  007298  D7DD               	goto	l446
  5253  00729A  0A02               	xorlw	2	; case 15
  5254  00729C  B4D8               	btfsc	status,2,c
  5255  00729E  D7DE               	goto	l447
  5256  0072A0  D7E1               	goto	l448
  5257  0072A2                     __end_of_setADCChannel:
  5258                           	opt callstack 0
  5259                           
  5260 ;; *************** function _readADC *****************
  5261 ;; Defined at:
  5262 ;;		line 877 in file "./functions.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      unsigned char 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5276 ;;      Params:         0       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_aveSensor
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text35
  5290  006CEA                     __ptext35:
  5291                           	opt callstack 0
  5292  006CEA                     _readADC:
  5293                           	opt callstack 27
  5294                           
  5295                           ;./functions.c: 879:     ADCON0bits.GO = 1;
  5296                           
  5297                           ; BSR set to: 15
  5298                           ;incstack = 0
  5299  006CEA  82C2               	bsf	4034,1,c	;volatile
  5300  006CEC                     l452:
  5301                           
  5302                           ;./functions.c: 881:     while (ADCON0bits.GO)
  5303  006CEC  B2C2               	btfsc	4034,1,c	;volatile
  5304  006CEE  D7FE               	goto	l452
  5305                           
  5306                           ;./functions.c: 883:     return ADRESH;
  5307  006CF0  50C4               	movf	4036,w,c	;volatile
  5308  006CF2  0012               	return		;funcret
  5309  006CF4                     __end_of_readADC:
  5310                           	opt callstack 0
  5311                           
  5312 ;; *************** function _PRC *****************
  5313 ;; Defined at:
  5314 ;;		line 335 in file "./functions.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  a               1   56[COMRAM] unsigned char 
  5319 ;;  a               1   55[COMRAM] unsigned char 
  5320 ;;  a               1   54[COMRAM] unsigned char 
  5321 ;;  a               1   53[COMRAM] unsigned char 
  5322 ;;  a               1   52[COMRAM] unsigned char 
  5323 ;;  a               1   51[COMRAM] unsigned char 
  5324 ;;  a               1   50[COMRAM] unsigned char 
  5325 ;;  a               1   49[COMRAM] unsigned char 
  5326 ;;  a               1   48[COMRAM] unsigned char 
  5327 ;;  message        32   11[COMRAM] unsigned char [32]
  5328 ;;  message2        5   43[COMRAM] unsigned char [5]
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5338 ;;      Params:         0       0       0       0       0       0       0
  5339 ;;      Locals:        46       0       0       0       0       0       0
  5340 ;;      Temps:          2       0       0       0       0       0       0
  5341 ;;      Totals:        48       0       0       0       0       0       0
  5342 ;;Total ram usage:       48 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    2
  5345 ;; This function calls:
  5346 ;;		_error
  5347 ;;		_trans
  5348 ;; This function is called by:
  5349 ;;		_RCE
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text36
  5354  00786E                     __ptext36:
  5355                           	opt callstack 0
  5356  00786E                     _PRC:
  5357                           	opt callstack 27
  5358                           
  5359                           ;./functions.c: 337:     PORTD = 0b11111001;
  5360                           
  5361                           ;incstack = 0
  5362  00786E  0EF9               	movlw	249
  5363  007870  6E83               	movwf	3971,c	;volatile
  5364  007872                     l3346:
  5365                           
  5366                           ;./functions.c: 339:     {;./functions.c: 340:         unsigned char message[] = "\nWhat
      +                           color should sanic race?\n";
  5367  007872  EE20  F060         	lfsr	2,PRC@F6024
  5368  007876  EE10  F00C         	lfsr	1,PRC@message
  5369  00787A  0E1F               	movlw	31
  5370  00787C                     u2391:
  5371  00787C  CFDB FFE3          	movff	plusw2,plusw1
  5372  007880  06E8               	decf	wreg,f,c
  5373  007882  E2FC               	bc	u2391
  5374                           
  5375                           ;./functions.c: 341:         unsigned char message2[] = "\nSet";
  5376  007884  EE20  F0C8         	lfsr	2,PRC@F6026
  5377  007888  EE10  F02C         	lfsr	1,PRC@message2
  5378  00788C  0E04               	movlw	4
  5379  00788E                     u2401:
  5380  00788E  CFDB FFE3          	movff	plusw2,plusw1
  5381  007892  06E8               	decf	wreg,f,c
  5382  007894  E2FC               	bc	u2401
  5383                           
  5384                           ;./functions.c: 343:         for (unsigned char a = 0; a < 31; a++)
  5385  007896  0E00               	movlw	0
  5386  007898  6E31               	movwf	PRC@a,c
  5387  00789A                     l3354:
  5388                           
  5389                           ;./functions.c: 344:         {;./functions.c: 345:             trans(message[a]);
  5390  00789A  0E0C               	movlw	low PRC@message
  5391  00789C  2431               	addwf	PRC@a,w,c
  5392  00789E  6ED9               	movwf	fsr2l,c
  5393  0078A0  6ADA               	clrf	fsr2h,c
  5394  0078A2  0E00               	movlw	high PRC@message
  5395  0078A4  22DA               	addwfc	fsr2h,f,c
  5396  0078A6  50DF               	movf	indf2,w,c
  5397  0078A8  EC89  F036         	call	_trans
  5398                           
  5399                           ;./functions.c: 346:         }
  5400  0078AC  2A31               	incf	PRC@a,f,c
  5401  0078AE  0E1E               	movlw	30
  5402  0078B0  6431               	cpfsgt	PRC@a,c
  5403  0078B2  D7F3               	goto	l3354
  5404  0078B4                     u2410:
  5405  0078B4  BA9E               	btfsc	3998,5,c	;volatile
  5406  0078B6  D088               	goto	l3470
  5407  0078B8  D7FD               	goto	u2410
  5408  0078BA                     l3360:
  5409                           
  5410                           ;./functions.c: 352:             for (unsigned char a = 0; a < 8; a++)
  5411  0078BA  0E00               	movlw	0
  5412  0078BC  6E32               	movwf	PRC@a_1179,c
  5413  0078BE                     l3366:
  5414                           
  5415                           ;./functions.c: 353:             {;./functions.c: 354:                 raceColor[a] = 0;
  5416  0078BE  0EB2               	movlw	low _raceColor
  5417  0078C0  2432               	addwf	PRC@a_1179,w,c
  5418  0078C2  6ED9               	movwf	fsr2l,c
  5419  0078C4  6ADA               	clrf	fsr2h,c
  5420  0078C6  0E00               	movlw	high _raceColor
  5421  0078C8  22DA               	addwfc	fsr2h,f,c
  5422  0078CA  0E00               	movlw	0
  5423  0078CC  6EDF               	movwf	indf2,c
  5424                           
  5425                           ;./functions.c: 355:             }
  5426  0078CE  2A32               	incf	PRC@a_1179,f,c
  5427  0078D0  0E07               	movlw	7
  5428  0078D2  6432               	cpfsgt	PRC@a_1179,c
  5429  0078D4  D7F4               	goto	l3366
  5430                           
  5431                           ;./functions.c: 356:             raceColor[3] = 1;
  5432  0078D6  0E01               	movlw	1
  5433  0078D8  0100               	movlb	0	; () banked
  5434  0078DA  6FB5               	movwf	(_raceColor+3)& (0+255),b
  5435                           
  5436                           ;./functions.c: 357:             for (unsigned char a = 0; a < 4; a++)
  5437  0078DC  0E00               	movlw	0
  5438  0078DE  6E33               	movwf	PRC@a_1180,c
  5439  0078E0                     l3378:
  5440                           
  5441                           ;./functions.c: 358:             {;./functions.c: 359:                 trans(message2[a]
      +                          );
  5442  0078E0  0E2C               	movlw	low PRC@message2
  5443  0078E2  2433               	addwf	PRC@a_1180,w,c
  5444  0078E4  6ED9               	movwf	fsr2l,c
  5445  0078E6  6ADA               	clrf	fsr2h,c
  5446  0078E8  0E00               	movlw	high PRC@message2
  5447  0078EA  22DA               	addwfc	fsr2h,f,c
  5448  0078EC  50DF               	movf	indf2,w,c
  5449  0078EE  EC89  F036         	call	_trans
  5450                           
  5451                           ;./functions.c: 360:             }
  5452  0078F2  2A33               	incf	PRC@a_1180,f,c
  5453  0078F4  0E03               	movlw	3
  5454  0078F6  6433               	cpfsgt	PRC@a_1180,c
  5455  0078F8  D7F3               	goto	l3378
  5456  0078FA  0012               	return	
  5457  0078FC                     l3386:
  5458                           
  5459                           ;./functions.c: 364:             for (unsigned char a = 0; a < 8; a++)
  5460  0078FC  0E00               	movlw	0
  5461  0078FE  6E34               	movwf	PRC@a_1181,c
  5462  007900                     l3392:
  5463                           
  5464                           ;./functions.c: 365:             {;./functions.c: 366:                 raceColor[a] = 0;
  5465  007900  0EB2               	movlw	low _raceColor
  5466  007902  2434               	addwf	PRC@a_1181,w,c
  5467  007904  6ED9               	movwf	fsr2l,c
  5468  007906  6ADA               	clrf	fsr2h,c
  5469  007908  0E00               	movlw	high _raceColor
  5470  00790A  22DA               	addwfc	fsr2h,f,c
  5471  00790C  0E00               	movlw	0
  5472  00790E  6EDF               	movwf	indf2,c
  5473                           
  5474                           ;./functions.c: 367:             }
  5475  007910  2A34               	incf	PRC@a_1181,f,c
  5476  007912  0E07               	movlw	7
  5477  007914  6434               	cpfsgt	PRC@a_1181,c
  5478  007916  D7F4               	goto	l3392
  5479                           
  5480                           ;./functions.c: 368:             raceColor[1] = 1;
  5481  007918  0E01               	movlw	1
  5482  00791A  0100               	movlb	0	; () banked
  5483  00791C  6FB3               	movwf	(_raceColor+1)& (0+255),b
  5484                           
  5485                           ;./functions.c: 369:             for (unsigned char a = 0; a < 4; a++)
  5486  00791E  0E00               	movlw	0
  5487  007920  6E35               	movwf	PRC@a_1182,c
  5488  007922                     l3404:
  5489                           
  5490                           ;./functions.c: 370:             {;./functions.c: 371:                 trans(message2[a]
      +                          );
  5491  007922  0E2C               	movlw	low PRC@message2
  5492  007924  2435               	addwf	PRC@a_1182,w,c
  5493  007926  6ED9               	movwf	fsr2l,c
  5494  007928  6ADA               	clrf	fsr2h,c
  5495  00792A  0E00               	movlw	high PRC@message2
  5496  00792C  22DA               	addwfc	fsr2h,f,c
  5497  00792E  50DF               	movf	indf2,w,c
  5498  007930  EC89  F036         	call	_trans
  5499                           
  5500                           ;./functions.c: 372:             }
  5501  007934  2A35               	incf	PRC@a_1182,f,c
  5502  007936  0E03               	movlw	3
  5503  007938  6435               	cpfsgt	PRC@a_1182,c
  5504  00793A  D7F3               	goto	l3404
  5505  00793C  0012               	return	
  5506  00793E                     l3412:
  5507                           
  5508                           ;./functions.c: 376:             for (unsigned char a = 0; a < 8; a++)
  5509  00793E  0E00               	movlw	0
  5510  007940  6E36               	movwf	PRC@a_1183,c
  5511  007942                     l3418:
  5512                           
  5513                           ;./functions.c: 377:             {;./functions.c: 378:                 raceColor[a] = 0;
  5514  007942  0EB2               	movlw	low _raceColor
  5515  007944  2436               	addwf	PRC@a_1183,w,c
  5516  007946  6ED9               	movwf	fsr2l,c
  5517  007948  6ADA               	clrf	fsr2h,c
  5518  00794A  0E00               	movlw	high _raceColor
  5519  00794C  22DA               	addwfc	fsr2h,f,c
  5520  00794E  0E00               	movlw	0
  5521  007950  6EDF               	movwf	indf2,c
  5522                           
  5523                           ;./functions.c: 379:             }
  5524  007952  2A36               	incf	PRC@a_1183,f,c
  5525  007954  0E07               	movlw	7
  5526  007956  6436               	cpfsgt	PRC@a_1183,c
  5527  007958  D7F4               	goto	l3418
  5528                           
  5529                           ;./functions.c: 380:             raceColor[2] = 1;
  5530  00795A  0E01               	movlw	1
  5531  00795C  0100               	movlb	0	; () banked
  5532  00795E  6FB4               	movwf	(_raceColor+2)& (0+255),b
  5533                           
  5534                           ;./functions.c: 381:             for (unsigned char a = 0; a < 4; a++)
  5535  007960  0E00               	movlw	0
  5536  007962  6E37               	movwf	PRC@a_1184,c
  5537  007964                     l3430:
  5538                           
  5539                           ;./functions.c: 382:             {;./functions.c: 383:                 trans(message2[a]
      +                          );
  5540  007964  0E2C               	movlw	low PRC@message2
  5541  007966  2437               	addwf	PRC@a_1184,w,c
  5542  007968  6ED9               	movwf	fsr2l,c
  5543  00796A  6ADA               	clrf	fsr2h,c
  5544  00796C  0E00               	movlw	high PRC@message2
  5545  00796E  22DA               	addwfc	fsr2h,f,c
  5546  007970  50DF               	movf	indf2,w,c
  5547  007972  EC89  F036         	call	_trans
  5548                           
  5549                           ;./functions.c: 384:             }
  5550  007976  2A37               	incf	PRC@a_1184,f,c
  5551  007978  0E03               	movlw	3
  5552  00797A  6437               	cpfsgt	PRC@a_1184,c
  5553  00797C  D7F3               	goto	l3430
  5554  00797E  0012               	return	
  5555  007980                     l3438:
  5556                           
  5557                           ;./functions.c: 388:             for (unsigned char a = 0; a < 8; a++)
  5558  007980  0E00               	movlw	0
  5559  007982  6E38               	movwf	PRC@a_1185,c
  5560  007984                     l3444:
  5561                           
  5562                           ;./functions.c: 389:             {;./functions.c: 390:                 raceColor[a] = 0;
  5563  007984  0EB2               	movlw	low _raceColor
  5564  007986  2438               	addwf	PRC@a_1185,w,c
  5565  007988  6ED9               	movwf	fsr2l,c
  5566  00798A  6ADA               	clrf	fsr2h,c
  5567  00798C  0E00               	movlw	high _raceColor
  5568  00798E  22DA               	addwfc	fsr2h,f,c
  5569  007990  0E00               	movlw	0
  5570  007992  6EDF               	movwf	indf2,c
  5571                           
  5572                           ;./functions.c: 391:             }
  5573  007994  2A38               	incf	PRC@a_1185,f,c
  5574  007996  0E07               	movlw	7
  5575  007998  6438               	cpfsgt	PRC@a_1185,c
  5576  00799A  D7F4               	goto	l3444
  5577                           
  5578                           ;./functions.c: 392:             raceColor[4] = 1;
  5579  00799C  0E01               	movlw	1
  5580  00799E  0100               	movlb	0	; () banked
  5581  0079A0  6FB6               	movwf	(_raceColor+4)& (0+255),b
  5582                           
  5583                           ;./functions.c: 393:             for (unsigned char a = 0; a < 4; a++)
  5584  0079A2  0E00               	movlw	0
  5585  0079A4  6E39               	movwf	PRC@a_1186,c
  5586  0079A6                     l3456:
  5587                           
  5588                           ;./functions.c: 394:             {;./functions.c: 395:                 trans(message2[a]
      +                          );
  5589  0079A6  0E2C               	movlw	low PRC@message2
  5590  0079A8  2439               	addwf	PRC@a_1186,w,c
  5591  0079AA  6ED9               	movwf	fsr2l,c
  5592  0079AC  6ADA               	clrf	fsr2h,c
  5593  0079AE  0E00               	movlw	high PRC@message2
  5594  0079B0  22DA               	addwfc	fsr2h,f,c
  5595  0079B2  50DF               	movf	indf2,w,c
  5596  0079B4  EC89  F036         	call	_trans
  5597                           
  5598                           ;./functions.c: 396:             }
  5599  0079B8  2A39               	incf	PRC@a_1186,f,c
  5600  0079BA  0E03               	movlw	3
  5601  0079BC  6439               	cpfsgt	PRC@a_1186,c
  5602  0079BE  D7F3               	goto	l3456
  5603  0079C0  0012               	return	
  5604  0079C2                     l3464:
  5605                           
  5606                           ;./functions.c: 401:             error();
  5607  0079C2  EC7E  F037         	call	_error	;wreg free
  5608                           
  5609                           ;./functions.c: 402:             continue;
  5610  0079C6  D755               	goto	l3346
  5611  0079C8                     l3470:
  5612  0079C8  50AE               	movf	4014,w,c	;volatile
  5613  0079CA  6E0A               	movwf	??_PRC& (0+255),c
  5614  0079CC  6A0B               	clrf	(??_PRC+1)& (0+255),c
  5615                           
  5616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5617                           ; Switch size 1, requested type "simple"
  5618                           ; Number of cases is 1, Range of values is 0 to 0
  5619                           ; switch strategies available:
  5620                           ; Name         Instructions Cycles
  5621                           ; simple_byte            4     3 (average)
  5622                           ;	Chosen strategy is simple_byte
  5623  0079CE  500B               	movf	??_PRC+1,w,c
  5624  0079D0  0A00               	xorlw	0	; case 0
  5625  0079D2  A4D8               	btfss	status,2,c
  5626  0079D4  D7F6               	goto	l3464
  5627                           
  5628                           ; Switch size 1, requested type "simple"
  5629                           ; Number of cases is 4, Range of values is 66 to 110
  5630                           ; switch strategies available:
  5631                           ; Name         Instructions Cycles
  5632                           ; simple_byte           13     7 (average)
  5633                           ;	Chosen strategy is simple_byte
  5634  0079D6  500A               	movf	??_PRC,w,c
  5635  0079D8  0A42               	xorlw	66	; case 66
  5636  0079DA  B4D8               	btfsc	status,2,c
  5637  0079DC  D76E               	goto	l3360
  5638  0079DE  0A05               	xorlw	5	; case 71
  5639  0079E0  B4D8               	btfsc	status,2,c
  5640  0079E2  D78C               	goto	l3386
  5641  0079E4  0A15               	xorlw	21	; case 82
  5642  0079E6  B4D8               	btfsc	status,2,c
  5643  0079E8  D7AA               	goto	l3412
  5644  0079EA  0A3C               	xorlw	60	; case 110
  5645  0079EC  B4D8               	btfsc	status,2,c
  5646  0079EE  D7C8               	goto	l3438
  5647  0079F0  D7E8               	goto	l3464
  5648  0079F2                     __end_of_PRC:
  5649                           	opt callstack 0
  5650                           
  5651 ;; *************** function _error *****************
  5652 ;; Defined at:
  5653 ;;		line 915 in file "./functions.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  a               1    8[COMRAM] unsigned char 
  5658 ;;  message         7    1[COMRAM] unsigned char [7]
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5668 ;;      Params:         0       0       0       0       0       0       0
  5669 ;;      Locals:         8       0       0       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0       0       0
  5671 ;;      Totals:         8       0       0       0       0       0       0
  5672 ;;Total ram usage:        8 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    1
  5675 ;; This function calls:
  5676 ;;		_trans
  5677 ;; This function is called by:
  5678 ;;		_PRC
  5679 ;;		_RCE
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text37
  5684  006EFC                     __ptext37:
  5685                           	opt callstack 0
  5686  006EFC                     _error:
  5687                           	opt callstack 28
  5688                           
  5689                           ;./functions.c: 917:     unsigned char message[] = "ERROR\n";
  5690                           
  5691                           ;incstack = 0
  5692  006EFC  EE20  F0BB         	lfsr	2,error@F6083
  5693  006F00  EE10  F002         	lfsr	1,error@message
  5694  006F04  0E06               	movlw	6
  5695  006F06                     u1781:
  5696  006F06  CFDB FFE3          	movff	plusw2,plusw1
  5697  006F0A  06E8               	decf	wreg,f,c
  5698  006F0C  E2FC               	bc	u1781
  5699                           
  5700                           ;./functions.c: 919:     for (unsigned char a = 0; a < 6; a++)
  5701  006F0E  0E00               	movlw	0
  5702  006F10  6E09               	movwf	error@a,c
  5703  006F12                     l2876:
  5704                           
  5705                           ;./functions.c: 920:     {;./functions.c: 921:         trans(message[a]);
  5706  006F12  0E02               	movlw	low error@message
  5707  006F14  2409               	addwf	error@a,w,c
  5708  006F16  6ED9               	movwf	fsr2l,c
  5709  006F18  6ADA               	clrf	fsr2h,c
  5710  006F1A  0E00               	movlw	high error@message
  5711  006F1C  22DA               	addwfc	fsr2h,f,c
  5712  006F1E  50DF               	movf	indf2,w,c
  5713  006F20  EC89  F036         	call	_trans
  5714                           
  5715                           ;./functions.c: 922:     }
  5716  006F24  2A09               	incf	error@a,f,c
  5717  006F26  0E05               	movlw	5
  5718  006F28  6409               	cpfsgt	error@a,c
  5719  006F2A  D7F3               	goto	l2876
  5720                           
  5721                           ;./functions.c: 924:     RCREG = 0;
  5722  006F2C  0E00               	movlw	0
  5723  006F2E  6EAE               	movwf	4014,c	;volatile
  5724  006F30  0012               	return		;funcret
  5725  006F32                     __end_of_error:
  5726                           	opt callstack 0
  5727                           
  5728 ;; *************** function _trans *****************
  5729 ;; Defined at:
  5730 ;;		line 820 in file "./functions.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  s               1    wreg     unsigned char 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  s               1    0[COMRAM] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5744 ;;      Params:         0       0       0       0       0       0       0
  5745 ;;      Locals:         1       0       0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0
  5747 ;;      Totals:         1       0       0       0       0       0       0
  5748 ;;Total ram usage:        1 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_PRC
  5754 ;;		_pyCal
  5755 ;;		_capTouch
  5756 ;;		_error
  5757 ;;		_RCE
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text38
  5762  006D12                     __ptext38:
  5763                           	opt callstack 0
  5764  006D12                     _trans:
  5765                           	opt callstack 29
  5766                           
  5767                           ;incstack = 0
  5768                           ;trans@s stored from wreg
  5769  006D12  6E01               	movwf	trans@s,c
  5770  006D14                     
  5771                           ;./functions.c: 822:     while (!PIR1bits.TX1IF)
  5772                           
  5773                           ;./functions.c: 823:         ;
  5774  006D14  A89E               	btfss	3998,4,c	;volatile
  5775  006D16  D7FE               	goto	l2774
  5776                           
  5777                           ;./functions.c: 824:     TXREG = s;
  5778  006D18  C001  FFAD         	movff	trans@s,4013	;volatile
  5779  006D1C  0012               	return		;funcret
  5780  006D1E                     __end_of_trans:
  5781                           	opt callstack 0
  5782  0000                     
  5783                           	psect	rparam
  5784  0000                     tosu	equ	0xFFF
  5785                           tosh	equ	0xFFE
  5786                           tosl	equ	0xFFD
  5787                           stkptr	equ	0xFFC
  5788                           pclatu	equ	0xFFB
  5789                           pclath	equ	0xFFA
  5790                           pcl	equ	0xFF9
  5791                           tblptru	equ	0xFF8
  5792                           tblptrh	equ	0xFF7
  5793                           tblptrl	equ	0xFF6
  5794                           tablat	equ	0xFF5
  5795                           prodh	equ	0xFF4
  5796                           prodl	equ	0xFF3
  5797                           indf0	equ	0xFEF
  5798                           postinc0	equ	0xFEE
  5799                           postdec0	equ	0xFED
  5800                           preinc0	equ	0xFEC
  5801                           plusw0	equ	0xFEB
  5802                           fsr0h	equ	0xFEA
  5803                           fsr0l	equ	0xFE9
  5804                           wreg	equ	0xFE8
  5805                           indf1	equ	0xFE7
  5806                           postinc1	equ	0xFE6
  5807                           postdec1	equ	0xFE5
  5808                           preinc1	equ	0xFE4
  5809                           plusw1	equ	0xFE3
  5810                           fsr1h	equ	0xFE2
  5811                           fsr1l	equ	0xFE1
  5812                           bsr	equ	0xFE0
  5813                           indf2	equ	0xFDF
  5814                           postinc2	equ	0xFDE
  5815                           postdec2	equ	0xFDD
  5816                           preinc2	equ	0xFDC
  5817                           plusw2	equ	0xFDB
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        146
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      95
    BANK0           160     20     159
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    classifyColors@sensorRanges	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(COMRAM[5]), 
		 -> LLranges(COMRAM[5]), 

    classifyColors@F6061	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(COMRAM[5]), 
		 -> LLranges(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_RCE
    _RCE->_capTouch
    _pyCal->_msDelay
    _navigate->_msDelay
    _readAllSensors->_aveSensor
    _capTouch->_msDelay
    _calibrate->_oneSecDelay
    _oneSecDelay->_msDelay
    _msDelay->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _aveSensor->_setADCChannel
    _PRC->_error
    _error->_trans

Critical Paths under _main in BANK0

    _main->_RCE

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15460
                                _RCE
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupADC
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RCE                                                 22    22      0   15460
                                             81 COMRAM     2     2      0
                                              0 BANK0     20    20      0
                                _PRC
                          _calibrate
                           _capTouch
                              _error
                           _navigate
                              _pyCal
                              _trans
 ---------------------------------------------------------------------------------
 (2) _pyCal                                                2     2      0    3023
                                             50 COMRAM     2     2      0
                          _aveSensor
                            _msDelay
                           _setupADC
                              _trans
 ---------------------------------------------------------------------------------
 (2) _navigate                                             0     0      0    3585
                     _classifyColors
                 _determineDirection
               _displayColorDetected
                   _displayRaceColor
                            _msDelay
                     _readAllSensors
                           _setupADC
                       _setupPWMLeft
                      _setupPWMRight
                         _stopMotors
                          _testBlack
 ---------------------------------------------------------------------------------
 (3) _testBlack                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _stopMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMRight                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMLeft                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readAllSensors                                       2     2      0     249
                                             10 COMRAM     2     2      0
                          _aveSensor
 ---------------------------------------------------------------------------------
 (3) _displayRaceColor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displayColorDetected                                 3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _determineDirection                                   1     1      0     116
                                              0 COMRAM     1     1      0
                           _hardLeft
                          _hardRight
                               _left
                              _right
                         _searchMode
                           _straight
 ---------------------------------------------------------------------------------
 (4) _straight                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _searchMode                                           0     0      0       0
                        _timer1setup
 ---------------------------------------------------------------------------------
 (5) _timer1setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _right                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _left                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _hardRight                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _hardLeft                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _classifyColors                                      15    15      0     425
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (2) _capTouch                                            31    31      0    3239
                                             50 COMRAM    31    31      0
                                _abs
                          _aveSensor
                            _msDelay
                              _trans
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calibrate                                           11    11      0    4335
                                             51 COMRAM    11    11      0
                          _aveSensor
                        _oneSecDelay
 ---------------------------------------------------------------------------------
 (3) _oneSecDelay                                          1     1      0    2819
                                             50 COMRAM     1     1      0
                            _msDelay
 ---------------------------------------------------------------------------------
 (3) _msDelay                                              1     1      0    2773
                                             49 COMRAM     1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _aveSensor                                            7     7      0     159
                                              3 COMRAM     7     7      0
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (4) _setADCChannel                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PRC                                                 48    48      0     865
                                              9 COMRAM    48    48      0
                              _error
                              _trans
 ---------------------------------------------------------------------------------
 (2) _error                                                8     8      0     114
                                              1 COMRAM     8     8      0
                              _trans
 ---------------------------------------------------------------------------------
 (2) _trans                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RCE
     _PRC
       _error
         _trans
       _trans
     _calibrate
       _aveSensor
         _readADC
         _setADCChannel
       _oneSecDelay
         _msDelay
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _capTouch
       _abs
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _trans
     _error
       _trans
     _navigate
       _classifyColors
       _determineDirection
         _hardLeft
         _hardRight
         _left
         _right
         _searchMode
           _timer1setup
         _straight
       _displayColorDetected
       _displayRaceColor
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _readAllSensors
         _aveSensor
           _readADC
           _setADCChannel
       _setupADC
       _setupPWMLeft
       _setupPWMRight
       _stopMotors
       _testBlack
     _pyCal
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _setupADC
       _trans
     _trans
   _init
     _clearPorts
     _setupADC
     _setupOSC
     _setupSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     14      9F       4       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     53      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FE       9        0.0%
DATA                 0      0      FE      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 26 18:01:06 2019

               _colorsDetected 00FA                  capTouch@F6042 0080                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                  __CFG_LVP$ON 000000                            l304 704C                            l322 721C  
                          l410 73EC                            l404 73B0                            l406 73BC  
                          l407 73C8                            l328 6CF8                            l408 73D4  
                          l512 7556                            l441 7234                            l361 72DA  
                          l409 73E0                            l443 723C                            l452 6CEC  
                          l444 7244                            l445 724C                            l446 7254  
                          l518 7568                            l447 725C                            l448 7264  
                          l480 719E                            l497 6D10                   __CFG_CPB$OFF 000000  
                          _RCE 74EE                            _PR2 000FBB                            _PR4 000F52  
                 __CFG_CPD$OFF 000000                            _PR6 000F4B                            _PRC 786E  
                          _abs 6E98                            _col 0054                            prod 000FF3  
                          wreg 000FE8                   ___flmul@aexp 0020                   ___flmul@bexp 0021  
                 ___flmul@sign 001B                   ___flmul@temp 0026                   ___flmul@prod 0022  
              ??_setupPWMRight 0001                           ?_RCE 0001                           ?_PRC 0001  
                         RCE@a 00F8                   ___fltol@exp1 0031                           PRC@a 0031  
                         l1211 6EC0                           ?_abs 0001                           l1150 7D2E  
                         l1160 7F42                           l3002 7320                           l1167 7FCC  
                         l1159 7F46                           l1191 776C                           l3200 7B30  
                         l3018 6ED8                           l1198 77EA                           l2520 726C  
                         l3304 7C38                           l3412 793E                           l3404 7922  
                         l2620 7F0C                           l3252 7BB4                           l3148 7AAC  
                         l3430 7964                           l2614 7EEE                           l2702 74DC  
                         l3360 78BA                           l2640 7F8A                           l2544 7CDA  
                         l2720 77A0                           l2712 777C                           l3096 7A28  
                         l3418 7942                           l3354 789A                           l3346 7872  
                         l2562 7D1A                           l2546 7CDE                           l2730 7810  
                         l2722 77AC                           l3602 7542                           l3444 7984  
                         l2644 7FA8                           l2572 7D4C                           l2564 7D1E  
                         l2548 7CEE                           l2732 781C                           l2724 77D2  
                         l2900 6FA0                           l3532 708A                           l3620 7586  
                         l3438 7980                           l3366 78BE                           l3470 79C8  
                         l2718 779A                           l3630 75A4                           l3622 758C  
                         l3606 7550                           l3464 79C2                           l3456 79A6  
                         l3392 7900                           l2656 7FEA                           l2912 6F3A  
                         l3480 6FFA                           l3624 7592                           l3386 78FC  
                         l3378 78E0                           l2762 6FC0                           l3554 71E4  
                         l3546 71C2                           l2930 7654                           l3490 7004  
                         l3642 75E0                           l3626 7598                           l3634 75AA  
                         l3618 757E                           l2684 749C                           l2668 7452  
                         l2748 785C                           l3628 759E                           l3636 75DA  
                         l2774 6D14                           l2694 74B4                           l2862 6D40  
                         l2942 7714                           l2934 7694                           l2926 7610  
                         l2696 74C0                           l2688 74AC                           l2952 73F8  
                         l2938 76D4                           l2970 72C6                           l2962 72B2  
                         l2876 6F12                           l2892 6F88                           l3588 750A  
                         l2990 72F6                           l2974 72D0                           l2966 72BC  
                         l3598 7534                           l2896 6F94                           l2888 6F7C  
                         l2994 7304                           l2986 72E8                           l2998 7312  
                         u2020 6ED4                           _LATA 000F89                           u2070 6EA6  
                         _LATB 000F8A                           _LATC 000F8B                           u1440 7D3A  
                         _LATD 000F8C                           _FSR0 000FE9                           u2401 788E  
                         u2081 7A00                           _LATE 000F8D                           u2410 78B4  
                         u1530 7F98                           u1450 7EB0                           u1610 74C6  
                         u1540 7FB6                           u1455 7EA6                           u1560 7440  
                         u1490 7F3C                           u1570 7470                           u2621 74FC  
                         u2391 787C                           u1575 7466                           u1690 7826  
                         u1850 6F6C                           u2570 7084                           u1781 6F06  
                         u1861 7604                           u2591 71B6                           _TMR1 000FCE  
                         _TMR2 000FBC                           _TMR4 000F53                           _TMR6 000F4C  
                         abs@a 0001                           _main 6D08                           _left 6DB4  
                         _init 6D68                           _size 0055                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                  __CFG_BORV$190 000000  
                         prodh 000FF4                           prodl 000FF3                           start 0000  
                __CFG_IESO$OFF 000000          ?_displayColorDetected 0001                   ___param_bank 000000  
               capTouch@touch1 004F                 capTouch@touch2 0050                          ??_RCE 0052  
                        ??_PRC 000A                          ??_abs 0003                   _BAUDCON1bits 000FB8  
                ___fltol@sign1 0030                          ?_main 0001                          ?_left 0001  
                        ?_init 0001                __end_of___flmul 8000                __end_of___fltol 74EE  
                        _T1CON 000FCD                          _T2CON 000FBA                          _T4CON 000F51  
                        _T6CON 000F4A                          _RCREG 000FAE                          _PORTA 000F80  
                        _PORTB 000F81                          _PORTC 000F82                          _PORTD 000F83  
                        _PORTE 000F84                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                        _TXREG 000FAD         __size_of_setADCChannel 0084                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                   ?_oneSecDelay 0001                 __CFG_EBTR3$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
              __end_of_msDelay 71AC                __end_of_readADC 6CF4                 __CFG_EBTRB$OFF 000000  
                        _error 6EFC                          _pyCal 6FF2                          _right 6DCE  
           __CFG_MCLRE$EXTMCLR 000000                          _trans 6D12                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
               __CFG_HFOFST$ON 000000                 __CFG_PBADEN$ON 000000                capTouch@message 0033  
              __initialization 7096                   __end_of_main 6D12                   __end_of_left 6DCE  
                 __end_of_init 6D80                  calibrate@temp 003E                         ??_main 0054  
                       ??_left 0001                         ??_init 0001                  __activetblptr 000002  
                       _ADCON1 000FC1                         ?_error 0001                         ?_pyCal 0001  
                       _ADRESH 000FC4                         _CCPR1L 000FBE                         _CCPR5L 000F55  
  __size_of_determineDirection 0084                         ?_right 0001                         ?_trans 0001  
                       _ANSELA 000F38                         _ANSELB 000F39                         _ANSELC 000F3A  
                       _ANSELD 000F3B                         _ANSELE 000F3C               calibrate@samples 0039  
               __CFG_WDTEN$OFF 000000               calibrate@sensors 0034                         _RCSTA1 000FAB  
                       _SPBRG1 000FAF               __end_of_capTouch 721E               __end_of___xxtofl 786E  
                       _TXSTA1 000FAC         ??_displayColorDetected 0001                  _setADCChannel 721E  
             __end_of_hardLeft 6D9A                 __CFG_XINST$OFF 000000                 __CFG_STVREN$ON 000000  
                    ??___flmul 0017                      ??___fltol 002C                   ?_timer1setup 0001  
             __end_of_navigate 7096                classifyColors@a 000F        __size_of_readAllSensors 003C  
                    ??_msDelay 0032                      ??_readADC 0001                         error@a 0009  
                       pyCal@a 0034                   __pdataCOMRAM 0054               __end_of_setupADC 6E24  
             __end_of_setupOSC 6D08                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             RCE@commandReceived 00F4                         trans@s 0001  
                 ?_setupSerial 0001               __end_of_straight 6E02                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 70E2                 ?_setADCChannel 0001                  ___rparam_used 000001  
                   ___fltol@f1 0028              ?_displayRaceColor 0001                 __pcstackCOMRAM 0001  
               calibrate@F6015 00CD             __size_of_calibrate 02BC                   __pidataBANK0 7326  
           ??_displayRaceColor 0001           setADCChannel@channel 0003                  __end_of_error 6F32  
                __end_of_pyCal 7040                  __end_of_right 6DE8                  __end_of_trans 6D1E  
                    RCE@a_1345 00F9             __size_of_aveSensor 0046             __size_of_hardRight 001A  
                      ??_error 0002                        ??_pyCal 0033                        ??_right 0001  
         __size_of_oneSecDelay 0014                        ??_trans 0001                     __pbssBANK0 00FA  
              __CFG_PLLCFG$OFF 000000                      PRC@a_1180 0033                      PRC@a_1181 0034  
                    PRC@a_1182 0035                      PRC@a_1183 0036                      PRC@a_1184 0037  
                    PRC@a_1185 0038                      PRC@a_1186 0039                      PRC@a_1179 0032  
                   _clearPorts 70EC             __CFG_CCP2MX$PORTC1 000000        __size_of_classifyColors 0134  
           __CFG_CCP3MX$PORTB5 000000                        _CCP1CON 000FBD                        _CCP5CON 000F54  
           __size_of_testBlack 0032                      ?_capTouch 0001                      ?___xxtofl 0001  
                    ?_hardLeft 0001                        _SPBRGH1 000FB0              __end_of_calibrate 7CAE  
   displayColorDetected@sensor 0003          __end_of_setupPWMRight 6E68                ??_setADCChannel 0001  
                    ?_navigate 0001                    PRC@message2 002C              __end_of_aveSensor 6FF2  
            __end_of_hardRight 6DB4                __CFG_PWRTEN$OFF 000000                        _Lranges 0056  
                      __Hparam 0000                        _Mranges 00E1                        __Lparam 0000  
                    ?_setupADC 0001                        _Rranges 00DC              RCE@nCharsReceived 00F7  
                    ?_setupOSC 0001                        ___flmul 7CAE                        ___fltol 7434  
                 error@message 0002                      ?_straight 0001                        __pcinit 7096  
                      __ramtop 0600                        __ptext0 6D08                        __ptext1 6D68  
                      __ptext2 6E68                        __ptext3 6CFE                        __ptext4 70EC  
                      __ptext5 74EE                        __ptext6 6FF2                        __ptext7 7040  
                      __ptext8 6ECA                        __ptext9 6D2A                 _readAllSensors 6F32  
                      _msDelay 7146                        _readADC 6CEA                   __size_of_RCE 010C  
                 __size_of_PRC 0184                      _T1CONbits 000FCD           __size_of_timer1setup 0018  
                   ??_capTouch 0033                      _T2CONbits 000FBA                   __size_of_abs 0032  
                   ??___xxtofl 0005                      _T4CONbits 000F51                     ??_hardLeft 0001  
                   _searchMode 6CF4           end_of_initialization 70E2           __size_of_setupSerial 0030  
                __Lmediumconst 0000                     ??_navigate 0033                  ?_setupPWMLeft 0001  
            __end_of_testBlack 6EFC                    ?_clearPorts 0001                     aveSensor@a 000A  
                   aveSensor@s 0006                     ??_setupADC 0001                   oneSecDelay@a 0033  
                   ??_setupOSC 0001                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   _sensorVals 00D2         __end_of_readAllSensors 6F6E                     ??_straight 0001  
                    _PORTAbits 000F80                      _PORTCbits 000F82                      _PORTEbits 000F84  
          classifyColors@F6061 00A8                  ___xxtofl@sign 0009     __end_of_determineDirection 7326  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISEbits 000F96  
                  ___flmul@grs 001C          aveSensor@measurements 0007                 ??_setupPWMLeft 0001  
             msDelay@delayInMs 0032                     _stopMotors 6D2A  __size_of_displayColorDetected 0088  
               _classifyColors 75FA                ?_readAllSensors 0001                  __pidataCOMRAM 6D1E  
          start_initialization 7096      __size_of_displayRaceColor 003E                    __end_of_RCE 75FA  
                  __end_of_PRC 79F2            __size_of_clearPorts 005A                    __end_of_abs 6ECA  
                  ?_searchMode 0001                     error@F6083 00BB         __end_of_classifyColors 772E  
               _sensorChannels 00C2                     RCE@message 00E6                    __pdataBANK0 0060  
                     RCE@F6099 009A                      ___flmul@a 0013                      ___flmul@b 000F  
                ??_oneSecDelay 0033                  __pcstackBANK0 00E6              __size_of_capTouch 0072  
            __size_of___xxtofl 0140              __size_of_hardLeft 001A     classifyColors@sensorRanges 0005  
                     PRC@F6024 0060                       PRC@F6026 00C8                      _calibrate 79F2  
                  ?_stopMotors 0001                ?_classifyColors 0001              __size_of_navigate 0056  
                    _aveSensor 6FAC                      _hardRight 6D9A                       ?___flmul 000F  
                     ?___fltol 0028            __size_of_searchMode 000A              __size_of_setupADC 0022  
            __size_of_setupOSC 000A               __CFG_PRICLKEN$ON 000000           __end_of_setupPWMLeft 6E46  
                     ?_msDelay 0001                      capTouch@a 0051                       ?_readADC 0001  
            __size_of_straight 001A                     PRC@message 000C                      _raceColor 00B2  
                     _CCPTMRS0 000F49                       _CCPTMRS1 000F48          calibrate@samples_1170 003B  
        calibrate@samples_1171 003C          calibrate@samples_1172 003D          calibrate@samples_1169 003A  
               __size_of_error 0036                 __size_of_pyCal 004E                 __size_of_right 001A  
               __size_of_trans 000C            __end_of_oneSecDelay 6D50                     ?_calibrate 0001  
        __end_of_setADCChannel 72A2                       _PIE1bits 000F9D                       _PIE5bits 000F7D  
                 ??_clearPorts 0001                       _PIR1bits 000F9E                       _PIR5bits 000F7E  
                    _testBlack 6ECA               __CFG_WDTPS$32768 000000                     ?_aveSensor 0001  
                   ?_hardRight 0001                  ??_timer1setup 0001         __size_of_setupPWMRight 0022  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0                readAllSensors@a 000B  
                     _LLranges 005B               _displayRaceColor 6F6E            __size_of_stopMotors 0012  
                ??_setupSerial 0001             __end_of_clearPorts 7146                      copy_data0 70AA  
                    copy_data1 70CA                       _RRranges 00D7             _determineDirection 72A2  
                     __Hrparam 0000               ??_readAllSensors 000B                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000                     ?_testBlack 0001              __CFG_P2BMX$PORTD2 000000  
          ?_determineDirection 0001               __size_of___flmul 0352               __size_of___fltol 00BA  
                   _ANSELBbits 000F39                     _ANSELCbits 000F3A                       _capTouch 71AC  
             __size_of_msDelay 0066               __size_of_readADC 000A                       ___xxtofl 772E  
 __end_of_displayColorDetected 7434            __end_of_timer1setup 6D68                    _oneSecDelay 6D3C  
                     _hardLeft 6D80                       __ptext10 6E46                       __ptext11 6E24  
                     __ptext20 6DCE                       __ptext12 6E02                       __ptext21 6DB4  
                     __ptext13 6F32                       __ptext30 772E                       __ptext22 6D9A  
                     __ptext14 6F6E                       __ptext31 7434                       __ptext23 6D80  
                     __ptext15 73AC                       __ptext32 7CAE                       __ptext24 75FA  
                     __ptext16 72A2                       __ptext33 6FAC                       __ptext25 71AC  
                     __ptext17 6DE8                       __ptext34 721E                       __ptext26 6E98  
                     __ptext18 6CF4                       __ptext35 6CEA                       __ptext27 79F2  
                     __ptext19 6D50                       __ptext36 786E                       __ptext28 6D3C  
                 ??_searchMode 0001                       __ptext37 6EFC                       __ptext29 7146  
                     __ptext38 6D12           ??_determineDirection 0001                  _setupPWMRight 6E46  
                  ??_calibrate 0034                  __size_of_main 000A                  __size_of_left 001A  
                __size_of_init 0018                       _navigate 7040            __end_of_setupSerial 6E98  
                     _setupADC 6E02                       _setupOSC 6CFE                    ??_aveSensor 0004  
                  ??_hardRight 0001          __size_of_setupPWMLeft 0022             __end_of_searchMode 6CFE  
                     _straight 6DE8                     _INTCONbits 000FF2           determineDirection@rc 0001  
             ??_classifyColors 0001                 ?_setupPWMRight 0001                   _setupPWMLeft 6E24  
                 ??_stopMotors 0001                     _OSCCONbits 000FD3                    ??_testBlack 0001  
                  _timer1setup 6D50                aveSensor@result 0009              __CFG_T3CMX$PORTC0 000000  
           __end_of_stopMotors 6D3C                    _setupSerial 6E68              __CFG_FOSC$INTIO67 000000  
     __end_of_displayRaceColor 6FAC           _displayColorDetected 73AC  
