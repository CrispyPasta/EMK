

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 21 23:46:42 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 2.05
    23                           ; Generated 20/12/2018 GMT
    24                           ; 
    25                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F45K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  007E25                     __pidataCOMRAM:
    59                           	opt callstack 0
    60                           
    61                           ;initializer for _raceColor
    62  007E25  30                 	db	48
    63  007E26  30                 	db	48
    64  007E27  30                 	db	48
    65  007E28  30                 	db	48
    66  007E29  30                 	db	48
    67  007E2A  30                 	db	48
    68  007E2B  30                 	db	48
    69  007E2C  30                 	db	48
    70  007E2D  00                 	db	0
    71                           
    72                           ;initializer for _sensorVals
    73  007E2E  FF                 	db	255
    74  007E2F  FF                 	db	255
    75  007E30  FF                 	db	255
    76  007E31  FF                 	db	255
    77  007E32  FF                 	db	255
    78                           
    79                           ;initializer for _RRranges
    80  007E33  8C                 	db	140
    81  007E34  B9                 	db	185
    82  007E35  C3                 	db	195
    83  007E36  C3                 	db	195
    84  007E37  FF                 	db	255
    85                           
    86                           ;initializer for _Rranges
    87  007E38  8C                 	db	140
    88  007E39  AA                 	db	170
    89  007E3A  D2                 	db	210
    90  007E3B  AF                 	db	175
    91  007E3C  FF                 	db	255
    92                           
    93                           ;initializer for _Mranges
    94  007E3D  82                 	db	130
    95  007E3E  A5                 	db	165
    96  007E3F  AF                 	db	175
    97  007E40  BC                 	db	188
    98  007E41  FF                 	db	255
    99                           
   100                           ;initializer for _Lranges
   101  007E42  82                 	db	130
   102  007E43  B2                 	db	178
   103  007E44  B4                 	db	180
   104  007E45  BC                 	db	188
   105  007E46  FF                 	db	255
   106                           
   107                           ;initializer for _LLranges
   108  007E47  8C                 	db	140
   109  007E48  A8                 	db	168
   110  007E49  B9                 	db	185
   111  007E4A  B9                 	db	185
   112  007E4B  FF                 	db	255
   113                           
   114                           ;initializer for _col
   115  007E4C  42                 	db	66
   116                           
   117                           ;initializer for _size
   118  007E4D  05                 	db	5
   119  0000                     _ANSELE	set	3900
   120  0000                     _ANSELD	set	3899
   121  0000                     _ANSELB	set	3897
   122  0000                     _ANSELA	set	3896
   123  0000                     _ANSELC	set	3898
   124  0000                     _FSR0	set	4073
   125  0000                     _OSCCONbits	set	4051
   126  0000                     _TRISE	set	3990
   127  0000                     _LATE	set	3981
   128  0000                     _PORTE	set	3972
   129  0000                     _TRISD	set	3989
   130  0000                     _LATD	set	3980
   131  0000                     _PORTD	set	3971
   132  0000                     _TRISC	set	3988
   133  0000                     _LATC	set	3979
   134  0000                     _TRISB	set	3987
   135  0000                     _LATB	set	3978
   136  0000                     _PORTB	set	3969
   137  0000                     _TRISA	set	3986
   138  0000                     _LATA	set	3977
   139  0000                     _PORTA	set	3968
   140  0000                     _ADRESH	set	4036
   141  0000                     _TRISBbits	set	3987
   142  0000                     _ADCON0bits	set	4034
   143  0000                     _ADCON1	set	4033
   144  0000                     _ADCON2bits	set	4032
   145  0000                     _PORTC	set	3970
   146  0000                     _TRISCbits	set	3988
   147  0000                     _BAUDCON1bits	set	4024
   148  0000                     _SPBRGH1	set	4016
   149  0000                     _SPBRG1	set	4015
   150  0000                     _RCSTA1	set	4011
   151  0000                     _TXSTA1	set	4012
   152  0000                     _PIR1bits	set	3998
   153  0000                     _PIE1bits	set	3997
   154                           
   155                           ; #config settings
   156  0000                     
   157                           	psect	cinit
   158  007E4E                     __pcinit:
   159                           	opt callstack 0
   160  007E4E                     start_initialization:
   161                           	opt callstack 0
   162  007E4E                     __initialization:
   163                           	opt callstack 0
   164                           
   165                           ; Initialize objects allocated to COMRAM (41 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  007E4E  0E25               	movlw	low __pidataCOMRAM
   168  007E50  6EF6               	movwf	tblptrl,c
   169  007E52  0E7E               	movlw	high __pidataCOMRAM
   170  007E54  6EF7               	movwf	tblptrh,c
   171  007E56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  007E58  6EF8               	movwf	tblptru,c
   173  007E5A  EE00  F001         	lfsr	0,__pdataCOMRAM
   174  007E5E  EE10 F029          	lfsr	1,41
   175  007E62                     copy_data0:
   176  007E62  0009               	tblrd		*+
   177  007E64  CFF5 FFEE          	movff	tablat,postinc0
   178  007E68  50E5               	movf	postdec1,w,c
   179  007E6A  50E1               	movf	fsr1l,w,c
   180  007E6C  E1FA               	bnz	copy_data0
   181  007E6E                     end_of_initialization:
   182                           	opt callstack 0
   183  007E6E                     __end_of__initialization:
   184                           	opt callstack 0
   185  007E6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  007E70  6EF8               	movwf	tblptru,c
   187  007E72  0100               	movlb	0
   188  007E74  EFF8  F03E         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	dataCOMRAM
   191  000001                     __pdataCOMRAM:
   192                           	opt callstack 0
   193  000001                     _raceColor:
   194                           	opt callstack 0
   195  000001                     	ds	9
   196  00000A                     _sensorVals:
   197                           	opt callstack 0
   198  00000A                     	ds	5
   199  00000F                     _RRranges:
   200                           	opt callstack 0
   201  00000F                     	ds	5
   202  000014                     _Rranges:
   203                           	opt callstack 0
   204  000014                     	ds	5
   205  000019                     _Mranges:
   206                           	opt callstack 0
   207  000019                     	ds	5
   208  00001E                     _Lranges:
   209                           	opt callstack 0
   210  00001E                     	ds	5
   211  000023                     _LLranges:
   212                           	opt callstack 0
   213  000023                     	ds	5
   214  000028                     _col:
   215                           	opt callstack 0
   216  000028                     	ds	1
   217  000029                     _size:
   218                           	opt callstack 0
   219  000029                     	ds	1
   220                           
   221                           	psect	cstackCOMRAM
   222  00002A                     __pcstackCOMRAM:
   223                           	opt callstack 0
   224  00002A                     ??_setADCChannel:
   225  00002A                     ?___lwdiv:
   226                           	opt callstack 0
   227  00002A                     ___lwdiv@dividend:
   228                           	opt callstack 0
   229                           
   230                           ; 2 bytes @ 0x0
   231  00002A                     	ds	2
   232  00002C                     setADCChannel@channel:
   233                           	opt callstack 0
   234  00002C                     ___lwdiv@divisor:
   235                           	opt callstack 0
   236                           
   237                           ; 2 bytes @ 0x2
   238  00002C                     	ds	2
   239  00002E                     ___lwdiv@quotient:
   240                           	opt callstack 0
   241                           
   242                           ; 2 bytes @ 0x4
   243  00002E                     	ds	2
   244  000030                     ___lwdiv@counter:
   245                           	opt callstack 0
   246                           
   247                           ; 1 bytes @ 0x6
   248  000030                     	ds	1
   249  000031                     ??_aveSensor:
   250                           
   251                           ; 1 bytes @ 0x7
   252  000031                     	ds	1
   253  000032                     aveSensor@s:
   254                           	opt callstack 0
   255                           
   256                           ; 1 bytes @ 0x8
   257  000032                     	ds	1
   258  000033                     aveSensor@measurements:
   259                           	opt callstack 0
   260                           
   261                           ; 2 bytes @ 0x9
   262  000033                     	ds	2
   263  000035                     aveSensor@result:
   264                           	opt callstack 0
   265                           
   266                           ; 1 bytes @ 0xB
   267  000035                     	ds	1
   268  000036                     aveSensor@a:
   269                           	opt callstack 0
   270                           
   271                           ; 1 bytes @ 0xC
   272  000036                     	ds	1
   273  000037                     
   274                           ; 1 bytes @ 0xD
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 77 in file "sanic.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   294 ;;      Params:         0       0       0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0       0       0
   297 ;;      Totals:         0       0       0       0       0       0       0
   298 ;;Total ram usage:        0 bytes
   299 ;; Hardware stack levels required when called:    2
   300 ;; This function calls:
   301 ;;		_aveSensor
   302 ;;		_init
   303 ;;		_setupADC
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text0
   310  007DF0                     __ptext0:
   311                           	opt callstack 0
   312  007DF0                     _main:
   313                           	opt callstack 29
   314                           
   315                           ;sanic.c: 94:     init();
   316                           
   317                           ;incstack = 0
   318  007DF0  ECF1  F03E         	call	_init	;wreg free
   319                           
   320                           ;sanic.c: 95:     setupADC();
   321  007DF4  EC01  F03F         	call	_setupADC	;wreg free
   322  007DF8                     l1014:
   323                           
   324                           ;sanic.c: 97:         PORTA = aveSensor(12);
   325  007DF8  0E0C               	movlw	12
   326  007DFA  EC54  F03F         	call	_aveSensor
   327  007DFE  6E80               	movwf	3968,c	;volatile
   328  007E00  D7FB               	goto	l1014
   329  007E02                     __end_of_main:
   330                           	opt callstack 0
   331                           
   332 ;; *************** function _setupADC *****************
   333 ;; Defined at:
   334 ;;		line 43 in file "./functions.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   348 ;;      Params:         0       0       0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0       0       0
   351 ;;      Totals:         0       0       0       0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels used:    1
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text1
   362  007E02                     __ptext1:
   363                           	opt callstack 0
   364  007E02                     _setupADC:
   365                           	opt callstack 30
   366                           
   367                           ;./functions.c: 44:     ADCON2bits.ADCS = 0b001;
   368                           
   369                           ;incstack = 0
   370  007E02  50C0               	movf	4032,w,c	;volatile
   371  007E04  0BF8               	andlw	-8
   372  007E06  0901               	iorlw	1
   373  007E08  6EC0               	movwf	4032,c	;volatile
   374                           
   375                           ;./functions.c: 45:     ADCON1 = 0;
   376  007E0A  0E00               	movlw	0
   377  007E0C  6EC1               	movwf	4033,c	;volatile
   378                           
   379                           ;./functions.c: 46:     ADCON0bits.CHS = 0b01100;
   380  007E0E  50C2               	movf	4034,w,c	;volatile
   381  007E10  0B83               	andlw	-125
   382  007E12  0930               	iorlw	48
   383  007E14  6EC2               	movwf	4034,c	;volatile
   384                           
   385                           ;./functions.c: 47:     ADCON2bits.ADFM = 0;
   386  007E16  9EC0               	bcf	4032,7,c	;volatile
   387                           
   388                           ;./functions.c: 48:     ADCON2bits.ACQT = 0b101;
   389  007E18  50C0               	movf	4032,w,c	;volatile
   390  007E1A  0BC7               	andlw	-57
   391  007E1C  0928               	iorlw	40
   392  007E1E  6EC0               	movwf	4032,c	;volatile
   393                           
   394                           ;./functions.c: 49:     ADCON0bits.ADON = 1;
   395  007E20  80C2               	bsf	4034,0,c	;volatile
   396  007E22  0012               	return		;funcret
   397  007E24                     __end_of_setupADC:
   398                           	opt callstack 0
   399                           
   400 ;; *************** function _init *****************
   401 ;; Defined at:
   402 ;;		line 108 in file "sanic.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   416 ;;      Params:         0       0       0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels used:    1
   422 ;; Hardware stack levels required when called:    1
   423 ;; This function calls:
   424 ;;		_clearPorts
   425 ;;		_setupOSC
   426 ;;		_setupSerial
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text2
   433  007DE2                     __ptext2:
   434                           	opt callstack 0
   435  007DE2                     _init:
   436                           	opt callstack 29
   437                           
   438                           ;sanic.c: 109:     setupOSC();
   439                           
   440                           ;incstack = 0
   441  007DE2  ECEC  F03E         	call	_setupOSC	;wreg free
   442                           
   443                           ;sanic.c: 110:     clearPorts();
   444  007DE6  ECA0  F03F         	call	_clearPorts	;wreg free
   445                           
   446                           ;sanic.c: 111:     setupSerial();
   447  007DEA  EC3C  F03F         	call	_setupSerial	;wreg free
   448  007DEE  0012               	return		;funcret
   449  007DF0                     __end_of_init:
   450                           	opt callstack 0
   451                           
   452 ;; *************** function _setupSerial *****************
   453 ;; Defined at:
   454 ;;		line 22 in file "./functions.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   468 ;;      Params:         0       0       0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0
   471 ;;      Totals:         0       0       0       0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels used:    1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_init
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text3
   482  007E78                     __ptext3:
   483                           	opt callstack 0
   484  007E78                     _setupSerial:
   485                           	opt callstack 29
   486                           
   487                           ;./functions.c: 23:     PIE1bits.RC1IE = 0;
   488                           
   489                           ;incstack = 0
   490  007E78  9A9D               	bcf	3997,5,c	;volatile
   491                           
   492                           ;./functions.c: 24:     PIE1bits.TX1IE = 0;
   493  007E7A  989D               	bcf	3997,4,c	;volatile
   494                           
   495                           ;./functions.c: 25:     PIR1bits.RCIF = 0;
   496  007E7C  9A9E               	bcf	3998,5,c	;volatile
   497                           
   498                           ;./functions.c: 27:     FSR0 = 0;
   499  007E7E  0E00               	movlw	0
   500  007E80  6EEA               	movwf	fsr0h,c	;volatile
   501  007E82  0E00               	movlw	0
   502  007E84  6EE9               	movwf	fsr0l,c	;volatile
   503                           
   504                           ;./functions.c: 28:     TXSTA1 = 0b00100100;
   505  007E86  0E24               	movlw	36
   506  007E88  6EAC               	movwf	4012,c	;volatile
   507                           
   508                           ;./functions.c: 29:     RCSTA1 = 0b10010000;
   509  007E8A  0E90               	movlw	144
   510  007E8C  6EAB               	movwf	4011,c	;volatile
   511                           
   512                           ;./functions.c: 31:     SPBRG1 = 25;
   513  007E8E  0E19               	movlw	25
   514  007E90  6EAF               	movwf	4015,c	;volatile
   515                           
   516                           ;./functions.c: 32:     SPBRGH1 = 0;
   517  007E92  0E00               	movlw	0
   518  007E94  6EB0               	movwf	4016,c	;volatile
   519                           
   520                           ;./functions.c: 33:     BAUDCON1bits.BRG16 = 0;
   521  007E96  96B8               	bcf	4024,3,c	;volatile
   522                           
   523                           ;./functions.c: 34:     TRISCbits.RC6 = 1;
   524  007E98  8C94               	bsf	3988,6,c	;volatile
   525                           
   526                           ;./functions.c: 35:     TRISCbits.RC7 = 1;
   527  007E9A  8E94               	bsf	3988,7,c	;volatile
   528                           
   529                           ;./functions.c: 37:     PORTC = 0;
   530  007E9C  0E00               	movlw	0
   531  007E9E  6E82               	movwf	3970,c	;volatile
   532                           
   533                           ;./functions.c: 38:     ANSELC = 0;
   534  007EA0  0E00               	movlw	0
   535  007EA2  010F               	movlb	15	; () banked
   536  007EA4  6F3A               	movwf	58,b	;volatile
   537                           
   538                           ; BSR set to: 15
   539  007EA6  0012               	return		;funcret
   540  007EA8                     __end_of_setupSerial:
   541                           	opt callstack 0
   542                           
   543 ;; *************** function _setupOSC *****************
   544 ;; Defined at:
   545 ;;		line 152 in file "./functions.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   559 ;;      Params:         0       0       0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_init
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text4
   573  007DD8                     __ptext4:
   574                           	opt callstack 0
   575  007DD8                     _setupOSC:
   576                           	opt callstack 29
   577                           
   578                           ;./functions.c: 153:     OSCCONbits.IRCF = 0b101;
   579                           
   580                           ; BSR set to: 15
   581                           ;incstack = 0
   582  007DD8  50D3               	movf	4051,w,c	;volatile
   583  007DDA  0B8F               	andlw	-113
   584  007DDC  0950               	iorlw	80
   585  007DDE  6ED3               	movwf	4051,c	;volatile
   586  007DE0  0012               	return		;funcret
   587  007DE2                     __end_of_setupOSC:
   588                           	opt callstack 0
   589                           
   590 ;; *************** function _clearPorts *****************
   591 ;; Defined at:
   592 ;;		line 122 in file "./functions.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   606 ;;      Params:         0       0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_init
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text5
   620  007F40                     __ptext5:
   621                           	opt callstack 0
   622  007F40                     _clearPorts:
   623                           	opt callstack 29
   624                           
   625                           ;./functions.c: 123:     PORTA = 0;
   626                           
   627                           ;incstack = 0
   628  007F40  0E00               	movlw	0
   629  007F42  6E80               	movwf	3968,c	;volatile
   630                           
   631                           ;./functions.c: 124:     LATA = 0;
   632  007F44  0E00               	movlw	0
   633  007F46  6E89               	movwf	3977,c	;volatile
   634                           
   635                           ;./functions.c: 125:     TRISA = 0;
   636  007F48  0E00               	movlw	0
   637  007F4A  6E92               	movwf	3986,c	;volatile
   638                           
   639                           ;./functions.c: 126:     ANSELA = 0;
   640  007F4C  0E00               	movlw	0
   641  007F4E  010F               	movlb	15	; () banked
   642  007F50  6F38               	movwf	56,b	;volatile
   643                           
   644                           ;./functions.c: 128:     PORTB = 0;
   645  007F52  0E00               	movlw	0
   646  007F54  6E81               	movwf	3969,c	;volatile
   647                           
   648                           ;./functions.c: 129:     LATB = 0;
   649  007F56  0E00               	movlw	0
   650  007F58  6E8A               	movwf	3978,c	;volatile
   651                           
   652                           ;./functions.c: 130:     TRISB = 0;
   653  007F5A  0E00               	movlw	0
   654  007F5C  6E93               	movwf	3987,c	;volatile
   655                           
   656                           ;./functions.c: 131:     ANSELB = 0;
   657  007F5E  0E00               	movlw	0
   658  007F60  6F39               	movwf	57,b	;volatile
   659                           
   660                           ;./functions.c: 133:     PORTC = 0;
   661  007F62  0E00               	movlw	0
   662  007F64  6E82               	movwf	3970,c	;volatile
   663                           
   664                           ;./functions.c: 134:     LATC = 0;
   665  007F66  0E00               	movlw	0
   666  007F68  6E8B               	movwf	3979,c	;volatile
   667                           
   668                           ;./functions.c: 135:     TRISC = 0;
   669  007F6A  0E00               	movlw	0
   670  007F6C  6E94               	movwf	3988,c	;volatile
   671                           
   672                           ;./functions.c: 136:     ANSELC = 0;
   673  007F6E  0E00               	movlw	0
   674  007F70  6F3A               	movwf	58,b	;volatile
   675                           
   676                           ;./functions.c: 138:     PORTD = 0;
   677  007F72  0E00               	movlw	0
   678  007F74  6E83               	movwf	3971,c	;volatile
   679                           
   680                           ;./functions.c: 139:     LATD = 0;
   681  007F76  0E00               	movlw	0
   682  007F78  6E8C               	movwf	3980,c	;volatile
   683                           
   684                           ;./functions.c: 140:     TRISD = 0;
   685  007F7A  0E00               	movlw	0
   686  007F7C  6E95               	movwf	3989,c	;volatile
   687                           
   688                           ;./functions.c: 141:     ANSELD = 0;
   689  007F7E  0E00               	movlw	0
   690  007F80  6F3B               	movwf	59,b	;volatile
   691                           
   692                           ;./functions.c: 143:     PORTE = 0;
   693  007F82  0E00               	movlw	0
   694  007F84  6E84               	movwf	3972,c	;volatile
   695                           
   696                           ;./functions.c: 144:     LATE = 0;
   697  007F86  0E00               	movlw	0
   698  007F88  6E8D               	movwf	3981,c	;volatile
   699                           
   700                           ;./functions.c: 145:     TRISE = 0;
   701  007F8A  0E00               	movlw	0
   702  007F8C  6E96               	movwf	3990,c	;volatile
   703                           
   704                           ;./functions.c: 146:     ANSELE = 0;
   705  007F8E  0E00               	movlw	0
   706  007F90  6F3C               	movwf	60,b	;volatile
   707                           
   708                           ;./functions.c: 147:     raceColor[3] = 1;
   709  007F92  0E01               	movlw	1
   710  007F94  6E04               	movwf	_raceColor+3,c
   711                           
   712                           ; BSR set to: 15
   713  007F96  0012               	return		;funcret
   714  007F98                     __end_of_clearPorts:
   715                           	opt callstack 0
   716                           
   717 ;; *************** function _aveSensor *****************
   718 ;; Defined at:
   719 ;;		line 94 in file "./functions.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  s               1    wreg     unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  s               1    8[COMRAM] unsigned char 
   724 ;;  a               1   12[COMRAM] unsigned char 
   725 ;;  measurements    2    9[COMRAM] unsigned int 
   726 ;;  result          1   11[COMRAM] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      unsigned char 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   736 ;;      Params:         0       0       0       0       0       0       0
   737 ;;      Locals:         5       0       0       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0       0       0
   739 ;;      Totals:         6       0       0       0       0       0       0
   740 ;;Total ram usage:        6 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    1
   743 ;; This function calls:
   744 ;;		___lwdiv
   745 ;;		_readADC
   746 ;;		_setADCChannel
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text6
   753  007EA8                     __ptext6:
   754                           	opt callstack 0
   755  007EA8                     _aveSensor:
   756                           	opt callstack 29
   757                           
   758                           ; BSR set to: 15
   759                           ;incstack = 0
   760                           ;aveSensor@s stored from wreg
   761  007EA8  6E32               	movwf	aveSensor@s,c
   762                           
   763                           ;./functions.c: 95:     setADCChannel(s);
   764  007EAA  5032               	movf	aveSensor@s,w,c
   765  007EAC  ECCC  F03F         	call	_setADCChannel
   766                           
   767                           ;./functions.c: 96:     unsigned int measurements = 0;
   768  007EB0  0E00               	movlw	0
   769  007EB2  6E34               	movwf	aveSensor@measurements+1,c
   770  007EB4  0E00               	movlw	0
   771  007EB6  6E33               	movwf	aveSensor@measurements,c
   772                           
   773                           ;./functions.c: 98:     for (unsigned char a = 0; a < 10; a++){
   774  007EB8  0E00               	movlw	0
   775  007EBA  6E36               	movwf	aveSensor@a,c
   776  007EBC                     l1000:
   777                           
   778                           ;./functions.c: 99:         measurements += readADC();
   779  007EBC  ECE7  F03E         	call	_readADC	;wreg free
   780  007EC0  6E31               	movwf	??_aveSensor& (0+255),c
   781  007EC2  5031               	movf	??_aveSensor,w,c
   782  007EC4  2633               	addwf	aveSensor@measurements,f,c
   783  007EC6  0E00               	movlw	0
   784  007EC8  2234               	addwfc	aveSensor@measurements+1,f,c
   785                           
   786                           ;./functions.c: 100:     }
   787  007ECA  2A36               	incf	aveSensor@a,f,c
   788  007ECC  0E09               	movlw	9
   789  007ECE  6436               	cpfsgt	aveSensor@a,c
   790  007ED0  D7F5               	goto	l1000
   791                           
   792                           ;./functions.c: 102:     unsigned char result = measurements / 10;
   793  007ED2  C033  F02A         	movff	aveSensor@measurements,___lwdiv@dividend
   794  007ED6  C034  F02B         	movff	aveSensor@measurements+1,___lwdiv@dividend+1
   795  007EDA  0E00               	movlw	0
   796  007EDC  6E2D               	movwf	___lwdiv@divisor+1,c
   797  007EDE  0E0A               	movlw	10
   798  007EE0  6E2C               	movwf	___lwdiv@divisor,c
   799  007EE2  EC77  F03F         	call	___lwdiv	;wreg free
   800  007EE6  502A               	movf	?___lwdiv,w,c
   801  007EE8  6E35               	movwf	aveSensor@result,c
   802                           
   803                           ;./functions.c: 104:     return result;
   804  007EEA  5035               	movf	aveSensor@result,w,c
   805  007EEC  0012               	return		;funcret
   806  007EEE                     __end_of_aveSensor:
   807                           	opt callstack 0
   808                           
   809 ;; *************** function _setADCChannel *****************
   810 ;; Defined at:
   811 ;;		line 55 in file "./functions.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  channel         1    wreg     unsigned char 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  channel         1    2[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   825 ;;      Params:         0       0       0       0       0       0       0
   826 ;;      Locals:         1       0       0       0       0       0       0
   827 ;;      Temps:          2       0       0       0       0       0       0
   828 ;;      Totals:         3       0       0       0       0       0       0
   829 ;;Total ram usage:        3 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_aveSensor
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text7
   839  007F98                     __ptext7:
   840                           	opt callstack 0
   841  007F98                     _setADCChannel:
   842                           	opt callstack 29
   843                           
   844                           ;incstack = 0
   845                           ;setADCChannel@channel stored from wreg
   846  007F98  6E2C               	movwf	setADCChannel@channel,c
   847                           
   848                           ;./functions.c: 56:     ADCON0bits.CHS = channel;
   849  007F9A  C02C  F02A         	movff	setADCChannel@channel,??_setADCChannel
   850  007F9E  462A               	rlncf	??_setADCChannel,f,c
   851  007FA0  462A               	rlncf	??_setADCChannel,f,c
   852  007FA2  50C2               	movf	4034,w,c	;volatile
   853  007FA4  182A               	xorwf	??_setADCChannel,w,c
   854  007FA6  0B83               	andlw	-125
   855  007FA8  182A               	xorwf	??_setADCChannel,w,c
   856  007FAA  6EC2               	movwf	4034,c	;volatile
   857                           
   858                           ;./functions.c: 58:     switch (channel){
   859  007FAC  D00E               	goto	l844
   860  007FAE                     l100:
   861                           
   862                           ;./functions.c: 60:         TRISBbits.TRISB2 = 1;
   863  007FAE  8493               	bsf	3987,2,c	;volatile
   864                           
   865                           ;./functions.c: 61:         break;
   866  007FB0  0012               	return	
   867  007FB2                     l102:
   868                           
   869                           ;./functions.c: 63:         TRISBbits.TRISB3 = 1;
   870  007FB2  8693               	bsf	3987,3,c	;volatile
   871                           
   872                           ;./functions.c: 64:         break;
   873  007FB4  0012               	return	
   874  007FB6                     l103:
   875                           
   876                           ;./functions.c: 66:         TRISBbits.TRISB1 = 1;
   877  007FB6  8293               	bsf	3987,1,c	;volatile
   878                           
   879                           ;./functions.c: 67:         break;
   880  007FB8  0012               	return	
   881  007FBA                     l104:
   882                           
   883                           ;./functions.c: 69:         TRISBbits.TRISB0 = 0;
   884  007FBA  9093               	bcf	3987,0,c	;volatile
   885                           
   886                           ;./functions.c: 70:         break;
   887  007FBC  0012               	return	
   888  007FBE                     l105:
   889                           
   890                           ;./functions.c: 72:         TRISBbits.TRISB5 = 1;
   891  007FBE  8A93               	bsf	3987,5,c	;volatile
   892                           
   893                           ;./functions.c: 73:         break;
   894  007FC0  0012               	return	
   895  007FC2                     l106:
   896                           
   897                           ;./functions.c: 75:         TRISCbits.TRISC3 = 1;
   898  007FC2  8694               	bsf	3988,3,c	;volatile
   899                           
   900                           ;./functions.c: 76:         break;
   901  007FC4  0012               	return	
   902  007FC6                     l107:
   903                           
   904                           ;./functions.c: 79:         TRISBbits.TRISB0 = 1;
   905  007FC6  8093               	bsf	3987,0,c	;volatile
   906                           
   907                           ;./functions.c: 80:         break;
   908  007FC8  0012               	return	
   909  007FCA                     l844:
   910  007FCA  502C               	movf	setADCChannel@channel,w,c
   911  007FCC  6E2A               	movwf	??_setADCChannel& (0+255),c
   912  007FCE  6A2B               	clrf	(??_setADCChannel+1)& (0+255),c
   913                           
   914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   915                           ; Switch size 1, requested type "simple"
   916                           ; Number of cases is 1, Range of values is 0 to 0
   917                           ; switch strategies available:
   918                           ; Name         Instructions Cycles
   919                           ; simple_byte            4     3 (average)
   920                           ;	Chosen strategy is simple_byte
   921  007FD0  502B               	movf	??_setADCChannel+1,w,c
   922  007FD2  0A00               	xorlw	0	; case 0
   923  007FD4  A4D8               	btfss	status,2,c
   924  007FD6  D7F7               	goto	l107
   925                           
   926                           ; Switch size 1, requested type "simple"
   927                           ; Number of cases is 6, Range of values is 8 to 15
   928                           ; switch strategies available:
   929                           ; Name         Instructions Cycles
   930                           ; simple_byte           19    10 (average)
   931                           ;	Chosen strategy is simple_byte
   932  007FD8  502A               	movf	??_setADCChannel,w,c
   933  007FDA  0A08               	xorlw	8	; case 8
   934  007FDC  B4D8               	btfsc	status,2,c
   935  007FDE  D7E7               	goto	l100
   936  007FE0  0A01               	xorlw	1	; case 9
   937  007FE2  B4D8               	btfsc	status,2,c
   938  007FE4  D7E6               	goto	l102
   939  007FE6  0A03               	xorlw	3	; case 10
   940  007FE8  B4D8               	btfsc	status,2,c
   941  007FEA  D7E5               	goto	l103
   942  007FEC  0A06               	xorlw	6	; case 12
   943  007FEE  B4D8               	btfsc	status,2,c
   944  007FF0  D7E4               	goto	l104
   945  007FF2  0A01               	xorlw	1	; case 13
   946  007FF4  B4D8               	btfsc	status,2,c
   947  007FF6  D7E3               	goto	l105
   948  007FF8  0A02               	xorlw	2	; case 15
   949  007FFA  B4D8               	btfsc	status,2,c
   950  007FFC  D7E2               	goto	l106
   951  007FFE  D7E3               	goto	l107
   952  008000                     __end_of_setADCChannel:
   953                           	opt callstack 0
   954                           
   955 ;; *************** function _readADC *****************
   956 ;; Defined at:
   957 ;;		line 86 in file "./functions.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      unsigned char 
   964 ;; Registers used:
   965 ;;		wreg, status,2
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   971 ;;      Params:         0       0       0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0
   974 ;;      Totals:         0       0       0       0       0       0       0
   975 ;;Total ram usage:        0 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_aveSensor
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text8
   985  007DCE                     __ptext8:
   986                           	opt callstack 0
   987  007DCE                     _readADC:
   988                           	opt callstack 29
   989                           
   990                           ;./functions.c: 87:     ADCON0bits.GO = 1;
   991                           
   992                           ;incstack = 0
   993  007DCE  82C2               	bsf	4034,1,c	;volatile
   994  007DD0                     l111:
   995  007DD0  B2C2               	btfsc	4034,1,c	;volatile
   996  007DD2  D7FE               	goto	l111
   997                           
   998                           ;./functions.c: 90:     return ADRESH;
   999  007DD4  50C4               	movf	4036,w,c	;volatile
  1000  007DD6  0012               	return		;funcret
  1001  007DD8                     __end_of_readADC:
  1002                           	opt callstack 0
  1003                           
  1004 ;; *************** function ___lwdiv *****************
  1005 ;; Defined at:
  1006 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  dividend        2    0[COMRAM] unsigned int 
  1009 ;;  divisor         2    2[COMRAM] unsigned int 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  quotient        2    4[COMRAM] unsigned int 
  1012 ;;  counter         1    6[COMRAM] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2    0[COMRAM] unsigned int 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1022 ;;      Params:         4       0       0       0       0       0       0
  1023 ;;      Locals:         3       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0
  1025 ;;      Totals:         7       0       0       0       0       0       0
  1026 ;;Total ram usage:        7 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_aveSensor
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text9
  1036  007EEE                     __ptext9:
  1037                           	opt callstack 0
  1038  007EEE                     ___lwdiv:
  1039                           	opt callstack 29
  1040                           
  1041                           ;incstack = 0
  1042  007EEE  0E00               	movlw	0
  1043  007EF0  6E2F               	movwf	___lwdiv@quotient+1,c
  1044  007EF2  0E00               	movlw	0
  1045  007EF4  6E2E               	movwf	___lwdiv@quotient,c
  1046  007EF6  502C               	movf	___lwdiv@divisor,w,c
  1047  007EF8  102D               	iorwf	___lwdiv@divisor+1,w,c
  1048  007EFA  B4D8               	btfsc	status,2,c
  1049  007EFC  D01C               	goto	l646
  1050  007EFE  0E01               	movlw	1
  1051  007F00  6E30               	movwf	___lwdiv@counter,c
  1052  007F02  D004               	goto	l976
  1053  007F04                     l974:
  1054  007F04  90D8               	bcf	status,0,c
  1055  007F06  362C               	rlcf	___lwdiv@divisor,f,c
  1056  007F08  362D               	rlcf	___lwdiv@divisor+1,f,c
  1057  007F0A  2A30               	incf	___lwdiv@counter,f,c
  1058  007F0C                     l976:
  1059  007F0C  AE2D               	btfss	___lwdiv@divisor+1,7,c
  1060  007F0E  D7FA               	goto	l974
  1061  007F10                     u90:
  1062  007F10  90D8               	bcf	status,0,c
  1063  007F12  362E               	rlcf	___lwdiv@quotient,f,c
  1064  007F14  362F               	rlcf	___lwdiv@quotient+1,f,c
  1065  007F16  502C               	movf	___lwdiv@divisor,w,c
  1066  007F18  5C2A               	subwf	___lwdiv@dividend,w,c
  1067  007F1A  502D               	movf	___lwdiv@divisor+1,w,c
  1068  007F1C  582B               	subwfb	___lwdiv@dividend+1,w,c
  1069  007F1E  A0D8               	btfss	status,0,c
  1070  007F20  D005               	goto	l986
  1071  007F22  502C               	movf	___lwdiv@divisor,w,c
  1072  007F24  5E2A               	subwf	___lwdiv@dividend,f,c
  1073  007F26  502D               	movf	___lwdiv@divisor+1,w,c
  1074  007F28  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  1075  007F2A  802E               	bsf	___lwdiv@quotient,0,c
  1076  007F2C                     l986:
  1077  007F2C  90D8               	bcf	status,0,c
  1078  007F2E  322D               	rrcf	___lwdiv@divisor+1,f,c
  1079  007F30  322C               	rrcf	___lwdiv@divisor,f,c
  1080  007F32  2E30               	decfsz	___lwdiv@counter,f,c
  1081  007F34  D7ED               	goto	u90
  1082  007F36                     l646:
  1083  007F36  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  1084  007F3A  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1085  007F3E  0012               	return		;funcret
  1086  007F40                     __end_of___lwdiv:
  1087                           	opt callstack 0
  1088  0000                     
  1089                           	psect	rparam
  1090  0000                     tosu	equ	0xFFF
  1091                           tosh	equ	0xFFE
  1092                           tosl	equ	0xFFD
  1093                           stkptr	equ	0xFFC
  1094                           pclatu	equ	0xFFB
  1095                           pclath	equ	0xFFA
  1096                           pcl	equ	0xFF9
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           indf0	equ	0xFEF
  1104                           postinc0	equ	0xFEE
  1105                           postdec0	equ	0xFED
  1106                           preinc0	equ	0xFEC
  1107                           plusw0	equ	0xFEB
  1108                           fsr0h	equ	0xFEA
  1109                           fsr0l	equ	0xFE9
  1110                           wreg	equ	0xFE8
  1111                           indf1	equ	0xFE7
  1112                           postinc1	equ	0xFE6
  1113                           postdec1	equ	0xFE5
  1114                           preinc1	equ	0xFE4
  1115                           plusw1	equ	0xFE3
  1116                           fsr1h	equ	0xFE2
  1117                           fsr1l	equ	0xFE1
  1118                           bsr	equ	0xFE0
  1119                           indf2	equ	0xFDF
  1120                           postinc2	equ	0xFDE
  1121                           postdec2	equ	0xFDD
  1122                           preinc2	equ	0xFDC
  1123                           plusw2	equ	0xFDB
  1124                           fsr2h	equ	0xFDA
  1125                           fsr2l	equ	0xFD9
  1126                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        41
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_aveSensor
    _aveSensor->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     459
                          _aveSensor
                               _init
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _aveSensor                                            6     6      0     459
                                              7 COMRAM     6     6      0
                            ___lwdiv
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (2) _setADCChannel                                        3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _aveSensor
     ___lwdiv
     _readADC
     _setADCChannel
   _init
     _clearPorts
     _setupOSC
     _setupSerial
   _setupADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      36       1       56.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36       9        0.0%
DATA                 0      0      36      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 21 23:46:42 2019

                     u90 7F10             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l100 7FAE                      l102 7FB2                      l111 7DD0  
                    l103 7FB6                      l104 7FBA                      l105 7FBE  
                    l106 7FC2                      l107 7FC6                      l646 7F36  
                    l844 7FCA                      l974 7F04                      l976 7F0C  
                    l986 7F2C             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _col 0028                     l1000 7EBC                     l1014 7DF8  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _FSR0 000FE9                     _LATE 000F8D  
                   _main 7DF0                     _init 7DE2                     _size 0029  
                   fsr1l 000FE1            __CFG_BORV$190 000000                     start 0000  
          __CFG_IESO$OFF 000000             ___param_bank 000000             _BAUDCON1bits 000FB8  
                  ?_main 002A                    ?_init 002A          __end_of___lwdiv 7F40  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96   __size_of_setADCChannel 0068            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_readADC 7DD8  
         __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000                    tablat 000FF5  
                  status 000FD8           __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000  
        __initialization 7E4E             __end_of_main 7E02             __end_of_init 7DF0  
                 ??_main 0037                   ??_init 002A            __activetblptr 000002  
                 _ADCON1 000FC1                   _ADRESH 000FC4                   _ANSELA 000F38  
                 _ANSELB 000F39                   _ANSELC 000F3A                   _ANSELD 000F3B  
                 _ANSELE 000F3C           __CFG_WDTEN$OFF 000000                   _RCSTA1 000FAB  
                 _SPBRG1 000FAF                   _TXSTA1 000FAC            _setADCChannel 7F98  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___lwdiv 002E  
              ??_readADC 002A             __pdataCOMRAM 0001         __end_of_setupADC 7E24  
       __end_of_setupOSC 7DE2                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8             ?_setupSerial 002A               __accesstop 0060  
__end_of__initialization 7E6E           ?_setADCChannel 002A            ___rparam_used 000001  
         __pcstackCOMRAM 002A     setADCChannel@channel 002C       __size_of_aveSensor 0046  
        __CFG_PLLCFG$OFF 000000               _clearPorts 7F40       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000                  _SPBRGH1 000FB0          ??_setADCChannel 002A  
      __end_of_aveSensor 7EEE          __CFG_PWRTEN$OFF 000000                  _Lranges 001E  
                __Hparam 0000                  _Mranges 0019                  __Lparam 0000  
              ?_setupADC 002A                  _Rranges 0014                ?_setupOSC 002A  
                ___lwdiv 7EEE                  __pcinit 7E4E                  __ramtop 0600  
                __ptext0 7DF0                  __ptext1 7E02                  __ptext2 7DE2  
                __ptext3 7E78                  __ptext4 7DD8                  __ptext5 7F40  
                __ptext6 7EA8                  __ptext7 7F98                  __ptext8 7DCE  
                __ptext9 7EEE                  _readADC 7DCE     end_of_initialization 7E6E  
   __size_of_setupSerial 0030            __Lmediumconst 0000              ?_clearPorts 002A  
             aveSensor@a 0036               aveSensor@s 0032               ??_setupADC 002A  
             ??_setupOSC 002A                  postdec1 000FE5                  postinc0 000FEE  
             _sensorVals 000A                _TRISBbits 000F93                _TRISCbits 000F94  
  aveSensor@measurements 0033            __pidataCOMRAM 7E25      start_initialization 7E4E  
    __size_of_clearPorts 0058         ___lwdiv@dividend 002A                _aveSensor 7EA8  
               ?___lwdiv 002A        __size_of_setupADC 0022        __size_of_setupOSC 000A  
       __CFG_PRICLKEN$ON 000000                 ?_readADC 002A                _raceColor 0001  
       ___lwdiv@quotient 002E    __end_of_setADCChannel 8000                 _PIE1bits 000F9D  
           ??_clearPorts 002A                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
             ?_aveSensor 002A               _ADCON0bits 000FC2               _ADCON2bits 000FC0  
               _LLranges 0023            ??_setupSerial 002A       __end_of_clearPorts 7F98  
              copy_data0 7E62                 _RRranges 000F                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTD2 000000  
       __size_of___lwdiv 0052         __size_of_readADC 000A          ___lwdiv@divisor 002C  
        ___lwdiv@counter 0030            __size_of_main 0012            __size_of_init 000E  
    __end_of_setupSerial 7EA8                 _setupADC 7E02                 _setupOSC 7DD8  
            ??_aveSensor 0031               _OSCCONbits 000FD3          aveSensor@result 0035  
      __CFG_T3CMX$PORTC0 000000              _setupSerial 7E78        __CFG_FOSC$INTIO67 000000  
