

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 25 13:28:44 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 2.05
    34                           ; Generated 20/12/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F45K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  0074FA                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for _Lranges
    73  0074FA  82                 	db	130
    74  0074FB  B2                 	db	178
    75  0074FC  B4                 	db	180
    76  0074FD  BC                 	db	188
    77  0074FE  FF                 	db	255
    78                           
    79                           ;initializer for _LLranges
    80  0074FF  8C                 	db	140
    81  007500  A8                 	db	168
    82  007501  B9                 	db	185
    83  007502  B9                 	db	185
    84  007503  FF                 	db	255
    85                           
    86                           ;initializer for _col
    87  007504  42                 	db	66
    88                           
    89                           ;initializer for _size
    90  007505  05                 	db	5
    91                           
    92                           	psect	idataBANK0
    93  0076EC                     __pidataBANK0:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for PRC@F5998
    97  0076EC  0A                 	db	10
    98  0076ED  57                 	db	87
    99  0076EE  68                 	db	104
   100  0076EF  61                 	db	97
   101  0076F0  74                 	db	116
   102  0076F1  20                 	db	32
   103  0076F2  63                 	db	99
   104  0076F3  6F                 	db	111
   105  0076F4  6C                 	db	108
   106  0076F5  6F                 	db	111
   107  0076F6  72                 	db	114
   108  0076F7  20                 	db	32
   109  0076F8  73                 	db	115
   110  0076F9  68                 	db	104
   111  0076FA  6F                 	db	111
   112  0076FB  75                 	db	117
   113  0076FC  6C                 	db	108
   114  0076FD  64                 	db	100
   115  0076FE  20                 	db	32
   116  0076FF  73                 	db	115
   117  007700  61                 	db	97
   118  007701  6E                 	db	110
   119  007702  69                 	db	105
   120  007703  63                 	db	99
   121  007704  20                 	db	32
   122  007705  72                 	db	114
   123  007706  61                 	db	97
   124  007707  63                 	db	99
   125  007708  65                 	db	101
   126  007709  3F                 	db	63
   127  00770A  0A                 	db	10
   128  00770B  00                 	db	0
   129                           
   130                           ;initializer for RCE@F6045
   131  00770C  0A                 	db	10
   132  00770D  53                 	db	83
   133  00770E  61                 	db	97
   134  00770F  6E                 	db	110
   135  007710  69                 	db	105
   136  007711  63                 	db	99
   137  007712  20                 	db	32
   138  007713  72                 	db	114
   139  007714  61                 	db	97
   140  007715  63                 	db	99
   141  007716  65                 	db	101
   142  007717  73                 	db	115
   143  007718  20                 	db	32
   144  007719  00                 	db	0
   145                           
   146                           ;initializer for _raceColor
   147  00771A  30                 	db	48
   148  00771B  30                 	db	48
   149  00771C  30                 	db	48
   150  00771D  30                 	db	48
   151  00771E  31                 	db	49
   152  00771F  30                 	db	48
   153  007720  30                 	db	48
   154  007721  30                 	db	48
   155  007722  00                 	db	0
   156                           
   157                           ;initializer for error@F6027
   158  007723  45                 	db	69
   159  007724  52                 	db	82
   160  007725  52                 	db	82
   161  007726  4F                 	db	79
   162  007727  52                 	db	82
   163  007728  0A                 	db	10
   164  007729  00                 	db	0
   165                           
   166                           ;initializer for _sensorChannels
   167  00772A  0C                 	db	12
   168  00772B  0A                 	db	10
   169  00772C  08                 	db	8
   170  00772D  09                 	db	9
   171  00772E  0D                 	db	13
   172  00772F  0F                 	db	15
   173                           
   174                           ;initializer for PRC@F6000
   175  007730  0A                 	db	10
   176  007731  53                 	db	83
   177  007732  65                 	db	101
   178  007733  74                 	db	116
   179  007734  00                 	db	0
   180                           
   181                           ;initializer for calibrate@F5992
   182  007735  0C                 	db	12
   183  007736  08                 	db	8
   184  007737  09                 	db	9
   185  007738  0A                 	db	10
   186  007739  0D                 	db	13
   187                           
   188                           ;initializer for _sensorVals
   189  00773A  FF                 	db	255
   190  00773B  FF                 	db	255
   191  00773C  FF                 	db	255
   192  00773D  FF                 	db	255
   193  00773E  FF                 	db	255
   194                           
   195                           ;initializer for _RRranges
   196  00773F  8C                 	db	140
   197  007740  B9                 	db	185
   198  007741  C3                 	db	195
   199  007742  C3                 	db	195
   200  007743  FF                 	db	255
   201                           
   202                           ;initializer for _Rranges
   203  007744  8C                 	db	140
   204  007745  AA                 	db	170
   205  007746  D2                 	db	210
   206  007747  AF                 	db	175
   207  007748  FF                 	db	255
   208                           
   209                           ;initializer for _Mranges
   210  007749  82                 	db	130
   211  00774A  A5                 	db	165
   212  00774B  AF                 	db	175
   213  00774C  BC                 	db	188
   214  00774D  FF                 	db	255
   215  0000                     _T6CON	set	3914
   216  0000                     _PR6	set	3915
   217  0000                     _TMR6	set	3916
   218  0000                     _ANSELCbits	set	3898
   219  0000                     _ANSELBbits	set	3897
   220  0000                     _ANSELE	set	3900
   221  0000                     _ANSELD	set	3899
   222  0000                     _ANSELC	set	3898
   223  0000                     _ANSELB	set	3897
   224  0000                     _ANSELA	set	3896
   225  0000                     _T4CONbits	set	3921
   226  0000                     _CCPTMRS1	set	3912
   227  0000                     _CCPR5L	set	3925
   228  0000                     _PR4	set	3922
   229  0000                     _CCP5CON	set	3924
   230  0000                     _CCPTMRS0	set	3913
   231  0000                     _FSR0	set	4073
   232  0000                     _PIR5bits	set	3966
   233  0000                     _ADRESH	set	4036
   234  0000                     _TRISBbits	set	3987
   235  0000                     _TXREG	set	4013
   236  0000                     _RCREG	set	4014
   237  0000                     _PORTAbits	set	3968
   238  0000                     _ADCON0bits	set	4034
   239  0000                     _ADCON1	set	4033
   240  0000                     _ADCON2bits	set	4032
   241  0000                     _BAUDCON1bits	set	4024
   242  0000                     _SPBRGH1	set	4016
   243  0000                     _SPBRG1	set	4015
   244  0000                     _RCSTA1	set	4011
   245  0000                     _TXSTA1	set	4012
   246  0000                     _PIR1bits	set	3998
   247  0000                     _OSCCONbits	set	4051
   248  0000                     _TRISE	set	3990
   249  0000                     _LATE	set	3981
   250  0000                     _PORTE	set	3972
   251  0000                     _TRISD	set	3989
   252  0000                     _LATD	set	3980
   253  0000                     _PORTD	set	3971
   254  0000                     _TRISC	set	3988
   255  0000                     _LATC	set	3979
   256  0000                     _PORTC	set	3970
   257  0000                     _TRISB	set	3987
   258  0000                     _LATB	set	3978
   259  0000                     _PORTB	set	3969
   260  0000                     _TRISA	set	3986
   261  0000                     _LATA	set	3977
   262  0000                     _PORTA	set	3968
   263  0000                     _PIE5bits	set	3965
   264  0000                     _TRISEbits	set	3990
   265  0000                     _T2CONbits	set	4026
   266  0000                     _INTCONbits	set	4082
   267  0000                     _PIE1bits	set	3997
   268  0000                     _TMR2	set	4028
   269  0000                     _T2CON	set	4026
   270  0000                     _TRISCbits	set	3988
   271  0000                     _CCPR1L	set	4030
   272  0000                     _PR2	set	4027
   273  0000                     _CCP1CON	set	4029
   274                           
   275                           ; #config settings
   276  0000                     
   277                           	psect	cinit
   278  007648                     __pcinit:
   279                           	opt callstack 0
   280  007648                     start_initialization:
   281                           	opt callstack 0
   282  007648                     __initialization:
   283                           	opt callstack 0
   284                           
   285                           ; Initialize objects allocated to BANK0 (98 bytes)
   286                           ; load TBLPTR registers with __pidataBANK0
   287  007648  0EEC               	movlw	low __pidataBANK0
   288  00764A  6EF6               	movwf	tblptrl,c
   289  00764C  0E76               	movlw	high __pidataBANK0
   290  00764E  6EF7               	movwf	tblptrh,c
   291  007650  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   292  007652  6EF8               	movwf	tblptru,c
   293  007654  EE00  F060         	lfsr	0,__pdataBANK0
   294  007658  EE10 F062          	lfsr	1,98
   295  00765C                     copy_data0:
   296  00765C  0009               	tblrd		*+
   297  00765E  CFF5 FFEE          	movff	tablat,postinc0
   298  007662  50E5               	movf	postdec1,w,c
   299  007664  50E1               	movf	fsr1l,w,c
   300  007666  E1FA               	bnz	copy_data0
   301                           
   302                           ; Initialize objects allocated to COMRAM (12 bytes)
   303                           ; load TBLPTR registers with __pidataCOMRAM
   304  007668  0EFA               	movlw	low __pidataCOMRAM
   305  00766A  6EF6               	movwf	tblptrl,c
   306  00766C  0E74               	movlw	high __pidataCOMRAM
   307  00766E  6EF7               	movwf	tblptrh,c
   308  007670  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   309  007672  6EF8               	movwf	tblptru,c
   310  007674  EE00  F050         	lfsr	0,__pdataCOMRAM
   311  007678  EE10 F00C          	lfsr	1,12
   312  00767C                     copy_data1:
   313  00767C  0009               	tblrd		*+
   314  00767E  CFF5 FFEE          	movff	tablat,postinc0
   315  007682  50E5               	movf	postdec1,w,c
   316  007684  50E1               	movf	fsr1l,w,c
   317  007686  E1FA               	bnz	copy_data1
   318  007688                     end_of_initialization:
   319                           	opt callstack 0
   320  007688                     __end_of__initialization:
   321                           	opt callstack 0
   322  007688  0E00               	movlw	low (__Lmediumconst shr (0+16))
   323  00768A  6EF8               	movwf	tblptru,c
   324  00768C  0100               	movlb	0
   325  00768E  EF72  F03A         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	dataCOMRAM
   328  000050                     __pdataCOMRAM:
   329                           	opt callstack 0
   330  000050                     _Lranges:
   331                           	opt callstack 0
   332  000050                     	ds	5
   333  000055                     _LLranges:
   334                           	opt callstack 0
   335  000055                     	ds	5
   336  00005A                     _col:
   337                           	opt callstack 0
   338  00005A                     	ds	1
   339  00005B                     _size:
   340                           	opt callstack 0
   341  00005B                     	ds	1
   342                           
   343                           	psect	dataBANK0
   344  000060                     __pdataBANK0:
   345                           	opt callstack 0
   346  000060                     PRC@F5998:
   347                           	opt callstack 0
   348  000060                     	ds	32
   349  000080                     RCE@F6045:
   350                           	opt callstack 0
   351  000080                     	ds	14
   352  00008E                     _raceColor:
   353                           	opt callstack 0
   354  00008E                     	ds	9
   355  000097                     error@F6027:
   356                           	opt callstack 0
   357  000097                     	ds	7
   358  00009E                     _sensorChannels:
   359                           	opt callstack 0
   360  00009E                     	ds	6
   361  0000A4                     PRC@F6000:
   362                           	opt callstack 0
   363  0000A4                     	ds	5
   364  0000A9                     calibrate@F5992:
   365                           	opt callstack 0
   366  0000A9                     	ds	5
   367  0000AE                     _sensorVals:
   368                           	opt callstack 0
   369  0000AE                     	ds	5
   370  0000B3                     _RRranges:
   371                           	opt callstack 0
   372  0000B3                     	ds	5
   373  0000B8                     _Rranges:
   374                           	opt callstack 0
   375  0000B8                     	ds	5
   376  0000BD                     _Mranges:
   377                           	opt callstack 0
   378  0000BD                     	ds	5
   379                           
   380                           	psect	cstackCOMRAM
   381  000001                     __pcstackCOMRAM:
   382                           	opt callstack 0
   383  000001                     ??_setADCChannel:
   384  000001                     ?___xxtofl:
   385                           	opt callstack 0
   386  000001                     trans@s:
   387                           	opt callstack 0
   388  000001                     ___xxtofl@val:
   389                           	opt callstack 0
   390                           
   391                           ; 4 bytes @ 0x0
   392  000001                     	ds	1
   393  000002                     error@message:
   394                           	opt callstack 0
   395                           
   396                           ; 7 bytes @ 0x1
   397  000002                     	ds	1
   398  000003                     setADCChannel@channel:
   399                           	opt callstack 0
   400                           
   401                           ; 1 bytes @ 0x2
   402  000003                     	ds	1
   403  000004                     ??_aveSensor:
   404                           
   405                           ; 1 bytes @ 0x3
   406  000004                     	ds	1
   407  000005                     ??___xxtofl:
   408                           
   409                           ; 1 bytes @ 0x4
   410  000005                     	ds	1
   411  000006                     aveSensor@s:
   412                           	opt callstack 0
   413                           
   414                           ; 1 bytes @ 0x5
   415  000006                     	ds	1
   416  000007                     aveSensor@measurements:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x6
   420  000007                     	ds	2
   421  000009                     aveSensor@result:
   422                           	opt callstack 0
   423  000009                     error@a:
   424                           	opt callstack 0
   425  000009                     ___xxtofl@sign:
   426                           	opt callstack 0
   427                           
   428                           ; 1 bytes @ 0x8
   429  000009                     	ds	1
   430  00000A                     ??_PRC:
   431  00000A                     aveSensor@a:
   432                           	opt callstack 0
   433  00000A                     ___xxtofl@exp:
   434                           	opt callstack 0
   435                           
   436                           ; 1 bytes @ 0x9
   437  00000A                     	ds	1
   438  00000B                     testCalibrate@temp:
   439                           	opt callstack 0
   440  00000B                     ___xxtofl@arg:
   441                           	opt callstack 0
   442                           
   443                           ; 4 bytes @ 0xA
   444  00000B                     	ds	1
   445  00000C                     testCalibrate@samples:
   446                           	opt callstack 0
   447  00000C                     PRC@message:
   448                           	opt callstack 0
   449                           
   450                           ; 32 bytes @ 0xB
   451  00000C                     	ds	3
   452  00000F                     ?___flmul:
   453                           	opt callstack 0
   454  00000F                     ___flmul@b:
   455                           	opt callstack 0
   456                           
   457                           ; 4 bytes @ 0xE
   458  00000F                     	ds	4
   459  000013                     ___flmul@a:
   460                           	opt callstack 0
   461                           
   462                           ; 4 bytes @ 0x12
   463  000013                     	ds	4
   464  000017                     ??___flmul:
   465                           
   466                           ; 1 bytes @ 0x16
   467  000017                     	ds	4
   468  00001B                     ___flmul@sign:
   469                           	opt callstack 0
   470                           
   471                           ; 1 bytes @ 0x1A
   472  00001B                     	ds	1
   473  00001C                     ___flmul@grs:
   474                           	opt callstack 0
   475                           
   476                           ; 4 bytes @ 0x1B
   477  00001C                     	ds	4
   478  000020                     ___flmul@aexp:
   479                           	opt callstack 0
   480                           
   481                           ; 1 bytes @ 0x1F
   482  000020                     	ds	1
   483  000021                     ___flmul@bexp:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0x20
   487  000021                     	ds	1
   488  000022                     ___flmul@prod:
   489                           	opt callstack 0
   490                           
   491                           ; 4 bytes @ 0x21
   492  000022                     	ds	4
   493  000026                     ___flmul@temp:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x25
   497  000026                     	ds	2
   498  000028                     ?___fltol:
   499                           	opt callstack 0
   500  000028                     ___fltol@f1:
   501                           	opt callstack 0
   502                           
   503                           ; 4 bytes @ 0x27
   504  000028                     	ds	4
   505  00002C                     ??___fltol:
   506  00002C                     PRC@message2:
   507                           	opt callstack 0
   508                           
   509                           ; 5 bytes @ 0x2B
   510  00002C                     	ds	4
   511  000030                     ___fltol@sign1:
   512                           	opt callstack 0
   513                           
   514                           ; 1 bytes @ 0x2F
   515  000030                     	ds	1
   516  000031                     PRC@a:
   517                           	opt callstack 0
   518  000031                     ___fltol@exp1:
   519                           	opt callstack 0
   520                           
   521                           ; 1 bytes @ 0x30
   522  000031                     	ds	1
   523  000032                     PRC@a_884:
   524                           	opt callstack 0
   525  000032                     msDelay@delayInMs:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x31
   529  000032                     	ds	1
   530  000033                     PRC@a_885:
   531                           	opt callstack 0
   532                           
   533                           ; 1 bytes @ 0x32
   534  000033                     	ds	1
   535  000034                     PRC@a_886:
   536                           	opt callstack 0
   537  000034                     pyCal@a:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x33
   541  000034                     	ds	1
   542  000035                     PRC@a_887:
   543                           	opt callstack 0
   544                           
   545                           ; 1 bytes @ 0x34
   546  000035                     	ds	1
   547  000036                     PRC@a_888:
   548                           	opt callstack 0
   549                           
   550                           ; 1 bytes @ 0x35
   551  000036                     	ds	1
   552  000037                     PRC@a_889:
   553                           	opt callstack 0
   554                           
   555                           ; 1 bytes @ 0x36
   556  000037                     	ds	1
   557  000038                     PRC@a_890:
   558                           	opt callstack 0
   559                           
   560                           ; 1 bytes @ 0x37
   561  000038                     	ds	1
   562  000039                     PRC@a_891:
   563                           	opt callstack 0
   564                           
   565                           ; 1 bytes @ 0x38
   566  000039                     	ds	1
   567  00003A                     ??_RCE:
   568                           
   569                           ; 1 bytes @ 0x39
   570  00003A                     	ds	2
   571  00003C                     RCE@message:
   572                           	opt callstack 0
   573                           
   574                           ; 14 bytes @ 0x3B
   575  00003C                     	ds	14
   576  00004A                     RCE@commandReceived:
   577                           	opt callstack 0
   578                           
   579                           ; 3 bytes @ 0x49
   580  00004A                     	ds	3
   581  00004D                     RCE@nCharsReceived:
   582                           	opt callstack 0
   583                           
   584                           ; 1 bytes @ 0x4C
   585  00004D                     	ds	1
   586  00004E                     RCE@a:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0x4D
   590  00004E                     	ds	1
   591  00004F                     RCE@a_980:
   592                           	opt callstack 0
   593                           
   594                           ; 1 bytes @ 0x4E
   595  00004F                     	ds	1
   596  000050                     
   597                           ; 1 bytes @ 0x4F
   598 ;;
   599 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   600 ;;
   601 ;; *************** function _main *****************
   602 ;; Defined at:
   603 ;;		line 79 in file "sanic.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   617 ;;      Params:         0       0       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0
   620 ;;      Totals:         0       0       0       0       0       0       0
   621 ;;Total ram usage:        0 bytes
   622 ;; Hardware stack levels required when called:    4
   623 ;; This function calls:
   624 ;;		_RCE
   625 ;;		_init
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text0
   632  0074E4                     __ptext0:
   633                           	opt callstack 0
   634  0074E4                     _main:
   635                           	opt callstack 27
   636                           
   637                           ;sanic.c: 96:     init();
   638                           
   639                           ;incstack = 0
   640  0074E4  EC83  F03A         	call	_init	;wreg free
   641                           
   642                           ;sanic.c: 97:     RCE();
   643  0074E8  EC79  F03C         	call	_RCE	;wreg free
   644  0074EC                     l289:
   645  0074EC  D7FF               	goto	l289
   646  0074EE                     __end_of_main:
   647                           	opt callstack 0
   648                           
   649 ;; *************** function _init *****************
   650 ;; Defined at:
   651 ;;		line 115 in file "sanic.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   665 ;;      Params:         0       0       0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0       0       0
   668 ;;      Totals:         0       0       0       0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    1
   672 ;; This function calls:
   673 ;;		_clearPorts
   674 ;;		_setupOSC
   675 ;;		_setupSerial
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text1
   682  007506                     __ptext1:
   683                           	opt callstack 0
   684  007506                     _init:
   685                           	opt callstack 29
   686                           
   687                           ;sanic.c: 116:     raceColor[3] = 1;
   688                           
   689                           ;incstack = 0
   690  007506  0E01               	movlw	1
   691  007508  0100               	movlb	0	; () banked
   692  00750A  6F91               	movwf	(_raceColor+3)& (0+255),b
   693                           
   694                           ; BSR set to: 0
   695                           ;sanic.c: 117:     setupOSC();
   696  00750C  EC6D  F03A         	call	_setupOSC	;wreg free
   697                           
   698                           ;sanic.c: 118:     clearPorts();
   699  007510  EC49  F03B         	call	_clearPorts	;wreg free
   700                           
   701                           ;sanic.c: 119:     setupSerial();
   702  007514  ECAF  F03A         	call	_setupSerial	;wreg free
   703  007518  0012               	return		;funcret
   704  00751A                     __end_of_init:
   705                           	opt callstack 0
   706                           
   707 ;; *************** function _setupSerial *****************
   708 ;; Defined at:
   709 ;;		line 99 in file "./functions.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   723 ;;      Params:         0       0       0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0       0       0
   726 ;;      Totals:         0       0       0       0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_init
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text2
   737  00755E                     __ptext2:
   738                           	opt callstack 0
   739  00755E                     _setupSerial:
   740                           	opt callstack 29
   741                           
   742                           ;./functions.c: 101:     PIE1bits.RC1IE = 0;
   743                           
   744                           ;incstack = 0
   745  00755E  9A9D               	bcf	3997,5,c	;volatile
   746                           
   747                           ;./functions.c: 102:     PIE1bits.TX1IE = 0;
   748  007560  989D               	bcf	3997,4,c	;volatile
   749                           
   750                           ;./functions.c: 103:     PIR1bits.RCIF = 0;
   751  007562  9A9E               	bcf	3998,5,c	;volatile
   752                           
   753                           ;./functions.c: 105:     FSR0 = 0;
   754  007564  0E00               	movlw	0
   755  007566  6EEA               	movwf	fsr0h,c	;volatile
   756  007568  0E00               	movlw	0
   757  00756A  6EE9               	movwf	fsr0l,c	;volatile
   758                           
   759                           ;./functions.c: 106:     TXSTA1 = 0b00100100;
   760  00756C  0E24               	movlw	36
   761  00756E  6EAC               	movwf	4012,c	;volatile
   762                           
   763                           ;./functions.c: 107:     RCSTA1 = 0b10010000;
   764  007570  0E90               	movlw	144
   765  007572  6EAB               	movwf	4011,c	;volatile
   766                           
   767                           ;./functions.c: 109:     SPBRG1 = 25;
   768  007574  0E19               	movlw	25
   769  007576  6EAF               	movwf	4015,c	;volatile
   770                           
   771                           ;./functions.c: 110:     SPBRGH1 = 0;
   772  007578  0E00               	movlw	0
   773  00757A  6EB0               	movwf	4016,c	;volatile
   774                           
   775                           ;./functions.c: 111:     BAUDCON1bits.BRG16 = 0;
   776  00757C  96B8               	bcf	4024,3,c	;volatile
   777                           
   778                           ;./functions.c: 112:     TRISCbits.RC6 = 1;
   779  00757E  8C94               	bsf	3988,6,c	;volatile
   780                           
   781                           ;./functions.c: 113:     TRISCbits.RC7 = 1;
   782  007580  8E94               	bsf	3988,7,c	;volatile
   783                           
   784                           ;./functions.c: 115:     PORTC = 0;
   785  007582  0E00               	movlw	0
   786  007584  6E82               	movwf	3970,c	;volatile
   787                           
   788                           ;./functions.c: 116:     ANSELC = 0;
   789  007586  0E00               	movlw	0
   790  007588  010F               	movlb	15	; () banked
   791  00758A  6F3A               	movwf	58,b	;volatile
   792                           
   793                           ; BSR set to: 15
   794  00758C  0012               	return		;funcret
   795  00758E                     __end_of_setupSerial:
   796                           	opt callstack 0
   797                           
   798 ;; *************** function _setupOSC *****************
   799 ;; Defined at:
   800 ;;		line 93 in file "./functions.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, status,2
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   814 ;;      Params:         0       0       0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0
   817 ;;      Totals:         0       0       0       0       0       0       0
   818 ;;Total ram usage:        0 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_init
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text3
   828  0074DA                     __ptext3:
   829                           	opt callstack 0
   830  0074DA                     _setupOSC:
   831                           	opt callstack 29
   832                           
   833                           ;./functions.c: 95:     OSCCONbits.IRCF = 0b101;
   834                           
   835                           ; BSR set to: 15
   836                           ;incstack = 0
   837  0074DA  50D3               	movf	4051,w,c	;volatile
   838  0074DC  0B8F               	andlw	-113
   839  0074DE  0950               	iorlw	80
   840  0074E0  6ED3               	movwf	4051,c	;volatile
   841  0074E2  0012               	return		;funcret
   842  0074E4                     __end_of_setupOSC:
   843                           	opt callstack 0
   844                           
   845 ;; *************** function _clearPorts *****************
   846 ;; Defined at:
   847 ;;		line 62 in file "./functions.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   861 ;;      Params:         0       0       0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_init
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text4
   875  007692                     __ptext4:
   876                           	opt callstack 0
   877  007692                     _clearPorts:
   878                           	opt callstack 29
   879                           
   880                           ;./functions.c: 64:     PORTA = 0;
   881                           
   882                           ;incstack = 0
   883  007692  0E00               	movlw	0
   884  007694  6E80               	movwf	3968,c	;volatile
   885                           
   886                           ;./functions.c: 65:     LATA = 0;
   887  007696  0E00               	movlw	0
   888  007698  6E89               	movwf	3977,c	;volatile
   889                           
   890                           ;./functions.c: 66:     TRISA = 0;
   891  00769A  0E00               	movlw	0
   892  00769C  6E92               	movwf	3986,c	;volatile
   893                           
   894                           ;./functions.c: 67:     ANSELA = 0;
   895  00769E  0E00               	movlw	0
   896  0076A0  010F               	movlb	15	; () banked
   897  0076A2  6F38               	movwf	56,b	;volatile
   898                           
   899                           ;./functions.c: 69:     PORTB = 0;
   900  0076A4  0E00               	movlw	0
   901  0076A6  6E81               	movwf	3969,c	;volatile
   902                           
   903                           ;./functions.c: 70:     LATB = 0;
   904  0076A8  0E00               	movlw	0
   905  0076AA  6E8A               	movwf	3978,c	;volatile
   906                           
   907                           ;./functions.c: 71:     TRISB = 0;
   908  0076AC  0E00               	movlw	0
   909  0076AE  6E93               	movwf	3987,c	;volatile
   910                           
   911                           ;./functions.c: 72:     ANSELB = 0;
   912  0076B0  0E00               	movlw	0
   913  0076B2  6F39               	movwf	57,b	;volatile
   914                           
   915                           ;./functions.c: 74:     PORTC = 0;
   916  0076B4  0E00               	movlw	0
   917  0076B6  6E82               	movwf	3970,c	;volatile
   918                           
   919                           ;./functions.c: 75:     LATC = 0;
   920  0076B8  0E00               	movlw	0
   921  0076BA  6E8B               	movwf	3979,c	;volatile
   922                           
   923                           ;./functions.c: 76:     TRISC = 0;
   924  0076BC  0E00               	movlw	0
   925  0076BE  6E94               	movwf	3988,c	;volatile
   926                           
   927                           ;./functions.c: 77:     ANSELC = 0;
   928  0076C0  0E00               	movlw	0
   929  0076C2  6F3A               	movwf	58,b	;volatile
   930                           
   931                           ;./functions.c: 79:     PORTD = 0;
   932  0076C4  0E00               	movlw	0
   933  0076C6  6E83               	movwf	3971,c	;volatile
   934                           
   935                           ;./functions.c: 80:     LATD = 0;
   936  0076C8  0E00               	movlw	0
   937  0076CA  6E8C               	movwf	3980,c	;volatile
   938                           
   939                           ;./functions.c: 81:     TRISD = 0;
   940  0076CC  0E00               	movlw	0
   941  0076CE  6E95               	movwf	3989,c	;volatile
   942                           
   943                           ;./functions.c: 82:     ANSELD = 0;
   944  0076D0  0E00               	movlw	0
   945  0076D2  6F3B               	movwf	59,b	;volatile
   946                           
   947                           ;./functions.c: 84:     PORTE = 0;
   948  0076D4  0E00               	movlw	0
   949  0076D6  6E84               	movwf	3972,c	;volatile
   950                           
   951                           ;./functions.c: 85:     LATE = 0;
   952  0076D8  0E00               	movlw	0
   953  0076DA  6E8D               	movwf	3981,c	;volatile
   954                           
   955                           ;./functions.c: 86:     TRISE = 0;
   956  0076DC  0E00               	movlw	0
   957  0076DE  6E96               	movwf	3990,c	;volatile
   958                           
   959                           ;./functions.c: 87:     ANSELE = 0;
   960  0076E0  0E00               	movlw	0
   961  0076E2  6F3C               	movwf	60,b	;volatile
   962                           
   963                           ;./functions.c: 88:     raceColor[3] = 1;
   964  0076E4  0E01               	movlw	1
   965  0076E6  0100               	movlb	0	; () banked
   966  0076E8  6F91               	movwf	(_raceColor+3)& (0+255),b
   967                           
   968                           ; BSR set to: 0
   969  0076EA  0012               	return		;funcret
   970  0076EC                     __end_of_clearPorts:
   971                           	opt callstack 0
   972                           
   973 ;; *************** function _RCE *****************
   974 ;; Defined at:
   975 ;;		line 122 in file "sanic.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  a               1   78[COMRAM] unsigned char 
   980 ;;  a               1   77[COMRAM] unsigned char 
   981 ;;  message        14   59[COMRAM] unsigned char [14]
   982 ;;  commandRecei    3   73[COMRAM] unsigned char [3]
   983 ;;  nCharsReceiv    1   76[COMRAM] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   993 ;;      Params:         0       0       0       0       0       0       0
   994 ;;      Locals:        20       0       0       0       0       0       0
   995 ;;      Temps:          2       0       0       0       0       0       0
   996 ;;      Totals:        22       0       0       0       0       0       0
   997 ;;Total ram usage:       22 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    3
  1000 ;; This function calls:
  1001 ;;		_PRC
  1002 ;;		_error
  1003 ;;		_pyCal
  1004 ;;		_testCalibrate
  1005 ;;		_trans
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text5
  1012  0078F2                     __ptext5:
  1013                           	opt callstack 0
  1014  0078F2                     _RCE:
  1015                           	opt callstack 27
  1016                           
  1017                           ;sanic.c: 124:         PORTD = 0b10100100;
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;incstack = 0
  1021                           ;sanic.c: 123:     while(1){
  1022  0078F2  0EA4               	movlw	164
  1023  0078F4  6E83               	movwf	3971,c	;volatile
  1024                           
  1025                           ;sanic.c: 126:         unsigned char message[] = "\nSanic races ";
  1026  0078F6  EE20  F080         	lfsr	2,RCE@F6045
  1027  0078FA  EE10  F03C         	lfsr	1,RCE@message
  1028  0078FE  0E0D               	movlw	13
  1029  007900                     u1321:
  1030  007900  CFDB FFE3          	movff	plusw2,plusw1
  1031  007904  06E8               	decf	wreg,f,c
  1032  007906  E2FC               	bc	u1321
  1033                           
  1034                           ;sanic.c: 128:         for (unsigned char a = 0; a < 13; a++)
  1035  007908  0E00               	movlw	0
  1036  00790A  6E4E               	movwf	RCE@a,c
  1037  00790C                     l2332:
  1038                           
  1039                           ;sanic.c: 129:         {;sanic.c: 130:             trans(message[a]);
  1040  00790C  0E3C               	movlw	low RCE@message
  1041  00790E  244E               	addwf	RCE@a,w,c
  1042  007910  6ED9               	movwf	fsr2l,c
  1043  007912  6ADA               	clrf	fsr2h,c
  1044  007914  0E00               	movlw	high RCE@message
  1045  007916  22DA               	addwfc	fsr2h,f,c
  1046  007918  50DF               	movf	indf2,w,c
  1047  00791A  EC77  F03A         	call	_trans
  1048                           
  1049                           ;sanic.c: 131:         }
  1050  00791E  2A4E               	incf	RCE@a,f,c
  1051  007920  0E0C               	movlw	12
  1052  007922  644E               	cpfsgt	RCE@a,c
  1053  007924  D7F3               	goto	l2332
  1054                           
  1055                           ;sanic.c: 133:         if (raceColor[3] == 1){
  1056  007926  0100               	movlb	0	; () banked
  1057  007928  0591               	decf	(_raceColor+3)& (0+255),w,b
  1058  00792A  A4D8               	btfss	status,2,c
  1059  00792C  D004               	goto	l2342
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;sanic.c: 134:             trans('B');
  1063  00792E  0E42               	movlw	66
  1064  007930  EC77  F03A         	call	_trans
  1065                           
  1066                           ;sanic.c: 135:         }
  1067  007934  D011               	goto	l311
  1068  007936                     l2342:
  1069                           
  1070                           ; BSR set to: 0
  1071  007936  0590               	decf	(_raceColor+2)& (0+255),w,b
  1072  007938  A4D8               	btfss	status,2,c
  1073  00793A  D004               	goto	l2346
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;sanic.c: 137:             trans('R');
  1077  00793C  0E52               	movlw	82
  1078  00793E  EC77  F03A         	call	_trans
  1079                           
  1080                           ;sanic.c: 138:         }
  1081  007942  D00A               	goto	l311
  1082  007944                     l2346:
  1083                           
  1084                           ; BSR set to: 0
  1085  007944  058F               	decf	(_raceColor+1)& (0+255),w,b
  1086  007946  A4D8               	btfss	status,2,c
  1087  007948  D004               	goto	l2350
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;sanic.c: 140:             trans('G');
  1091  00794A  0E47               	movlw	71
  1092  00794C  EC77  F03A         	call	_trans
  1093                           
  1094                           ;sanic.c: 141:         }
  1095  007950  D003               	goto	l311
  1096  007952                     l2350:
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;sanic.c: 143:             trans('n');
  1100  007952  0E6E               	movlw	110
  1101  007954  EC77  F03A         	call	_trans
  1102  007958                     l311:
  1103                           
  1104                           ;sanic.c: 145:         trans('\n');
  1105  007958  0E0A               	movlw	10
  1106  00795A  EC77  F03A         	call	_trans
  1107                           
  1108                           ;sanic.c: 148:         INTCONbits.GIE = 0;
  1109  00795E  9EF2               	bcf	4082,7,c	;volatile
  1110                           
  1111                           ;sanic.c: 149:         INTCONbits.PEIE = 0;
  1112  007960  9CF2               	bcf	4082,6,c	;volatile
  1113                           
  1114                           ;sanic.c: 150:         unsigned char nCharsReceived = 0;
  1115  007962  0E00               	movlw	0
  1116  007964  6E4D               	movwf	RCE@nCharsReceived,c
  1117                           
  1118                           ;sanic.c: 151:         unsigned char commandReceived[3];;sanic.c: 153:         while(nCh
      +                          arsReceived < 3){
  1119  007966  D00B               	goto	l2362
  1120  007968                     l317:
  1121                           
  1122                           ;sanic.c: 154:             if (PIR1bits.RC1IF){
  1123  007968  AA9E               	btfss	3998,5,c	;volatile
  1124  00796A  D009               	goto	l2362
  1125                           
  1126                           ;sanic.c: 155:                 commandReceived[nCharsReceived] = RCREG;
  1127  00796C  0E4A               	movlw	low RCE@commandReceived
  1128  00796E  244D               	addwf	RCE@nCharsReceived,w,c
  1129  007970  6ED9               	movwf	fsr2l,c
  1130  007972  6ADA               	clrf	fsr2h,c
  1131  007974  0E00               	movlw	high RCE@commandReceived
  1132  007976  22DA               	addwfc	fsr2h,f,c
  1133  007978  CFAE FFDF          	movff	4014,indf2	;volatile
  1134                           
  1135                           ;sanic.c: 156:                 nCharsReceived++;
  1136  00797C  2A4D               	incf	RCE@nCharsReceived,f,c
  1137  00797E                     l2362:
  1138                           
  1139                           ;sanic.c: 153:         while(nCharsReceived < 3){
  1140  00797E  0E02               	movlw	2
  1141  007980  644D               	cpfsgt	RCE@nCharsReceived,c
  1142  007982  D7F2               	goto	l317
  1143  007984  D00C               	goto	l2374
  1144  007986                     l2364:
  1145                           
  1146                           ;sanic.c: 167:             PRC();
  1147  007986  EC95  F03D         	call	_PRC	;wreg free
  1148                           
  1149                           ;sanic.c: 168:             break;
  1150  00798A  D020               	goto	l2376
  1151  00798C                     l2366:
  1152                           
  1153                           ;sanic.c: 173:             pyCal();
  1154  00798C  ECE0  F03A         	call	_pyCal	;wreg free
  1155                           
  1156                           ;sanic.c: 174:             break;
  1157  007990  D01D               	goto	l2376
  1158  007992                     l2368:
  1159                           
  1160                           ;sanic.c: 176:             testCalibrate();
  1161  007992  EC9E  F03A         	call	_testCalibrate	;wreg free
  1162                           
  1163                           ;sanic.c: 177:             break;
  1164  007996  D01A               	goto	l2376
  1165  007998                     l2370:
  1166                           
  1167                           ;sanic.c: 180:             error();
  1168  007998  ECC7  F03A         	call	_error	;wreg free
  1169                           
  1170                           ;sanic.c: 181:             break;
  1171  00799C  D017               	goto	l2376
  1172  00799E                     l2374:
  1173  00799E  504A               	movf	RCE@commandReceived,w,c
  1174  0079A0  6E3A               	movwf	??_RCE& (0+255),c
  1175  0079A2  6A3B               	clrf	(??_RCE+1)& (0+255),c
  1176                           
  1177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 1, Range of values is 0 to 0
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte            4     3 (average)
  1183                           ;	Chosen strategy is simple_byte
  1184  0079A4  503B               	movf	??_RCE+1,w,c
  1185  0079A6  0A00               	xorlw	0	; case 0
  1186  0079A8  A4D8               	btfss	status,2,c
  1187  0079AA  D7F6               	goto	l2370
  1188                           
  1189                           ; Switch size 1, requested type "simple"
  1190                           ; Number of cases is 5, Range of values is 67 to 82
  1191                           ; switch strategies available:
  1192                           ; Name         Instructions Cycles
  1193                           ; simple_byte           16     9 (average)
  1194                           ;	Chosen strategy is simple_byte
  1195  0079AC  503A               	movf	??_RCE,w,c
  1196  0079AE  0A43               	xorlw	67	; case 67
  1197  0079B0  B4D8               	btfsc	status,2,c
  1198  0079B2  D7EF               	goto	l2368
  1199  0079B4  0A0D               	xorlw	13	; case 78
  1200  0079B6  B4D8               	btfsc	status,2,c
  1201  0079B8  D009               	goto	l2376
  1202  0079BA  0A1E               	xorlw	30	; case 80
  1203  0079BC  B4D8               	btfsc	status,2,c
  1204  0079BE  D7E3               	goto	l2364
  1205  0079C0  0A01               	xorlw	1	; case 81
  1206  0079C2  B4D8               	btfsc	status,2,c
  1207  0079C4  D7E3               	goto	l2366
  1208  0079C6  0A03               	xorlw	3	; case 82
  1209  0079C8  A4D8               	btfss	status,2,c
  1210  0079CA  D7E6               	goto	l2370
  1211  0079CC                     l2376:
  1212                           
  1213                           ;sanic.c: 184:         for (unsigned char a = 0; a < 3; a++){
  1214  0079CC  0E00               	movlw	0
  1215  0079CE  6E4F               	movwf	RCE@a_980,c
  1216  0079D0                     l2382:
  1217                           
  1218                           ;sanic.c: 185:             commandReceived[a] = 0;
  1219  0079D0  0E4A               	movlw	low RCE@commandReceived
  1220  0079D2  244F               	addwf	RCE@a_980,w,c
  1221  0079D4  6ED9               	movwf	fsr2l,c
  1222  0079D6  6ADA               	clrf	fsr2h,c
  1223  0079D8  0E00               	movlw	high RCE@commandReceived
  1224  0079DA  22DA               	addwfc	fsr2h,f,c
  1225  0079DC  0E00               	movlw	0
  1226  0079DE  6EDF               	movwf	indf2,c
  1227                           
  1228                           ;sanic.c: 186:         }
  1229  0079E0  2A4F               	incf	RCE@a_980,f,c
  1230  0079E2  0E02               	movlw	2
  1231  0079E4  644F               	cpfsgt	RCE@a_980,c
  1232  0079E6  D7F4               	goto	l2382
  1233  0079E8  D784               	goto	_RCE
  1234  0079EA                     __end_of_RCE:
  1235                           	opt callstack 0
  1236                           
  1237 ;; *************** function _testCalibrate *****************
  1238 ;; Defined at:
  1239 ;;		line 199 in file "./functions.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  samples         1   11[COMRAM] unsigned char 
  1244 ;;  temp            1   10[COMRAM] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1254 ;;      Params:         0       0       0       0       0       0       0
  1255 ;;      Locals:         2       0       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0
  1257 ;;      Totals:         2       0       0       0       0       0       0
  1258 ;;Total ram usage:        2 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    2
  1261 ;; This function calls:
  1262 ;;		_aveSensor
  1263 ;; This function is called by:
  1264 ;;		_RCE
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text6
  1269  00753C                     __ptext6:
  1270                           	opt callstack 0
  1271  00753C                     _testCalibrate:
  1272                           	opt callstack 27
  1273                           
  1274                           ;./functions.c: 202:     for (unsigned char samples = 0; samples < 250; samples++){
  1275                           
  1276                           ;incstack = 0
  1277  00753C  0E00               	movlw	0
  1278  00753E  6E0C               	movwf	testCalibrate@samples,c
  1279  007540                     l2144:
  1280                           
  1281                           ;./functions.c: 203:         temp = aveSensor(12);
  1282  007540  0E0C               	movlw	12
  1283  007542  EC01  F03B         	call	_aveSensor
  1284  007546  6E0B               	movwf	testCalibrate@temp,c
  1285                           
  1286                           ;./functions.c: 204:         if (temp >= LLranges[0]){
  1287  007548  5055               	movf	_LLranges,w,c
  1288  00754A  5C0B               	subwf	testCalibrate@temp,w,c
  1289  00754C  B0D8               	btfsc	status,0,c
  1290                           
  1291                           ;./functions.c: 205:             LLranges[0] = temp;
  1292  00754E  C00B  F055         	movff	testCalibrate@temp,_LLranges
  1293                           
  1294                           ;./functions.c: 207:     }
  1295  007552  2A0C               	incf	testCalibrate@samples,f,c
  1296  007554  0EF9               	movlw	249
  1297  007556  640C               	cpfsgt	testCalibrate@samples,c
  1298  007558  D7F3               	goto	l2144
  1299                           
  1300                           ;./functions.c: 209:     PORTAbits.RA7 = 1;
  1301  00755A  8E80               	bsf	3968,7,c	;volatile
  1302                           
  1303                           ;./functions.c: 210:     return;
  1304  00755C  0012               	return		;funcret
  1305  00755E                     __end_of_testCalibrate:
  1306                           	opt callstack 0
  1307                           
  1308 ;; *************** function _pyCal *****************
  1309 ;; Defined at:
  1310 ;;		line 290 in file "./functions.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  a               1   51[COMRAM] unsigned char 
  1315 ;;  done            1    0        unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1325 ;;      Params:         0       0       0       0       0       0       0
  1326 ;;      Locals:         2       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0
  1328 ;;      Totals:         2       0       0       0       0       0       0
  1329 ;;Total ram usage:        2 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		_aveSensor
  1334 ;;		_msDelay
  1335 ;;		_setupADC
  1336 ;;		_trans
  1337 ;; This function is called by:
  1338 ;;		_RCE
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text7
  1343  0075C0                     __ptext7:
  1344                           	opt callstack 0
  1345  0075C0                     _pyCal:
  1346                           	opt callstack 27
  1347                           
  1348                           ;./functions.c: 292:     setupADC();
  1349                           
  1350                           ;incstack = 0
  1351  0075C0  EC8D  F03A         	call	_setupADC	;wreg free
  1352  0075C4                     
  1353                           ;./functions.c: 295:     {;./functions.c: 296:         msDelay(9);
  1354  0075C4  0E09               	movlw	9
  1355  0075C6  ECA7  F03B         	call	_msDelay
  1356                           
  1357                           ;./functions.c: 297:         for (unsigned char a = 0; a < 5; a++)
  1358  0075CA  0E00               	movlw	0
  1359  0075CC  6E34               	movwf	pyCal@a,c
  1360  0075CE                     l2298:
  1361                           
  1362                           ;./functions.c: 298:         {;./functions.c: 299:             trans(aveSensor(sensorCha
      +                          nnels[a]));
  1363  0075CE  0E9E               	movlw	low _sensorChannels
  1364  0075D0  2434               	addwf	pyCal@a,w,c
  1365  0075D2  6ED9               	movwf	fsr2l,c
  1366  0075D4  6ADA               	clrf	fsr2h,c
  1367  0075D6  0E00               	movlw	high _sensorChannels
  1368  0075D8  22DA               	addwfc	fsr2h,f,c
  1369  0075DA  50DF               	movf	indf2,w,c
  1370  0075DC  EC01  F03B         	call	_aveSensor
  1371  0075E0  EC77  F03A         	call	_trans
  1372                           
  1373                           ;./functions.c: 300:         }
  1374  0075E4  2A34               	incf	pyCal@a,f,c
  1375  0075E6  0E04               	movlw	4
  1376  0075E8  6434               	cpfsgt	pyCal@a,c
  1377  0075EA  D7F1               	goto	l2298
  1378                           
  1379                           ;./functions.c: 301:         trans('\n');
  1380  0075EC  0E0A               	movlw	10
  1381  0075EE  EC77  F03A         	call	_trans
  1382                           
  1383                           ;./functions.c: 303:         if (PIR1bits.RC1IF)
  1384  0075F2  AA9E               	btfss	3998,5,c	;volatile
  1385  0075F4  D7E7               	goto	l2288
  1386                           
  1387                           ;./functions.c: 304:         {;./functions.c: 305:             PIR1bits.RC1IF = 0;
  1388  0075F6  9A9E               	bcf	3998,5,c	;volatile
  1389                           
  1390                           ;./functions.c: 306:             if (RCREG == 'S')
  1391  0075F8  0E53               	movlw	83
  1392  0075FA  18AE               	xorwf	4014,w,c	;volatile
  1393  0075FC  B4D8               	btfsc	status,2,c
  1394  0075FE  0012               	return	
  1395  007600  D7E1               	goto	l2288
  1396  007602                     __end_of_pyCal:
  1397                           	opt callstack 0
  1398                           
  1399 ;; *************** function _setupADC *****************
  1400 ;; Defined at:
  1401 ;;		line 122 in file "./functions.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1415 ;;      Params:         0       0       0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0       0       0
  1418 ;;      Totals:         0       0       0       0       0       0       0
  1419 ;;Total ram usage:        0 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_pyCal
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text8
  1429  00751A                     __ptext8:
  1430                           	opt callstack 0
  1431  00751A                     _setupADC:
  1432                           	opt callstack 28
  1433                           
  1434                           ;./functions.c: 124:     ADCON2bits.ADCS = 0b100;
  1435                           
  1436                           ;incstack = 0
  1437  00751A  50C0               	movf	4032,w,c	;volatile
  1438  00751C  0BF8               	andlw	-8
  1439  00751E  0904               	iorlw	4
  1440  007520  6EC0               	movwf	4032,c	;volatile
  1441                           
  1442                           ;./functions.c: 125:     ADCON1 = 0;
  1443  007522  0E00               	movlw	0
  1444  007524  6EC1               	movwf	4033,c	;volatile
  1445                           
  1446                           ;./functions.c: 126:     ADCON0bits.CHS = 0b01100;
  1447  007526  50C2               	movf	4034,w,c	;volatile
  1448  007528  0B83               	andlw	-125
  1449  00752A  0930               	iorlw	48
  1450  00752C  6EC2               	movwf	4034,c	;volatile
  1451                           
  1452                           ;./functions.c: 127:     ADCON2bits.ADFM = 0;
  1453  00752E  9EC0               	bcf	4032,7,c	;volatile
  1454                           
  1455                           ;./functions.c: 128:     ADCON2bits.ACQT = 0b101;
  1456  007530  50C0               	movf	4032,w,c	;volatile
  1457  007532  0BC7               	andlw	-57
  1458  007534  0928               	iorlw	40
  1459  007536  6EC0               	movwf	4032,c	;volatile
  1460                           
  1461                           ;./functions.c: 129:     ADCON0bits.ADON = 1;
  1462  007538  80C2               	bsf	4034,0,c	;volatile
  1463  00753A  0012               	return		;funcret
  1464  00753C                     __end_of_setupADC:
  1465                           	opt callstack 0
  1466                           
  1467 ;; *************** function _msDelay *****************
  1468 ;; Defined at:
  1469 ;;		line 438 in file "./functions.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  delayInMs       1    wreg     unsigned char 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  delayInMs       1   49[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1483 ;;      Params:         0       0       0       0       0       0       0
  1484 ;;      Locals:         1       0       0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0
  1486 ;;      Totals:         1       0       0       0       0       0       0
  1487 ;;Total ram usage:        1 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		___flmul
  1492 ;;		___fltol
  1493 ;;		___xxtofl
  1494 ;; This function is called by:
  1495 ;;		_pyCal
  1496 ;;		_oneSecDelay
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text9
  1501  00774E                     __ptext9:
  1502                           	opt callstack 0
  1503  00774E                     _msDelay:
  1504                           	opt callstack 27
  1505                           
  1506                           ;incstack = 0
  1507                           ;msDelay@delayInMs stored from wreg
  1508  00774E  6E32               	movwf	msDelay@delayInMs,c
  1509                           
  1510                           ;./functions.c: 438: void msDelay(unsigned char delayInMs);./functions.c: 439: {;./funct
      +                          ions.c: 440:     TMR6 = 0;
  1511  007750  0E00               	movlw	0
  1512  007752  010F               	movlb	15	; () banked
  1513  007754  6F4C               	movwf	76,b	;volatile
  1514                           
  1515                           ; BSR set to: 15
  1516                           ;./functions.c: 441:     PR6 = 3.90625 * delayInMs;
  1517  007756  0E00               	movlw	0
  1518  007758  6E13               	movwf	___flmul@a,c
  1519  00775A  0E00               	movlw	0
  1520  00775C  6E14               	movwf	___flmul@a+1,c
  1521  00775E  0E7A               	movlw	122
  1522  007760  6E15               	movwf	___flmul@a+2,c
  1523  007762  0E40               	movlw	64
  1524  007764  6E16               	movwf	___flmul@a+3,c
  1525  007766  5032               	movf	msDelay@delayInMs,w,c
  1526  007768  6E01               	movwf	___xxtofl@val,c
  1527  00776A  6A02               	clrf	___xxtofl@val+1,c
  1528  00776C  6A03               	clrf	___xxtofl@val+2,c
  1529  00776E  6A04               	clrf	___xxtofl@val+3,c
  1530  007770  0E01               	movlw	1
  1531  007772  ECF5  F03C         	call	___xxtofl
  1532  007776  C001  F00F         	movff	?___xxtofl,___flmul@b
  1533  00777A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1534  00777E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1535  007782  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1536  007786  EC57  F03E         	call	___flmul	;wreg free
  1537  00778A  C00F  F028         	movff	?___flmul,___fltol@f1
  1538  00778E  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1539  007792  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1540  007796  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1541  00779A  EC1C  F03C         	call	___fltol	;wreg free
  1542  00779E  5028               	movf	?___fltol,w,c
  1543  0077A0  010F               	movlb	15	; () banked
  1544  0077A2  6F4B               	movwf	75,b	;volatile
  1545                           
  1546                           ; BSR set to: 15
  1547                           ;./functions.c: 442:     T6CON = 0xFF;
  1548  0077A4  694A               	setf	74,b	;volatile
  1549  0077A6                     l278:
  1550  0077A6  A47E               	btfss	3966,2,c	;volatile
  1551  0077A8  D7FE               	goto	l278
  1552                           
  1553                           ;./functions.c: 445:     PIR5bits.TMR6IF = 0;
  1554  0077AA  947E               	bcf	3966,2,c	;volatile
  1555                           
  1556                           ;./functions.c: 446:     T6CON = 0;
  1557  0077AC  0E00               	movlw	0
  1558  0077AE  010F               	movlb	15	; () banked
  1559  0077B0  6F4A               	movwf	74,b	;volatile
  1560                           
  1561                           ; BSR set to: 15
  1562  0077B2  0012               	return		;funcret
  1563  0077B4                     __end_of_msDelay:
  1564                           	opt callstack 0
  1565                           
  1566 ;; *************** function ___xxtofl *****************
  1567 ;; Defined at:
  1568 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  sign            1    wreg     unsigned char 
  1571 ;;  val             4    0[COMRAM] long 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  sign            1    8[COMRAM] unsigned char 
  1574 ;;  arg             4   10[COMRAM] unsigned long 
  1575 ;;  exp             1    9[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  4    0[COMRAM] unsigned char 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1585 ;;      Params:         4       0       0       0       0       0       0
  1586 ;;      Locals:         6       0       0       0       0       0       0
  1587 ;;      Temps:          4       0       0       0       0       0       0
  1588 ;;      Totals:        14       0       0       0       0       0       0
  1589 ;;Total ram usage:       14 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_msDelay
  1595 ;;		_timer6Setup
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text10
  1600  0079EA                     __ptext10:
  1601                           	opt callstack 0
  1602  0079EA                     ___xxtofl:
  1603                           	opt callstack 27
  1604                           
  1605                           ; BSR set to: 15
  1606                           ;incstack = 0
  1607                           ;___xxtofl@sign stored from wreg
  1608  0079EA  6E09               	movwf	___xxtofl@sign,c
  1609  0079EC  5009               	movf	___xxtofl@sign,w,c
  1610  0079EE  A4D8               	btfss	status,2,c
  1611  0079F0  AE04               	btfss	___xxtofl@val+3,7,c
  1612  0079F2  D01A               	goto	l990
  1613  0079F4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1614  0079F8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1615  0079FC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1616  007A00  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1617  007A04  1E05               	comf	??___xxtofl,f,c
  1618  007A06  1E06               	comf	??___xxtofl+1,f,c
  1619  007A08  1E07               	comf	??___xxtofl+2,f,c
  1620  007A0A  1E08               	comf	??___xxtofl+3,f,c
  1621  007A0C  2A05               	incf	??___xxtofl,f,c
  1622  007A0E  0E00               	movlw	0
  1623  007A10  2206               	addwfc	??___xxtofl+1,f,c
  1624  007A12  2207               	addwfc	??___xxtofl+2,f,c
  1625  007A14  2208               	addwfc	??___xxtofl+3,f,c
  1626  007A16  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1627  007A1A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1628  007A1E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1629  007A22  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1630  007A26  D008               	goto	l2024
  1631  007A28                     l990:
  1632  007A28  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1633  007A2C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1634  007A30  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1635  007A34  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1636  007A38                     l2024:
  1637  007A38  5001               	movf	___xxtofl@val,w,c
  1638  007A3A  1002               	iorwf	___xxtofl@val+1,w,c
  1639  007A3C  1003               	iorwf	___xxtofl@val+2,w,c
  1640  007A3E  1004               	iorwf	___xxtofl@val+3,w,c
  1641  007A40  A4D8               	btfss	status,2,c
  1642  007A42  D009               	goto	l2030
  1643  007A44  0E00               	movlw	0
  1644  007A46  6E01               	movwf	?___xxtofl,c
  1645  007A48  0E00               	movlw	0
  1646  007A4A  6E02               	movwf	?___xxtofl+1,c
  1647  007A4C  0E00               	movlw	0
  1648  007A4E  6E03               	movwf	?___xxtofl+2,c
  1649  007A50  0E00               	movlw	0
  1650  007A52  6E04               	movwf	?___xxtofl+3,c
  1651  007A54  0012               	return	
  1652  007A56                     l2030:
  1653  007A56  0E96               	movlw	150
  1654  007A58  6E0A               	movwf	___xxtofl@exp,c
  1655  007A5A  D006               	goto	l2034
  1656  007A5C                     l2032:
  1657  007A5C  2A0A               	incf	___xxtofl@exp,f,c
  1658  007A5E  90D8               	bcf	status,0,c
  1659  007A60  320E               	rrcf	___xxtofl@arg+3,f,c
  1660  007A62  320D               	rrcf	___xxtofl@arg+2,f,c
  1661  007A64  320C               	rrcf	___xxtofl@arg+1,f,c
  1662  007A66  320B               	rrcf	___xxtofl@arg,f,c
  1663  007A68                     l2034:
  1664  007A68  0E00               	movlw	0
  1665  007A6A  140B               	andwf	___xxtofl@arg,w,c
  1666  007A6C  6E05               	movwf	??___xxtofl& (0+255),c
  1667  007A6E  0E00               	movlw	0
  1668  007A70  140C               	andwf	___xxtofl@arg+1,w,c
  1669  007A72  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1670  007A74  0E00               	movlw	0
  1671  007A76  140D               	andwf	___xxtofl@arg+2,w,c
  1672  007A78  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1673  007A7A  0EFE               	movlw	254
  1674  007A7C  140E               	andwf	___xxtofl@arg+3,w,c
  1675  007A7E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1676  007A80  5005               	movf	??___xxtofl,w,c
  1677  007A82  1006               	iorwf	??___xxtofl+1,w,c
  1678  007A84  1007               	iorwf	??___xxtofl+2,w,c
  1679  007A86  1008               	iorwf	??___xxtofl+3,w,c
  1680  007A88  B4D8               	btfsc	status,2,c
  1681  007A8A  D00D               	goto	l997
  1682  007A8C  D7E7               	goto	l2032
  1683  007A8E                     l2036:
  1684  007A8E  2A0A               	incf	___xxtofl@exp,f,c
  1685  007A90  0E01               	movlw	1
  1686  007A92  260B               	addwf	___xxtofl@arg,f,c
  1687  007A94  0E00               	movlw	0
  1688  007A96  220C               	addwfc	___xxtofl@arg+1,f,c
  1689  007A98  220D               	addwfc	___xxtofl@arg+2,f,c
  1690  007A9A  220E               	addwfc	___xxtofl@arg+3,f,c
  1691  007A9C  90D8               	bcf	status,0,c
  1692  007A9E  320E               	rrcf	___xxtofl@arg+3,f,c
  1693  007AA0  320D               	rrcf	___xxtofl@arg+2,f,c
  1694  007AA2  320C               	rrcf	___xxtofl@arg+1,f,c
  1695  007AA4  320B               	rrcf	___xxtofl@arg,f,c
  1696  007AA6                     l997:
  1697  007AA6  0E00               	movlw	0
  1698  007AA8  140B               	andwf	___xxtofl@arg,w,c
  1699  007AAA  6E05               	movwf	??___xxtofl& (0+255),c
  1700  007AAC  0E00               	movlw	0
  1701  007AAE  140C               	andwf	___xxtofl@arg+1,w,c
  1702  007AB0  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1703  007AB2  0E00               	movlw	0
  1704  007AB4  140D               	andwf	___xxtofl@arg+2,w,c
  1705  007AB6  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1706  007AB8  0EFF               	movlw	255
  1707  007ABA  140E               	andwf	___xxtofl@arg+3,w,c
  1708  007ABC  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1709  007ABE  5005               	movf	??___xxtofl,w,c
  1710  007AC0  1006               	iorwf	??___xxtofl+1,w,c
  1711  007AC2  1007               	iorwf	??___xxtofl+2,w,c
  1712  007AC4  1008               	iorwf	??___xxtofl+3,w,c
  1713  007AC6  B4D8               	btfsc	status,2,c
  1714  007AC8  D007               	goto	l2044
  1715  007ACA  D7E1               	goto	l2036
  1716  007ACC                     l2042:
  1717  007ACC  060A               	decf	___xxtofl@exp,f,c
  1718  007ACE  90D8               	bcf	status,0,c
  1719  007AD0  360B               	rlcf	___xxtofl@arg,f,c
  1720  007AD2  360C               	rlcf	___xxtofl@arg+1,f,c
  1721  007AD4  360D               	rlcf	___xxtofl@arg+2,f,c
  1722  007AD6  360E               	rlcf	___xxtofl@arg+3,f,c
  1723  007AD8                     l2044:
  1724  007AD8  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1725  007ADA  D003               	goto	u1070
  1726  007ADC  0E02               	movlw	2
  1727  007ADE  600A               	cpfslt	___xxtofl@exp,c
  1728  007AE0  D7F5               	goto	l2042
  1729  007AE2                     u1070:
  1730  007AE2  A00A               	btfss	___xxtofl@exp,0,c
  1731  007AE4  9E0D               	bcf	___xxtofl@arg+2,7,c
  1732  007AE6  90D8               	bcf	status,0,c
  1733  007AE8  320A               	rrcf	___xxtofl@exp,f,c
  1734  007AEA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1735  007AEE  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1736  007AF0  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1737  007AF2  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1738  007AF4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1739  007AF8  6A07               	clrf	??___xxtofl+2,c
  1740  007AFA  6A06               	clrf	??___xxtofl+1,c
  1741  007AFC  6A05               	clrf	??___xxtofl,c
  1742  007AFE  5005               	movf	??___xxtofl,w,c
  1743  007B00  120B               	iorwf	___xxtofl@arg,f,c
  1744  007B02  5006               	movf	??___xxtofl+1,w,c
  1745  007B04  120C               	iorwf	___xxtofl@arg+1,f,c
  1746  007B06  5007               	movf	??___xxtofl+2,w,c
  1747  007B08  120D               	iorwf	___xxtofl@arg+2,f,c
  1748  007B0A  5008               	movf	??___xxtofl+3,w,c
  1749  007B0C  120E               	iorwf	___xxtofl@arg+3,f,c
  1750  007B0E  5009               	movf	___xxtofl@sign,w,c
  1751  007B10  A4D8               	btfss	status,2,c
  1752  007B12  AE04               	btfss	___xxtofl@val+3,7,c
  1753  007B14  D001               	goto	l2060
  1754  007B16  8E0E               	bsf	___xxtofl@arg+3,7,c
  1755  007B18                     l2060:
  1756  007B18  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1757  007B1C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1758  007B20  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1759  007B24  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1760  007B28  0012               	return		;funcret
  1761  007B2A                     __end_of___xxtofl:
  1762                           	opt callstack 0
  1763                           
  1764 ;; *************** function ___fltol *****************
  1765 ;; Defined at:
  1766 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  f1              4   39[COMRAM] unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  exp1            1   48[COMRAM] unsigned char 
  1771 ;;  sign1           1   47[COMRAM] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  4   39[COMRAM] long 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1781 ;;      Params:         4       0       0       0       0       0       0
  1782 ;;      Locals:         2       0       0       0       0       0       0
  1783 ;;      Temps:          4       0       0       0       0       0       0
  1784 ;;      Totals:        10       0       0       0       0       0       0
  1785 ;;Total ram usage:       10 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_msDelay
  1791 ;;		_timer6Setup
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text11
  1796  007838                     __ptext11:
  1797                           	opt callstack 0
  1798  007838                     ___fltol:
  1799                           	opt callstack 27
  1800                           
  1801                           ;incstack = 0
  1802  007838  342A               	rlcf	___fltol@f1+2,w,c
  1803  00783A  342B               	rlcf	___fltol@f1+3,w,c
  1804  00783C  6E31               	movwf	___fltol@exp1,c
  1805  00783E  5031               	movf	___fltol@exp1,w,c
  1806  007840  A4D8               	btfss	status,2,c
  1807  007842  D009               	goto	l1980
  1808  007844                     u940:
  1809  007844  0E00               	movlw	0
  1810  007846  6E28               	movwf	?___fltol,c
  1811  007848  0E00               	movlw	0
  1812  00784A  6E29               	movwf	?___fltol+1,c
  1813  00784C  0E00               	movlw	0
  1814  00784E  6E2A               	movwf	?___fltol+2,c
  1815  007850  0E00               	movlw	0
  1816  007852  6E2B               	movwf	?___fltol+3,c
  1817  007854  0012               	return	
  1818  007856                     l1980:
  1819  007856  C028  F02C         	movff	___fltol@f1,??___fltol
  1820  00785A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  1821  00785E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  1822  007862  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  1823  007866  0E20               	movlw	32
  1824  007868  D005               	goto	u950
  1825  00786A                     u955:
  1826  00786A  90D8               	bcf	status,0,c
  1827  00786C  322F               	rrcf	??___fltol+3,f,c
  1828  00786E  322E               	rrcf	??___fltol+2,f,c
  1829  007870  322D               	rrcf	??___fltol+1,f,c
  1830  007872  322C               	rrcf	??___fltol,f,c
  1831  007874                     u950:
  1832  007874  2EE8               	decfsz	wreg,f,c
  1833  007876  D7F9               	goto	u955
  1834  007878  502C               	movf	??___fltol,w,c
  1835  00787A  6E30               	movwf	___fltol@sign1,c
  1836  00787C  8E2A               	bsf	___fltol@f1+2,7,c
  1837  00787E  0EFF               	movlw	255
  1838  007880  1628               	andwf	___fltol@f1,f,c
  1839  007882  0EFF               	movlw	255
  1840  007884  1629               	andwf	___fltol@f1+1,f,c
  1841  007886  0EFF               	movlw	255
  1842  007888  162A               	andwf	___fltol@f1+2,f,c
  1843  00788A  0E00               	movlw	0
  1844  00788C  162B               	andwf	___fltol@f1+3,f,c
  1845  00788E  0E96               	movlw	150
  1846  007890  5E31               	subwf	___fltol@exp1,f,c
  1847  007892  AE31               	btfss	___fltol@exp1,7,c
  1848  007894  D00D               	goto	l2000
  1849  007896  5031               	movf	___fltol@exp1,w,c
  1850  007898  0A80               	xorlw	128
  1851  00789A  0F97               	addlw	151
  1852  00789C  A0D8               	btfss	status,0,c
  1853  00789E  D7D2               	goto	u940
  1854  0078A0                     l1996:
  1855  0078A0  90D8               	bcf	status,0,c
  1856  0078A2  322B               	rrcf	___fltol@f1+3,f,c
  1857  0078A4  322A               	rrcf	___fltol@f1+2,f,c
  1858  0078A6  3229               	rrcf	___fltol@f1+1,f,c
  1859  0078A8  3228               	rrcf	___fltol@f1,f,c
  1860  0078AA  3E31               	incfsz	___fltol@exp1,f,c
  1861  0078AC  D7F9               	goto	l1996
  1862  0078AE  D00D               	goto	u990
  1863  0078B0                     l2000:
  1864  0078B0  0E1F               	movlw	31
  1865  0078B2  6431               	cpfsgt	___fltol@exp1,c
  1866  0078B4  D007               	goto	l2008
  1867  0078B6  D7C6               	goto	u940
  1868  0078B8                     l2006:
  1869  0078B8  90D8               	bcf	status,0,c
  1870  0078BA  3628               	rlcf	___fltol@f1,f,c
  1871  0078BC  3629               	rlcf	___fltol@f1+1,f,c
  1872  0078BE  362A               	rlcf	___fltol@f1+2,f,c
  1873  0078C0  362B               	rlcf	___fltol@f1+3,f,c
  1874  0078C2  0631               	decf	___fltol@exp1,f,c
  1875  0078C4                     l2008:
  1876  0078C4  5031               	movf	___fltol@exp1,w,c
  1877  0078C6  A4D8               	btfss	status,2,c
  1878  0078C8  D7F7               	goto	l2006
  1879  0078CA                     u990:
  1880  0078CA  5030               	movf	___fltol@sign1,w,c
  1881  0078CC  B4D8               	btfsc	status,2,c
  1882  0078CE  D008               	goto	l2014
  1883  0078D0  1E2B               	comf	___fltol@f1+3,f,c
  1884  0078D2  1E2A               	comf	___fltol@f1+2,f,c
  1885  0078D4  1E29               	comf	___fltol@f1+1,f,c
  1886  0078D6  6C28               	negf	___fltol@f1,c
  1887  0078D8  0E00               	movlw	0
  1888  0078DA  2229               	addwfc	___fltol@f1+1,f,c
  1889  0078DC  222A               	addwfc	___fltol@f1+2,f,c
  1890  0078DE  222B               	addwfc	___fltol@f1+3,f,c
  1891  0078E0                     l2014:
  1892  0078E0  C028  F028         	movff	___fltol@f1,?___fltol
  1893  0078E4  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  1894  0078E8  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  1895  0078EC  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  1896  0078F0  0012               	return		;funcret
  1897  0078F2                     __end_of___fltol:
  1898                           	opt callstack 0
  1899                           
  1900 ;; *************** function ___flmul *****************
  1901 ;; Defined at:
  1902 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  b               4   14[COMRAM] long 
  1905 ;;  a               4   18[COMRAM] long 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  prod            4   33[COMRAM] struct .
  1908 ;;  grs             4   27[COMRAM] unsigned long 
  1909 ;;  temp            2   37[COMRAM] struct .
  1910 ;;  bexp            1   32[COMRAM] unsigned char 
  1911 ;;  aexp            1   31[COMRAM] unsigned char 
  1912 ;;  sign            1   26[COMRAM] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  4   14[COMRAM] unsigned char 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, prodl, prodh
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1922 ;;      Params:         8       0       0       0       0       0       0
  1923 ;;      Locals:        13       0       0       0       0       0       0
  1924 ;;      Temps:          4       0       0       0       0       0       0
  1925 ;;      Totals:        25       0       0       0       0       0       0
  1926 ;;Total ram usage:       25 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_msDelay
  1932 ;;		_timer6Setup
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text12
  1937  007CAE                     __ptext12:
  1938                           	opt callstack 0
  1939  007CAE                     ___flmul:
  1940                           	opt callstack 27
  1941                           
  1942                           ;incstack = 0
  1943  007CAE  5012               	movf	___flmul@b+3,w,c
  1944  007CB0  0B80               	andlw	128
  1945  007CB2  6E1B               	movwf	___flmul@sign,c
  1946  007CB4  5012               	movf	___flmul@b+3,w,c
  1947  007CB6  2412               	addwf	___flmul@b+3,w,c
  1948  007CB8  6E21               	movwf	___flmul@bexp,c
  1949  007CBA  BE11               	btfsc	___flmul@b+2,7,c
  1950  007CBC  8021               	bsf	___flmul@bexp,0,c
  1951  007CBE  5021               	movf	___flmul@bexp,w,c
  1952  007CC0  B4D8               	btfsc	status,2,c
  1953  007CC2  D00D               	goto	l1858
  1954  007CC4  2821               	incf	___flmul@bexp,w,c
  1955  007CC6  A4D8               	btfss	status,2,c
  1956  007CC8  D008               	goto	l1856
  1957  007CCA  0E00               	movlw	0
  1958  007CCC  6E0F               	movwf	___flmul@b,c
  1959  007CCE  0E00               	movlw	0
  1960  007CD0  6E10               	movwf	___flmul@b+1,c
  1961  007CD2  0E00               	movlw	0
  1962  007CD4  6E11               	movwf	___flmul@b+2,c
  1963  007CD6  0E00               	movlw	0
  1964  007CD8  6E12               	movwf	___flmul@b+3,c
  1965  007CDA                     l1856:
  1966  007CDA  8E11               	bsf	___flmul@b+2,7,c
  1967  007CDC  D008               	goto	l1860
  1968  007CDE                     l1858:
  1969  007CDE  0E00               	movlw	0
  1970  007CE0  6E0F               	movwf	___flmul@b,c
  1971  007CE2  0E00               	movlw	0
  1972  007CE4  6E10               	movwf	___flmul@b+1,c
  1973  007CE6  0E00               	movlw	0
  1974  007CE8  6E11               	movwf	___flmul@b+2,c
  1975  007CEA  0E00               	movlw	0
  1976  007CEC  6E12               	movwf	___flmul@b+3,c
  1977  007CEE                     l1860:
  1978  007CEE  5016               	movf	___flmul@a+3,w,c
  1979  007CF0  0B80               	andlw	128
  1980  007CF2  1A1B               	xorwf	___flmul@sign,f,c
  1981  007CF4  5016               	movf	___flmul@a+3,w,c
  1982  007CF6  2416               	addwf	___flmul@a+3,w,c
  1983  007CF8  6E20               	movwf	___flmul@aexp,c
  1984  007CFA  BE15               	btfsc	___flmul@a+2,7,c
  1985  007CFC  8020               	bsf	___flmul@aexp,0,c
  1986  007CFE  5020               	movf	___flmul@aexp,w,c
  1987  007D00  B4D8               	btfsc	status,2,c
  1988  007D02  D00D               	goto	l1876
  1989  007D04  2820               	incf	___flmul@aexp,w,c
  1990  007D06  A4D8               	btfss	status,2,c
  1991  007D08  D008               	goto	l1874
  1992  007D0A  0E00               	movlw	0
  1993  007D0C  6E13               	movwf	___flmul@a,c
  1994  007D0E  0E00               	movlw	0
  1995  007D10  6E14               	movwf	___flmul@a+1,c
  1996  007D12  0E00               	movlw	0
  1997  007D14  6E15               	movwf	___flmul@a+2,c
  1998  007D16  0E00               	movlw	0
  1999  007D18  6E16               	movwf	___flmul@a+3,c
  2000  007D1A                     l1874:
  2001  007D1A  8E15               	bsf	___flmul@a+2,7,c
  2002  007D1C  D008               	goto	l949
  2003  007D1E                     l1876:
  2004  007D1E  0E00               	movlw	0
  2005  007D20  6E13               	movwf	___flmul@a,c
  2006  007D22  0E00               	movlw	0
  2007  007D24  6E14               	movwf	___flmul@a+1,c
  2008  007D26  0E00               	movlw	0
  2009  007D28  6E15               	movwf	___flmul@a+2,c
  2010  007D2A  0E00               	movlw	0
  2011  007D2C  6E16               	movwf	___flmul@a+3,c
  2012  007D2E                     l949:
  2013  007D2E  5020               	movf	___flmul@aexp,w,c
  2014  007D30  B4D8               	btfsc	status,2,c
  2015  007D32  D003               	goto	u820
  2016  007D34  5021               	movf	___flmul@bexp,w,c
  2017  007D36  A4D8               	btfss	status,2,c
  2018  007D38  D009               	goto	l1884
  2019  007D3A                     u820:
  2020  007D3A  0E00               	movlw	0
  2021  007D3C  6E0F               	movwf	?___flmul,c
  2022  007D3E  0E00               	movlw	0
  2023  007D40  6E10               	movwf	?___flmul+1,c
  2024  007D42  0E00               	movlw	0
  2025  007D44  6E11               	movwf	?___flmul+2,c
  2026  007D46  0E00               	movlw	0
  2027  007D48  6E12               	movwf	?___flmul+3,c
  2028  007D4A  0012               	return	
  2029  007D4C                     l1884:
  2030  007D4C  5015               	movf	___flmul@a+2,w,c
  2031  007D4E  020F               	mulwf	___flmul@b,c
  2032  007D50  CFF3 F026          	movff	prodl,___flmul@temp
  2033  007D54  CFF4 F027          	movff	prodh,___flmul@temp+1
  2034  007D58  5026               	movf	___flmul@temp,w,c
  2035  007D5A  6E1C               	movwf	___flmul@grs,c
  2036  007D5C  6A1D               	clrf	___flmul@grs+1,c
  2037  007D5E  6A1E               	clrf	___flmul@grs+2,c
  2038  007D60  6A1F               	clrf	___flmul@grs+3,c
  2039  007D62  5027               	movf	___flmul@temp+1,w,c
  2040  007D64  6E22               	movwf	___flmul@prod,c
  2041  007D66  6A23               	clrf	___flmul@prod+1,c
  2042  007D68  6A24               	clrf	___flmul@prod+2,c
  2043  007D6A  6A25               	clrf	___flmul@prod+3,c
  2044  007D6C  5014               	movf	___flmul@a+1,w,c
  2045  007D6E  0210               	mulwf	___flmul@b+1,c
  2046  007D70  CFF3 F026          	movff	prodl,___flmul@temp
  2047  007D74  CFF4 F027          	movff	prodh,___flmul@temp+1
  2048  007D78  5026               	movf	___flmul@temp,w,c
  2049  007D7A  261C               	addwf	___flmul@grs,f,c
  2050  007D7C  0E00               	movlw	0
  2051  007D7E  221D               	addwfc	___flmul@grs+1,f,c
  2052  007D80  221E               	addwfc	___flmul@grs+2,f,c
  2053  007D82  221F               	addwfc	___flmul@grs+3,f,c
  2054  007D84  5027               	movf	___flmul@temp+1,w,c
  2055  007D86  2622               	addwf	___flmul@prod,f,c
  2056  007D88  0E00               	movlw	0
  2057  007D8A  2223               	addwfc	___flmul@prod+1,f,c
  2058  007D8C  2224               	addwfc	___flmul@prod+2,f,c
  2059  007D8E  2225               	addwfc	___flmul@prod+3,f,c
  2060  007D90  5013               	movf	___flmul@a,w,c
  2061  007D92  0211               	mulwf	___flmul@b+2,c
  2062  007D94  CFF3 F026          	movff	prodl,___flmul@temp
  2063  007D98  CFF4 F027          	movff	prodh,___flmul@temp+1
  2064  007D9C  5026               	movf	___flmul@temp,w,c
  2065  007D9E  261C               	addwf	___flmul@grs,f,c
  2066  007DA0  0E00               	movlw	0
  2067  007DA2  221D               	addwfc	___flmul@grs+1,f,c
  2068  007DA4  221E               	addwfc	___flmul@grs+2,f,c
  2069  007DA6  221F               	addwfc	___flmul@grs+3,f,c
  2070  007DA8  5027               	movf	___flmul@temp+1,w,c
  2071  007DAA  2622               	addwf	___flmul@prod,f,c
  2072  007DAC  0E00               	movlw	0
  2073  007DAE  2223               	addwfc	___flmul@prod+1,f,c
  2074  007DB0  2224               	addwfc	___flmul@prod+2,f,c
  2075  007DB2  2225               	addwfc	___flmul@prod+3,f,c
  2076  007DB4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2077  007DB8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2078  007DBC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2079  007DC0  6A1C               	clrf	___flmul@grs,c
  2080  007DC2  5013               	movf	___flmul@a,w,c
  2081  007DC4  0210               	mulwf	___flmul@b+1,c
  2082  007DC6  CFF3 F026          	movff	prodl,___flmul@temp
  2083  007DCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  2084  007DCE  5026               	movf	___flmul@temp,w,c
  2085  007DD0  261C               	addwf	___flmul@grs,f,c
  2086  007DD2  5027               	movf	___flmul@temp+1,w,c
  2087  007DD4  221D               	addwfc	___flmul@grs+1,f,c
  2088  007DD6  0E00               	movlw	0
  2089  007DD8  221E               	addwfc	___flmul@grs+2,f,c
  2090  007DDA  0E00               	movlw	0
  2091  007DDC  221F               	addwfc	___flmul@grs+3,f,c
  2092  007DDE  5014               	movf	___flmul@a+1,w,c
  2093  007DE0  020F               	mulwf	___flmul@b,c
  2094  007DE2  CFF3 F026          	movff	prodl,___flmul@temp
  2095  007DE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  2096  007DEA  5026               	movf	___flmul@temp,w,c
  2097  007DEC  261C               	addwf	___flmul@grs,f,c
  2098  007DEE  5027               	movf	___flmul@temp+1,w,c
  2099  007DF0  221D               	addwfc	___flmul@grs+1,f,c
  2100  007DF2  0E00               	movlw	0
  2101  007DF4  221E               	addwfc	___flmul@grs+2,f,c
  2102  007DF6  0E00               	movlw	0
  2103  007DF8  221F               	addwfc	___flmul@grs+3,f,c
  2104  007DFA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2105  007DFE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2106  007E02  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2107  007E06  6A1C               	clrf	___flmul@grs,c
  2108  007E08  5013               	movf	___flmul@a,w,c
  2109  007E0A  020F               	mulwf	___flmul@b,c
  2110  007E0C  CFF3 F026          	movff	prodl,___flmul@temp
  2111  007E10  CFF4 F027          	movff	prodh,___flmul@temp+1
  2112  007E14  5026               	movf	___flmul@temp,w,c
  2113  007E16  261C               	addwf	___flmul@grs,f,c
  2114  007E18  5027               	movf	___flmul@temp+1,w,c
  2115  007E1A  221D               	addwfc	___flmul@grs+1,f,c
  2116  007E1C  0E00               	movlw	0
  2117  007E1E  221E               	addwfc	___flmul@grs+2,f,c
  2118  007E20  0E00               	movlw	0
  2119  007E22  221F               	addwfc	___flmul@grs+3,f,c
  2120  007E24  5015               	movf	___flmul@a+2,w,c
  2121  007E26  0210               	mulwf	___flmul@b+1,c
  2122  007E28  CFF3 F026          	movff	prodl,___flmul@temp
  2123  007E2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  2124  007E30  5026               	movf	___flmul@temp,w,c
  2125  007E32  2622               	addwf	___flmul@prod,f,c
  2126  007E34  5027               	movf	___flmul@temp+1,w,c
  2127  007E36  2223               	addwfc	___flmul@prod+1,f,c
  2128  007E38  0E00               	movlw	0
  2129  007E3A  2224               	addwfc	___flmul@prod+2,f,c
  2130  007E3C  0E00               	movlw	0
  2131  007E3E  2225               	addwfc	___flmul@prod+3,f,c
  2132  007E40  5014               	movf	___flmul@a+1,w,c
  2133  007E42  0211               	mulwf	___flmul@b+2,c
  2134  007E44  CFF3 F026          	movff	prodl,___flmul@temp
  2135  007E48  CFF4 F027          	movff	prodh,___flmul@temp+1
  2136  007E4C  5026               	movf	___flmul@temp,w,c
  2137  007E4E  2622               	addwf	___flmul@prod,f,c
  2138  007E50  5027               	movf	___flmul@temp+1,w,c
  2139  007E52  2223               	addwfc	___flmul@prod+1,f,c
  2140  007E54  0E00               	movlw	0
  2141  007E56  2224               	addwfc	___flmul@prod+2,f,c
  2142  007E58  0E00               	movlw	0
  2143  007E5A  2225               	addwfc	___flmul@prod+3,f,c
  2144  007E5C  5015               	movf	___flmul@a+2,w,c
  2145  007E5E  0211               	mulwf	___flmul@b+2,c
  2146  007E60  CFF3 F026          	movff	prodl,___flmul@temp
  2147  007E64  CFF4 F027          	movff	prodh,___flmul@temp+1
  2148  007E68  5026               	movf	___flmul@temp,w,c
  2149  007E6A  6E17               	movwf	??___flmul& (0+255),c
  2150  007E6C  5027               	movf	___flmul@temp+1,w,c
  2151  007E6E  6E18               	movwf	(??___flmul+1)& (0+255),c
  2152  007E70  6A19               	clrf	(??___flmul+2)& (0+255),c
  2153  007E72  6A1A               	clrf	(??___flmul+3)& (0+255),c
  2154  007E74  C019  F01A         	movff	??___flmul+2,??___flmul+3
  2155  007E78  C018  F019         	movff	??___flmul+1,??___flmul+2
  2156  007E7C  C017  F018         	movff	??___flmul,??___flmul+1
  2157  007E80  6A17               	clrf	??___flmul,c
  2158  007E82  5017               	movf	??___flmul,w,c
  2159  007E84  2622               	addwf	___flmul@prod,f,c
  2160  007E86  5018               	movf	??___flmul+1,w,c
  2161  007E88  2223               	addwfc	___flmul@prod+1,f,c
  2162  007E8A  5019               	movf	??___flmul+2,w,c
  2163  007E8C  2224               	addwfc	___flmul@prod+2,f,c
  2164  007E8E  501A               	movf	??___flmul+3,w,c
  2165  007E90  2225               	addwfc	___flmul@prod+3,f,c
  2166  007E92  C01C  F017         	movff	___flmul@grs,??___flmul
  2167  007E96  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  2168  007E9A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  2169  007E9E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  2170  007EA2  0E19               	movlw	25
  2171  007EA4  D005               	goto	u830
  2172  007EA6                     u835:
  2173  007EA6  90D8               	bcf	status,0,c
  2174  007EA8  321A               	rrcf	??___flmul+3,f,c
  2175  007EAA  3219               	rrcf	??___flmul+2,f,c
  2176  007EAC  3218               	rrcf	??___flmul+1,f,c
  2177  007EAE  3217               	rrcf	??___flmul,f,c
  2178  007EB0                     u830:
  2179  007EB0  2EE8               	decfsz	wreg,f,c
  2180  007EB2  D7F9               	goto	u835
  2181  007EB4  5017               	movf	??___flmul,w,c
  2182  007EB6  2622               	addwf	___flmul@prod,f,c
  2183  007EB8  5018               	movf	??___flmul+1,w,c
  2184  007EBA  2223               	addwfc	___flmul@prod+1,f,c
  2185  007EBC  5019               	movf	??___flmul+2,w,c
  2186  007EBE  2224               	addwfc	___flmul@prod+2,f,c
  2187  007EC0  501A               	movf	??___flmul+3,w,c
  2188  007EC2  2225               	addwfc	___flmul@prod+3,f,c
  2189  007EC4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2190  007EC8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2191  007ECC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2192  007ED0  6A1C               	clrf	___flmul@grs,c
  2193  007ED2  5020               	movf	___flmul@aexp,w,c
  2194  007ED4  C021  F017         	movff	___flmul@bexp,??___flmul
  2195  007ED8  6A18               	clrf	(??___flmul+1)& (0+255),c
  2196  007EDA  2617               	addwf	??___flmul,f,c
  2197  007EDC  0E00               	movlw	0
  2198  007EDE  2218               	addwfc	??___flmul+1,f,c
  2199  007EE0  0E82               	movlw	130
  2200  007EE2  2417               	addwf	??___flmul,w,c
  2201  007EE4  6E26               	movwf	___flmul@temp,c
  2202  007EE6  0EFF               	movlw	255
  2203  007EE8  2018               	addwfc	??___flmul+1,w,c
  2204  007EEA  6E27               	movwf	___flmul@temp+1,c
  2205  007EEC  D00F               	goto	l1932
  2206  007EEE                     l1926:
  2207  007EEE  90D8               	bcf	status,0,c
  2208  007EF0  3622               	rlcf	___flmul@prod,f,c
  2209  007EF2  3623               	rlcf	___flmul@prod+1,f,c
  2210  007EF4  3624               	rlcf	___flmul@prod+2,f,c
  2211  007EF6  3625               	rlcf	___flmul@prod+3,f,c
  2212  007EF8  BE1F               	btfsc	___flmul@grs+3,7,c
  2213  007EFA  8022               	bsf	___flmul@prod,0,c
  2214  007EFC  90D8               	bcf	status,0,c
  2215  007EFE  361C               	rlcf	___flmul@grs,f,c
  2216  007F00  361D               	rlcf	___flmul@grs+1,f,c
  2217  007F02  361E               	rlcf	___flmul@grs+2,f,c
  2218  007F04  361F               	rlcf	___flmul@grs+3,f,c
  2219  007F06  0626               	decf	___flmul@temp,f,c
  2220  007F08  A0D8               	btfss	status,0,c
  2221  007F0A  0627               	decf	___flmul@temp+1,f,c
  2222  007F0C                     l1932:
  2223  007F0C  AE24               	btfss	___flmul@prod+2,7,c
  2224  007F0E  D7EF               	goto	l1926
  2225  007F10  0E00               	movlw	0
  2226  007F12  6E20               	movwf	___flmul@aexp,c
  2227  007F14  AE1F               	btfss	___flmul@grs+3,7,c
  2228  007F16  D017               	goto	l958
  2229  007F18  0EFF               	movlw	255
  2230  007F1A  141C               	andwf	___flmul@grs,w,c
  2231  007F1C  6E17               	movwf	??___flmul& (0+255),c
  2232  007F1E  0EFF               	movlw	255
  2233  007F20  141D               	andwf	___flmul@grs+1,w,c
  2234  007F22  6E18               	movwf	(??___flmul+1)& (0+255),c
  2235  007F24  0EFF               	movlw	255
  2236  007F26  141E               	andwf	___flmul@grs+2,w,c
  2237  007F28  6E19               	movwf	(??___flmul+2)& (0+255),c
  2238  007F2A  0E7F               	movlw	127
  2239  007F2C  141F               	andwf	___flmul@grs+3,w,c
  2240  007F2E  6E1A               	movwf	(??___flmul+3)& (0+255),c
  2241  007F30  5017               	movf	??___flmul,w,c
  2242  007F32  1018               	iorwf	??___flmul+1,w,c
  2243  007F34  1019               	iorwf	??___flmul+2,w,c
  2244  007F36  101A               	iorwf	??___flmul+3,w,c
  2245  007F38  B4D8               	btfsc	status,2,c
  2246  007F3A  D003               	goto	l959
  2247  007F3C                     u870:
  2248  007F3C  0E01               	movlw	1
  2249  007F3E  6E20               	movwf	___flmul@aexp,c
  2250  007F40  D002               	goto	l958
  2251  007F42                     l959:
  2252  007F42  B022               	btfsc	___flmul@prod,0,c
  2253  007F44  D7FB               	goto	u870
  2254  007F46                     l958:
  2255  007F46  5020               	movf	___flmul@aexp,w,c
  2256  007F48  B4D8               	btfsc	status,2,c
  2257  007F4A  D01F               	goto	l1952
  2258  007F4C  0E01               	movlw	1
  2259  007F4E  2622               	addwf	___flmul@prod,f,c
  2260  007F50  0E00               	movlw	0
  2261  007F52  2223               	addwfc	___flmul@prod+1,f,c
  2262  007F54  2224               	addwfc	___flmul@prod+2,f,c
  2263  007F56  2225               	addwfc	___flmul@prod+3,f,c
  2264  007F58  A025               	btfss	___flmul@prod+3,0,c
  2265  007F5A  D017               	goto	l1952
  2266  007F5C  C022  F017         	movff	___flmul@prod,??___flmul
  2267  007F60  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2268  007F64  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2269  007F68  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2270  007F6C  341A               	rlcf	??___flmul+3,w,c
  2271  007F6E  321A               	rrcf	??___flmul+3,f,c
  2272  007F70  3219               	rrcf	??___flmul+2,f,c
  2273  007F72  3218               	rrcf	??___flmul+1,f,c
  2274  007F74  3217               	rrcf	??___flmul,f,c
  2275  007F76  C017  F022         	movff	??___flmul,___flmul@prod
  2276  007F7A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2277  007F7E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2278  007F82  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2279  007F86  4A26               	infsnz	___flmul@temp,f,c
  2280  007F88  2A27               	incf	___flmul@temp+1,f,c
  2281  007F8A                     l1952:
  2282  007F8A  BE27               	btfsc	___flmul@temp+1,7,c
  2283  007F8C  D00D               	goto	l1956
  2284  007F8E  5027               	movf	___flmul@temp+1,w,c
  2285  007F90  E103               	bnz	u910
  2286  007F92  2826               	incf	___flmul@temp,w,c
  2287  007F94  A0D8               	btfss	status,0,c
  2288  007F96  D008               	goto	l1956
  2289  007F98                     u910:
  2290  007F98  0E00               	movlw	0
  2291  007F9A  6E22               	movwf	___flmul@prod,c
  2292  007F9C  0E00               	movlw	0
  2293  007F9E  6E23               	movwf	___flmul@prod+1,c
  2294  007FA0  0E80               	movlw	128
  2295  007FA2  6E24               	movwf	___flmul@prod+2,c
  2296  007FA4  0E7F               	movlw	127
  2297  007FA6  D020               	goto	L1
  2298  007FA8                     l1956:
  2299  007FA8  BE27               	btfsc	___flmul@temp+1,7,c
  2300  007FAA  D005               	goto	u920
  2301  007FAC  5027               	movf	___flmul@temp+1,w,c
  2302  007FAE  E10E               	bnz	l966
  2303  007FB0  0426               	decf	___flmul@temp,w,c
  2304  007FB2  B0D8               	btfsc	status,0,c
  2305  007FB4  D00B               	goto	l966
  2306  007FB6                     u920:
  2307  007FB6  0E00               	movlw	0
  2308  007FB8  6E22               	movwf	___flmul@prod,c
  2309  007FBA  0E00               	movlw	0
  2310  007FBC  6E23               	movwf	___flmul@prod+1,c
  2311  007FBE  0E00               	movlw	0
  2312  007FC0  6E24               	movwf	___flmul@prod+2,c
  2313  007FC2  0E00               	movlw	0
  2314  007FC4  6E25               	movwf	___flmul@prod+3,c
  2315  007FC6  0E00               	movlw	0
  2316  007FC8  6E1B               	movwf	___flmul@sign,c
  2317  007FCA  D00F               	goto	l1968
  2318  007FCC                     l966:
  2319  007FCC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2320  007FD0  0EFF               	movlw	255
  2321  007FD2  1622               	andwf	___flmul@prod,f,c
  2322  007FD4  0EFF               	movlw	255
  2323  007FD6  1623               	andwf	___flmul@prod+1,f,c
  2324  007FD8  0E7F               	movlw	127
  2325  007FDA  1624               	andwf	___flmul@prod+2,f,c
  2326  007FDC  0E00               	movlw	0
  2327  007FDE  1625               	andwf	___flmul@prod+3,f,c
  2328  007FE0  B021               	btfsc	___flmul@bexp,0,c
  2329  007FE2  8E24               	bsf	___flmul@prod+2,7,c
  2330  007FE4  90D8               	bcf	status,0,c
  2331  007FE6  3021               	rrcf	___flmul@bexp,w,c
  2332  007FE8                     L1:
  2333  007FE8  6E25               	movwf	___flmul@prod+3,c
  2334  007FEA                     l1968:
  2335  007FEA  501B               	movf	___flmul@sign,w,c
  2336  007FEC  1225               	iorwf	___flmul@prod+3,f,c
  2337  007FEE  C022  F00F         	movff	___flmul@prod,?___flmul
  2338  007FF2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2339  007FF6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2340  007FFA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2341  007FFE  0012               	return		;funcret
  2342  008000                     __end_of___flmul:
  2343                           	opt callstack 0
  2344                           
  2345 ;; *************** function _aveSensor *****************
  2346 ;; Defined at:
  2347 ;;		line 386 in file "./functions.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  s               1    wreg     unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  s               1    5[COMRAM] unsigned char 
  2352 ;;  a               1    9[COMRAM] unsigned char 
  2353 ;;  measurements    2    6[COMRAM] unsigned int 
  2354 ;;  result          1    8[COMRAM] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      unsigned char 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2364 ;;      Params:         0       0       0       0       0       0       0
  2365 ;;      Locals:         5       0       0       0       0       0       0
  2366 ;;      Temps:          2       0       0       0       0       0       0
  2367 ;;      Totals:         7       0       0       0       0       0       0
  2368 ;;Total ram usage:        7 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    1
  2371 ;; This function calls:
  2372 ;;		_readADC
  2373 ;;		_setADCChannel
  2374 ;; This function is called by:
  2375 ;;		_testCalibrate
  2376 ;;		_pyCal
  2377 ;;		_calibrate
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text13
  2382  007602                     __ptext13:
  2383                           	opt callstack 0
  2384  007602                     _aveSensor:
  2385                           	opt callstack 27
  2386                           
  2387                           ;incstack = 0
  2388                           ;aveSensor@s stored from wreg
  2389  007602  6E06               	movwf	aveSensor@s,c
  2390                           
  2391                           ;./functions.c: 386: unsigned char aveSensor(unsigned char s);./functions.c: 387: {;./fu
      +                          nctions.c: 388:     setADCChannel(s);
  2392  007604  5006               	movf	aveSensor@s,w,c
  2393  007606  ECDA  F03B         	call	_setADCChannel
  2394                           
  2395                           ;./functions.c: 389:     unsigned int measurements = 0;
  2396  00760A  0E00               	movlw	0
  2397  00760C  6E08               	movwf	aveSensor@measurements+1,c
  2398  00760E  0E00               	movlw	0
  2399  007610  6E07               	movwf	aveSensor@measurements,c
  2400                           
  2401                           ;./functions.c: 391:     for (unsigned char a = 0; a < 4; a++)
  2402  007612  0E00               	movlw	0
  2403  007614  6E0A               	movwf	aveSensor@a,c
  2404  007616                     l2082:
  2405                           
  2406                           ;./functions.c: 392:     {;./functions.c: 393:         measurements += readADC();
  2407  007616  EC68  F03A         	call	_readADC	;wreg free
  2408  00761A  6E04               	movwf	??_aveSensor& (0+255),c
  2409  00761C  5004               	movf	??_aveSensor,w,c
  2410  00761E  2607               	addwf	aveSensor@measurements,f,c
  2411  007620  0E00               	movlw	0
  2412  007622  2208               	addwfc	aveSensor@measurements+1,f,c
  2413                           
  2414                           ;./functions.c: 394:     }
  2415  007624  2A0A               	incf	aveSensor@a,f,c
  2416  007626  0E03               	movlw	3
  2417  007628  640A               	cpfsgt	aveSensor@a,c
  2418  00762A  D7F5               	goto	l2082
  2419                           
  2420                           ;./functions.c: 396:     unsigned char result = measurements / 4;
  2421  00762C  C007  F004         	movff	aveSensor@measurements,??_aveSensor
  2422  007630  C008  F005         	movff	aveSensor@measurements+1,??_aveSensor+1
  2423  007634  90D8               	bcf	status,0,c
  2424  007636  3205               	rrcf	??_aveSensor+1,f,c
  2425  007638  3204               	rrcf	??_aveSensor,f,c
  2426  00763A  90D8               	bcf	status,0,c
  2427  00763C  3205               	rrcf	??_aveSensor+1,f,c
  2428  00763E  3204               	rrcf	??_aveSensor,f,c
  2429  007640  5004               	movf	??_aveSensor,w,c
  2430  007642  6E09               	movwf	aveSensor@result,c
  2431                           
  2432                           ;./functions.c: 398:     return result;
  2433  007644  5009               	movf	aveSensor@result,w,c
  2434  007646  0012               	return		;funcret
  2435  007648                     __end_of_aveSensor:
  2436                           	opt callstack 0
  2437                           
  2438 ;; *************** function _setADCChannel *****************
  2439 ;; Defined at:
  2440 ;;		line 335 in file "./functions.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  channel         1    wreg     unsigned char 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  channel         1    2[COMRAM] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2454 ;;      Params:         0       0       0       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0       0       0
  2456 ;;      Temps:          2       0       0       0       0       0       0
  2457 ;;      Totals:         3       0       0       0       0       0       0
  2458 ;;Total ram usage:        3 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_aveSensor
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text14
  2468  0077B4                     __ptext14:
  2469                           	opt callstack 0
  2470  0077B4                     _setADCChannel:
  2471                           	opt callstack 27
  2472                           
  2473                           ;incstack = 0
  2474                           ;setADCChannel@channel stored from wreg
  2475  0077B4  6E03               	movwf	setADCChannel@channel,c
  2476                           
  2477                           ;./functions.c: 335: void setADCChannel(unsigned char channel);./functions.c: 336: {;./f
      +                          unctions.c: 337:     ADCON0bits.CHS = channel;
  2478  0077B6  C003  F001         	movff	setADCChannel@channel,??_setADCChannel
  2479  0077BA  4601               	rlncf	??_setADCChannel,f,c
  2480  0077BC  4601               	rlncf	??_setADCChannel,f,c
  2481  0077BE  50C2               	movf	4034,w,c	;volatile
  2482  0077C0  1801               	xorwf	??_setADCChannel,w,c
  2483  0077C2  0B83               	andlw	-125
  2484  0077C4  1801               	xorwf	??_setADCChannel,w,c
  2485  0077C6  6EC2               	movwf	4034,c	;volatile
  2486                           
  2487                           ;./functions.c: 339:     switch (channel)
  2488  0077C8  D01C               	goto	l1832
  2489  0077CA                     l239:
  2490                           
  2491                           ;./functions.c: 342:         TRISBbits.TRISB2 = 1;
  2492  0077CA  8493               	bsf	3987,2,c	;volatile
  2493                           
  2494                           ;./functions.c: 343:         ANSELBbits.ANSB2 = 1;
  2495  0077CC  010F               	movlb	15	; () banked
  2496  0077CE  8539               	bsf	57,2,b	;volatile
  2497                           
  2498                           ;./functions.c: 344:         break;
  2499  0077D0  0012               	return	
  2500  0077D2                     l241:
  2501                           
  2502                           ;./functions.c: 346:         TRISBbits.TRISB3 = 1;
  2503  0077D2  8693               	bsf	3987,3,c	;volatile
  2504                           
  2505                           ;./functions.c: 347:         ANSELBbits.ANSB3 = 1;
  2506  0077D4  010F               	movlb	15	; () banked
  2507  0077D6  8739               	bsf	57,3,b	;volatile
  2508                           
  2509                           ;./functions.c: 348:         break;
  2510  0077D8  0012               	return	
  2511  0077DA                     l242:
  2512                           
  2513                           ;./functions.c: 350:         TRISBbits.TRISB1 = 1;
  2514  0077DA  8293               	bsf	3987,1,c	;volatile
  2515                           
  2516                           ;./functions.c: 351:         ANSELBbits.ANSB1 = 1;
  2517  0077DC  010F               	movlb	15	; () banked
  2518  0077DE  8339               	bsf	57,1,b	;volatile
  2519                           
  2520                           ;./functions.c: 352:         break;
  2521  0077E0  0012               	return	
  2522  0077E2                     l243:
  2523                           
  2524                           ;./functions.c: 354:         TRISBbits.TRISB0 = 1;
  2525  0077E2  8093               	bsf	3987,0,c	;volatile
  2526                           
  2527                           ;./functions.c: 355:         ANSELBbits.ANSB0 = 1;
  2528  0077E4  010F               	movlb	15	; () banked
  2529  0077E6  8139               	bsf	57,0,b	;volatile
  2530                           
  2531                           ;./functions.c: 356:         break;
  2532  0077E8  0012               	return	
  2533  0077EA                     l244:
  2534                           
  2535                           ;./functions.c: 358:         TRISBbits.TRISB5 = 1;
  2536  0077EA  8A93               	bsf	3987,5,c	;volatile
  2537                           
  2538                           ;./functions.c: 359:         ANSELBbits.ANSB5 = 1;
  2539  0077EC  010F               	movlb	15	; () banked
  2540  0077EE  8B39               	bsf	57,5,b	;volatile
  2541                           
  2542                           ;./functions.c: 360:         break;
  2543  0077F0  0012               	return	
  2544  0077F2                     l245:
  2545                           
  2546                           ;./functions.c: 362:         TRISCbits.TRISC3 = 1;
  2547  0077F2  8694               	bsf	3988,3,c	;volatile
  2548                           
  2549                           ;./functions.c: 363:         ANSELCbits.ANSC3 = 1;
  2550  0077F4  010F               	movlb	15	; () banked
  2551  0077F6  873A               	bsf	58,3,b	;volatile
  2552                           
  2553                           ;./functions.c: 364:         break;
  2554  0077F8  0012               	return	
  2555  0077FA                     l246:
  2556                           
  2557                           ;./functions.c: 367:         TRISBbits.TRISB0 = 1;
  2558  0077FA  8093               	bsf	3987,0,c	;volatile
  2559                           
  2560                           ;./functions.c: 368:         ANSELBbits.ANSB0 = 1;
  2561  0077FC  010F               	movlb	15	; () banked
  2562  0077FE  8139               	bsf	57,0,b	;volatile
  2563                           
  2564                           ;./functions.c: 369:         break;
  2565  007800  0012               	return	
  2566  007802                     l1832:
  2567  007802  5003               	movf	setADCChannel@channel,w,c
  2568  007804  6E01               	movwf	??_setADCChannel& (0+255),c
  2569  007806  6A02               	clrf	(??_setADCChannel+1)& (0+255),c
  2570                           
  2571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2572                           ; Switch size 1, requested type "simple"
  2573                           ; Number of cases is 1, Range of values is 0 to 0
  2574                           ; switch strategies available:
  2575                           ; Name         Instructions Cycles
  2576                           ; simple_byte            4     3 (average)
  2577                           ;	Chosen strategy is simple_byte
  2578  007808  5002               	movf	??_setADCChannel+1,w,c
  2579  00780A  0A00               	xorlw	0	; case 0
  2580  00780C  A4D8               	btfss	status,2,c
  2581  00780E  D7F5               	goto	l246
  2582                           
  2583                           ; Switch size 1, requested type "simple"
  2584                           ; Number of cases is 6, Range of values is 8 to 15
  2585                           ; switch strategies available:
  2586                           ; Name         Instructions Cycles
  2587                           ; simple_byte           19    10 (average)
  2588                           ;	Chosen strategy is simple_byte
  2589  007810  5001               	movf	??_setADCChannel,w,c
  2590  007812  0A08               	xorlw	8	; case 8
  2591  007814  B4D8               	btfsc	status,2,c
  2592  007816  D7D9               	goto	l239
  2593  007818  0A01               	xorlw	1	; case 9
  2594  00781A  B4D8               	btfsc	status,2,c
  2595  00781C  D7DA               	goto	l241
  2596  00781E  0A03               	xorlw	3	; case 10
  2597  007820  B4D8               	btfsc	status,2,c
  2598  007822  D7DB               	goto	l242
  2599  007824  0A06               	xorlw	6	; case 12
  2600  007826  B4D8               	btfsc	status,2,c
  2601  007828  D7DC               	goto	l243
  2602  00782A  0A01               	xorlw	1	; case 13
  2603  00782C  B4D8               	btfsc	status,2,c
  2604  00782E  D7DD               	goto	l244
  2605  007830  0A02               	xorlw	2	; case 15
  2606  007832  B4D8               	btfsc	status,2,c
  2607  007834  D7DE               	goto	l245
  2608  007836  D7E1               	goto	l246
  2609  007838                     __end_of_setADCChannel:
  2610                           	opt callstack 0
  2611                           
  2612 ;; *************** function _readADC *****************
  2613 ;; Defined at:
  2614 ;;		line 376 in file "./functions.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      unsigned char 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2628 ;;      Params:         0       0       0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_aveSensor
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text15
  2642  0074D0                     __ptext15:
  2643                           	opt callstack 0
  2644  0074D0                     _readADC:
  2645                           	opt callstack 27
  2646                           
  2647                           ;./functions.c: 378:     ADCON0bits.GO = 1;
  2648                           
  2649                           ; BSR set to: 15
  2650                           ;incstack = 0
  2651  0074D0  82C2               	bsf	4034,1,c	;volatile
  2652  0074D2                     l250:
  2653                           
  2654                           ;./functions.c: 380:     while (ADCON0bits.GO)
  2655  0074D2  B2C2               	btfsc	4034,1,c	;volatile
  2656  0074D4  D7FE               	goto	l250
  2657                           
  2658                           ;./functions.c: 382:     return ADRESH;
  2659  0074D6  50C4               	movf	4036,w,c	;volatile
  2660  0074D8  0012               	return		;funcret
  2661  0074DA                     __end_of_readADC:
  2662                           	opt callstack 0
  2663                           
  2664 ;; *************** function _PRC *****************
  2665 ;; Defined at:
  2666 ;;		line 213 in file "./functions.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  a               1   56[COMRAM] unsigned char 
  2671 ;;  a               1   55[COMRAM] unsigned char 
  2672 ;;  a               1   54[COMRAM] unsigned char 
  2673 ;;  a               1   53[COMRAM] unsigned char 
  2674 ;;  a               1   52[COMRAM] unsigned char 
  2675 ;;  a               1   51[COMRAM] unsigned char 
  2676 ;;  a               1   50[COMRAM] unsigned char 
  2677 ;;  a               1   49[COMRAM] unsigned char 
  2678 ;;  a               1   48[COMRAM] unsigned char 
  2679 ;;  message        32   11[COMRAM] unsigned char [32]
  2680 ;;  message2        5   43[COMRAM] unsigned char [5]
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2690 ;;      Params:         0       0       0       0       0       0       0
  2691 ;;      Locals:        46       0       0       0       0       0       0
  2692 ;;      Temps:          2       0       0       0       0       0       0
  2693 ;;      Totals:        48       0       0       0       0       0       0
  2694 ;;Total ram usage:       48 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    2
  2697 ;; This function calls:
  2698 ;;		_error
  2699 ;;		_trans
  2700 ;; This function is called by:
  2701 ;;		_RCE
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text16
  2706  007B2A                     __ptext16:
  2707                           	opt callstack 0
  2708  007B2A                     _PRC:
  2709                           	opt callstack 27
  2710                           
  2711                           ;./functions.c: 215:     PORTD = 0b11111001;
  2712                           
  2713                           ;incstack = 0
  2714  007B2A  0EF9               	movlw	249
  2715  007B2C  6E83               	movwf	3971,c	;volatile
  2716  007B2E                     l2156:
  2717                           
  2718                           ;./functions.c: 217:     {;./functions.c: 218:         unsigned char message[] = "\nWhat
      +                           color should sanic race?\n";
  2719  007B2E  EE20  F060         	lfsr	2,PRC@F5998
  2720  007B32  EE10  F00C         	lfsr	1,PRC@message
  2721  007B36  0E1F               	movlw	31
  2722  007B38                     u1171:
  2723  007B38  CFDB FFE3          	movff	plusw2,plusw1
  2724  007B3C  06E8               	decf	wreg,f,c
  2725  007B3E  E2FC               	bc	u1171
  2726                           
  2727                           ;./functions.c: 219:         unsigned char message2[] = "\nSet";
  2728  007B40  EE20  F0A4         	lfsr	2,PRC@F6000
  2729  007B44  EE10  F02C         	lfsr	1,PRC@message2
  2730  007B48  0E04               	movlw	4
  2731  007B4A                     u1181:
  2732  007B4A  CFDB FFE3          	movff	plusw2,plusw1
  2733  007B4E  06E8               	decf	wreg,f,c
  2734  007B50  E2FC               	bc	u1181
  2735                           
  2736                           ;./functions.c: 221:         for (unsigned char a = 0; a < 31; a++)
  2737  007B52  0E00               	movlw	0
  2738  007B54  6E31               	movwf	PRC@a,c
  2739  007B56                     l2164:
  2740                           
  2741                           ;./functions.c: 222:         {;./functions.c: 223:             trans(message[a]);
  2742  007B56  0E0C               	movlw	low PRC@message
  2743  007B58  2431               	addwf	PRC@a,w,c
  2744  007B5A  6ED9               	movwf	fsr2l,c
  2745  007B5C  6ADA               	clrf	fsr2h,c
  2746  007B5E  0E00               	movlw	high PRC@message
  2747  007B60  22DA               	addwfc	fsr2h,f,c
  2748  007B62  50DF               	movf	indf2,w,c
  2749  007B64  EC77  F03A         	call	_trans
  2750                           
  2751                           ;./functions.c: 224:         }
  2752  007B68  2A31               	incf	PRC@a,f,c
  2753  007B6A  0E1E               	movlw	30
  2754  007B6C  6431               	cpfsgt	PRC@a,c
  2755  007B6E  D7F3               	goto	l2164
  2756  007B70                     u1190:
  2757                           
  2758                           ;./functions.c: 226:         while (!PIR1bits.RC1IF)
  2759                           
  2760                           ;./functions.c: 227:             ;
  2761  007B70  BA9E               	btfsc	3998,5,c	;volatile
  2762  007B72  D088               	goto	l2280
  2763  007B74  D7FD               	goto	u1190
  2764  007B76                     l2170:
  2765                           
  2766                           ;./functions.c: 232:             for (unsigned char a = 0; a < 8; a++)
  2767  007B76  0E00               	movlw	0
  2768  007B78  6E32               	movwf	PRC@a_884,c
  2769  007B7A                     l2176:
  2770                           
  2771                           ;./functions.c: 233:             {;./functions.c: 234:                 raceColor[a] = 0;
  2772  007B7A  0E8E               	movlw	low _raceColor
  2773  007B7C  2432               	addwf	PRC@a_884,w,c
  2774  007B7E  6ED9               	movwf	fsr2l,c
  2775  007B80  6ADA               	clrf	fsr2h,c
  2776  007B82  0E00               	movlw	high _raceColor
  2777  007B84  22DA               	addwfc	fsr2h,f,c
  2778  007B86  0E00               	movlw	0
  2779  007B88  6EDF               	movwf	indf2,c
  2780                           
  2781                           ;./functions.c: 235:             }
  2782  007B8A  2A32               	incf	PRC@a_884,f,c
  2783  007B8C  0E07               	movlw	7
  2784  007B8E  6432               	cpfsgt	PRC@a_884,c
  2785  007B90  D7F4               	goto	l2176
  2786                           
  2787                           ;./functions.c: 236:             raceColor[3] = 1;
  2788  007B92  0E01               	movlw	1
  2789  007B94  0100               	movlb	0	; () banked
  2790  007B96  6F91               	movwf	(_raceColor+3)& (0+255),b
  2791                           
  2792                           ;./functions.c: 237:             for (unsigned char a = 0; a < 4; a++)
  2793  007B98  0E00               	movlw	0
  2794  007B9A  6E33               	movwf	PRC@a_885,c
  2795  007B9C                     l2188:
  2796                           
  2797                           ;./functions.c: 238:             {;./functions.c: 239:                 trans(message2[a]
      +                          );
  2798  007B9C  0E2C               	movlw	low PRC@message2
  2799  007B9E  2433               	addwf	PRC@a_885,w,c
  2800  007BA0  6ED9               	movwf	fsr2l,c
  2801  007BA2  6ADA               	clrf	fsr2h,c
  2802  007BA4  0E00               	movlw	high PRC@message2
  2803  007BA6  22DA               	addwfc	fsr2h,f,c
  2804  007BA8  50DF               	movf	indf2,w,c
  2805  007BAA  EC77  F03A         	call	_trans
  2806                           
  2807                           ;./functions.c: 240:             }
  2808  007BAE  2A33               	incf	PRC@a_885,f,c
  2809  007BB0  0E03               	movlw	3
  2810  007BB2  6433               	cpfsgt	PRC@a_885,c
  2811  007BB4  D7F3               	goto	l2188
  2812  007BB6  0012               	return	
  2813  007BB8                     l2196:
  2814                           
  2815                           ;./functions.c: 244:             for (unsigned char a = 0; a < 8; a++)
  2816  007BB8  0E00               	movlw	0
  2817  007BBA  6E34               	movwf	PRC@a_886,c
  2818  007BBC                     l2202:
  2819                           
  2820                           ;./functions.c: 245:             {;./functions.c: 246:                 raceColor[a] = 0;
  2821  007BBC  0E8E               	movlw	low _raceColor
  2822  007BBE  2434               	addwf	PRC@a_886,w,c
  2823  007BC0  6ED9               	movwf	fsr2l,c
  2824  007BC2  6ADA               	clrf	fsr2h,c
  2825  007BC4  0E00               	movlw	high _raceColor
  2826  007BC6  22DA               	addwfc	fsr2h,f,c
  2827  007BC8  0E00               	movlw	0
  2828  007BCA  6EDF               	movwf	indf2,c
  2829                           
  2830                           ;./functions.c: 247:             }
  2831  007BCC  2A34               	incf	PRC@a_886,f,c
  2832  007BCE  0E07               	movlw	7
  2833  007BD0  6434               	cpfsgt	PRC@a_886,c
  2834  007BD2  D7F4               	goto	l2202
  2835                           
  2836                           ;./functions.c: 248:             raceColor[1] = 1;
  2837  007BD4  0E01               	movlw	1
  2838  007BD6  0100               	movlb	0	; () banked
  2839  007BD8  6F8F               	movwf	(_raceColor+1)& (0+255),b
  2840                           
  2841                           ;./functions.c: 249:             for (unsigned char a = 0; a < 4; a++)
  2842  007BDA  0E00               	movlw	0
  2843  007BDC  6E35               	movwf	PRC@a_887,c
  2844  007BDE                     l2214:
  2845                           
  2846                           ;./functions.c: 250:             {;./functions.c: 251:                 trans(message2[a]
      +                          );
  2847  007BDE  0E2C               	movlw	low PRC@message2
  2848  007BE0  2435               	addwf	PRC@a_887,w,c
  2849  007BE2  6ED9               	movwf	fsr2l,c
  2850  007BE4  6ADA               	clrf	fsr2h,c
  2851  007BE6  0E00               	movlw	high PRC@message2
  2852  007BE8  22DA               	addwfc	fsr2h,f,c
  2853  007BEA  50DF               	movf	indf2,w,c
  2854  007BEC  EC77  F03A         	call	_trans
  2855                           
  2856                           ;./functions.c: 252:             }
  2857  007BF0  2A35               	incf	PRC@a_887,f,c
  2858  007BF2  0E03               	movlw	3
  2859  007BF4  6435               	cpfsgt	PRC@a_887,c
  2860  007BF6  D7F3               	goto	l2214
  2861  007BF8  0012               	return	
  2862  007BFA                     l2222:
  2863                           
  2864                           ;./functions.c: 256:             for (unsigned char a = 0; a < 8; a++)
  2865  007BFA  0E00               	movlw	0
  2866  007BFC  6E36               	movwf	PRC@a_888,c
  2867  007BFE                     l2228:
  2868                           
  2869                           ;./functions.c: 257:             {;./functions.c: 258:                 raceColor[a] = 0;
  2870  007BFE  0E8E               	movlw	low _raceColor
  2871  007C00  2436               	addwf	PRC@a_888,w,c
  2872  007C02  6ED9               	movwf	fsr2l,c
  2873  007C04  6ADA               	clrf	fsr2h,c
  2874  007C06  0E00               	movlw	high _raceColor
  2875  007C08  22DA               	addwfc	fsr2h,f,c
  2876  007C0A  0E00               	movlw	0
  2877  007C0C  6EDF               	movwf	indf2,c
  2878                           
  2879                           ;./functions.c: 259:             }
  2880  007C0E  2A36               	incf	PRC@a_888,f,c
  2881  007C10  0E07               	movlw	7
  2882  007C12  6436               	cpfsgt	PRC@a_888,c
  2883  007C14  D7F4               	goto	l2228
  2884                           
  2885                           ;./functions.c: 260:             raceColor[2] = 1;
  2886  007C16  0E01               	movlw	1
  2887  007C18  0100               	movlb	0	; () banked
  2888  007C1A  6F90               	movwf	(_raceColor+2)& (0+255),b
  2889                           
  2890                           ;./functions.c: 261:             for (unsigned char a = 0; a < 4; a++)
  2891  007C1C  0E00               	movlw	0
  2892  007C1E  6E37               	movwf	PRC@a_889,c
  2893  007C20                     l2240:
  2894                           
  2895                           ;./functions.c: 262:             {;./functions.c: 263:                 trans(message2[a]
      +                          );
  2896  007C20  0E2C               	movlw	low PRC@message2
  2897  007C22  2437               	addwf	PRC@a_889,w,c
  2898  007C24  6ED9               	movwf	fsr2l,c
  2899  007C26  6ADA               	clrf	fsr2h,c
  2900  007C28  0E00               	movlw	high PRC@message2
  2901  007C2A  22DA               	addwfc	fsr2h,f,c
  2902  007C2C  50DF               	movf	indf2,w,c
  2903  007C2E  EC77  F03A         	call	_trans
  2904                           
  2905                           ;./functions.c: 264:             }
  2906  007C32  2A37               	incf	PRC@a_889,f,c
  2907  007C34  0E03               	movlw	3
  2908  007C36  6437               	cpfsgt	PRC@a_889,c
  2909  007C38  D7F3               	goto	l2240
  2910  007C3A  0012               	return	
  2911  007C3C                     l2248:
  2912                           
  2913                           ;./functions.c: 268:             for (unsigned char a = 0; a < 8; a++)
  2914  007C3C  0E00               	movlw	0
  2915  007C3E  6E38               	movwf	PRC@a_890,c
  2916  007C40                     l2254:
  2917                           
  2918                           ;./functions.c: 269:             {;./functions.c: 270:                 raceColor[a] = 0;
  2919  007C40  0E8E               	movlw	low _raceColor
  2920  007C42  2438               	addwf	PRC@a_890,w,c
  2921  007C44  6ED9               	movwf	fsr2l,c
  2922  007C46  6ADA               	clrf	fsr2h,c
  2923  007C48  0E00               	movlw	high _raceColor
  2924  007C4A  22DA               	addwfc	fsr2h,f,c
  2925  007C4C  0E00               	movlw	0
  2926  007C4E  6EDF               	movwf	indf2,c
  2927                           
  2928                           ;./functions.c: 271:             }
  2929  007C50  2A38               	incf	PRC@a_890,f,c
  2930  007C52  0E07               	movlw	7
  2931  007C54  6438               	cpfsgt	PRC@a_890,c
  2932  007C56  D7F4               	goto	l2254
  2933                           
  2934                           ;./functions.c: 272:             raceColor[4] = 1;
  2935  007C58  0E01               	movlw	1
  2936  007C5A  0100               	movlb	0	; () banked
  2937  007C5C  6F92               	movwf	(_raceColor+4)& (0+255),b
  2938                           
  2939                           ;./functions.c: 273:             for (unsigned char a = 0; a < 4; a++)
  2940  007C5E  0E00               	movlw	0
  2941  007C60  6E39               	movwf	PRC@a_891,c
  2942  007C62                     l2266:
  2943                           
  2944                           ;./functions.c: 274:             {;./functions.c: 275:                 trans(message2[a]
      +                          );
  2945  007C62  0E2C               	movlw	low PRC@message2
  2946  007C64  2439               	addwf	PRC@a_891,w,c
  2947  007C66  6ED9               	movwf	fsr2l,c
  2948  007C68  6ADA               	clrf	fsr2h,c
  2949  007C6A  0E00               	movlw	high PRC@message2
  2950  007C6C  22DA               	addwfc	fsr2h,f,c
  2951  007C6E  50DF               	movf	indf2,w,c
  2952  007C70  EC77  F03A         	call	_trans
  2953                           
  2954                           ;./functions.c: 276:             }
  2955  007C74  2A39               	incf	PRC@a_891,f,c
  2956  007C76  0E03               	movlw	3
  2957  007C78  6439               	cpfsgt	PRC@a_891,c
  2958  007C7A  D7F3               	goto	l2266
  2959  007C7C  0012               	return	
  2960  007C7E                     l2274:
  2961                           
  2962                           ;./functions.c: 281:             error();
  2963  007C7E  ECC7  F03A         	call	_error	;wreg free
  2964                           
  2965                           ;./functions.c: 282:             continue;
  2966  007C82  D755               	goto	l2156
  2967  007C84                     l2280:
  2968  007C84  50AE               	movf	4014,w,c	;volatile
  2969  007C86  6E0A               	movwf	??_PRC& (0+255),c
  2970  007C88  6A0B               	clrf	(??_PRC+1)& (0+255),c
  2971                           
  2972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2973                           ; Switch size 1, requested type "simple"
  2974                           ; Number of cases is 1, Range of values is 0 to 0
  2975                           ; switch strategies available:
  2976                           ; Name         Instructions Cycles
  2977                           ; simple_byte            4     3 (average)
  2978                           ;	Chosen strategy is simple_byte
  2979  007C8A  500B               	movf	??_PRC+1,w,c
  2980  007C8C  0A00               	xorlw	0	; case 0
  2981  007C8E  A4D8               	btfss	status,2,c
  2982  007C90  D7F6               	goto	l2274
  2983                           
  2984                           ; Switch size 1, requested type "simple"
  2985                           ; Number of cases is 4, Range of values is 66 to 110
  2986                           ; switch strategies available:
  2987                           ; Name         Instructions Cycles
  2988                           ; simple_byte           13     7 (average)
  2989                           ;	Chosen strategy is simple_byte
  2990  007C92  500A               	movf	??_PRC,w,c
  2991  007C94  0A42               	xorlw	66	; case 66
  2992  007C96  B4D8               	btfsc	status,2,c
  2993  007C98  D76E               	goto	l2170
  2994  007C9A  0A05               	xorlw	5	; case 71
  2995  007C9C  B4D8               	btfsc	status,2,c
  2996  007C9E  D78C               	goto	l2196
  2997  007CA0  0A15               	xorlw	21	; case 82
  2998  007CA2  B4D8               	btfsc	status,2,c
  2999  007CA4  D7AA               	goto	l2222
  3000  007CA6  0A3C               	xorlw	60	; case 110
  3001  007CA8  B4D8               	btfsc	status,2,c
  3002  007CAA  D7C8               	goto	l2248
  3003  007CAC  D7E8               	goto	l2274
  3004  007CAE                     __end_of_PRC:
  3005                           	opt callstack 0
  3006                           
  3007 ;; *************** function _error *****************
  3008 ;; Defined at:
  3009 ;;		line 414 in file "./functions.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  a               1    8[COMRAM] unsigned char 
  3014 ;;  message         7    1[COMRAM] unsigned char [7]
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3024 ;;      Params:         0       0       0       0       0       0       0
  3025 ;;      Locals:         8       0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0
  3027 ;;      Totals:         8       0       0       0       0       0       0
  3028 ;;Total ram usage:        8 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    1
  3031 ;; This function calls:
  3032 ;;		_trans
  3033 ;; This function is called by:
  3034 ;;		_PRC
  3035 ;;		_RCE
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text17
  3040  00758E                     __ptext17:
  3041                           	opt callstack 0
  3042  00758E                     _error:
  3043                           	opt callstack 28
  3044                           
  3045                           ;./functions.c: 416:     unsigned char message[] = "ERROR\n";
  3046                           
  3047                           ;incstack = 0
  3048  00758E  EE20  F097         	lfsr	2,error@F6027
  3049  007592  EE10  F002         	lfsr	1,error@message
  3050  007596  0E06               	movlw	6
  3051  007598                     u1121:
  3052  007598  CFDB FFE3          	movff	plusw2,plusw1
  3053  00759C  06E8               	decf	wreg,f,c
  3054  00759E  E2FC               	bc	u1121
  3055                           
  3056                           ;./functions.c: 418:     for (unsigned char a = 0; a < 6; a++)
  3057  0075A0  0E00               	movlw	0
  3058  0075A2  6E09               	movwf	error@a,c
  3059  0075A4                     l2102:
  3060                           
  3061                           ;./functions.c: 419:     {;./functions.c: 420:         trans(message[a]);
  3062  0075A4  0E02               	movlw	low error@message
  3063  0075A6  2409               	addwf	error@a,w,c
  3064  0075A8  6ED9               	movwf	fsr2l,c
  3065  0075AA  6ADA               	clrf	fsr2h,c
  3066  0075AC  0E00               	movlw	high error@message
  3067  0075AE  22DA               	addwfc	fsr2h,f,c
  3068  0075B0  50DF               	movf	indf2,w,c
  3069  0075B2  EC77  F03A         	call	_trans
  3070                           
  3071                           ;./functions.c: 421:     }
  3072  0075B6  2A09               	incf	error@a,f,c
  3073  0075B8  0E05               	movlw	5
  3074  0075BA  6409               	cpfsgt	error@a,c
  3075  0075BC  D7F3               	goto	l2102
  3076  0075BE  0012               	return	
  3077  0075C0                     __end_of_error:
  3078                           	opt callstack 0
  3079                           
  3080 ;; *************** function _trans *****************
  3081 ;; Defined at:
  3082 ;;		line 319 in file "./functions.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  s               1    wreg     unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  s               1    0[COMRAM] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3096 ;;      Params:         0       0       0       0       0       0       0
  3097 ;;      Locals:         1       0       0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0
  3099 ;;      Totals:         1       0       0       0       0       0       0
  3100 ;;Total ram usage:        1 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		_PRC
  3106 ;;		_pyCal
  3107 ;;		_error
  3108 ;;		_RCE
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text18
  3113  0074EE                     __ptext18:
  3114                           	opt callstack 0
  3115  0074EE                     _trans:
  3116                           	opt callstack 29
  3117                           
  3118                           ;incstack = 0
  3119                           ;trans@s stored from wreg
  3120  0074EE  6E01               	movwf	trans@s,c
  3121  0074F0                     
  3122                           ;./functions.c: 321:     while (!PIR1bits.TX1IF)
  3123                           
  3124                           ;./functions.c: 322:         ;
  3125  0074F0  A89E               	btfss	3998,4,c	;volatile
  3126  0074F2  D7FE               	goto	l1822
  3127                           
  3128                           ;./functions.c: 323:     TXREG = s;
  3129  0074F4  C001  FFAD         	movff	trans@s,4013	;volatile
  3130  0074F8  0012               	return		;funcret
  3131  0074FA                     __end_of_trans:
  3132                           	opt callstack 0
  3133  0000                     
  3134                           	psect	rparam
  3135  0000                     tosu	equ	0xFFF
  3136                           tosh	equ	0xFFE
  3137                           tosl	equ	0xFFD
  3138                           stkptr	equ	0xFFC
  3139                           pclatu	equ	0xFFB
  3140                           pclath	equ	0xFFA
  3141                           pcl	equ	0xFF9
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           indf0	equ	0xFEF
  3149                           postinc0	equ	0xFEE
  3150                           postdec0	equ	0xFED
  3151                           preinc0	equ	0xFEC
  3152                           plusw0	equ	0xFEB
  3153                           fsr0h	equ	0xFEA
  3154                           fsr0l	equ	0xFE9
  3155                           wreg	equ	0xFE8
  3156                           indf1	equ	0xFE7
  3157                           postinc1	equ	0xFE6
  3158                           postdec1	equ	0xFE5
  3159                           preinc1	equ	0xFE4
  3160                           plusw1	equ	0xFE3
  3161                           fsr1h	equ	0xFE2
  3162                           fsr1l	equ	0xFE1
  3163                           bsr	equ	0xFE0
  3164                           indf2	equ	0xFDF
  3165                           postinc2	equ	0xFDE
  3166                           postdec2	equ	0xFDD
  3167                           preinc2	equ	0xFDC
  3168                           plusw2	equ	0xFDB
  3169                           fsr2h	equ	0xFDA
  3170                           fsr2l	equ	0xFD9
  3171                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        110
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     79      91
    BANK0           160      0      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_RCE
    _RCE->_PRC
    _testCalibrate->_aveSensor
    _pyCal->_msDelay
    _msDelay->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _aveSensor->_setADCChannel
    _PRC->_error
    _error->_trans

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4552
                                _RCE
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RCE                                                 22    22      0    4552
                                             57 COMRAM    22    22      0
                                _PRC
                              _error
                              _pyCal
                      _testCalibrate
                              _trans
 ---------------------------------------------------------------------------------
 (2) _testCalibrate                                        2     2      0     251
                                             10 COMRAM     2     2      0
                          _aveSensor
 ---------------------------------------------------------------------------------
 (2) _pyCal                                                2     2      0    3023
                                             50 COMRAM     2     2      0
                          _aveSensor
                            _msDelay
                           _setupADC
                              _trans
 ---------------------------------------------------------------------------------
 (3) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _msDelay                                              1     1      0    2773
                                             49 COMRAM     1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _aveSensor                                            7     7      0     159
                                              3 COMRAM     7     7      0
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (4) _setADCChannel                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PRC                                                 48    48      0     865
                                              9 COMRAM    48    48      0
                              _error
                              _trans
 ---------------------------------------------------------------------------------
 (2) _error                                                8     8      0     114
                                              1 COMRAM     8     8      0
                              _trans
 ---------------------------------------------------------------------------------
 (2) _trans                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RCE
     _PRC
       _error
         _trans
       _trans
     _error
       _trans
     _pyCal
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _setupADC
       _trans
     _testCalibrate
       _aveSensor
         _readADC
         _setADCChannel
     _trans
   _init
     _clearPorts
     _setupOSC
     _setupSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      62       4       61.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4F      5B       1       95.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD       9        0.0%
DATA                 0      0      BD      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 25 13:28:44 2019

           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l311 7958  
                    l241 77D2                      l250 74D2                      l242 77DA  
                    l243 77E2                      l244 77EA                      l245 77F2  
                    l317 7968                      l246 77FA                      l239 77CA  
                    l278 77A6                      l289 74EC                      l949 7D2E  
                    l966 7FCC                      l958 7F46                      l990 7A28  
                    l959 7F42                      l997 7AA6             __CFG_CPB$OFF 000000  
                    _RCE 78F2                      _PR2 000FBB                      _PR4 000F52  
           __CFG_CPD$OFF 000000                      _PR6 000F4B                      u820 7D3A  
                    u910 7F98                      u830 7EB0                      _PRC 7B2A  
                    u920 7FB6                      u835 7EA6                      u940 7844  
                    u870 7F3C                      u950 7874                      u955 786A  
                    u990 78CA                      _col 005A                      wreg 000FE8  
           ___flmul@aexp 0020             ___flmul@bexp 0021             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022                     ?_RCE 0001  
                   ?_PRC 0001                     RCE@a 004E             ___fltol@exp1 0031  
                   PRC@a 0031                     l2000 78B0                     l2102 75A4  
                   l2014 78E0                     l2006 78B8                     l2030 7A56  
                   l2008 78C4                     l2032 7A5C                     l2024 7A38  
                   l2202 7BBC                     l2042 7ACC                     l2034 7A68  
                   l2060 7B18                     l2044 7AD8                     l2036 7A8E  
                   l2222 7BFA                     l2214 7BDE                     l2240 7C20  
                   l2144 7540                     l2170 7B76                     l2082 7616  
                   l2228 7BFE                     l2164 7B56                     l2156 7B2E  
                   l2332 790C                     l2254 7C40                     l2350 7952  
                   l2342 7936                     l2248 7C3C                     l2176 7B7A  
                   l2280 7C84                     l2274 7C7E                     l2266 7C62  
                   l2370 7998                     l2362 797E                     l2346 7944  
                   l2196 7BB8                     l2188 7B9C                     l2364 7986  
                   l1822 74F0                     l2382 79D0                     l2366 798C  
                   l2374 799E                     l1832 7802                     l2288 75C4  
                   l2368 7992                     l2376 79CC                     l2298 75CE  
                   l1932 7F0C                     l1860 7CEE                     l1926 7EEE  
                   l1952 7F8A                     l1856 7CDA                     l1874 7D1A  
                   l1858 7CDE                     l1956 7FA8                     l1884 7D4C  
                   l1876 7D1E                     l1980 7856                     l1968 7FEA  
                   l1996 78A0                     u1121 7598                     u1070 7AE2  
                   u1321 7900                     u1171 7B38                     u1181 7B4A  
                   _LATA 000F89                     u1190 7B70                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _FSR0 000FE9  
                   _LATE 000F8D                     _TMR2 000FBC                     _TMR6 000F4C  
                   _main 74E4                     _init 7506                     _size 005B  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
          __CFG_BORV$190 000000                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000             ___param_bank 000000  
                  ??_RCE 003A                    ??_PRC 000A             _BAUDCON1bits 000FB8  
          ___fltol@sign1 0030                    ?_main 0001                    ?_init 0001  
        __end_of___flmul 8000          __end_of___fltol 78F2                    _T2CON 000FBA  
                  _T6CON 000F4A                    _RCREG 000FAE                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD   __size_of_setADCChannel 0084            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_msDelay 77B4  
        __end_of_readADC 74DA           __CFG_EBTRB$OFF 000000                    _error 758E  
                  _pyCal 75C0       __CFG_MCLRE$EXTMCLR 000000                    _trans 74EE  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8           __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000  
        __initialization 7648             __end_of_main 74EE             __end_of_init 751A  
                 ??_main 0050                   ??_init 0001            __activetblptr 000002  
                 _ADCON1 000FC1                   ?_error 0001                   ?_pyCal 0001  
                 _ADRESH 000FC4                   _CCPR1L 000FBE                   _CCPR5L 000F55  
                 ?_trans 0001                   _ANSELA 000F38                   _ANSELB 000F39  
                 _ANSELC 000F3A                   _ANSELD 000F3B                   _ANSELE 000F3C  
         __CFG_WDTEN$OFF 000000                   _RCSTA1 000FAB                   _SPBRG1 000FAF  
       __end_of___xxtofl 7B2A                   _TXSTA1 000FAC            _setADCChannel 77B4  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___flmul 0017  
              ??___fltol 002C                ??_msDelay 0032                ??_readADC 0001  
                 error@a 0009                   pyCal@a 0034             __pdataCOMRAM 0050  
       __end_of_setupADC 753C         __end_of_setupOSC 74E4                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8       RCE@commandReceived 004A  
                 trans@s 0001             ?_setupSerial 0001             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               __accesstop 0060  
__end_of__initialization 7688           ?_setADCChannel 0001            ___rparam_used 000001  
             ___fltol@f1 0028           __pcstackCOMRAM 0001           calibrate@F5992 00A9  
           __pidataBANK0 76EC     setADCChannel@channel 0003            __end_of_error 75C0  
          __end_of_pyCal 7602            __end_of_trans 74FA     testCalibrate@samples 000C  
      testCalibrate@temp 000B       __size_of_aveSensor 0046                  ??_error 0002  
                ??_pyCal 0033                  ??_trans 0001    __end_of_testCalibrate 755E  
        __CFG_PLLCFG$OFF 000000               _clearPorts 7692       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000                  _CCP1CON 000FBD                  _CCP5CON 000F54  
              ?___xxtofl 0001                  _SPBRGH1 000FB0          ??_setADCChannel 0001  
            PRC@message2 002C        __end_of_aveSensor 7648          __CFG_PWRTEN$OFF 000000  
                _Lranges 0050                  __Hparam 0000                  _Mranges 00BD  
                __Lparam 0000                ?_setupADC 0001                  _Rranges 00B8  
      RCE@nCharsReceived 004D                ?_setupOSC 0001                  ___flmul 7CAE  
                ___fltol 7838             error@message 0002                  __pcinit 7648  
                __ramtop 0600                  __ptext0 74E4                  __ptext1 7506  
                __ptext2 755E                  __ptext3 74DA                  __ptext4 7692  
                __ptext5 78F2                  __ptext6 753C                  __ptext7 75C0  
                __ptext8 751A                  __ptext9 774E                  _msDelay 774E  
                _readADC 74D0             __size_of_RCE 00F8             __size_of_PRC 0184  
              _T2CONbits 000FBA               ??___xxtofl 0005                _T4CONbits 000F51  
   end_of_initialization 7688     __size_of_setupSerial 0030            __Lmediumconst 0000  
            ?_clearPorts 0001               aveSensor@a 000A               aveSensor@s 0006  
             ??_setupADC 0001               ??_setupOSC 0001                  postdec1 000FE5  
                postinc0 000FEE               _sensorVals 00AE                _PORTAbits 000F80  
          ___xxtofl@sign 0009                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISEbits 000F96              ___flmul@grs 001C    aveSensor@measurements 0007  
       msDelay@delayInMs 0032            __pidataCOMRAM 74FA      start_initialization 7648  
            __end_of_RCE 79EA              __end_of_PRC 7CAE      __size_of_clearPorts 005A  
             error@F6027 0097           _sensorChannels 009E               RCE@message 003C  
            __pdataBANK0 0060                 RCE@F6045 0080                ___flmul@a 0013  
              ___flmul@b 000F        __size_of___xxtofl 0140                 RCE@a_980 004F  
               PRC@F6000 00A4                 PRC@F5998 0060                 PRC@a_890 0038  
               PRC@a_891 0039                 PRC@a_884 0032                 PRC@a_885 0033  
               PRC@a_886 0034                 PRC@a_887 0035                 PRC@a_888 0036  
               PRC@a_889 0037                _aveSensor 7602                 ?___flmul 000F  
               ?___fltol 0028        __size_of_setupADC 0022        __size_of_setupOSC 000A  
 __size_of_testCalibrate 0022         __CFG_PRICLKEN$ON 000000                 ?_msDelay 0001  
               ?_readADC 0001               PRC@message 000C                _raceColor 008E  
               _CCPTMRS0 000F49                 _CCPTMRS1 000F48           __size_of_error 0032  
         __size_of_pyCal 0042           __size_of_trans 000C    __end_of_setADCChannel 7838  
               _PIE1bits 000F9D                 _PIE5bits 000F7D             ??_clearPorts 0001  
               _PIR1bits 000F9E                 _PIR5bits 000F7E         __CFG_WDTPS$32768 000000  
             ?_aveSensor 0001               _ADCON0bits 000FC2               _ADCON2bits 000FC0  
               _LLranges 0055            ??_setupSerial 0001       __end_of_clearPorts 76EC  
              copy_data0 765C                copy_data1 767C                 _RRranges 00B3  
          _testCalibrate 753C                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTD2 000000         __size_of___flmul 0352  
       __size_of___fltol 00BA               _ANSELBbits 000F39               _ANSELCbits 000F3A  
       __size_of_msDelay 0066         __size_of_readADC 000A                 ___xxtofl 79EA  
               __ptext10 79EA                 __ptext11 7838                 __ptext12 7CAE  
               __ptext13 7602                 __ptext14 77B4                 __ptext15 74D0  
               __ptext16 7B2A                 __ptext17 758E                 __ptext18 74EE  
         ?_testCalibrate 0001            __size_of_main 000A            __size_of_init 0014  
    __end_of_setupSerial 758E                 _setupADC 751A                 _setupOSC 74DA  
            ??_aveSensor 0004               _INTCONbits 000FF2               _OSCCONbits 000FD3  
        aveSensor@result 0009        __CFG_T3CMX$PORTC0 000000          ??_testCalibrate 000B  
            _setupSerial 755E        __CFG_FOSC$INTIO67 000000  
