

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 27 00:12:23 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52  0000                     
    53                           ; Version 2.05
    54                           ; Generated 20/12/2018 GMT
    55                           ; 
    56                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F45K22 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  007196                     __pidataCOMRAM:
    90                           	opt callstack 0
    91                           
    92                           ;initializer for _sensorVals
    93  007196  78                 	db	120
    94  007197  AA                 	db	170
    95  007198  AA                 	db	170
    96  007199  BE                 	db	190
    97  00719A  FA                 	db	250
    98                           
    99                           ;initializer for _col
   100  00719B  42                 	db	66
   101                           
   102                           ;initializer for _size
   103  00719C  05                 	db	5
   104                           
   105                           ;initializer for _LLranges
   106  00719D  8C                 	db	140
   107  00719E  A8                 	db	168
   108  00719F  B9                 	db	185
   109  0071A0  B9                 	db	185
   110  0071A1  FF                 	db	255
   111                           
   112                           	psect	idataBANK0
   113  00789E                     __pidataBANK0:
   114                           	opt callstack 0
   115                           
   116                           ;initializer for PRC@F6028
   117  00789E  0A                 	db	10
   118  00789F  57                 	db	87
   119  0078A0  68                 	db	104
   120  0078A1  61                 	db	97
   121  0078A2  74                 	db	116
   122  0078A3  20                 	db	32
   123  0078A4  63                 	db	99
   124  0078A5  6F                 	db	111
   125  0078A6  6C                 	db	108
   126  0078A7  6F                 	db	111
   127  0078A8  72                 	db	114
   128  0078A9  20                 	db	32
   129  0078AA  73                 	db	115
   130  0078AB  68                 	db	104
   131  0078AC  6F                 	db	111
   132  0078AD  75                 	db	117
   133  0078AE  6C                 	db	108
   134  0078AF  64                 	db	100
   135  0078B0  20                 	db	32
   136  0078B1  73                 	db	115
   137  0078B2  61                 	db	97
   138  0078B3  6E                 	db	110
   139  0078B4  69                 	db	105
   140  0078B5  63                 	db	99
   141  0078B6  20                 	db	32
   142  0078B7  72                 	db	114
   143  0078B8  61                 	db	97
   144  0078B9  63                 	db	99
   145  0078BA  65                 	db	101
   146  0078BB  3F                 	db	63
   147  0078BC  0A                 	db	10
   148  0078BD  00                 	db	0
   149                           
   150                           ;initializer for capTouch@F6046
   151  0078BE  0A                 	db	10
   152  0078BF  53                 	db	83
   153  0078C0  61                 	db	97
   154  0078C1  6E                 	db	110
   155  0078C2  69                 	db	105
   156  0078C3  63                 	db	99
   157  0078C4  20                 	db	32
   158  0078C5  77                 	db	119
   159  0078C6  61                 	db	97
   160  0078C7  69                 	db	105
   161  0078C8  74                 	db	116
   162  0078C9  73                 	db	115
   163  0078CA  20                 	db	32
   164  0078CB  66                 	db	102
   165  0078CC  6F                 	db	111
   166  0078CD  72                 	db	114
   167  0078CE  20                 	db	32
   168  0078CF  61                 	db	97
   169  0078D0  20                 	db	32
   170  0078D1  74                 	db	116
   171  0078D2  6F                 	db	111
   172  0078D3  75                 	db	117
   173  0078D4  63                 	db	99
   174  0078D5  68                 	db	104
   175  0078D6  0A                 	db	10
   176  0078D7  00                 	db	0
   177                           
   178                           ;initializer for RCE@F6106
   179  0078D8  0A                 	db	10
   180  0078D9  53                 	db	83
   181  0078DA  61                 	db	97
   182  0078DB  6E                 	db	110
   183  0078DC  69                 	db	105
   184  0078DD  63                 	db	99
   185  0078DE  20                 	db	32
   186  0078DF  72                 	db	114
   187  0078E0  61                 	db	97
   188  0078E1  63                 	db	99
   189  0078E2  65                 	db	101
   190  0078E3  73                 	db	115
   191  0078E4  20                 	db	32
   192  0078E5  00                 	db	0
   193                           
   194                           ;initializer for ranges@F6085
   195  0078E6  57                 	db	low _LLranges
   196  0078E7  00                 	db	high _LLranges
   197  0078E8  F5                 	db	low _Lranges
   198  0078E9  00                 	db	high _Lranges
   199  0078EA  F0                 	db	low _Mranges
   200  0078EB  00                 	db	high _Mranges
   201  0078EC  EB                 	db	low _Rranges
   202  0078ED  00                 	db	high _Rranges
   203  0078EE  E6                 	db	low _RRranges
   204  0078EF  00                 	db	high _RRranges
   205                           
   206                           ;initializer for classifyColors@F6065
   207  0078F0  57                 	db	low _LLranges
   208  0078F1  00                 	db	high _LLranges
   209  0078F2  F5                 	db	low _Lranges
   210  0078F3  00                 	db	high _Lranges
   211  0078F4  F0                 	db	low _Mranges
   212  0078F5  00                 	db	high _Mranges
   213  0078F6  EB                 	db	low _Rranges
   214  0078F7  00                 	db	high _Rranges
   215  0078F8  E6                 	db	low _RRranges
   216  0078F9  00                 	db	high _RRranges
   217                           
   218                           ;initializer for calibrate@F6015
   219  0078FA  57                 	db	low _LLranges
   220  0078FB  00                 	db	high _LLranges
   221  0078FC  F5                 	db	low _Lranges
   222  0078FD  00                 	db	high _Lranges
   223  0078FE  F0                 	db	low _Mranges
   224  0078FF  00                 	db	high _Mranges
   225  007900  EB                 	db	low _Rranges
   226  007901  00                 	db	high _Rranges
   227  007902  E6                 	db	low _RRranges
   228  007903  00                 	db	high _RRranges
   229                           
   230                           ;initializer for _raceColor
   231  007904  30                 	db	48
   232  007905  30                 	db	48
   233  007906  30                 	db	48
   234  007907  30                 	db	48
   235  007908  31                 	db	49
   236  007909  30                 	db	48
   237  00790A  30                 	db	48
   238  00790B  30                 	db	48
   239  00790C  00                 	db	0
   240                           
   241                           ;initializer for error@F6090
   242  00790D  45                 	db	69
   243  00790E  52                 	db	82
   244  00790F  52                 	db	82
   245  007910  4F                 	db	79
   246  007911  52                 	db	82
   247  007912  0A                 	db	10
   248  007913  00                 	db	0
   249                           
   250                           ;initializer for _sensorChannels
   251  007914  0C                 	db	12
   252  007915  0A                 	db	10
   253  007916  08                 	db	8
   254  007917  09                 	db	9
   255  007918  0D                 	db	13
   256  007919  0F                 	db	15
   257                           
   258                           ;initializer for PRC@F6030
   259  00791A  0A                 	db	10
   260  00791B  53                 	db	83
   261  00791C  65                 	db	101
   262  00791D  74                 	db	116
   263  00791E  00                 	db	0
   264                           
   265                           ;initializer for calibrate@F6019
   266  00791F  0C                 	db	12
   267  007920  08                 	db	8
   268  007921  09                 	db	9
   269  007922  0A                 	db	10
   270  007923  0D                 	db	13
   271                           
   272                           ;initializer for _RRranges
   273  007924  8C                 	db	140
   274  007925  B9                 	db	185
   275  007926  C3                 	db	195
   276  007927  C3                 	db	195
   277  007928  FF                 	db	255
   278                           
   279                           ;initializer for _Rranges
   280  007929  8C                 	db	140
   281  00792A  AA                 	db	170
   282  00792B  AF                 	db	175
   283  00792C  D2                 	db	210
   284  00792D  FF                 	db	255
   285                           
   286                           ;initializer for _Mranges
   287  00792E  82                 	db	130
   288  00792F  A5                 	db	165
   289  007930  AF                 	db	175
   290  007931  BC                 	db	188
   291  007932  FF                 	db	255
   292                           
   293                           ;initializer for _Lranges
   294  007933  82                 	db	130
   295  007934  B2                 	db	178
   296  007935  B4                 	db	180
   297  007936  BC                 	db	188
   298  007937  FF                 	db	255
   299  0000                     _T6CON	set	3914
   300  0000                     _PR6	set	3915
   301  0000                     _TMR6	set	3916
   302  0000                     _ANSELCbits	set	3898
   303  0000                     _ANSELBbits	set	3897
   304  0000                     _ANSELE	set	3900
   305  0000                     _ANSELD	set	3899
   306  0000                     _ANSELC	set	3898
   307  0000                     _ANSELB	set	3897
   308  0000                     _ANSELA	set	3896
   309  0000                     _T4CONbits	set	3921
   310  0000                     _TMR4	set	3923
   311  0000                     _T4CON	set	3921
   312  0000                     _CCPTMRS1	set	3912
   313  0000                     _CCPR5L	set	3925
   314  0000                     _PR4	set	3922
   315  0000                     _CCP5CON	set	3924
   316  0000                     _CCPTMRS0	set	3913
   317  0000                     _FSR0	set	4073
   318  0000                     _TMR1	set	4046
   319  0000                     _T1CONbits	set	4045
   320  0000                     _INTCONbits	set	4082
   321  0000                     _T1CON	set	4045
   322  0000                     _PIR5bits	set	3966
   323  0000                     _ADRESH	set	4036
   324  0000                     _TRISBbits	set	3987
   325  0000                     _TXREG	set	4013
   326  0000                     _PORTEbits	set	3972
   327  0000                     _PORTCbits	set	3970
   328  0000                     _RCREG	set	4014
   329  0000                     _ADCON0bits	set	4034
   330  0000                     _ADCON1	set	4033
   331  0000                     _ADCON2bits	set	4032
   332  0000                     _BAUDCON1bits	set	4024
   333  0000                     _SPBRGH1	set	4016
   334  0000                     _SPBRG1	set	4015
   335  0000                     _RCSTA1	set	4011
   336  0000                     _TXSTA1	set	4012
   337  0000                     _OSCCONbits	set	4051
   338  0000                     _TRISE	set	3990
   339  0000                     _LATE	set	3981
   340  0000                     _PORTE	set	3972
   341  0000                     _TRISD	set	3989
   342  0000                     _LATD	set	3980
   343  0000                     _PORTD	set	3971
   344  0000                     _TRISC	set	3988
   345  0000                     _LATC	set	3979
   346  0000                     _PORTC	set	3970
   347  0000                     _TRISB	set	3987
   348  0000                     _LATB	set	3978
   349  0000                     _PORTB	set	3969
   350  0000                     _TRISA	set	3986
   351  0000                     _LATA	set	3977
   352  0000                     _PORTA	set	3968
   353  0000                     _PIE5bits	set	3965
   354  0000                     _TRISEbits	set	3990
   355  0000                     _T2CONbits	set	4026
   356  0000                     _PIE1bits	set	3997
   357  0000                     _TMR2	set	4028
   358  0000                     _T2CON	set	4026
   359  0000                     _TRISCbits	set	3988
   360  0000                     _CCPR1L	set	4030
   361  0000                     _PR2	set	4027
   362  0000                     _CCP1CON	set	4029
   363  0000                     _PORTAbits	set	3968
   364  0000                     _PIR1bits	set	3998
   365                           
   366                           ; #config settings
   367  0000                     
   368                           	psect	cinit
   369  007502                     __pcinit:
   370                           	opt callstack 0
   371  007502                     start_initialization:
   372                           	opt callstack 0
   373  007502                     __initialization:
   374                           	opt callstack 0
   375                           
   376                           ; Initialize objects allocated to BANK0 (154 bytes)
   377                           ; load TBLPTR registers with __pidataBANK0
   378  007502  0E9E               	movlw	low __pidataBANK0
   379  007504  6EF6               	movwf	tblptrl,c
   380  007506  0E78               	movlw	high __pidataBANK0
   381  007508  6EF7               	movwf	tblptrh,c
   382  00750A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   383  00750C  6EF8               	movwf	tblptru,c
   384  00750E  EE00  F060         	lfsr	0,__pdataBANK0
   385  007512  EE10 F09A          	lfsr	1,154
   386  007516                     copy_data0:
   387  007516  0009               	tblrd		*+
   388  007518  CFF5 FFEE          	movff	tablat,postinc0
   389  00751C  50E5               	movf	postdec1,w,c
   390  00751E  50E1               	movf	fsr1l,w,c
   391  007520  E1FA               	bnz	copy_data0
   392                           
   393                           ; Initialize objects allocated to COMRAM (12 bytes)
   394                           ; load TBLPTR registers with __pidataCOMRAM
   395  007522  0E96               	movlw	low __pidataCOMRAM
   396  007524  6EF6               	movwf	tblptrl,c
   397  007526  0E71               	movlw	high __pidataCOMRAM
   398  007528  6EF7               	movwf	tblptrh,c
   399  00752A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   400  00752C  6EF8               	movwf	tblptru,c
   401  00752E  EE00  F050         	lfsr	0,__pdataCOMRAM
   402  007532  EE10 F00C          	lfsr	1,12
   403  007536                     copy_data1:
   404  007536  0009               	tblrd		*+
   405  007538  CFF5 FFEE          	movff	tablat,postinc0
   406  00753C  50E5               	movf	postdec1,w,c
   407  00753E  50E1               	movf	fsr1l,w,c
   408  007540  E1FA               	bnz	copy_data1
   409                           
   410                           ; Clear objects allocated to BANK0 (5 bytes)
   411  007542  0100               	movlb	0
   412  007544  6BFE               	clrf	(__pbssBANK0+4)& (0+255),b
   413  007546  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   414  007548  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   415  00754A  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   416  00754C  6BFA               	clrf	__pbssBANK0& (0+255),b
   417                           
   418                           ; Clear objects allocated to COMRAM (1 bytes)
   419  00754E  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   420  007550                     end_of_initialization:
   421                           	opt callstack 0
   422  007550                     __end_of__initialization:
   423                           	opt callstack 0
   424  007550  0E00               	movlw	low (__Lmediumconst shr (0+16))
   425  007552  6EF8               	movwf	tblptru,c
   426  007554  0100               	movlb	0
   427  007556  EFC0  F038         	goto	_main	;jump to C main() function
   428                           
   429                           	psect	bssCOMRAM
   430  00005C                     __pbssCOMRAM:
   431                           	opt callstack 0
   432  00005C                     determineDirection@rc:
   433                           	opt callstack 0
   434  00005C                     	ds	1
   435                           
   436                           	psect	dataCOMRAM
   437  000050                     __pdataCOMRAM:
   438                           	opt callstack 0
   439  000050                     _sensorVals:
   440                           	opt callstack 0
   441  000050                     	ds	5
   442  000055                     _col:
   443                           	opt callstack 0
   444  000055                     	ds	1
   445  000056                     _size:
   446                           	opt callstack 0
   447  000056                     	ds	1
   448  000057                     _LLranges:
   449                           	opt callstack 0
   450  000057                     	ds	5
   451                           
   452                           	psect	bssBANK0
   453  0000FA                     __pbssBANK0:
   454                           	opt callstack 0
   455  0000FA                     _colorsDetected:
   456                           	opt callstack 0
   457  0000FA                     	ds	5
   458                           
   459                           	psect	dataBANK0
   460  000060                     __pdataBANK0:
   461                           	opt callstack 0
   462  000060                     PRC@F6028:
   463                           	opt callstack 0
   464  000060                     	ds	32
   465  000080                     capTouch@F6046:
   466                           	opt callstack 0
   467  000080                     	ds	26
   468  00009A                     RCE@F6106:
   469                           	opt callstack 0
   470  00009A                     	ds	14
   471  0000A8                     ranges@F6085:
   472                           	opt callstack 0
   473  0000A8                     	ds	10
   474  0000B2                     classifyColors@F6065:
   475                           	opt callstack 0
   476  0000B2                     	ds	10
   477  0000BC                     calibrate@F6015:
   478                           	opt callstack 0
   479  0000BC                     	ds	10
   480  0000C6                     _raceColor:
   481                           	opt callstack 0
   482  0000C6                     	ds	9
   483  0000CF                     error@F6090:
   484                           	opt callstack 0
   485  0000CF                     	ds	7
   486  0000D6                     _sensorChannels:
   487                           	opt callstack 0
   488  0000D6                     	ds	6
   489  0000DC                     PRC@F6030:
   490                           	opt callstack 0
   491  0000DC                     	ds	5
   492  0000E1                     calibrate@F6019:
   493                           	opt callstack 0
   494  0000E1                     	ds	5
   495  0000E6                     _RRranges:
   496                           	opt callstack 0
   497  0000E6                     	ds	5
   498  0000EB                     _Rranges:
   499                           	opt callstack 0
   500  0000EB                     	ds	5
   501  0000F0                     _Mranges:
   502                           	opt callstack 0
   503  0000F0                     	ds	5
   504  0000F5                     _Lranges:
   505                           	opt callstack 0
   506  0000F5                     	ds	5
   507                           
   508                           	psect	cstackCOMRAM
   509  000001                     __pcstackCOMRAM:
   510                           	opt callstack 0
   511  000001                     ??_displayColorDetected:
   512  000001                     ??_setADCChannel:
   513  000001                     ?_abs:
   514                           	opt callstack 0
   515  000001                     trans@s:
   516                           	opt callstack 0
   517  000001                     msDelay@delayInMs:
   518                           	opt callstack 0
   519  000001                     abs@a:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x0
   523  000001                     	ds	1
   524  000002                     ??_ranges:
   525  000002                     oneSecDelay@a:
   526                           	opt callstack 0
   527  000002                     error@message:
   528                           	opt callstack 0
   529                           
   530                           ; 7 bytes @ 0x1
   531  000002                     	ds	1
   532  000003                     ??_abs:
   533  000003                     displayColorDetected@sensor:
   534                           	opt callstack 0
   535  000003                     setADCChannel@channel:
   536                           	opt callstack 0
   537  000003                     classifyColors@sensorRanges:
   538                           	opt callstack 0
   539                           
   540                           ; 10 bytes @ 0x2
   541  000003                     	ds	1
   542  000004                     ??_aveSensor:
   543  000004                     ranges@rangeArray:
   544                           	opt callstack 0
   545                           
   546                           ; 10 bytes @ 0x3
   547  000004                     	ds	2
   548  000006                     aveSensor@s:
   549                           	opt callstack 0
   550                           
   551                           ; 1 bytes @ 0x5
   552  000006                     	ds	1
   553  000007                     aveSensor@measurements:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x6
   557  000007                     	ds	2
   558  000009                     aveSensor@result:
   559                           	opt callstack 0
   560  000009                     error@a:
   561                           	opt callstack 0
   562                           
   563                           ; 1 bytes @ 0x8
   564  000009                     	ds	1
   565  00000A                     ??_PRC:
   566  00000A                     aveSensor@a:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x9
   570  00000A                     	ds	1
   571  00000B                     readAllSensors@a:
   572                           	opt callstack 0
   573  00000B                     capTouch@message:
   574                           	opt callstack 0
   575                           
   576                           ; 26 bytes @ 0xA
   577  00000B                     	ds	1
   578  00000C                     pyCal@a:
   579                           	opt callstack 0
   580  00000C                     PRC@message:
   581                           	opt callstack 0
   582                           
   583                           ; 32 bytes @ 0xB
   584  00000C                     	ds	1
   585  00000D                     classifyColors@a:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0xC
   589  00000D                     	ds	1
   590  00000E                     ranges@a:
   591                           	opt callstack 0
   592                           
   593                           ; 1 bytes @ 0xD
   594  00000E                     	ds	1
   595  00000F                     ranges@b:
   596                           	opt callstack 0
   597                           
   598                           ; 1 bytes @ 0xE
   599  00000F                     	ds	1
   600  000010                     ??_calibrate:
   601                           
   602                           ; 1 bytes @ 0xF
   603  000010                     	ds	2
   604  000012                     calibrate@sensors:
   605                           	opt callstack 0
   606                           
   607                           ; 5 bytes @ 0x11
   608  000012                     	ds	5
   609  000017                     calibrate@rangeArray:
   610                           	opt callstack 0
   611                           
   612                           ; 10 bytes @ 0x16
   613  000017                     	ds	10
   614  000021                     calibrate@samples:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0x20
   618  000021                     	ds	1
   619  000022                     calibrate@samples_1177:
   620                           	opt callstack 0
   621                           
   622                           ; 1 bytes @ 0x21
   623  000022                     	ds	1
   624  000023                     calibrate@samples_1178:
   625                           	opt callstack 0
   626                           
   627                           ; 1 bytes @ 0x22
   628  000023                     	ds	1
   629  000024                     calibrate@samples_1179:
   630                           	opt callstack 0
   631                           
   632                           ; 1 bytes @ 0x23
   633  000024                     	ds	1
   634  000025                     calibrate@samples_1180:
   635                           	opt callstack 0
   636                           
   637                           ; 1 bytes @ 0x24
   638  000025                     	ds	1
   639  000026                     calibrate@a:
   640                           	opt callstack 0
   641                           
   642                           ; 1 bytes @ 0x25
   643  000026                     	ds	1
   644  000027                     calibrate@b:
   645                           	opt callstack 0
   646  000027                     capTouch@touch1:
   647                           	opt callstack 0
   648                           
   649                           ; 1 bytes @ 0x26
   650  000027                     	ds	1
   651  000028                     calibrate@temp:
   652                           	opt callstack 0
   653  000028                     capTouch@touch2:
   654                           	opt callstack 0
   655                           
   656                           ; 1 bytes @ 0x27
   657  000028                     	ds	1
   658  000029                     capTouch@a:
   659                           	opt callstack 0
   660                           
   661                           ; 1 bytes @ 0x28
   662  000029                     	ds	3
   663  00002C                     PRC@message2:
   664                           	opt callstack 0
   665                           
   666                           ; 5 bytes @ 0x2B
   667  00002C                     	ds	5
   668  000031                     PRC@a:
   669                           	opt callstack 0
   670                           
   671                           ; 1 bytes @ 0x30
   672  000031                     	ds	1
   673  000032                     PRC@a_1187:
   674                           	opt callstack 0
   675                           
   676                           ; 1 bytes @ 0x31
   677  000032                     	ds	1
   678  000033                     PRC@a_1188:
   679                           	opt callstack 0
   680                           
   681                           ; 1 bytes @ 0x32
   682  000033                     	ds	1
   683  000034                     PRC@a_1189:
   684                           	opt callstack 0
   685                           
   686                           ; 1 bytes @ 0x33
   687  000034                     	ds	1
   688  000035                     PRC@a_1190:
   689                           	opt callstack 0
   690                           
   691                           ; 1 bytes @ 0x34
   692  000035                     	ds	1
   693  000036                     PRC@a_1191:
   694                           	opt callstack 0
   695                           
   696                           ; 1 bytes @ 0x35
   697  000036                     	ds	1
   698  000037                     PRC@a_1192:
   699                           	opt callstack 0
   700                           
   701                           ; 1 bytes @ 0x36
   702  000037                     	ds	1
   703  000038                     PRC@a_1193:
   704                           	opt callstack 0
   705                           
   706                           ; 1 bytes @ 0x37
   707  000038                     	ds	1
   708  000039                     PRC@a_1194:
   709                           	opt callstack 0
   710                           
   711                           ; 1 bytes @ 0x38
   712  000039                     	ds	1
   713  00003A                     ??_RCE:
   714                           
   715                           ; 1 bytes @ 0x39
   716  00003A                     	ds	2
   717  00003C                     RCE@message:
   718                           	opt callstack 0
   719                           
   720                           ; 14 bytes @ 0x3B
   721  00003C                     	ds	14
   722  00004A                     RCE@commandReceived:
   723                           	opt callstack 0
   724                           
   725                           ; 3 bytes @ 0x49
   726  00004A                     	ds	3
   727  00004D                     RCE@nCharsReceived:
   728                           	opt callstack 0
   729                           
   730                           ; 1 bytes @ 0x4C
   731  00004D                     	ds	1
   732  00004E                     RCE@a:
   733                           	opt callstack 0
   734                           
   735                           ; 1 bytes @ 0x4D
   736  00004E                     	ds	1
   737  00004F                     RCE@a_1356:
   738                           	opt callstack 0
   739                           
   740                           ; 1 bytes @ 0x4E
   741  00004F                     	ds	1
   742  000050                     
   743                           ; 1 bytes @ 0x4F
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 96 in file "sanic.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   763 ;;      Params:         0       0       0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels required when called:    5
   769 ;; This function calls:
   770 ;;		_RCE
   771 ;;		_init
   772 ;; This function is called by:
   773 ;;		Startup code after reset
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text0
   778  007180                     __ptext0:
   779                           	opt callstack 0
   780  007180                     _main:
   781                           	opt callstack 26
   782                           
   783                           ;sanic.c: 113:     init();
   784                           
   785                           ;incstack = 0
   786  007180  ECF9  F038         	call	_init	;wreg free
   787                           
   788                           ;sanic.c: 114:     RCE();
   789  007184  EC9C  F03C         	call	_RCE	;wreg free
   790  007188                     l522:
   791  007188  D7FF               	goto	l522
   792  00718A                     __end_of_main:
   793                           	opt callstack 0
   794                           
   795 ;; *************** function _init *****************
   796 ;; Defined at:
   797 ;;		line 125 in file "sanic.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         0       0       0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		_clearPorts
   820 ;;		_setupADC
   821 ;;		_setupOSC
   822 ;;		_setupSerial
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text1
   829  0071F2                     __ptext1:
   830                           	opt callstack 0
   831  0071F2                     _init:
   832                           	opt callstack 29
   833                           
   834                           ;sanic.c: 126:     raceColor[3] = 1;
   835                           
   836                           ;incstack = 0
   837  0071F2  0E01               	movlw	1
   838  0071F4  0100               	movlb	0	; () banked
   839  0071F6  6FC9               	movwf	(_raceColor+3)& (0+255),b
   840                           
   841                           ; BSR set to: 0
   842                           ;sanic.c: 127:     setupOSC();
   843  0071F8  ECBB  F038         	call	_setupOSC	;wreg free
   844                           
   845                           ;sanic.c: 128:     clearPorts();
   846  0071FC  ECDA  F03A         	call	_clearPorts	;wreg free
   847                           
   848                           ;sanic.c: 129:     setupSerial();
   849  007200  EC89  F039         	call	_setupSerial	;wreg free
   850                           
   851                           ;sanic.c: 130:     setupADC();
   852  007204  EC56  F039         	call	_setupADC	;wreg free
   853  007208  0012               	return		;funcret
   854  00720A                     __end_of_init:
   855                           	opt callstack 0
   856                           
   857 ;; *************** function _setupSerial *****************
   858 ;; Defined at:
   859 ;;		line 96 in file "./functions.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   873 ;;      Params:         0       0       0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_init
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text2
   887  007312                     __ptext2:
   888                           	opt callstack 0
   889  007312                     _setupSerial:
   890                           	opt callstack 29
   891                           
   892                           ;./functions.c: 98:     PIE1bits.RC1IE = 0;
   893                           
   894                           ;incstack = 0
   895  007312  9A9D               	bcf	3997,5,c	;volatile
   896                           
   897                           ;./functions.c: 99:     PIE1bits.TX1IE = 0;
   898  007314  989D               	bcf	3997,4,c	;volatile
   899                           
   900                           ;./functions.c: 100:     PIR1bits.RCIF = 0;
   901  007316  9A9E               	bcf	3998,5,c	;volatile
   902                           
   903                           ;./functions.c: 102:     FSR0 = 0;
   904  007318  0E00               	movlw	0
   905  00731A  6EEA               	movwf	fsr0h,c	;volatile
   906  00731C  0E00               	movlw	0
   907  00731E  6EE9               	movwf	fsr0l,c	;volatile
   908                           
   909                           ;./functions.c: 103:     TXSTA1 = 0b00100100;
   910  007320  0E24               	movlw	36
   911  007322  6EAC               	movwf	4012,c	;volatile
   912                           
   913                           ;./functions.c: 104:     RCSTA1 = 0b10010000;
   914  007324  0E90               	movlw	144
   915  007326  6EAB               	movwf	4011,c	;volatile
   916                           
   917                           ;./functions.c: 106:     SPBRG1 = 25;
   918  007328  0E19               	movlw	25
   919  00732A  6EAF               	movwf	4015,c	;volatile
   920                           
   921                           ;./functions.c: 107:     SPBRGH1 = 0;
   922  00732C  0E00               	movlw	0
   923  00732E  6EB0               	movwf	4016,c	;volatile
   924                           
   925                           ;./functions.c: 108:     BAUDCON1bits.BRG16 = 0;
   926  007330  96B8               	bcf	4024,3,c	;volatile
   927                           
   928                           ;./functions.c: 109:     TRISCbits.RC6 = 1;
   929  007332  8C94               	bsf	3988,6,c	;volatile
   930                           
   931                           ;./functions.c: 110:     TRISCbits.RC7 = 1;
   932  007334  8E94               	bsf	3988,7,c	;volatile
   933                           
   934                           ;./functions.c: 112:     PORTC = 0;
   935  007336  0E00               	movlw	0
   936  007338  6E82               	movwf	3970,c	;volatile
   937                           
   938                           ;./functions.c: 113:     ANSELC = 0;
   939  00733A  0E00               	movlw	0
   940  00733C  010F               	movlb	15	; () banked
   941  00733E  6F3A               	movwf	58,b	;volatile
   942                           
   943                           ; BSR set to: 15
   944  007340  0012               	return		;funcret
   945  007342                     __end_of_setupSerial:
   946                           	opt callstack 0
   947                           
   948 ;; *************** function _setupOSC *****************
   949 ;; Defined at:
   950 ;;		line 90 in file "./functions.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   964 ;;      Params:         0       0       0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0
   967 ;;      Totals:         0       0       0       0       0       0       0
   968 ;;Total ram usage:        0 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_init
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text3
   978  007176                     __ptext3:
   979                           	opt callstack 0
   980  007176                     _setupOSC:
   981                           	opt callstack 29
   982                           
   983                           ;./functions.c: 92:     OSCCONbits.IRCF = 0b101;
   984                           
   985                           ; BSR set to: 15
   986                           ;incstack = 0
   987  007176  50D3               	movf	4051,w,c	;volatile
   988  007178  0B8F               	andlw	-113
   989  00717A  0950               	iorlw	80
   990  00717C  6ED3               	movwf	4051,c	;volatile
   991  00717E  0012               	return		;funcret
   992  007180                     __end_of_setupOSC:
   993                           	opt callstack 0
   994                           
   995 ;; *************** function _clearPorts *****************
   996 ;; Defined at:
   997 ;;		line 59 in file "./functions.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1011 ;;      Params:         0       0       0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_init
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text4
  1025  0075B4                     __ptext4:
  1026                           	opt callstack 0
  1027  0075B4                     _clearPorts:
  1028                           	opt callstack 29
  1029                           
  1030                           ;./functions.c: 61:     PORTA = 0;
  1031                           
  1032                           ;incstack = 0
  1033  0075B4  0E00               	movlw	0
  1034  0075B6  6E80               	movwf	3968,c	;volatile
  1035                           
  1036                           ;./functions.c: 62:     LATA = 0;
  1037  0075B8  0E00               	movlw	0
  1038  0075BA  6E89               	movwf	3977,c	;volatile
  1039                           
  1040                           ;./functions.c: 63:     TRISA = 0;
  1041  0075BC  0E00               	movlw	0
  1042  0075BE  6E92               	movwf	3986,c	;volatile
  1043                           
  1044                           ;./functions.c: 64:     ANSELA = 0;
  1045  0075C0  0E00               	movlw	0
  1046  0075C2  010F               	movlb	15	; () banked
  1047  0075C4  6F38               	movwf	56,b	;volatile
  1048                           
  1049                           ;./functions.c: 66:     PORTB = 0;
  1050  0075C6  0E00               	movlw	0
  1051  0075C8  6E81               	movwf	3969,c	;volatile
  1052                           
  1053                           ;./functions.c: 67:     LATB = 0;
  1054  0075CA  0E00               	movlw	0
  1055  0075CC  6E8A               	movwf	3978,c	;volatile
  1056                           
  1057                           ;./functions.c: 68:     TRISB = 0;
  1058  0075CE  0E00               	movlw	0
  1059  0075D0  6E93               	movwf	3987,c	;volatile
  1060                           
  1061                           ;./functions.c: 69:     ANSELB = 0;
  1062  0075D2  0E00               	movlw	0
  1063  0075D4  6F39               	movwf	57,b	;volatile
  1064                           
  1065                           ;./functions.c: 71:     PORTC = 0;
  1066  0075D6  0E00               	movlw	0
  1067  0075D8  6E82               	movwf	3970,c	;volatile
  1068                           
  1069                           ;./functions.c: 72:     LATC = 0;
  1070  0075DA  0E00               	movlw	0
  1071  0075DC  6E8B               	movwf	3979,c	;volatile
  1072                           
  1073                           ;./functions.c: 73:     TRISC = 0;
  1074  0075DE  0E00               	movlw	0
  1075  0075E0  6E94               	movwf	3988,c	;volatile
  1076                           
  1077                           ;./functions.c: 74:     ANSELC = 0;
  1078  0075E2  0E00               	movlw	0
  1079  0075E4  6F3A               	movwf	58,b	;volatile
  1080                           
  1081                           ;./functions.c: 76:     PORTD = 0;
  1082  0075E6  0E00               	movlw	0
  1083  0075E8  6E83               	movwf	3971,c	;volatile
  1084                           
  1085                           ;./functions.c: 77:     LATD = 0;
  1086  0075EA  0E00               	movlw	0
  1087  0075EC  6E8C               	movwf	3980,c	;volatile
  1088                           
  1089                           ;./functions.c: 78:     TRISD = 0;
  1090  0075EE  0E00               	movlw	0
  1091  0075F0  6E95               	movwf	3989,c	;volatile
  1092                           
  1093                           ;./functions.c: 79:     ANSELD = 0;
  1094  0075F2  0E00               	movlw	0
  1095  0075F4  6F3B               	movwf	59,b	;volatile
  1096                           
  1097                           ;./functions.c: 81:     PORTE = 0;
  1098  0075F6  0E00               	movlw	0
  1099  0075F8  6E84               	movwf	3972,c	;volatile
  1100                           
  1101                           ;./functions.c: 82:     LATE = 0;
  1102  0075FA  0E00               	movlw	0
  1103  0075FC  6E8D               	movwf	3981,c	;volatile
  1104                           
  1105                           ;./functions.c: 83:     TRISE = 0;
  1106  0075FE  0E00               	movlw	0
  1107  007600  6E96               	movwf	3990,c	;volatile
  1108                           
  1109                           ;./functions.c: 84:     ANSELE = 0;
  1110  007602  0E00               	movlw	0
  1111  007604  6F3C               	movwf	60,b	;volatile
  1112                           
  1113                           ;./functions.c: 85:     raceColor[3] = 1;
  1114  007606  0E01               	movlw	1
  1115  007608  0100               	movlb	0	; () banked
  1116  00760A  6FC9               	movwf	(_raceColor+3)& (0+255),b
  1117                           
  1118                           ; BSR set to: 0
  1119  00760C  0012               	return		;funcret
  1120  00760E                     __end_of_clearPorts:
  1121                           	opt callstack 0
  1122                           
  1123 ;; *************** function _RCE *****************
  1124 ;; Defined at:
  1125 ;;		line 133 in file "sanic.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  a               1   78[COMRAM] unsigned char 
  1130 ;;  a               1   77[COMRAM] unsigned char 
  1131 ;;  message        14   59[COMRAM] unsigned char [14]
  1132 ;;  commandRecei    3   73[COMRAM] unsigned char [3]
  1133 ;;  nCharsReceiv    1   76[COMRAM] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:        20       0       0       0       0       0       0
  1145 ;;      Temps:          2       0       0       0       0       0       0
  1146 ;;      Totals:        22       0       0       0       0       0       0
  1147 ;;Total ram usage:       22 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    4
  1150 ;; This function calls:
  1151 ;;		_PRC
  1152 ;;		_calibrate
  1153 ;;		_capTouch
  1154 ;;		_error
  1155 ;;		_navigate
  1156 ;;		_pyCal
  1157 ;;		_trans
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text5
  1164  007938                     __ptext5:
  1165                           	opt callstack 0
  1166  007938                     _RCE:
  1167                           	opt callstack 26
  1168                           
  1169                           ;sanic.c: 135:         PORTD = 0b10100100;
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;incstack = 0
  1173                           ;sanic.c: 134:     while(1){
  1174  007938  0EA4               	movlw	164
  1175  00793A  6E83               	movwf	3971,c	;volatile
  1176                           
  1177                           ;sanic.c: 137:         unsigned char message[] = "\nSanic races ";
  1178  00793C  EE20  F09A         	lfsr	2,RCE@F6106
  1179  007940  EE10  F03C         	lfsr	1,RCE@message
  1180  007944  0E0D               	movlw	13
  1181  007946                     u2131:
  1182  007946  CFDB FFE3          	movff	plusw2,plusw1
  1183  00794A  06E8               	decf	wreg,f,c
  1184  00794C  E2FC               	bc	u2131
  1185                           
  1186                           ;sanic.c: 139:         for (unsigned char a = 0; a < 13; a++)
  1187  00794E  0E00               	movlw	0
  1188  007950  6E4E               	movwf	RCE@a,c
  1189  007952                     l3301:
  1190                           
  1191                           ;sanic.c: 140:         {;sanic.c: 141:             trans(message[a]);
  1192  007952  0E3C               	movlw	low RCE@message
  1193  007954  244E               	addwf	RCE@a,w,c
  1194  007956  6ED9               	movwf	fsr2l,c
  1195  007958  6ADA               	clrf	fsr2h,c
  1196  00795A  0E00               	movlw	high RCE@message
  1197  00795C  22DA               	addwfc	fsr2h,f,c
  1198  00795E  50DF               	movf	indf2,w,c
  1199  007960  ECC5  F038         	call	_trans
  1200                           
  1201                           ;sanic.c: 142:         }
  1202  007964  2A4E               	incf	RCE@a,f,c
  1203  007966  0E0C               	movlw	12
  1204  007968  644E               	cpfsgt	RCE@a,c
  1205  00796A  D7F3               	goto	l3301
  1206                           
  1207                           ;sanic.c: 144:         if (raceColor[3] == 1){
  1208  00796C  0100               	movlb	0	; () banked
  1209  00796E  05C9               	decf	(_raceColor+3)& (0+255),w,b
  1210  007970  A4D8               	btfss	status,2,c
  1211  007972  D004               	goto	l3311
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;sanic.c: 145:             trans('B');
  1215  007974  0E42               	movlw	66
  1216  007976  ECC5  F038         	call	_trans
  1217                           
  1218                           ;sanic.c: 146:         }
  1219  00797A  D011               	goto	l537
  1220  00797C                     l3311:
  1221                           
  1222                           ; BSR set to: 0
  1223  00797C  05C8               	decf	(_raceColor+2)& (0+255),w,b
  1224  00797E  A4D8               	btfss	status,2,c
  1225  007980  D004               	goto	l3315
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;sanic.c: 148:             trans('R');
  1229  007982  0E52               	movlw	82
  1230  007984  ECC5  F038         	call	_trans
  1231                           
  1232                           ;sanic.c: 149:         }
  1233  007988  D00A               	goto	l537
  1234  00798A                     l3315:
  1235                           
  1236                           ; BSR set to: 0
  1237  00798A  05C7               	decf	(_raceColor+1)& (0+255),w,b
  1238  00798C  A4D8               	btfss	status,2,c
  1239  00798E  D004               	goto	l3319
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;sanic.c: 151:             trans('G');
  1243  007990  0E47               	movlw	71
  1244  007992  ECC5  F038         	call	_trans
  1245                           
  1246                           ;sanic.c: 152:         }
  1247  007996  D003               	goto	l537
  1248  007998                     l3319:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;sanic.c: 154:             trans('n');
  1252  007998  0E6E               	movlw	110
  1253  00799A  ECC5  F038         	call	_trans
  1254  00799E                     l537:
  1255                           
  1256                           ;sanic.c: 156:         trans('\n');
  1257  00799E  0E0A               	movlw	10
  1258  0079A0  ECC5  F038         	call	_trans
  1259                           
  1260                           ;sanic.c: 159:         INTCONbits.GIE = 0;
  1261  0079A4  9EF2               	bcf	4082,7,c	;volatile
  1262                           
  1263                           ;sanic.c: 160:         INTCONbits.PEIE = 0;
  1264  0079A6  9CF2               	bcf	4082,6,c	;volatile
  1265                           
  1266                           ;sanic.c: 161:         unsigned char nCharsReceived = 0;
  1267  0079A8  0E00               	movlw	0
  1268  0079AA  6E4D               	movwf	RCE@nCharsReceived,c
  1269                           
  1270                           ;sanic.c: 162:         unsigned char commandReceived[3];;sanic.c: 164:         while(nCh
      +                          arsReceived < 3){
  1271  0079AC  D00B               	goto	l3331
  1272  0079AE                     l543:
  1273                           
  1274                           ;sanic.c: 165:             if (PIR1bits.RC1IF){
  1275  0079AE  AA9E               	btfss	3998,5,c	;volatile
  1276  0079B0  D009               	goto	l3331
  1277                           
  1278                           ;sanic.c: 166:                 commandReceived[nCharsReceived] = RCREG;
  1279  0079B2  0E4A               	movlw	low RCE@commandReceived
  1280  0079B4  244D               	addwf	RCE@nCharsReceived,w,c
  1281  0079B6  6ED9               	movwf	fsr2l,c
  1282  0079B8  6ADA               	clrf	fsr2h,c
  1283  0079BA  0E00               	movlw	high RCE@commandReceived
  1284  0079BC  22DA               	addwfc	fsr2h,f,c
  1285  0079BE  CFAE FFDF          	movff	4014,indf2	;volatile
  1286                           
  1287                           ;sanic.c: 167:                 nCharsReceived++;
  1288  0079C2  2A4D               	incf	RCE@nCharsReceived,f,c
  1289  0079C4                     l3331:
  1290                           
  1291                           ;sanic.c: 164:         while(nCharsReceived < 3){
  1292  0079C4  0E02               	movlw	2
  1293  0079C6  644D               	cpfsgt	RCE@nCharsReceived,c
  1294  0079C8  D7F2               	goto	l543
  1295  0079CA  D012               	goto	l3347
  1296  0079CC                     l3333:
  1297                           
  1298                           ;sanic.c: 175:             capTouch();
  1299  0079CC  EC07  F03B         	call	_capTouch	;wreg free
  1300                           
  1301                           ;sanic.c: 176:             break;
  1302  0079D0  D027               	goto	l3349
  1303  0079D2                     l3335:
  1304                           
  1305                           ;sanic.c: 178:             PRC();
  1306  0079D2  ECAF  F03D         	call	_PRC	;wreg free
  1307                           
  1308                           ;sanic.c: 179:             break;
  1309  0079D6  D024               	goto	l3349
  1310  0079D8                     l3337:
  1311                           
  1312                           ;sanic.c: 181:             navigate();
  1313  0079D8  EC35  F03A         	call	_navigate	;wreg free
  1314                           
  1315                           ;sanic.c: 182:             break;
  1316  0079DC  D021               	goto	l3349
  1317  0079DE                     l3339:
  1318                           
  1319                           ;sanic.c: 184:             pyCal();
  1320  0079DE  EC5A  F03A         	call	_pyCal	;wreg free
  1321                           
  1322                           ;sanic.c: 185:             break;
  1323  0079E2  D01E               	goto	l3349
  1324  0079E4                     l3341:
  1325                           
  1326                           ;sanic.c: 187:             calibrate();
  1327  0079E4  EC71  F03E         	call	_calibrate	;wreg free
  1328                           
  1329                           ;sanic.c: 188:             break;
  1330  0079E8  D01B               	goto	l3349
  1331  0079EA                     l3343:
  1332                           
  1333                           ;sanic.c: 191:             error();
  1334  0079EA  ECBA  F039         	call	_error	;wreg free
  1335                           
  1336                           ;sanic.c: 192:             break;
  1337  0079EE  D018               	goto	l3349
  1338  0079F0                     l3347:
  1339  0079F0  504A               	movf	RCE@commandReceived,w,c
  1340  0079F2  6E3A               	movwf	??_RCE& (0+255),c
  1341  0079F4  6A3B               	clrf	(??_RCE+1)& (0+255),c
  1342                           
  1343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 1, Range of values is 0 to 0
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte            4     3 (average)
  1349                           ;	Chosen strategy is simple_byte
  1350  0079F6  503B               	movf	??_RCE+1,w,c
  1351  0079F8  0A00               	xorlw	0	; case 0
  1352  0079FA  A4D8               	btfss	status,2,c
  1353  0079FC  D7F6               	goto	l3343
  1354                           
  1355                           ; Switch size 1, requested type "simple"
  1356                           ; Number of cases is 5, Range of values is 67 to 82
  1357                           ; switch strategies available:
  1358                           ; Name         Instructions Cycles
  1359                           ; simple_byte           16     9 (average)
  1360                           ;	Chosen strategy is simple_byte
  1361  0079FE  503A               	movf	??_RCE,w,c
  1362  007A00  0A43               	xorlw	67	; case 67
  1363  007A02  B4D8               	btfsc	status,2,c
  1364  007A04  D7EF               	goto	l3341
  1365  007A06  0A0D               	xorlw	13	; case 78
  1366  007A08  B4D8               	btfsc	status,2,c
  1367  007A0A  D7E6               	goto	l3337
  1368  007A0C  0A1E               	xorlw	30	; case 80
  1369  007A0E  B4D8               	btfsc	status,2,c
  1370  007A10  D7E0               	goto	l3335
  1371  007A12  0A01               	xorlw	1	; case 81
  1372  007A14  B4D8               	btfsc	status,2,c
  1373  007A16  D7E3               	goto	l3339
  1374  007A18  0A03               	xorlw	3	; case 82
  1375  007A1A  B4D8               	btfsc	status,2,c
  1376  007A1C  D7D7               	goto	l3333
  1377  007A1E  D7E5               	goto	l3343
  1378  007A20                     l3349:
  1379                           
  1380                           ;sanic.c: 195:         for (unsigned char a = 0; a < 3; a++){
  1381  007A20  0E00               	movlw	0
  1382  007A22  6E4F               	movwf	RCE@a_1356,c
  1383  007A24                     l3355:
  1384                           
  1385                           ;sanic.c: 196:             commandReceived[a] = 0;
  1386  007A24  0E4A               	movlw	low RCE@commandReceived
  1387  007A26  244F               	addwf	RCE@a_1356,w,c
  1388  007A28  6ED9               	movwf	fsr2l,c
  1389  007A2A  6ADA               	clrf	fsr2h,c
  1390  007A2C  0E00               	movlw	high RCE@commandReceived
  1391  007A2E  22DA               	addwfc	fsr2h,f,c
  1392  007A30  0E00               	movlw	0
  1393  007A32  6EDF               	movwf	indf2,c
  1394                           
  1395                           ;sanic.c: 197:         }
  1396  007A34  2A4F               	incf	RCE@a_1356,f,c
  1397  007A36  0E02               	movlw	2
  1398  007A38  644F               	cpfsgt	RCE@a_1356,c
  1399  007A3A  D7F4               	goto	l3355
  1400  007A3C  D77D               	goto	_RCE
  1401  007A3E                     __end_of_RCE:
  1402                           	opt callstack 0
  1403                           
  1404 ;; *************** function _pyCal *****************
  1405 ;; Defined at:
  1406 ;;		line 413 in file "./functions.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  a               1   11[COMRAM] unsigned char 
  1411 ;;  done            1    0        unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1421 ;;      Params:         0       0       0       0       0       0       0
  1422 ;;      Locals:         2       0       0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0
  1424 ;;      Totals:         2       0       0       0       0       0       0
  1425 ;;Total ram usage:        2 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    2
  1428 ;; This function calls:
  1429 ;;		_aveSensor
  1430 ;;		_msDelay
  1431 ;;		_setupADC
  1432 ;;		_trans
  1433 ;; This function is called by:
  1434 ;;		_RCE
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text6
  1439  0074B4                     __ptext6:
  1440                           	opt callstack 0
  1441  0074B4                     _pyCal:
  1442                           	opt callstack 27
  1443                           
  1444                           ;./functions.c: 415:     setupADC();
  1445                           
  1446                           ;incstack = 0
  1447  0074B4  EC56  F039         	call	_setupADC	;wreg free
  1448                           
  1449                           ;./functions.c: 416:     PORTD = 0b00001100;
  1450  0074B8  0E0C               	movlw	12
  1451  0074BA  6E83               	movwf	3971,c	;volatile
  1452  0074BC                     
  1453                           ;./functions.c: 419:     {;./functions.c: 420:         msDelay(10);
  1454  0074BC  0E0A               	movlw	10
  1455  0074BE  EC46  F039         	call	_msDelay
  1456                           
  1457                           ;./functions.c: 421:         for (unsigned char a = 0; a < 5; a++)
  1458  0074C2  0E00               	movlw	0
  1459  0074C4  6E0C               	movwf	pyCal@a,c
  1460  0074C6                     l3207:
  1461                           
  1462                           ;./functions.c: 422:         {;./functions.c: 423:             trans(aveSensor(sensorCha
      +                          nnels[a]));
  1463  0074C6  0ED6               	movlw	low _sensorChannels
  1464  0074C8  240C               	addwf	pyCal@a,w,c
  1465  0074CA  6ED9               	movwf	fsr2l,c
  1466  0074CC  6ADA               	clrf	fsr2h,c
  1467  0074CE  0E00               	movlw	high _sensorChannels
  1468  0074D0  22DA               	addwfc	fsr2h,f,c
  1469  0074D2  50DF               	movf	indf2,w,c
  1470  0074D4  EC12  F03A         	call	_aveSensor
  1471  0074D8  ECC5  F038         	call	_trans
  1472                           
  1473                           ;./functions.c: 424:         }
  1474  0074DC  2A0C               	incf	pyCal@a,f,c
  1475  0074DE  0E04               	movlw	4
  1476  0074E0  640C               	cpfsgt	pyCal@a,c
  1477  0074E2  D7F1               	goto	l3207
  1478                           
  1479                           ;./functions.c: 425:         trans('\n');
  1480  0074E4  0E0A               	movlw	10
  1481  0074E6  ECC5  F038         	call	_trans
  1482                           
  1483                           ;./functions.c: 427:         if (PIR1bits.RC1IF)
  1484  0074EA  AA9E               	btfss	3998,5,c	;volatile
  1485  0074EC  D7E7               	goto	l3197
  1486                           
  1487                           ;./functions.c: 428:         {;./functions.c: 429:             PIR1bits.RC1IF = 0;
  1488  0074EE  9A9E               	bcf	3998,5,c	;volatile
  1489                           
  1490                           ;./functions.c: 430:             if (RCREG == 'S' || RCREG == 's')
  1491  0074F0  0E53               	movlw	83
  1492  0074F2  18AE               	xorwf	4014,w,c	;volatile
  1493  0074F4  B4D8               	btfsc	status,2,c
  1494  0074F6  0012               	return	
  1495  0074F8  0E73               	movlw	115
  1496  0074FA  18AE               	xorwf	4014,w,c	;volatile
  1497  0074FC  B4D8               	btfsc	status,2,c
  1498  0074FE  0012               	return	
  1499  007500  D7DD               	goto	l3197
  1500  007502                     __end_of_pyCal:
  1501                           	opt callstack 0
  1502                           
  1503 ;; *************** function _navigate *****************
  1504 ;; Defined at:
  1505 ;;		line 438 in file "./functions.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1519 ;;      Params:         0       0       0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    3
  1526 ;; This function calls:
  1527 ;;		_classifyColors
  1528 ;;		_determineDirection
  1529 ;;		_displayColorDetected
  1530 ;;		_displayRaceColor
  1531 ;;		_readAllSensors
  1532 ;;		_setupADC
  1533 ;;		_setupPWMLeft
  1534 ;;		_setupPWMRight
  1535 ;;		_stopMotors
  1536 ;;		_testBlack
  1537 ;; This function is called by:
  1538 ;;		_RCE
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text7
  1543  00746A                     __ptext7:
  1544                           	opt callstack 0
  1545  00746A                     _navigate:
  1546                           	opt callstack 26
  1547                           
  1548                           ;./functions.c: 439:     displayRaceColor();
  1549                           
  1550                           ;incstack = 0
  1551  00746A  ECF3  F039         	call	_displayRaceColor	;wreg free
  1552                           
  1553                           ;./functions.c: 440:     setupPWMLeft();
  1554  00746E  EC67  F039         	call	_setupPWMLeft	;wreg free
  1555                           
  1556                           ;./functions.c: 441:     setupPWMRight();
  1557  007472  EC78  F039         	call	_setupPWMRight	;wreg free
  1558                           
  1559                           ;./functions.c: 442:     setupADC();
  1560  007476  EC56  F039         	call	_setupADC	;wreg free
  1561  00747A                     l3225:
  1562                           
  1563                           ;./functions.c: 444:         readAllSensors();
  1564  00747A  ECD5  F039         	call	_readAllSensors	;wreg free
  1565                           
  1566                           ;./functions.c: 445:         classifyColors();
  1567  00747E  EC1F  F03D         	call	_classifyColors	;wreg free
  1568                           
  1569                           ;./functions.c: 446:         displayColorDetected(2);
  1570  007482  0E02               	movlw	2
  1571  007484  ECC4  F03B         	call	_displayColorDetected
  1572                           
  1573                           ;./functions.c: 447:         determineDirection();
  1574  007488  EC82  F03B         	call	_determineDirection	;wreg free
  1575                           
  1576                           ;./functions.c: 451:         if (PIR1bits.RC1IF)
  1577  00748C  AA9E               	btfss	3998,5,c	;volatile
  1578  00748E  D00C               	goto	l3245
  1579                           
  1580                           ;./functions.c: 452:         {;./functions.c: 453:             PIR1bits.RC1IF = 0;
  1581  007490  9A9E               	bcf	3998,5,c	;volatile
  1582                           
  1583                           ;./functions.c: 454:             if (RCREG == 'S' || RCREG == 's')
  1584  007492  0E53               	movlw	83
  1585  007494  18AE               	xorwf	4014,w,c	;volatile
  1586  007496  B4D8               	btfsc	status,2,c
  1587  007498  D004               	goto	u2080
  1588  00749A  0E73               	movlw	115
  1589  00749C  18AE               	xorwf	4014,w,c	;volatile
  1590  00749E  A4D8               	btfss	status,2,c
  1591  0074A0  D7EC               	goto	l3225
  1592  0074A2                     u2080:
  1593                           
  1594                           ;./functions.c: 455:             {;./functions.c: 456:                 stopMotors();
  1595  0074A2  ECDA  F038         	call	_stopMotors	;wreg free
  1596  0074A6  0012               	return	
  1597  0074A8                     l3245:
  1598  0074A8  ECAD  F03A         	call	_testBlack	;wreg free
  1599  0074AC  0AAA               	xorlw	170
  1600  0074AE  B4D8               	btfsc	status,2,c
  1601  0074B0  D7F8               	goto	u2080
  1602  0074B2  D7E3               	goto	l3225
  1603  0074B4                     __end_of_navigate:
  1604                           	opt callstack 0
  1605                           
  1606 ;; *************** function _testBlack *****************
  1607 ;; Defined at:
  1608 ;;		line 685 in file "./functions.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      unsigned char 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         0       0       0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_navigate
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text8
  1636  00755A                     __ptext8:
  1637                           	opt callstack 0
  1638  00755A                     _testBlack:
  1639                           	opt callstack 28
  1640                           
  1641                           ;./functions.c: 686:     if ((sensorVals[0] < LLranges[3]) || (sensorVals[0] < LLranges[
      +                          2])){
  1642                           
  1643                           ;incstack = 0
  1644  00755A  505A               	movf	_LLranges+3,w,c
  1645  00755C  5C50               	subwf	_sensorVals,w,c
  1646  00755E  A0D8               	btfss	status,0,c
  1647  007560  D004               	goto	u1460
  1648  007562  5059               	movf	_LLranges+2,w,c
  1649  007564  5C50               	subwf	_sensorVals,w,c
  1650  007566  B0D8               	btfsc	status,0,c
  1651  007568  D002               	goto	l2711
  1652  00756A                     u1460:
  1653                           
  1654                           ;./functions.c: 687:         return 0x0;
  1655  00756A  0E00               	movlw	0
  1656  00756C  0012               	return	
  1657  00756E                     l2711:
  1658                           
  1659                           ;./functions.c: 689:     if ((sensorVals[1] < Lranges[3]) || (sensorVals[1] < Lranges[2]
      +                          )){
  1660  00756E  0100               	movlb	0	; () banked
  1661  007570  51F8               	movf	(_Lranges+3)& (0+255),w,b
  1662  007572  5C51               	subwf	_sensorVals+1,w,c
  1663  007574  A0D8               	btfss	status,0,c
  1664  007576  D7F9               	goto	u1460
  1665                           
  1666                           ; BSR set to: 0
  1667  007578  51F7               	movf	(_Lranges+2)& (0+255),w,b
  1668  00757A  5C51               	subwf	_sensorVals+1,w,c
  1669  00757C  A0D8               	btfss	status,0,c
  1670  00757E  D7F5               	goto	u1460
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;./functions.c: 692:     if ((sensorVals[2] < Mranges[3]) || (sensorVals[2] < Mranges[2]
      +                          )){
  1674  007580  51F3               	movf	(_Mranges+3)& (0+255),w,b
  1675  007582  5C52               	subwf	_sensorVals+2,w,c
  1676  007584  A0D8               	btfss	status,0,c
  1677  007586  D7F1               	goto	u1460
  1678                           
  1679                           ; BSR set to: 0
  1680  007588  51F2               	movf	(_Mranges+2)& (0+255),w,b
  1681  00758A  5C52               	subwf	_sensorVals+2,w,c
  1682  00758C  A0D8               	btfss	status,0,c
  1683  00758E  D7ED               	goto	u1460
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;./functions.c: 695:     if ((sensorVals[3] < Rranges[3]) || (sensorVals[3] < Rranges[2]
      +                          )){
  1687  007590  51EE               	movf	(_Rranges+3)& (0+255),w,b
  1688  007592  5C53               	subwf	_sensorVals+3,w,c
  1689  007594  A0D8               	btfss	status,0,c
  1690  007596  D7E9               	goto	u1460
  1691                           
  1692                           ; BSR set to: 0
  1693  007598  51ED               	movf	(_Rranges+2)& (0+255),w,b
  1694  00759A  5C53               	subwf	_sensorVals+3,w,c
  1695  00759C  A0D8               	btfss	status,0,c
  1696  00759E  D7E5               	goto	u1460
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;./functions.c: 698:     if ((sensorVals[4] < RRranges[3]) || (sensorVals[4] < RRranges[
      +                          2])){
  1700  0075A0  51E9               	movf	(_RRranges+3)& (0+255),w,b
  1701  0075A2  5C54               	subwf	_sensorVals+4,w,c
  1702  0075A4  A0D8               	btfss	status,0,c
  1703  0075A6  D7E1               	goto	u1460
  1704                           
  1705                           ; BSR set to: 0
  1706  0075A8  51E8               	movf	(_RRranges+2)& (0+255),w,b
  1707  0075AA  5C54               	subwf	_sensorVals+4,w,c
  1708  0075AC  A0D8               	btfss	status,0,c
  1709  0075AE  D7DD               	goto	u1460
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;./functions.c: 701:     return 0xAA;
  1713  0075B0  0EAA               	movlw	170
  1714  0075B2  0012               	return		;funcret
  1715  0075B4                     __end_of_testBlack:
  1716                           	opt callstack 0
  1717                           
  1718 ;; *************** function _stopMotors *****************
  1719 ;; Defined at:
  1720 ;;		line 781 in file "./functions.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_navigate
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text9
  1748  0071B4                     __ptext9:
  1749                           	opt callstack 0
  1750  0071B4                     _stopMotors:
  1751                           	opt callstack 28
  1752                           
  1753                           ;./functions.c: 782:     PORTCbits.RC0 = 0;
  1754                           
  1755                           ;incstack = 0
  1756  0071B4  9082               	bcf	3970,0,c	;volatile
  1757                           
  1758                           ;./functions.c: 783:     PORTCbits.RC1 = 0;
  1759  0071B6  9282               	bcf	3970,1,c	;volatile
  1760                           
  1761                           ;./functions.c: 784:     TRISCbits.TRISC2 = 1;
  1762  0071B8  8494               	bsf	3988,2,c	;volatile
  1763                           
  1764                           ;./functions.c: 785:     PORTEbits.RE0 = 0;
  1765  0071BA  9084               	bcf	3972,0,c	;volatile
  1766                           
  1767                           ;./functions.c: 786:     PORTEbits.RE1 = 0;
  1768  0071BC  9284               	bcf	3972,1,c	;volatile
  1769                           
  1770                           ;./functions.c: 787:     TRISEbits.TRISE2 = 1;
  1771  0071BE  8496               	bsf	3990,2,c	;volatile
  1772                           
  1773                           ;./functions.c: 788:     PORTA = 0;
  1774  0071C0  0E00               	movlw	0
  1775  0071C2  6E80               	movwf	3968,c	;volatile
  1776  0071C4  0012               	return		;funcret
  1777  0071C6                     __end_of_stopMotors:
  1778                           	opt callstack 0
  1779                           
  1780 ;; *************** function _setupPWMRight *****************
  1781 ;; Defined at:
  1782 ;;		line 40 in file "./functions.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1796 ;;      Params:         0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0
  1799 ;;      Totals:         0       0       0       0       0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_navigate
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text10
  1810  0072F0                     __ptext10:
  1811                           	opt callstack 0
  1812  0072F0                     _setupPWMRight:
  1813                           	opt callstack 28
  1814                           
  1815                           ;./functions.c: 42:     CCP5CON = 0;
  1816                           
  1817                           ;incstack = 0
  1818  0072F0  0E00               	movlw	0
  1819  0072F2  010F               	movlb	15	; () banked
  1820  0072F4  6F54               	movwf	84,b	;volatile
  1821                           
  1822                           ; BSR set to: 15
  1823                           ;./functions.c: 43:     PR4 = 255;
  1824  0072F6  6952               	setf	82,b	;volatile
  1825                           
  1826                           ; BSR set to: 15
  1827                           ;./functions.c: 44:     CCPR5L = 255;
  1828  0072F8  6955               	setf	85,b	;volatile
  1829                           
  1830                           ; BSR set to: 15
  1831                           ;./functions.c: 46:     TRISEbits.RE2 = 0;
  1832  0072FA  9496               	bcf	3990,2,c	;volatile
  1833                           
  1834                           ;./functions.c: 48:     CCPTMRS1 = 0b00000100;
  1835  0072FC  0E04               	movlw	4
  1836  0072FE  6F48               	movwf	72,b	;volatile
  1837                           
  1838                           ;./functions.c: 49:     CCP5CON = 0b00001100;
  1839  007300  0E0C               	movlw	12
  1840  007302  6F54               	movwf	84,b	;volatile
  1841                           
  1842                           ;./functions.c: 50:     T4CON = 0b00000000;
  1843  007304  0E00               	movlw	0
  1844  007306  6F51               	movwf	81,b	;volatile
  1845                           
  1846                           ;./functions.c: 51:     TMR4 = 0;
  1847  007308  0E00               	movlw	0
  1848  00730A  6F53               	movwf	83,b	;volatile
  1849                           
  1850                           ; BSR set to: 15
  1851                           ;./functions.c: 52:     PIE5bits.TMR4IE = 0;
  1852  00730C  907D               	bcf	3965,0,c	;volatile
  1853                           
  1854                           ; BSR set to: 15
  1855                           ;./functions.c: 53:     T4CONbits.TMR4ON = 1;
  1856  00730E  8551               	bsf	81,2,b	;volatile
  1857                           
  1858                           ; BSR set to: 15
  1859  007310  0012               	return		;funcret
  1860  007312                     __end_of_setupPWMRight:
  1861                           	opt callstack 0
  1862                           
  1863 ;; *************** function _setupPWMLeft *****************
  1864 ;; Defined at:
  1865 ;;		line 23 in file "./functions.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1879 ;;      Params:         0       0       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_navigate
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text11
  1893  0072CE                     __ptext11:
  1894                           	opt callstack 0
  1895  0072CE                     _setupPWMLeft:
  1896                           	opt callstack 28
  1897                           
  1898                           ;./functions.c: 25:     CCP1CON = 0;
  1899                           
  1900                           ; BSR set to: 15
  1901                           ;incstack = 0
  1902  0072CE  0E00               	movlw	0
  1903  0072D0  6EBD               	movwf	4029,c	;volatile
  1904                           
  1905                           ;./functions.c: 26:     PR2 = 255;
  1906  0072D2  68BB               	setf	4027,c	;volatile
  1907                           
  1908                           ;./functions.c: 27:     CCPR1L = 255;
  1909  0072D4  68BE               	setf	4030,c	;volatile
  1910                           
  1911                           ;./functions.c: 29:     TRISCbits.RC2 = 0;
  1912  0072D6  9494               	bcf	3988,2,c	;volatile
  1913                           
  1914                           ;./functions.c: 31:     CCPTMRS0 = 0;
  1915  0072D8  0E00               	movlw	0
  1916  0072DA  010F               	movlb	15	; () banked
  1917  0072DC  6F49               	movwf	73,b	;volatile
  1918                           
  1919                           ;./functions.c: 32:     CCP1CON = 0b00001100;
  1920  0072DE  0E0C               	movlw	12
  1921  0072E0  6EBD               	movwf	4029,c	;volatile
  1922                           
  1923                           ;./functions.c: 33:     T2CON = 0b00000000;
  1924  0072E2  0E00               	movlw	0
  1925  0072E4  6EBA               	movwf	4026,c	;volatile
  1926                           
  1927                           ;./functions.c: 34:     TMR2 = 0;
  1928  0072E6  0E00               	movlw	0
  1929  0072E8  6EBC               	movwf	4028,c	;volatile
  1930                           
  1931                           ; BSR set to: 15
  1932                           ;./functions.c: 35:     PIE1bits.TMR1IE = 0;
  1933  0072EA  909D               	bcf	3997,0,c	;volatile
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;./functions.c: 36:     T2CONbits.TMR2ON = 1;
  1937  0072EC  84BA               	bsf	4026,2,c	;volatile
  1938                           
  1939                           ; BSR set to: 15
  1940  0072EE  0012               	return		;funcret
  1941  0072F0                     __end_of_setupPWMLeft:
  1942                           	opt callstack 0
  1943                           
  1944 ;; *************** function _setupADC *****************
  1945 ;; Defined at:
  1946 ;;		line 119 in file "./functions.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:         0       0       0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_pyCal
  1970 ;;		_navigate
  1971 ;;		_init
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text12
  1976  0072AC                     __ptext12:
  1977                           	opt callstack 0
  1978  0072AC                     _setupADC:
  1979                           	opt callstack 29
  1980                           
  1981                           ;./functions.c: 121:     ADCON2bits.ADCS = 0b100;
  1982                           
  1983                           ; BSR set to: 15
  1984                           ;incstack = 0
  1985  0072AC  50C0               	movf	4032,w,c	;volatile
  1986  0072AE  0BF8               	andlw	-8
  1987  0072B0  0904               	iorlw	4
  1988  0072B2  6EC0               	movwf	4032,c	;volatile
  1989                           
  1990                           ;./functions.c: 122:     ADCON1 = 0;
  1991  0072B4  0E00               	movlw	0
  1992  0072B6  6EC1               	movwf	4033,c	;volatile
  1993                           
  1994                           ;./functions.c: 123:     ADCON0bits.CHS = 0b01100;
  1995  0072B8  50C2               	movf	4034,w,c	;volatile
  1996  0072BA  0B83               	andlw	-125
  1997  0072BC  0930               	iorlw	48
  1998  0072BE  6EC2               	movwf	4034,c	;volatile
  1999                           
  2000                           ;./functions.c: 124:     ADCON2bits.ADFM = 0;
  2001  0072C0  9EC0               	bcf	4032,7,c	;volatile
  2002                           
  2003                           ;./functions.c: 125:     ADCON2bits.ACQT = 0b101;
  2004  0072C2  50C0               	movf	4032,w,c	;volatile
  2005  0072C4  0BC7               	andlw	-57
  2006  0072C6  0928               	iorlw	40
  2007  0072C8  6EC0               	movwf	4032,c	;volatile
  2008                           
  2009                           ;./functions.c: 126:     ADCON0bits.ADON = 1;
  2010  0072CA  80C2               	bsf	4034,0,c	;volatile
  2011  0072CC  0012               	return		;funcret
  2012  0072CE                     __end_of_setupADC:
  2013                           	opt callstack 0
  2014                           
  2015 ;; *************** function _readAllSensors *****************
  2016 ;; Defined at:
  2017 ;;		line 813 in file "./functions.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  a               2   10[COMRAM] unsigned int 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2031 ;;      Params:         0       0       0       0       0       0       0
  2032 ;;      Locals:         2       0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0
  2034 ;;      Totals:         2       0       0       0       0       0       0
  2035 ;;Total ram usage:        2 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    2
  2038 ;; This function calls:
  2039 ;;		_aveSensor
  2040 ;; This function is called by:
  2041 ;;		_navigate
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text13
  2046  0073AA                     __ptext13:
  2047                           	opt callstack 0
  2048  0073AA                     _readAllSensors:
  2049                           	opt callstack 26
  2050                           
  2051                           ;./functions.c: 814:     for (unsigned a = 0; a < 5; a++){
  2052                           
  2053                           ;incstack = 0
  2054  0073AA  0E00               	movlw	0
  2055  0073AC  6E0C               	movwf	readAllSensors@a+1,c
  2056  0073AE  0E00               	movlw	0
  2057  0073B0  6E0B               	movwf	readAllSensors@a,c
  2058  0073B2                     l2607:
  2059                           
  2060                           ;./functions.c: 815:         sensorVals[a] = aveSensor(sensorChannels[a]);
  2061  0073B2  0E50               	movlw	low _sensorVals
  2062  0073B4  240B               	addwf	readAllSensors@a,w,c
  2063  0073B6  6ED9               	movwf	fsr2l,c
  2064  0073B8  0E00               	movlw	high _sensorVals
  2065  0073BA  200C               	addwfc	readAllSensors@a+1,w,c
  2066  0073BC  6EDA               	movwf	fsr2h,c
  2067  0073BE  0ED6               	movlw	low _sensorChannels
  2068  0073C0  240B               	addwf	readAllSensors@a,w,c
  2069  0073C2  6EE1               	movwf	fsr1l,c
  2070  0073C4  0E00               	movlw	high _sensorChannels
  2071  0073C6  200C               	addwfc	readAllSensors@a+1,w,c
  2072  0073C8  6EE2               	movwf	fsr1h,c
  2073  0073CA  50E7               	movf	indf1,w,c
  2074  0073CC  EC12  F03A         	call	_aveSensor
  2075  0073D0  6EDF               	movwf	indf2,c
  2076                           
  2077                           ;./functions.c: 816:     }
  2078  0073D2  4A0B               	infsnz	readAllSensors@a,f,c
  2079  0073D4  2A0C               	incf	readAllSensors@a+1,f,c
  2080  0073D6  500C               	movf	readAllSensors@a+1,w,c
  2081  0073D8  E105               	bnz	u1270
  2082  0073DA  0E05               	movlw	5
  2083  0073DC  5C0B               	subwf	readAllSensors@a,w,c
  2084  0073DE  B0D8               	btfsc	status,0,c
  2085  0073E0  0012               	return	
  2086  0073E2  D7E7               	goto	l2607
  2087  0073E4                     u1270:
  2088  0073E4  0012               	return		;funcret
  2089  0073E6                     __end_of_readAllSensors:
  2090                           	opt callstack 0
  2091                           
  2092 ;; *************** function _displayRaceColor *****************
  2093 ;; Defined at:
  2094 ;;		line 793 in file "./functions.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2108 ;;      Params:         0       0       0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0
  2111 ;;      Totals:         0       0       0       0       0       0       0
  2112 ;;Total ram usage:        0 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_navigate
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text14
  2122  0073E6                     __ptext14:
  2123                           	opt callstack 0
  2124  0073E6                     _displayRaceColor:
  2125                           	opt callstack 28
  2126                           
  2127                           ;./functions.c: 794:     if (raceColor[0]){
  2128                           
  2129                           ;incstack = 0
  2130  0073E6  0100               	movlb	0	; () banked
  2131  0073E8  51C6               	movf	_raceColor& (0+255),w,b
  2132  0073EA  B4D8               	btfsc	status,2,c
  2133  0073EC  D003               	goto	l2583
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;./functions.c: 795:         PORTD = 0b10111111;
  2137  0073EE  0EBF               	movlw	191
  2138  0073F0  6E83               	movwf	3971,c	;volatile
  2139                           
  2140                           ;./functions.c: 796:     }
  2141  0073F2  0012               	return	
  2142  0073F4                     l2583:
  2143                           
  2144                           ; BSR set to: 0
  2145  0073F4  51C7               	movf	(_raceColor+1)& (0+255),w,b
  2146  0073F6  B4D8               	btfsc	status,2,c
  2147  0073F8  D003               	goto	l2587
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;./functions.c: 798:         PORTD = 0b10000010;
  2151  0073FA  0E82               	movlw	130
  2152  0073FC  6E83               	movwf	3971,c	;volatile
  2153                           
  2154                           ;./functions.c: 799:     }
  2155  0073FE  0012               	return	
  2156  007400                     l2587:
  2157                           
  2158                           ; BSR set to: 0
  2159  007400  51C8               	movf	(_raceColor+2)& (0+255),w,b
  2160  007402  B4D8               	btfsc	status,2,c
  2161  007404  D003               	goto	l2591
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;./functions.c: 801:         PORTD = 0b10001000;
  2165  007406  0E88               	movlw	136
  2166  007408  6E83               	movwf	3971,c	;volatile
  2167                           
  2168                           ;./functions.c: 802:     }
  2169  00740A  0012               	return	
  2170  00740C                     l2591:
  2171                           
  2172                           ; BSR set to: 0
  2173  00740C  51C9               	movf	(_raceColor+3)& (0+255),w,b
  2174  00740E  B4D8               	btfsc	status,2,c
  2175  007410  D003               	goto	l2595
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;./functions.c: 804:         PORTD = 0b10000000;
  2179  007412  0E80               	movlw	128
  2180  007414  6E83               	movwf	3971,c	;volatile
  2181                           
  2182                           ;./functions.c: 805:     }
  2183  007416  0012               	return	
  2184  007418                     l2595:
  2185                           
  2186                           ; BSR set to: 0
  2187  007418  51CA               	movf	(_raceColor+4)& (0+255),w,b
  2188  00741A  B4D8               	btfsc	status,2,c
  2189  00741C  0012               	return	
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;./functions.c: 807:         PORTD = 0b11001000;
  2193  00741E  0EC8               	movlw	200
  2194  007420  6E83               	movwf	3971,c	;volatile
  2195  007422  0012               	return	
  2196  007424                     __end_of_displayRaceColor:
  2197                           	opt callstack 0
  2198                           
  2199 ;; *************** function _displayColorDetected *****************
  2200 ;; Defined at:
  2201 ;;		line 728 in file "./functions.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  sensor          1    wreg     unsigned char 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  sensor          1    2[COMRAM] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2215 ;;      Params:         0       0       0       0       0       0       0
  2216 ;;      Locals:         1       0       0       0       0       0       0
  2217 ;;      Temps:          2       0       0       0       0       0       0
  2218 ;;      Totals:         3       0       0       0       0       0       0
  2219 ;;Total ram usage:        3 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_navigate
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text15
  2229  007788                     __ptext15:
  2230                           	opt callstack 0
  2231  007788                     _displayColorDetected:
  2232                           	opt callstack 28
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;incstack = 0
  2236                           ;displayColorDetected@sensor stored from wreg
  2237  007788  6E03               	movwf	displayColorDetected@sensor,c
  2238                           
  2239                           ;./functions.c: 729:     switch (colorsDetected[sensor])
  2240  00778A  D024               	goto	l2645
  2241  00778C                     l425:
  2242                           
  2243                           ;./functions.c: 732:         PORTAbits.RA0 = 1;
  2244  00778C  8080               	bsf	3968,0,c	;volatile
  2245                           
  2246                           ;./functions.c: 733:         PORTAbits.RA1 = 0;
  2247  00778E  9280               	bcf	3968,1,c	;volatile
  2248                           
  2249                           ;./functions.c: 734:         PORTAbits.RA2 = 0;
  2250  007790  9480               	bcf	3968,2,c	;volatile
  2251                           
  2252                           ;./functions.c: 735:         PORTAbits.RA3 = 0;
  2253  007792  9680               	bcf	3968,3,c	;volatile
  2254                           
  2255                           ;./functions.c: 736:         PORTAbits.RA4 = 0;
  2256  007794  9880               	bcf	3968,4,c	;volatile
  2257                           
  2258                           ;./functions.c: 737:         break;
  2259  007796  0012               	return	
  2260  007798                     l427:
  2261                           
  2262                           ;./functions.c: 739:         PORTAbits.RA0 = 0;
  2263  007798  9080               	bcf	3968,0,c	;volatile
  2264                           
  2265                           ;./functions.c: 740:         PORTAbits.RA1 = 1;
  2266  00779A  8280               	bsf	3968,1,c	;volatile
  2267                           
  2268                           ;./functions.c: 741:         PORTAbits.RA2 = 0;
  2269  00779C  9480               	bcf	3968,2,c	;volatile
  2270                           
  2271                           ;./functions.c: 742:         PORTAbits.RA3 = 0;
  2272  00779E  9680               	bcf	3968,3,c	;volatile
  2273                           
  2274                           ;./functions.c: 743:         PORTAbits.RA4 = 0;
  2275  0077A0  9880               	bcf	3968,4,c	;volatile
  2276                           
  2277                           ;./functions.c: 744:         break;
  2278  0077A2  0012               	return	
  2279  0077A4                     l428:
  2280                           
  2281                           ;./functions.c: 746:         PORTAbits.RA0 = 0;
  2282  0077A4  9080               	bcf	3968,0,c	;volatile
  2283                           
  2284                           ;./functions.c: 747:         PORTAbits.RA1 = 0;
  2285  0077A6  9280               	bcf	3968,1,c	;volatile
  2286                           
  2287                           ;./functions.c: 748:         PORTAbits.RA2 = 1;
  2288  0077A8  8480               	bsf	3968,2,c	;volatile
  2289                           
  2290                           ;./functions.c: 749:         PORTAbits.RA3 = 0;
  2291  0077AA  9680               	bcf	3968,3,c	;volatile
  2292                           
  2293                           ;./functions.c: 750:         PORTAbits.RA4 = 0;
  2294  0077AC  9880               	bcf	3968,4,c	;volatile
  2295                           
  2296                           ;./functions.c: 751:         break;
  2297  0077AE  0012               	return	
  2298  0077B0                     l429:
  2299                           
  2300                           ;./functions.c: 753:         PORTAbits.RA0 = 0;
  2301  0077B0  9080               	bcf	3968,0,c	;volatile
  2302                           
  2303                           ;./functions.c: 754:         PORTAbits.RA1 = 0;
  2304  0077B2  9280               	bcf	3968,1,c	;volatile
  2305                           
  2306                           ;./functions.c: 755:         PORTAbits.RA2 = 0;
  2307  0077B4  9480               	bcf	3968,2,c	;volatile
  2308                           
  2309                           ;./functions.c: 756:         PORTAbits.RA3 = 1;
  2310  0077B6  8680               	bsf	3968,3,c	;volatile
  2311                           
  2312                           ;./functions.c: 757:         PORTAbits.RA4 = 0;
  2313  0077B8  9880               	bcf	3968,4,c	;volatile
  2314                           
  2315                           ;./functions.c: 758:         break;
  2316  0077BA  0012               	return	
  2317  0077BC                     l430:
  2318                           
  2319                           ;./functions.c: 760:         PORTAbits.RA0 = 0;
  2320  0077BC  9080               	bcf	3968,0,c	;volatile
  2321                           
  2322                           ;./functions.c: 761:         PORTAbits.RA1 = 0;
  2323  0077BE  9280               	bcf	3968,1,c	;volatile
  2324                           
  2325                           ;./functions.c: 762:         PORTAbits.RA2 = 0;
  2326  0077C0  9480               	bcf	3968,2,c	;volatile
  2327                           
  2328                           ;./functions.c: 763:         PORTAbits.RA3 = 0;
  2329  0077C2  9680               	bcf	3968,3,c	;volatile
  2330                           
  2331                           ;./functions.c: 764:         PORTAbits.RA4 = 1;
  2332  0077C4  8880               	bsf	3968,4,c	;volatile
  2333                           
  2334                           ;./functions.c: 765:         break;
  2335  0077C6  0012               	return	
  2336  0077C8                     l431:
  2337                           
  2338                           ;./functions.c: 768:         PORTAbits.RA0 = 1;
  2339  0077C8  8080               	bsf	3968,0,c	;volatile
  2340                           
  2341                           ;./functions.c: 769:         PORTAbits.RA1 = 1;
  2342  0077CA  8280               	bsf	3968,1,c	;volatile
  2343                           
  2344                           ;./functions.c: 770:         PORTAbits.RA2 = 1;
  2345  0077CC  8480               	bsf	3968,2,c	;volatile
  2346                           
  2347                           ;./functions.c: 771:         PORTAbits.RA3 = 1;
  2348  0077CE  8680               	bsf	3968,3,c	;volatile
  2349                           
  2350                           ;./functions.c: 772:         PORTAbits.RA4 = 1;
  2351  0077D0  8880               	bsf	3968,4,c	;volatile
  2352                           
  2353                           ;./functions.c: 773:         break;
  2354  0077D2  0012               	return	
  2355  0077D4                     l2645:
  2356  0077D4  0EFA               	movlw	low _colorsDetected
  2357  0077D6  2403               	addwf	displayColorDetected@sensor,w,c
  2358  0077D8  6ED9               	movwf	fsr2l,c
  2359  0077DA  6ADA               	clrf	fsr2h,c
  2360  0077DC  0E00               	movlw	high _colorsDetected
  2361  0077DE  22DA               	addwfc	fsr2h,f,c
  2362  0077E0  50DF               	movf	indf2,w,c
  2363  0077E2  6E01               	movwf	??_displayColorDetected& (0+255),c
  2364  0077E4  6A02               	clrf	(??_displayColorDetected+1)& (0+255),c
  2365                           
  2366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2367                           ; Switch size 1, requested type "simple"
  2368                           ; Number of cases is 1, Range of values is 0 to 0
  2369                           ; switch strategies available:
  2370                           ; Name         Instructions Cycles
  2371                           ; simple_byte            4     3 (average)
  2372                           ;	Chosen strategy is simple_byte
  2373  0077E6  5002               	movf	??_displayColorDetected+1,w,c
  2374  0077E8  0A00               	xorlw	0	; case 0
  2375  0077EA  A4D8               	btfss	status,2,c
  2376  0077EC  D7ED               	goto	l431
  2377                           
  2378                           ; Switch size 1, requested type "simple"
  2379                           ; Number of cases is 5, Range of values is 66 to 110
  2380                           ; switch strategies available:
  2381                           ; Name         Instructions Cycles
  2382                           ; simple_byte           16     9 (average)
  2383                           ;	Chosen strategy is simple_byte
  2384  0077EE  5001               	movf	??_displayColorDetected,w,c
  2385  0077F0  0A42               	xorlw	66	; case 66
  2386  0077F2  B4D8               	btfsc	status,2,c
  2387  0077F4  D7DD               	goto	l429
  2388  0077F6  0A05               	xorlw	5	; case 71
  2389  0077F8  B4D8               	btfsc	status,2,c
  2390  0077FA  D7CE               	goto	l427
  2391  0077FC  0A15               	xorlw	21	; case 82
  2392  0077FE  B4D8               	btfsc	status,2,c
  2393  007800  D7D1               	goto	l428
  2394  007802  0A05               	xorlw	5	; case 87
  2395  007804  B4D8               	btfsc	status,2,c
  2396  007806  D7C2               	goto	l425
  2397  007808  0A39               	xorlw	57	; case 110
  2398  00780A  B4D8               	btfsc	status,2,c
  2399  00780C  D7D7               	goto	l430
  2400  00780E  D7DC               	goto	l431
  2401  007810                     __end_of_displayColorDetected:
  2402                           	opt callstack 0
  2403                           
  2404 ;; *************** function _determineDirection *****************
  2405 ;; Defined at:
  2406 ;;		line 636 in file "./functions.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2420 ;;      Params:         0       0       0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    2
  2427 ;; This function calls:
  2428 ;;		_hardLeft
  2429 ;;		_hardRight
  2430 ;;		_left
  2431 ;;		_right
  2432 ;;		_searchMode
  2433 ;;		_straight
  2434 ;; This function is called by:
  2435 ;;		_navigate
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text16
  2440  007704                     __ptext16:
  2441                           	opt callstack 0
  2442  007704                     _determineDirection:
  2443                           	opt callstack 26
  2444                           
  2445                           ;./functions.c: 639:     static unsigned char rc = 0;;./functions.c: 640:     if (rc == 
      +                          0){
  2446                           
  2447                           ;incstack = 0
  2448  007704  505C               	movf	determineDirection@rc,w,c
  2449  007706  A4D8               	btfss	status,2,c
  2450  007708  D018               	goto	l372
  2451                           
  2452                           ;./functions.c: 641:         if (raceColor[0])
  2453  00770A  0100               	movlb	0	; () banked
  2454  00770C  51C6               	movf	_raceColor& (0+255),w,b
  2455  00770E  B4D8               	btfsc	status,2,c
  2456  007710  D002               	goto	l2657
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;./functions.c: 642:         {;./functions.c: 643:             rc = 'W';
  2460  007712  0E57               	movlw	87
  2461  007714  D011               	goto	L3
  2462  007716                     l2657:
  2463                           
  2464                           ; BSR set to: 0
  2465  007716  51C7               	movf	(_raceColor+1)& (0+255),w,b
  2466  007718  B4D8               	btfsc	status,2,c
  2467  00771A  D002               	goto	l2661
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;./functions.c: 646:         {;./functions.c: 647:             rc = 'G';
  2471  00771C  0E47               	movlw	71
  2472  00771E  D00C               	goto	L3
  2473  007720                     l2661:
  2474                           
  2475                           ; BSR set to: 0
  2476  007720  51C8               	movf	(_raceColor+2)& (0+255),w,b
  2477  007722  B4D8               	btfsc	status,2,c
  2478  007724  D002               	goto	l2665
  2479  007726                     u1370:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;./functions.c: 650:         {;./functions.c: 651:             rc = 'B';
  2483  007726  0E42               	movlw	66
  2484  007728  D007               	goto	L3
  2485  00772A                     l2665:
  2486                           
  2487                           ; BSR set to: 0
  2488  00772A  51C9               	movf	(_raceColor+3)& (0+255),w,b
  2489  00772C  A4D8               	btfss	status,2,c
  2490  00772E  D7FB               	goto	u1370
  2491                           
  2492                           ; BSR set to: 0
  2493  007730  51CA               	movf	(_raceColor+4)& (0+255),w,b
  2494  007732  B4D8               	btfsc	status,2,c
  2495  007734  D002               	goto	l372
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;./functions.c: 658:         {;./functions.c: 659:             rc = 'n';
  2499  007736  0E6E               	movlw	110
  2500  007738                     L3:
  2501  007738  6E5C               	movwf	determineDirection@rc,c
  2502  00773A                     l372:
  2503                           
  2504                           ;./functions.c: 663:     if (colorsDetected[2] == rc){
  2505                           
  2506                           ; BSR set to: 0
  2507  00773A  505C               	movf	determineDirection@rc,w,c
  2508  00773C  0100               	movlb	0	; () banked
  2509  00773E  19FC               	xorwf	(_colorsDetected+2)& (0+255),w,b
  2510  007740  A4D8               	btfss	status,2,c
  2511  007742  D003               	goto	l2677
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;./functions.c: 664:         straight();
  2515  007744  EC39  F039         	call	_straight	;wreg free
  2516                           
  2517                           ;./functions.c: 665:     }
  2518  007748  0012               	return	
  2519  00774A                     l2677:
  2520                           
  2521                           ; BSR set to: 0
  2522  00774A  505C               	movf	determineDirection@rc,w,c
  2523  00774C  19FB               	xorwf	(_colorsDetected+1)& (0+255),w,b
  2524  00774E  A4D8               	btfss	status,2,c
  2525  007750  D003               	goto	l2681
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;./functions.c: 667:         left();
  2529  007752  EC1F  F039         	call	_left	;wreg free
  2530                           
  2531                           ;./functions.c: 668:     }
  2532  007756  0012               	return	
  2533  007758                     l2681:
  2534                           
  2535                           ; BSR set to: 0
  2536  007758  505C               	movf	determineDirection@rc,w,c
  2537  00775A  19FD               	xorwf	(_colorsDetected+3)& (0+255),w,b
  2538  00775C  A4D8               	btfss	status,2,c
  2539  00775E  D003               	goto	l2685
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;./functions.c: 670:         right();
  2543  007760  EC2C  F039         	call	_right	;wreg free
  2544                           
  2545                           ;./functions.c: 671:     }
  2546  007764  0012               	return	
  2547  007766                     l2685:
  2548                           
  2549                           ; BSR set to: 0
  2550  007766  505C               	movf	determineDirection@rc,w,c
  2551  007768  19FA               	xorwf	_colorsDetected& (0+255),w,b
  2552  00776A  A4D8               	btfss	status,2,c
  2553  00776C  D003               	goto	l2689
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;./functions.c: 673:         hardLeft();
  2557  00776E  EC05  F039         	call	_hardLeft	;wreg free
  2558                           
  2559                           ;./functions.c: 674:     }
  2560  007772  0012               	return	
  2561  007774                     l2689:
  2562                           
  2563                           ; BSR set to: 0
  2564  007774  505C               	movf	determineDirection@rc,w,c
  2565  007776  19FE               	xorwf	(_colorsDetected+4)& (0+255),w,b
  2566  007778  A4D8               	btfss	status,2,c
  2567  00777A  D003               	goto	l2693
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;./functions.c: 676:         hardRight();
  2571  00777C  EC12  F039         	call	_hardRight	;wreg free
  2572                           
  2573                           ;./functions.c: 677:     }
  2574  007780  0012               	return	
  2575  007782                     l2693:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;./functions.c: 679:         searchMode();
  2579  007782  ECD1  F038         	call	_searchMode	;wreg free
  2580  007786  0012               	return		;funcret
  2581  007788                     __end_of_determineDirection:
  2582                           	opt callstack 0
  2583                           
  2584 ;; *************** function _straight *****************
  2585 ;; Defined at:
  2586 ;;		line 510 in file "./functions.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2600 ;;      Params:         0       0       0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_determineDirection
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text17
  2614  007272                     __ptext17:
  2615                           	opt callstack 0
  2616  007272                     _straight:
  2617                           	opt callstack 27
  2618                           
  2619                           ;./functions.c: 511:     PORTAbits.RA5 = 1;
  2620                           
  2621                           ;incstack = 0
  2622  007272  8A80               	bsf	3968,5,c	;volatile
  2623                           
  2624                           ;./functions.c: 512:     PORTAbits.RA6 = 0;
  2625  007274  9C80               	bcf	3968,6,c	;volatile
  2626                           
  2627                           ;./functions.c: 513:     PORTAbits.RA7 = 0;
  2628  007276  9E80               	bcf	3968,7,c	;volatile
  2629                           
  2630                           ;./functions.c: 515:     PORTCbits.RC0 = 0;
  2631  007278  9082               	bcf	3970,0,c	;volatile
  2632                           
  2633                           ;./functions.c: 516:     PORTCbits.RC1 = 1;
  2634  00727A  8282               	bsf	3970,1,c	;volatile
  2635                           
  2636                           ;./functions.c: 518:     PORTEbits.RE0 = 0;
  2637  00727C  9084               	bcf	3972,0,c	;volatile
  2638                           
  2639                           ;./functions.c: 519:     PORTEbits.RE1 = 1;
  2640  00727E  8284               	bsf	3972,1,c	;volatile
  2641                           
  2642                           ;./functions.c: 521:     CCPR1L = 250;
  2643  007280  0EFA               	movlw	250
  2644  007282  6EBE               	movwf	4030,c	;volatile
  2645                           
  2646                           ;./functions.c: 522:     CCPR5L = 250;
  2647  007284  0EFA               	movlw	250
  2648  007286  010F               	movlb	15	; () banked
  2649  007288  6F55               	movwf	85,b	;volatile
  2650                           
  2651                           ; BSR set to: 15
  2652  00728A  0012               	return		;funcret
  2653  00728C                     __end_of_straight:
  2654                           	opt callstack 0
  2655                           
  2656 ;; *************** function _searchMode *****************
  2657 ;; Defined at:
  2658 ;;		line 495 in file "./functions.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2672 ;;      Params:         0       0       0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    1
  2679 ;; This function calls:
  2680 ;;		_timer1setup
  2681 ;; This function is called by:
  2682 ;;		_determineDirection
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text18
  2687  0071A2                     __ptext18:
  2688                           	opt callstack 0
  2689  0071A2                     _searchMode:
  2690                           	opt callstack 26
  2691                           
  2692                           ;./functions.c: 496:     timer1setup();
  2693                           
  2694                           ; BSR set to: 15
  2695                           ;incstack = 0
  2696  0071A2  ECED  F038         	call	_timer1setup	;wreg free
  2697                           
  2698                           ;./functions.c: 497:     while(!PIR1bits.TMR1IF){
  2699  0071A6  D003               	goto	l336
  2700  0071A8                     l337:
  2701                           
  2702                           ;./functions.c: 498:         PORTAbits.RA5 = 1;
  2703  0071A8  8A80               	bsf	3968,5,c	;volatile
  2704                           
  2705                           ;./functions.c: 499:         PORTAbits.RA6 = 1;
  2706  0071AA  8C80               	bsf	3968,6,c	;volatile
  2707                           
  2708                           ;./functions.c: 500:         PORTAbits.RA7 = 1;
  2709  0071AC  8E80               	bsf	3968,7,c	;volatile
  2710  0071AE                     l336:
  2711                           
  2712                           ;./functions.c: 497:     while(!PIR1bits.TMR1IF){
  2713  0071AE  B09E               	btfsc	3998,0,c	;volatile
  2714  0071B0  0012               	return	
  2715  0071B2  D7FA               	goto	l337
  2716  0071B4                     __end_of_searchMode:
  2717                           	opt callstack 0
  2718                           
  2719 ;; *************** function _timer1setup *****************
  2720 ;; Defined at:
  2721 ;;		line 994 in file "./functions.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2735 ;;      Params:         0       0       0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0
  2738 ;;      Totals:         0       0       0       0       0       0       0
  2739 ;;Total ram usage:        0 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_searchMode
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text19
  2749  0071DA                     __ptext19:
  2750                           	opt callstack 0
  2751  0071DA                     _timer1setup:
  2752                           	opt callstack 26
  2753                           
  2754                           ;./functions.c: 995:     T1CON = 0b00110010;
  2755                           
  2756                           ;incstack = 0
  2757  0071DA  0E32               	movlw	50
  2758  0071DC  6ECD               	movwf	4045,c	;volatile
  2759                           
  2760                           ;./functions.c: 996:     INTCONbits.PEIE = 1;
  2761  0071DE  8CF2               	bsf	4082,6,c	;volatile
  2762                           
  2763                           ;./functions.c: 997:     INTCONbits.GIE = 1;
  2764  0071E0  8EF2               	bsf	4082,7,c	;volatile
  2765                           
  2766                           ;./functions.c: 998:     PIE1bits.TMR1IE = 1;
  2767  0071E2  809D               	bsf	3997,0,c	;volatile
  2768                           
  2769                           ;./functions.c: 999:     PIR1bits.TMR1IF = 0;
  2770  0071E4  909E               	bcf	3998,0,c	;volatile
  2771                           
  2772                           ;./functions.c: 1000:     TMR1 = 0;
  2773  0071E6  0E00               	movlw	0
  2774  0071E8  6ECF               	movwf	4047,c	;volatile
  2775  0071EA  0E00               	movlw	0
  2776  0071EC  6ECE               	movwf	4046,c	;volatile
  2777                           
  2778                           ;./functions.c: 1001:     T1CONbits.TMR1ON = 1;
  2779  0071EE  80CD               	bsf	4045,0,c	;volatile
  2780  0071F0  0012               	return		;funcret
  2781  0071F2                     __end_of_timer1setup:
  2782                           	opt callstack 0
  2783                           
  2784 ;; *************** function _right *****************
  2785 ;; Defined at:
  2786 ;;		line 557 in file "./functions.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2800 ;;      Params:         0       0       0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_determineDirection
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text20
  2814  007258                     __ptext20:
  2815                           	opt callstack 0
  2816  007258                     _right:
  2817                           	opt callstack 27
  2818                           
  2819                           ;./functions.c: 558:     PORTAbits.RA5 = 0;
  2820                           
  2821                           ;incstack = 0
  2822  007258  9A80               	bcf	3968,5,c	;volatile
  2823                           
  2824                           ;./functions.c: 559:     PORTAbits.RA6 = 1;
  2825  00725A  8C80               	bsf	3968,6,c	;volatile
  2826                           
  2827                           ;./functions.c: 560:     PORTAbits.RA7 = 0;
  2828  00725C  9E80               	bcf	3968,7,c	;volatile
  2829                           
  2830                           ;./functions.c: 562:     PORTCbits.RC0 = 0;
  2831  00725E  9082               	bcf	3970,0,c	;volatile
  2832                           
  2833                           ;./functions.c: 563:     PORTCbits.RC1 = 1;
  2834  007260  8282               	bsf	3970,1,c	;volatile
  2835                           
  2836                           ;./functions.c: 565:     PORTEbits.RE0 = 0;
  2837  007262  9084               	bcf	3972,0,c	;volatile
  2838                           
  2839                           ;./functions.c: 566:     PORTEbits.RE1 = 1;
  2840  007264  8284               	bsf	3972,1,c	;volatile
  2841                           
  2842                           ;./functions.c: 568:     CCPR1L = 200;
  2843  007266  0EC8               	movlw	200
  2844  007268  6EBE               	movwf	4030,c	;volatile
  2845                           
  2846                           ;./functions.c: 569:     CCPR5L = 100;
  2847  00726A  0E64               	movlw	100
  2848  00726C  010F               	movlb	15	; () banked
  2849  00726E  6F55               	movwf	85,b	;volatile
  2850                           
  2851                           ; BSR set to: 15
  2852  007270  0012               	return		;funcret
  2853  007272                     __end_of_right:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _left *****************
  2857 ;; Defined at:
  2858 ;;		line 525 in file "./functions.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2872 ;;      Params:         0       0       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_determineDirection
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text21
  2886  00723E                     __ptext21:
  2887                           	opt callstack 0
  2888  00723E                     _left:
  2889                           	opt callstack 27
  2890                           
  2891                           ;./functions.c: 526:     PORTAbits.RA5 = 0;
  2892                           
  2893                           ; BSR set to: 15
  2894                           ;incstack = 0
  2895  00723E  9A80               	bcf	3968,5,c	;volatile
  2896                           
  2897                           ;./functions.c: 527:     PORTAbits.RA6 = 0;
  2898  007240  9C80               	bcf	3968,6,c	;volatile
  2899                           
  2900                           ;./functions.c: 528:     PORTAbits.RA7 = 1;
  2901  007242  8E80               	bsf	3968,7,c	;volatile
  2902                           
  2903                           ;./functions.c: 530:     PORTCbits.RC0 = 0;
  2904  007244  9082               	bcf	3970,0,c	;volatile
  2905                           
  2906                           ;./functions.c: 531:     PORTCbits.RC1 = 1;
  2907  007246  8282               	bsf	3970,1,c	;volatile
  2908                           
  2909                           ;./functions.c: 533:     PORTEbits.RE0 = 0;
  2910  007248  9084               	bcf	3972,0,c	;volatile
  2911                           
  2912                           ;./functions.c: 534:     PORTEbits.RE1 = 1;
  2913  00724A  8284               	bsf	3972,1,c	;volatile
  2914                           
  2915                           ;./functions.c: 536:     CCPR1L = 100;
  2916  00724C  0E64               	movlw	100
  2917  00724E  6EBE               	movwf	4030,c	;volatile
  2918                           
  2919                           ;./functions.c: 537:     CCPR5L = 200;
  2920  007250  0EC8               	movlw	200
  2921  007252  010F               	movlb	15	; () banked
  2922  007254  6F55               	movwf	85,b	;volatile
  2923                           
  2924                           ; BSR set to: 15
  2925  007256  0012               	return		;funcret
  2926  007258                     __end_of_left:
  2927                           	opt callstack 0
  2928                           
  2929 ;; *************** function _hardRight *****************
  2930 ;; Defined at:
  2931 ;;		line 573 in file "./functions.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2945 ;;      Params:         0       0       0       0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0
  2948 ;;      Totals:         0       0       0       0       0       0       0
  2949 ;;Total ram usage:        0 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_determineDirection
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text22
  2959  007224                     __ptext22:
  2960                           	opt callstack 0
  2961  007224                     _hardRight:
  2962                           	opt callstack 27
  2963                           
  2964                           ;./functions.c: 574:     PORTAbits.RA5 = 0;
  2965                           
  2966                           ; BSR set to: 15
  2967                           ;incstack = 0
  2968  007224  9A80               	bcf	3968,5,c	;volatile
  2969                           
  2970                           ;./functions.c: 575:     PORTAbits.RA6 = 1;
  2971  007226  8C80               	bsf	3968,6,c	;volatile
  2972                           
  2973                           ;./functions.c: 576:     PORTAbits.RA7 = 0;
  2974  007228  9E80               	bcf	3968,7,c	;volatile
  2975                           
  2976                           ;./functions.c: 578:     PORTCbits.RC0 = 0;
  2977  00722A  9082               	bcf	3970,0,c	;volatile
  2978                           
  2979                           ;./functions.c: 579:     PORTCbits.RC1 = 1;
  2980  00722C  8282               	bsf	3970,1,c	;volatile
  2981                           
  2982                           ;./functions.c: 581:     PORTEbits.RE0 = 0;
  2983  00722E  9084               	bcf	3972,0,c	;volatile
  2984                           
  2985                           ;./functions.c: 582:     PORTEbits.RE1 = 1;
  2986  007230  8284               	bsf	3972,1,c	;volatile
  2987                           
  2988                           ;./functions.c: 584:     CCPR1L = 100;
  2989  007232  0E64               	movlw	100
  2990  007234  6EBE               	movwf	4030,c	;volatile
  2991                           
  2992                           ;./functions.c: 585:     CCPR5L = 0;
  2993  007236  0E00               	movlw	0
  2994  007238  010F               	movlb	15	; () banked
  2995  00723A  6F55               	movwf	85,b	;volatile
  2996                           
  2997                           ; BSR set to: 15
  2998  00723C  0012               	return		;funcret
  2999  00723E                     __end_of_hardRight:
  3000                           	opt callstack 0
  3001                           
  3002 ;; *************** function _hardLeft *****************
  3003 ;; Defined at:
  3004 ;;		line 541 in file "./functions.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3018 ;;      Params:         0       0       0       0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0
  3021 ;;      Totals:         0       0       0       0       0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_determineDirection
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text23
  3032  00720A                     __ptext23:
  3033                           	opt callstack 0
  3034  00720A                     _hardLeft:
  3035                           	opt callstack 27
  3036                           
  3037                           ;./functions.c: 542:     PORTAbits.RA5 = 0;
  3038                           
  3039                           ; BSR set to: 15
  3040                           ;incstack = 0
  3041  00720A  9A80               	bcf	3968,5,c	;volatile
  3042                           
  3043                           ;./functions.c: 543:     PORTAbits.RA6 = 0;
  3044  00720C  9C80               	bcf	3968,6,c	;volatile
  3045                           
  3046                           ;./functions.c: 544:     PORTAbits.RA7 = 1;
  3047  00720E  8E80               	bsf	3968,7,c	;volatile
  3048                           
  3049                           ;./functions.c: 546:     PORTCbits.RC0 = 1;
  3050  007210  8082               	bsf	3970,0,c	;volatile
  3051                           
  3052                           ;./functions.c: 547:     PORTCbits.RC1 = 0;
  3053  007212  9282               	bcf	3970,1,c	;volatile
  3054                           
  3055                           ;./functions.c: 549:     PORTEbits.RE0 = 0;
  3056  007214  9084               	bcf	3972,0,c	;volatile
  3057                           
  3058                           ;./functions.c: 550:     PORTEbits.RE1 = 1;
  3059  007216  8284               	bsf	3972,1,c	;volatile
  3060                           
  3061                           ;./functions.c: 552:     CCPR1L = 20;
  3062  007218  0E14               	movlw	20
  3063  00721A  6EBE               	movwf	4030,c	;volatile
  3064                           
  3065                           ;./functions.c: 553:     CCPR5L = 100;
  3066  00721C  0E64               	movlw	100
  3067  00721E  010F               	movlb	15	; () banked
  3068  007220  6F55               	movwf	85,b	;volatile
  3069                           
  3070                           ; BSR set to: 15
  3071  007222  0012               	return		;funcret
  3072  007224                     __end_of_hardLeft:
  3073                           	opt callstack 0
  3074                           
  3075 ;; *************** function _classifyColors *****************
  3076 ;; Defined at:
  3077 ;;		line 706 in file "./functions.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  a               1   12[COMRAM] unsigned char 
  3082 ;;  sensorRanges   10    2[COMRAM] PTR unsigned char [5]
  3083 ;;		 -> RRranges(5), Rranges(5), Mranges(5), Lranges(5), 
  3084 ;;		 -> LLranges(5), 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3094 ;;      Params:         0       0       0       0       0       0       0
  3095 ;;      Locals:        11       0       0       0       0       0       0
  3096 ;;      Temps:          2       0       0       0       0       0       0
  3097 ;;      Totals:        13       0       0       0       0       0       0
  3098 ;;Total ram usage:       13 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_navigate
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text24
  3108  007A3E                     __ptext24:
  3109                           	opt callstack 0
  3110  007A3E                     _classifyColors:
  3111                           	opt callstack 28
  3112                           
  3113                           ;./functions.c: 707:     unsigned char* sensorRanges[] = {LLranges, Lranges, Mranges, Rr
      +                          anges, RRranges};
  3114                           
  3115                           ; BSR set to: 15
  3116                           ;incstack = 0
  3117  007A3E  EE20  F0B2         	lfsr	2,classifyColors@F6065
  3118  007A42  EE10  F003         	lfsr	1,classifyColors@sensorRanges
  3119  007A46  0E09               	movlw	9
  3120  007A48                     u1281:
  3121  007A48  CFDB FFE3          	movff	plusw2,plusw1
  3122  007A4C  06E8               	decf	wreg,f,c
  3123  007A4E  E2FC               	bc	u1281
  3124                           
  3125                           ;./functions.c: 709:     for (unsigned char a = 0; a < 5; a++){
  3126  007A50  0E00               	movlw	0
  3127  007A52  6E0D               	movwf	classifyColors@a,c
  3128  007A54                     l2621:
  3129                           
  3130                           ;./functions.c: 710:         if (sensorVals[a] < sensorRanges[a][1]){
  3131  007A54  500D               	movf	classifyColors@a,w,c
  3132  007A56  0D02               	mullw	2
  3133  007A58  0E03               	movlw	low classifyColors@sensorRanges
  3134  007A5A  24F3               	addwf	prodl,w,c
  3135  007A5C  6ED9               	movwf	fsr2l,c
  3136  007A5E  0E00               	movlw	high classifyColors@sensorRanges
  3137  007A60  20F4               	addwfc	prodh,w,c
  3138  007A62  6EDA               	movwf	fsr2h,c
  3139  007A64  EE10 F001          	lfsr	1,1
  3140  007A68  50DE               	movf	postinc2,w,c
  3141  007A6A  26E1               	addwf	fsr1l,f,c
  3142  007A6C  50DD               	movf	postdec2,w,c
  3143  007A6E  22E2               	addwfc	fsr1h,f,c
  3144  007A70  0E50               	movlw	low _sensorVals
  3145  007A72  240D               	addwf	classifyColors@a,w,c
  3146  007A74  6ED9               	movwf	fsr2l,c
  3147  007A76  6ADA               	clrf	fsr2h,c
  3148  007A78  0E00               	movlw	high _sensorVals
  3149  007A7A  22DA               	addwfc	fsr2h,f,c
  3150  007A7C  50E6               	movf	postinc1,w,c
  3151  007A7E  5CDE               	subwf	postinc2,w,c
  3152  007A80  B0D8               	btfsc	status,0,c
  3153  007A82  D008               	goto	l2625
  3154                           
  3155                           ;./functions.c: 711:             colorsDetected[a] = 'W';
  3156  007A84  0EFA               	movlw	low _colorsDetected
  3157  007A86  240D               	addwf	classifyColors@a,w,c
  3158  007A88  6ED9               	movwf	fsr2l,c
  3159  007A8A  6ADA               	clrf	fsr2h,c
  3160  007A8C  0E00               	movlw	high _colorsDetected
  3161  007A8E  22DA               	addwfc	fsr2h,f,c
  3162  007A90  0E57               	movlw	87
  3163  007A92  D05F               	goto	L4
  3164  007A94                     l2625:
  3165  007A94  500D               	movf	classifyColors@a,w,c
  3166  007A96  0D02               	mullw	2
  3167  007A98  0E03               	movlw	low classifyColors@sensorRanges
  3168  007A9A  24F3               	addwf	prodl,w,c
  3169  007A9C  6ED9               	movwf	fsr2l,c
  3170  007A9E  0E00               	movlw	high classifyColors@sensorRanges
  3171  007AA0  20F4               	addwfc	prodh,w,c
  3172  007AA2  6EDA               	movwf	fsr2h,c
  3173  007AA4  EE10 F002          	lfsr	1,2
  3174  007AA8  50DE               	movf	postinc2,w,c
  3175  007AAA  26E1               	addwf	fsr1l,f,c
  3176  007AAC  50DD               	movf	postdec2,w,c
  3177  007AAE  22E2               	addwfc	fsr1h,f,c
  3178  007AB0  0E50               	movlw	low _sensorVals
  3179  007AB2  240D               	addwf	classifyColors@a,w,c
  3180  007AB4  6ED9               	movwf	fsr2l,c
  3181  007AB6  6ADA               	clrf	fsr2h,c
  3182  007AB8  0E00               	movlw	high _sensorVals
  3183  007ABA  22DA               	addwfc	fsr2h,f,c
  3184  007ABC  50E6               	movf	postinc1,w,c
  3185  007ABE  5CDE               	subwf	postinc2,w,c
  3186  007AC0  A0D8               	btfss	status,0,c
  3187  007AC2  D018               	goto	u1310
  3188  007AC4  500D               	movf	classifyColors@a,w,c
  3189  007AC6  0D02               	mullw	2
  3190  007AC8  0E03               	movlw	low classifyColors@sensorRanges
  3191  007ACA  24F3               	addwf	prodl,w,c
  3192  007ACC  6ED9               	movwf	fsr2l,c
  3193  007ACE  0E00               	movlw	high classifyColors@sensorRanges
  3194  007AD0  20F4               	addwfc	prodh,w,c
  3195  007AD2  6EDA               	movwf	fsr2h,c
  3196  007AD4  EE10 F003          	lfsr	1,3
  3197  007AD8  50DE               	movf	postinc2,w,c
  3198  007ADA  26E1               	addwf	fsr1l,f,c
  3199  007ADC  50DD               	movf	postdec2,w,c
  3200  007ADE  22E2               	addwfc	fsr1h,f,c
  3201  007AE0  0E50               	movlw	low _sensorVals
  3202  007AE2  240D               	addwf	classifyColors@a,w,c
  3203  007AE4  6ED9               	movwf	fsr2l,c
  3204  007AE6  6ADA               	clrf	fsr2h,c
  3205  007AE8  0E00               	movlw	high _sensorVals
  3206  007AEA  22DA               	addwfc	fsr2h,f,c
  3207  007AEC  50E6               	movf	postinc1,w,c
  3208  007AEE  5CDE               	subwf	postinc2,w,c
  3209  007AF0  B0D8               	btfsc	status,0,c
  3210  007AF2  D008               	goto	l2631
  3211  007AF4                     u1310:
  3212                           
  3213                           ;./functions.c: 714:             colorsDetected[a] = 'G';
  3214  007AF4  0EFA               	movlw	low _colorsDetected
  3215  007AF6  240D               	addwf	classifyColors@a,w,c
  3216  007AF8  6ED9               	movwf	fsr2l,c
  3217  007AFA  6ADA               	clrf	fsr2h,c
  3218  007AFC  0E00               	movlw	high _colorsDetected
  3219  007AFE  22DA               	addwfc	fsr2h,f,c
  3220  007B00  0E47               	movlw	71
  3221  007B02  D027               	goto	L4
  3222  007B04                     l2631:
  3223  007B04  500D               	movf	classifyColors@a,w,c
  3224  007B06  0D02               	mullw	2
  3225  007B08  0E03               	movlw	low classifyColors@sensorRanges
  3226  007B0A  24F3               	addwf	prodl,w,c
  3227  007B0C  6ED9               	movwf	fsr2l,c
  3228  007B0E  0E00               	movlw	high classifyColors@sensorRanges
  3229  007B10  20F4               	addwfc	prodh,w,c
  3230  007B12  6EDA               	movwf	fsr2h,c
  3231  007B14  EE10 F004          	lfsr	1,4
  3232  007B18  50DE               	movf	postinc2,w,c
  3233  007B1A  26E1               	addwf	fsr1l,f,c
  3234  007B1C  50DD               	movf	postdec2,w,c
  3235  007B1E  22E2               	addwfc	fsr1h,f,c
  3236  007B20  0E50               	movlw	low _sensorVals
  3237  007B22  240D               	addwf	classifyColors@a,w,c
  3238  007B24  6ED9               	movwf	fsr2l,c
  3239  007B26  6ADA               	clrf	fsr2h,c
  3240  007B28  0E00               	movlw	high _sensorVals
  3241  007B2A  22DA               	addwfc	fsr2h,f,c
  3242  007B2C  50E6               	movf	postinc1,w,c
  3243  007B2E  5CDE               	subwf	postinc2,w,c
  3244  007B30  B0D8               	btfsc	status,0,c
  3245  007B32  D008               	goto	l2635
  3246                           
  3247                           ;./functions.c: 717:             colorsDetected[a] = 'B';
  3248  007B34  0EFA               	movlw	low _colorsDetected
  3249  007B36  240D               	addwf	classifyColors@a,w,c
  3250  007B38  6ED9               	movwf	fsr2l,c
  3251  007B3A  6ADA               	clrf	fsr2h,c
  3252  007B3C  0E00               	movlw	high _colorsDetected
  3253  007B3E  22DA               	addwfc	fsr2h,f,c
  3254  007B40  0E42               	movlw	66
  3255  007B42  D007               	goto	L4
  3256  007B44                     l2635:
  3257                           
  3258                           ;./functions.c: 720:             colorsDetected[a] = 'n';
  3259  007B44  0EFA               	movlw	low _colorsDetected
  3260  007B46  240D               	addwf	classifyColors@a,w,c
  3261  007B48  6ED9               	movwf	fsr2l,c
  3262  007B4A  6ADA               	clrf	fsr2h,c
  3263  007B4C  0E00               	movlw	high _colorsDetected
  3264  007B4E  22DA               	addwfc	fsr2h,f,c
  3265  007B50  0E6E               	movlw	110
  3266  007B52                     L4:
  3267  007B52  6EDF               	movwf	indf2,c
  3268                           
  3269                           ;./functions.c: 722:     }
  3270  007B54  2A0D               	incf	classifyColors@a,f,c
  3271  007B56  0E04               	movlw	4
  3272  007B58  640D               	cpfsgt	classifyColors@a,c
  3273  007B5A  D77C               	goto	l2621
  3274  007B5C  0012               	return	
  3275  007B5E                     __end_of_classifyColors:
  3276                           	opt callstack 0
  3277                           
  3278 ;; *************** function _capTouch *****************
  3279 ;; Defined at:
  3280 ;;		line 466 in file "./functions.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  a               1   40[COMRAM] unsigned char 
  3285 ;;  message        26   10[COMRAM] unsigned char [26]
  3286 ;;  change          2    0        int 
  3287 ;;  touch2          1   39[COMRAM] unsigned char 
  3288 ;;  touch1          1   38[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3298 ;;      Params:         0       0       0       0       0       0       0
  3299 ;;      Locals:        31       0       0       0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0
  3301 ;;      Totals:        31       0       0       0       0       0       0
  3302 ;;Total ram usage:       31 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    2
  3305 ;; This function calls:
  3306 ;;		_abs
  3307 ;;		_aveSensor
  3308 ;;		_msDelay
  3309 ;;		_trans
  3310 ;; This function is called by:
  3311 ;;		_RCE
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text25
  3316  00760E                     __ptext25:
  3317                           	opt callstack 0
  3318  00760E                     _capTouch:
  3319                           	opt callstack 27
  3320                           
  3321                           ;./functions.c: 468:     unsigned char message[] = "\nSanic waits for a touch\n";
  3322                           
  3323                           ;incstack = 0
  3324  00760E  EE20  F080         	lfsr	2,capTouch@F6046
  3325  007612  EE10  F00B         	lfsr	1,capTouch@message
  3326  007616  0E19               	movlw	25
  3327  007618                     u2101:
  3328  007618  CFDB FFE3          	movff	plusw2,plusw1
  3329  00761C  06E8               	decf	wreg,f,c
  3330  00761E  E2FC               	bc	u2101
  3331                           
  3332                           ;./functions.c: 470:     for (unsigned char a = 0; a < 25; a++)
  3333  007620  0E00               	movlw	0
  3334  007622  6E29               	movwf	capTouch@a,c
  3335  007624                     l3259:
  3336                           
  3337                           ;./functions.c: 471:     {;./functions.c: 472:         trans(message[a]);
  3338  007624  0E0B               	movlw	low capTouch@message
  3339  007626  2429               	addwf	capTouch@a,w,c
  3340  007628  6ED9               	movwf	fsr2l,c
  3341  00762A  6ADA               	clrf	fsr2h,c
  3342  00762C  0E00               	movlw	high capTouch@message
  3343  00762E  22DA               	addwfc	fsr2h,f,c
  3344  007630  50DF               	movf	indf2,w,c
  3345  007632  ECC5  F038         	call	_trans
  3346                           
  3347                           ;./functions.c: 473:     }
  3348  007636  2A29               	incf	capTouch@a,f,c
  3349  007638  0E18               	movlw	24
  3350  00763A  6429               	cpfsgt	capTouch@a,c
  3351  00763C  D7F3               	goto	l3259
  3352                           
  3353                           ;./functions.c: 476:     unsigned char touch1 = 0;
  3354  00763E  0E00               	movlw	0
  3355  007640  6E27               	movwf	capTouch@touch1,c
  3356                           
  3357                           ;./functions.c: 477:     unsigned char touch2 = 0;
  3358  007642  0E00               	movlw	0
  3359  007644  6E28               	movwf	capTouch@touch2,c
  3360  007646                     l3267:
  3361                           
  3362                           ;./functions.c: 480:         touch1 = aveSensor(15);
  3363  007646  0E0F               	movlw	15
  3364  007648  EC12  F03A         	call	_aveSensor
  3365  00764C  6E27               	movwf	capTouch@touch1,c
  3366                           
  3367                           ;./functions.c: 481:         msDelay(5);
  3368  00764E  0E05               	movlw	5
  3369  007650  EC46  F039         	call	_msDelay
  3370                           
  3371                           ;./functions.c: 482:         touch2 = aveSensor(15);
  3372  007654  0E0F               	movlw	15
  3373  007656  EC12  F03A         	call	_aveSensor
  3374  00765A  6E28               	movwf	capTouch@touch2,c
  3375                           
  3376                           ;./functions.c: 486:         if (abs(touch2 - touch1) > 50){
  3377  00765C  5027               	movf	capTouch@touch1,w,c
  3378  00765E  5C28               	subwf	capTouch@touch2,w,c
  3379  007660  6E01               	movwf	abs@a,c
  3380  007662  6A02               	clrf	abs@a+1,c
  3381  007664  A0D8               	btfss	status,0,c
  3382  007666  0602               	decf	abs@a+1,f,c
  3383  007668  ECA1  F039         	call	_abs	;wreg free
  3384  00766C  BE02               	btfsc	?_abs+1,7,c
  3385  00766E  D7EB               	goto	l3267
  3386  007670  5002               	movf	?_abs+1,w,c
  3387  007672  E105               	bnz	l330
  3388  007674  0E33               	movlw	51
  3389  007676  5C01               	subwf	?_abs,w,c
  3390  007678  B0D8               	btfsc	status,0,c
  3391  00767A  0012               	return	
  3392  00767C  D7E4               	goto	l3267
  3393  00767E                     l330:
  3394  00767E  0012               	return		;funcret
  3395  007680                     __end_of_capTouch:
  3396                           	opt callstack 0
  3397                           
  3398 ;; *************** function _abs *****************
  3399 ;; Defined at:
  3400 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  a               2    0[COMRAM] int 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2    0[COMRAM] int 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3414 ;;      Params:         2       0       0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0
  3416 ;;      Temps:          2       0       0       0       0       0       0
  3417 ;;      Totals:         4       0       0       0       0       0       0
  3418 ;;Total ram usage:        4 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_capTouch
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text26
  3428  007342                     __ptext26:
  3429                           	opt callstack 0
  3430  007342                     _abs:
  3431                           	opt callstack 28
  3432                           
  3433                           ;incstack = 0
  3434  007342  BE02               	btfsc	abs@a+1,7,c
  3435  007344  D005               	goto	u1550
  3436  007346  5002               	movf	abs@a+1,w,c
  3437  007348  E110               	bnz	l1236
  3438  00734A  0401               	decf	abs@a,w,c
  3439  00734C  B0D8               	btfsc	status,0,c
  3440  00734E  D00D               	goto	l1236
  3441  007350                     u1550:
  3442  007350  C001  F003         	movff	abs@a,??_abs
  3443  007354  C002  F004         	movff	abs@a+1,??_abs+1
  3444  007358  1E03               	comf	??_abs,f,c
  3445  00735A  1E04               	comf	??_abs+1,f,c
  3446  00735C  4A03               	infsnz	??_abs,f,c
  3447  00735E  2A04               	incf	??_abs+1,f,c
  3448  007360  C003  F001         	movff	??_abs,?_abs
  3449  007364  C004  F002         	movff	??_abs+1,?_abs+1
  3450  007368  0012               	return	
  3451  00736A                     l1236:
  3452  00736A  C001  F001         	movff	abs@a,?_abs
  3453  00736E  C002  F002         	movff	abs@a+1,?_abs+1
  3454  007372  0012               	return		;funcret
  3455  007374                     __end_of_abs:
  3456                           	opt callstack 0
  3457                           
  3458 ;; *************** function _calibrate *****************
  3459 ;; Defined at:
  3460 ;;		line 137 in file "./functions.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  b               1   38[COMRAM] unsigned char 
  3465 ;;  samples         1   36[COMRAM] unsigned char 
  3466 ;;  samples         1   35[COMRAM] unsigned char 
  3467 ;;  samples         1   34[COMRAM] unsigned char 
  3468 ;;  samples         1   33[COMRAM] unsigned char 
  3469 ;;  samples         1   32[COMRAM] unsigned char 
  3470 ;;  a               1   37[COMRAM] unsigned char 
  3471 ;;  rangeArray     10   22[COMRAM] PTR unsigned char [5]
  3472 ;;		 -> RRranges(5), Rranges(5), Mranges(5), Lranges(5), 
  3473 ;;		 -> LLranges(5), 
  3474 ;;  sensors         5   17[COMRAM] unsigned char [5]
  3475 ;;  temp            1   39[COMRAM] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3485 ;;      Params:         0       0       0       0       0       0       0
  3486 ;;      Locals:        23       0       0       0       0       0       0
  3487 ;;      Temps:          2       0       0       0       0       0       0
  3488 ;;      Totals:        25       0       0       0       0       0       0
  3489 ;;Total ram usage:       25 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    2
  3492 ;; This function calls:
  3493 ;;		_aveSensor
  3494 ;;		_oneSecDelay
  3495 ;;		_ranges
  3496 ;; This function is called by:
  3497 ;;		_RCE
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text27
  3502  007CE2                     __ptext27:
  3503                           	opt callstack 0
  3504  007CE2                     _calibrate:
  3505                           	opt callstack 27
  3506                           
  3507                           ;./functions.c: 139:     unsigned char *rangeArray[] = {LLranges, Lranges, Mranges, Rran
      +                          ges, RRranges};
  3508                           
  3509                           ;incstack = 0
  3510  007CE2  EE20  F0BC         	lfsr	2,calibrate@F6015
  3511  007CE6  EE10  F017         	lfsr	1,calibrate@rangeArray
  3512  007CEA  0E09               	movlw	9
  3513  007CEC                     u1561:
  3514  007CEC  CFDB FFE3          	movff	plusw2,plusw1
  3515  007CF0  06E8               	decf	wreg,f,c
  3516  007CF2  E2FC               	bc	u1561
  3517                           
  3518                           ;./functions.c: 140:     for (unsigned char a = 0; a < 5; a++)
  3519  007CF4  0E00               	movlw	0
  3520  007CF6  6E26               	movwf	calibrate@a,c
  3521  007CF8                     l2779:
  3522                           
  3523                           ;./functions.c: 141:     {;./functions.c: 142:         for (unsigned char b = 0; b < 5; 
      +                          b++)
  3524  007CF8  0E00               	movlw	0
  3525  007CFA  6E27               	movwf	calibrate@b,c
  3526  007CFC                     l2785:
  3527                           
  3528                           ;./functions.c: 143:         {;./functions.c: 144:             rangeArray[a][b] = 0;
  3529  007CFC  5026               	movf	calibrate@a,w,c
  3530  007CFE  0D02               	mullw	2
  3531  007D00  0E17               	movlw	low calibrate@rangeArray
  3532  007D02  24F3               	addwf	prodl,w,c
  3533  007D04  6ED9               	movwf	fsr2l,c
  3534  007D06  0E00               	movlw	high calibrate@rangeArray
  3535  007D08  20F4               	addwfc	prodh,w,c
  3536  007D0A  6EDA               	movwf	fsr2h,c
  3537  007D0C  CFDE F010          	movff	postinc2,??_calibrate
  3538  007D10  CFDD F011          	movff	postdec2,??_calibrate+1
  3539  007D14  5027               	movf	calibrate@b,w,c
  3540  007D16  2410               	addwf	??_calibrate,w,c
  3541  007D18  6ED9               	movwf	fsr2l,c
  3542  007D1A  0E00               	movlw	0
  3543  007D1C  2011               	addwfc	??_calibrate+1,w,c
  3544  007D1E  6EDA               	movwf	fsr2h,c
  3545  007D20  0E00               	movlw	0
  3546  007D22  6EDF               	movwf	indf2,c
  3547                           
  3548                           ;./functions.c: 145:         }
  3549  007D24  2A27               	incf	calibrate@b,f,c
  3550  007D26  0E04               	movlw	4
  3551  007D28  6427               	cpfsgt	calibrate@b,c
  3552  007D2A  D7E8               	goto	l2785
  3553                           
  3554                           ;./functions.c: 146:     }
  3555  007D2C  2A26               	incf	calibrate@a,f,c
  3556  007D2E  0E04               	movlw	4
  3557  007D30  6426               	cpfsgt	calibrate@a,c
  3558  007D32  D7E2               	goto	l2779
  3559                           
  3560                           ;./functions.c: 148:     PORTA = 0;
  3561  007D34  0E00               	movlw	0
  3562  007D36  6E80               	movwf	3968,c	;volatile
  3563                           
  3564                           ;./functions.c: 149:     unsigned char sensors[5] = {12, 8, 9, 10, 13};
  3565  007D38  EE20  F0E1         	lfsr	2,calibrate@F6019
  3566  007D3C  EE10  F012         	lfsr	1,calibrate@sensors
  3567  007D40  0E04               	movlw	4
  3568  007D42                     u1591:
  3569  007D42  CFDB FFE3          	movff	plusw2,plusw1
  3570  007D46  06E8               	decf	wreg,f,c
  3571  007D48  E2FC               	bc	u1591
  3572                           
  3573                           ;./functions.c: 152:     PORTD = 0b11000001;
  3574  007D4A  0EC1               	movlw	193
  3575  007D4C  6E83               	movwf	3971,c	;volatile
  3576                           
  3577                           ;./functions.c: 153:     oneSecDelay();
  3578  007D4E  ECE3  F038         	call	_oneSecDelay	;wreg free
  3579                           
  3580                           ;./functions.c: 154:     oneSecDelay();
  3581  007D52  ECE3  F038         	call	_oneSecDelay	;wreg free
  3582                           
  3583                           ;./functions.c: 155:     for (unsigned char samples = 0; samples < 250; samples++)
  3584  007D56  0E00               	movlw	0
  3585  007D58  6E21               	movwf	calibrate@samples,c
  3586  007D5A                     l2813:
  3587                           
  3588                           ;./functions.c: 156:     {;./functions.c: 157:         temp = aveSensor(12);
  3589  007D5A  0E0C               	movlw	12
  3590  007D5C  EC12  F03A         	call	_aveSensor
  3591  007D60  6E28               	movwf	calibrate@temp,c
  3592                           
  3593                           ;./functions.c: 158:         if (temp >= LLranges[0])
  3594  007D62  5057               	movf	_LLranges,w,c
  3595  007D64  5C28               	subwf	calibrate@temp,w,c
  3596  007D66  B0D8               	btfsc	status,0,c
  3597                           
  3598                           ;./functions.c: 159:         {;./functions.c: 160:             LLranges[0] = temp;
  3599  007D68  C028  F057         	movff	calibrate@temp,_LLranges
  3600                           
  3601                           ;./functions.c: 162:         temp = aveSensor(10);
  3602  007D6C  0E0A               	movlw	10
  3603  007D6E  EC12  F03A         	call	_aveSensor
  3604  007D72  6E28               	movwf	calibrate@temp,c
  3605                           
  3606                           ;./functions.c: 163:         if (temp >= Lranges[0])
  3607  007D74  0100               	movlb	0	; () banked
  3608  007D76  51F5               	movf	_Lranges& (0+255),w,b
  3609  007D78  5C28               	subwf	calibrate@temp,w,c
  3610  007D7A  B0D8               	btfsc	status,0,c
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;./functions.c: 164:         {;./functions.c: 165:             Lranges[0] = temp;
  3614  007D7C  C028  F0F5         	movff	calibrate@temp,_Lranges
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;./functions.c: 167:         temp = aveSensor(8);
  3618  007D80  0E08               	movlw	8
  3619  007D82  EC12  F03A         	call	_aveSensor
  3620  007D86  6E28               	movwf	calibrate@temp,c
  3621                           
  3622                           ;./functions.c: 168:         if (temp >= Mranges[0])
  3623  007D88  0100               	movlb	0	; () banked
  3624  007D8A  51F0               	movf	_Mranges& (0+255),w,b
  3625  007D8C  5C28               	subwf	calibrate@temp,w,c
  3626  007D8E  B0D8               	btfsc	status,0,c
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;./functions.c: 169:         {;./functions.c: 170:             Mranges[0] = temp;
  3630  007D90  C028  F0F0         	movff	calibrate@temp,_Mranges
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;./functions.c: 172:         temp = aveSensor(9);
  3634  007D94  0E09               	movlw	9
  3635  007D96  EC12  F03A         	call	_aveSensor
  3636  007D9A  6E28               	movwf	calibrate@temp,c
  3637                           
  3638                           ;./functions.c: 173:         if (temp >= Rranges[0])
  3639  007D9C  0100               	movlb	0	; () banked
  3640  007D9E  51EB               	movf	_Rranges& (0+255),w,b
  3641  007DA0  5C28               	subwf	calibrate@temp,w,c
  3642  007DA2  B0D8               	btfsc	status,0,c
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;./functions.c: 174:         {;./functions.c: 175:             Rranges[0] = temp;
  3646  007DA4  C028  F0EB         	movff	calibrate@temp,_Rranges
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;./functions.c: 177:         temp = aveSensor(13);
  3650  007DA8  0E0D               	movlw	13
  3651  007DAA  EC12  F03A         	call	_aveSensor
  3652  007DAE  6E28               	movwf	calibrate@temp,c
  3653                           
  3654                           ;./functions.c: 178:         if (temp >= RRranges[0])
  3655  007DB0  0100               	movlb	0	; () banked
  3656  007DB2  51E6               	movf	_RRranges& (0+255),w,b
  3657  007DB4  5C28               	subwf	calibrate@temp,w,c
  3658  007DB6  B0D8               	btfsc	status,0,c
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;./functions.c: 179:         {;./functions.c: 180:             RRranges[0] = temp;
  3662  007DB8  C028  F0E6         	movff	calibrate@temp,_RRranges
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;./functions.c: 182:     }
  3666  007DBC  2A21               	incf	calibrate@samples,f,c
  3667                           
  3668                           ; BSR set to: 0
  3669  007DBE  0EF9               	movlw	249
  3670  007DC0  6421               	cpfsgt	calibrate@samples,c
  3671  007DC2  D7CB               	goto	l2813
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;./functions.c: 183:     PORTAbits.RA0 = 1;
  3675  007DC4  8080               	bsf	3968,0,c	;volatile
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;./functions.c: 184:     PORTD = 0b10000010;
  3679  007DC6  0E82               	movlw	130
  3680  007DC8  6E83               	movwf	3971,c	;volatile
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;./functions.c: 186:     oneSecDelay();
  3684  007DCA  ECE3  F038         	call	_oneSecDelay	;wreg free
  3685                           
  3686                           ;./functions.c: 187:     oneSecDelay();
  3687  007DCE  ECE3  F038         	call	_oneSecDelay	;wreg free
  3688                           
  3689                           ;./functions.c: 188:     oneSecDelay();
  3690  007DD2  ECE3  F038         	call	_oneSecDelay	;wreg free
  3691                           
  3692                           ;./functions.c: 189:     oneSecDelay();
  3693  007DD6  ECE3  F038         	call	_oneSecDelay	;wreg free
  3694                           
  3695                           ;./functions.c: 190:     oneSecDelay();
  3696  007DDA  ECE3  F038         	call	_oneSecDelay	;wreg free
  3697                           
  3698                           ;./functions.c: 191:     oneSecDelay();
  3699  007DDE  ECE3  F038         	call	_oneSecDelay	;wreg free
  3700                           
  3701                           ;./functions.c: 192:     for (unsigned char samples = 0; samples < 250; samples++)
  3702  007DE2  0E00               	movlw	0
  3703  007DE4  6E22               	movwf	calibrate@samples_1177,c
  3704  007DE6                     l2865:
  3705                           
  3706                           ;./functions.c: 193:     {;./functions.c: 194:         temp = aveSensor(12);
  3707  007DE6  0E0C               	movlw	12
  3708  007DE8  EC12  F03A         	call	_aveSensor
  3709  007DEC  6E28               	movwf	calibrate@temp,c
  3710                           
  3711                           ;./functions.c: 195:         if (temp >= LLranges[1])
  3712  007DEE  5058               	movf	_LLranges+1,w,c
  3713  007DF0  5C28               	subwf	calibrate@temp,w,c
  3714  007DF2  B0D8               	btfsc	status,0,c
  3715                           
  3716                           ;./functions.c: 196:         {;./functions.c: 197:             LLranges[1] = temp;
  3717  007DF4  C028  F058         	movff	calibrate@temp,_LLranges+1
  3718                           
  3719                           ;./functions.c: 199:         temp = aveSensor(10);
  3720  007DF8  0E0A               	movlw	10
  3721  007DFA  EC12  F03A         	call	_aveSensor
  3722  007DFE  6E28               	movwf	calibrate@temp,c
  3723                           
  3724                           ;./functions.c: 200:         if (temp >= Lranges[1])
  3725  007E00  0100               	movlb	0	; () banked
  3726  007E02  51F6               	movf	(_Lranges+1)& (0+255),w,b
  3727  007E04  5C28               	subwf	calibrate@temp,w,c
  3728  007E06  B0D8               	btfsc	status,0,c
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;./functions.c: 201:         {;./functions.c: 202:             Lranges[1] = temp;
  3732  007E08  C028  F0F6         	movff	calibrate@temp,_Lranges+1
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;./functions.c: 204:         temp = aveSensor(8);
  3736  007E0C  0E08               	movlw	8
  3737  007E0E  EC12  F03A         	call	_aveSensor
  3738  007E12  6E28               	movwf	calibrate@temp,c
  3739                           
  3740                           ;./functions.c: 205:         if (temp >= Mranges[1])
  3741  007E14  0100               	movlb	0	; () banked
  3742  007E16  51F1               	movf	(_Mranges+1)& (0+255),w,b
  3743  007E18  5C28               	subwf	calibrate@temp,w,c
  3744  007E1A  B0D8               	btfsc	status,0,c
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;./functions.c: 206:         {;./functions.c: 207:             Mranges[1] = temp;
  3748  007E1C  C028  F0F1         	movff	calibrate@temp,_Mranges+1
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;./functions.c: 209:         temp = aveSensor(9);
  3752  007E20  0E09               	movlw	9
  3753  007E22  EC12  F03A         	call	_aveSensor
  3754  007E26  6E28               	movwf	calibrate@temp,c
  3755                           
  3756                           ;./functions.c: 210:         if (temp >= Rranges[1])
  3757  007E28  0100               	movlb	0	; () banked
  3758  007E2A  51EC               	movf	(_Rranges+1)& (0+255),w,b
  3759  007E2C  5C28               	subwf	calibrate@temp,w,c
  3760  007E2E  B0D8               	btfsc	status,0,c
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;./functions.c: 211:         {;./functions.c: 212:             Rranges[1] = temp;
  3764  007E30  C028  F0EC         	movff	calibrate@temp,_Rranges+1
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;./functions.c: 214:         temp = aveSensor(13);
  3768  007E34  0E0D               	movlw	13
  3769  007E36  EC12  F03A         	call	_aveSensor
  3770  007E3A  6E28               	movwf	calibrate@temp,c
  3771                           
  3772                           ;./functions.c: 215:         if (temp >= RRranges[1])
  3773  007E3C  0100               	movlb	0	; () banked
  3774  007E3E  51E7               	movf	(_RRranges+1)& (0+255),w,b
  3775  007E40  5C28               	subwf	calibrate@temp,w,c
  3776  007E42  B0D8               	btfsc	status,0,c
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;./functions.c: 216:         {;./functions.c: 217:             RRranges[1] = temp;
  3780  007E44  C028  F0E7         	movff	calibrate@temp,_RRranges+1
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;./functions.c: 219:     }
  3784  007E48  2A22               	incf	calibrate@samples_1177,f,c
  3785                           
  3786                           ; BSR set to: 0
  3787  007E4A  0EF9               	movlw	249
  3788  007E4C  6422               	cpfsgt	calibrate@samples_1177,c
  3789  007E4E  D7CB               	goto	l2865
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;./functions.c: 220:     PORTAbits.RA1 = 1;
  3793  007E50  8280               	bsf	3968,1,c	;volatile
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;./functions.c: 221:     PORTD = 0b10001000;
  3797  007E52  0E88               	movlw	136
  3798  007E54  6E83               	movwf	3971,c	;volatile
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;./functions.c: 223:     oneSecDelay();
  3802  007E56  ECE3  F038         	call	_oneSecDelay	;wreg free
  3803                           
  3804                           ;./functions.c: 224:     oneSecDelay();
  3805  007E5A  ECE3  F038         	call	_oneSecDelay	;wreg free
  3806                           
  3807                           ;./functions.c: 225:     oneSecDelay();
  3808  007E5E  ECE3  F038         	call	_oneSecDelay	;wreg free
  3809                           
  3810                           ;./functions.c: 226:     oneSecDelay();
  3811  007E62  ECE3  F038         	call	_oneSecDelay	;wreg free
  3812                           
  3813                           ;./functions.c: 227:     oneSecDelay();
  3814  007E66  ECE3  F038         	call	_oneSecDelay	;wreg free
  3815                           
  3816                           ;./functions.c: 228:     oneSecDelay();
  3817  007E6A  ECE3  F038         	call	_oneSecDelay	;wreg free
  3818                           
  3819                           ;./functions.c: 229:     for (unsigned char samples = 0; samples < 250; samples++)
  3820  007E6E  0E00               	movlw	0
  3821  007E70  6E23               	movwf	calibrate@samples_1178,c
  3822  007E72                     l2917:
  3823                           
  3824                           ;./functions.c: 230:     {;./functions.c: 231:         temp = aveSensor(12);
  3825  007E72  0E0C               	movlw	12
  3826  007E74  EC12  F03A         	call	_aveSensor
  3827  007E78  6E28               	movwf	calibrate@temp,c
  3828                           
  3829                           ;./functions.c: 232:         if (temp >= LLranges[2])
  3830  007E7A  5059               	movf	_LLranges+2,w,c
  3831  007E7C  5C28               	subwf	calibrate@temp,w,c
  3832  007E7E  B0D8               	btfsc	status,0,c
  3833                           
  3834                           ;./functions.c: 233:         {;./functions.c: 234:             LLranges[2] = temp;
  3835  007E80  C028  F059         	movff	calibrate@temp,_LLranges+2
  3836                           
  3837                           ;./functions.c: 236:         temp = aveSensor(10);
  3838  007E84  0E0A               	movlw	10
  3839  007E86  EC12  F03A         	call	_aveSensor
  3840  007E8A  6E28               	movwf	calibrate@temp,c
  3841                           
  3842                           ;./functions.c: 237:         if (temp >= Lranges[2])
  3843  007E8C  0100               	movlb	0	; () banked
  3844  007E8E  51F7               	movf	(_Lranges+2)& (0+255),w,b
  3845  007E90  5C28               	subwf	calibrate@temp,w,c
  3846  007E92  B0D8               	btfsc	status,0,c
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;./functions.c: 238:         {;./functions.c: 239:             Lranges[2] = temp;
  3850  007E94  C028  F0F7         	movff	calibrate@temp,_Lranges+2
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;./functions.c: 241:         temp = aveSensor(8);
  3854  007E98  0E08               	movlw	8
  3855  007E9A  EC12  F03A         	call	_aveSensor
  3856  007E9E  6E28               	movwf	calibrate@temp,c
  3857                           
  3858                           ;./functions.c: 242:         if (temp >= Mranges[2])
  3859  007EA0  0100               	movlb	0	; () banked
  3860  007EA2  51F2               	movf	(_Mranges+2)& (0+255),w,b
  3861  007EA4  5C28               	subwf	calibrate@temp,w,c
  3862  007EA6  B0D8               	btfsc	status,0,c
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;./functions.c: 243:         {;./functions.c: 244:             Mranges[2] = temp;
  3866  007EA8  C028  F0F2         	movff	calibrate@temp,_Mranges+2
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;./functions.c: 246:         temp = aveSensor(9);
  3870  007EAC  0E09               	movlw	9
  3871  007EAE  EC12  F03A         	call	_aveSensor
  3872  007EB2  6E28               	movwf	calibrate@temp,c
  3873                           
  3874                           ;./functions.c: 247:         if (temp >= Rranges[2])
  3875  007EB4  0100               	movlb	0	; () banked
  3876  007EB6  51ED               	movf	(_Rranges+2)& (0+255),w,b
  3877  007EB8  5C28               	subwf	calibrate@temp,w,c
  3878  007EBA  B0D8               	btfsc	status,0,c
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;./functions.c: 248:         {;./functions.c: 249:             Rranges[2] = temp;
  3882  007EBC  C028  F0ED         	movff	calibrate@temp,_Rranges+2
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;./functions.c: 251:         temp = aveSensor(13);
  3886  007EC0  0E0D               	movlw	13
  3887  007EC2  EC12  F03A         	call	_aveSensor
  3888  007EC6  6E28               	movwf	calibrate@temp,c
  3889                           
  3890                           ;./functions.c: 252:         if (temp >= RRranges[2])
  3891  007EC8  0100               	movlb	0	; () banked
  3892  007ECA  51E8               	movf	(_RRranges+2)& (0+255),w,b
  3893  007ECC  5C28               	subwf	calibrate@temp,w,c
  3894  007ECE  B0D8               	btfsc	status,0,c
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;./functions.c: 253:         {;./functions.c: 254:             RRranges[2] = temp;
  3898  007ED0  C028  F0E8         	movff	calibrate@temp,_RRranges+2
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;./functions.c: 256:     }
  3902  007ED4  2A23               	incf	calibrate@samples_1178,f,c
  3903                           
  3904                           ; BSR set to: 0
  3905  007ED6  0EF9               	movlw	249
  3906  007ED8  6423               	cpfsgt	calibrate@samples_1178,c
  3907  007EDA  D7CB               	goto	l2917
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;./functions.c: 257:     PORTAbits.RA2 = 1;
  3911  007EDC  8480               	bsf	3968,2,c	;volatile
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;./functions.c: 258:     PORTD = 0b10000000;
  3915  007EDE  0E80               	movlw	128
  3916  007EE0  6E83               	movwf	3971,c	;volatile
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;./functions.c: 260:     oneSecDelay();
  3920  007EE2  ECE3  F038         	call	_oneSecDelay	;wreg free
  3921                           
  3922                           ;./functions.c: 261:     oneSecDelay();
  3923  007EE6  ECE3  F038         	call	_oneSecDelay	;wreg free
  3924                           
  3925                           ;./functions.c: 262:     oneSecDelay();
  3926  007EEA  ECE3  F038         	call	_oneSecDelay	;wreg free
  3927                           
  3928                           ;./functions.c: 263:     oneSecDelay();
  3929  007EEE  ECE3  F038         	call	_oneSecDelay	;wreg free
  3930                           
  3931                           ;./functions.c: 264:     oneSecDelay();
  3932  007EF2  ECE3  F038         	call	_oneSecDelay	;wreg free
  3933                           
  3934                           ;./functions.c: 265:     oneSecDelay();
  3935  007EF6  ECE3  F038         	call	_oneSecDelay	;wreg free
  3936                           
  3937                           ;./functions.c: 266:     for (unsigned char samples = 0; samples < 250; samples++)
  3938  007EFA  0E00               	movlw	0
  3939  007EFC  6E24               	movwf	calibrate@samples_1179,c
  3940  007EFE                     l2969:
  3941                           
  3942                           ;./functions.c: 267:     {;./functions.c: 268:         temp = aveSensor(12);
  3943  007EFE  0E0C               	movlw	12
  3944  007F00  EC12  F03A         	call	_aveSensor
  3945  007F04  6E28               	movwf	calibrate@temp,c
  3946                           
  3947                           ;./functions.c: 269:         if (temp >= LLranges[3])
  3948  007F06  505A               	movf	_LLranges+3,w,c
  3949  007F08  5C28               	subwf	calibrate@temp,w,c
  3950  007F0A  B0D8               	btfsc	status,0,c
  3951                           
  3952                           ;./functions.c: 270:         {;./functions.c: 271:             LLranges[3] = temp;
  3953  007F0C  C028  F05A         	movff	calibrate@temp,_LLranges+3
  3954                           
  3955                           ;./functions.c: 273:         temp = aveSensor(10);
  3956  007F10  0E0A               	movlw	10
  3957  007F12  EC12  F03A         	call	_aveSensor
  3958  007F16  6E28               	movwf	calibrate@temp,c
  3959                           
  3960                           ;./functions.c: 274:         if (temp >= Lranges[3])
  3961  007F18  0100               	movlb	0	; () banked
  3962  007F1A  51F8               	movf	(_Lranges+3)& (0+255),w,b
  3963  007F1C  5C28               	subwf	calibrate@temp,w,c
  3964  007F1E  B0D8               	btfsc	status,0,c
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;./functions.c: 275:         {;./functions.c: 276:             Lranges[3] = temp;
  3968  007F20  C028  F0F8         	movff	calibrate@temp,_Lranges+3
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;./functions.c: 278:         temp = aveSensor(8);
  3972  007F24  0E08               	movlw	8
  3973  007F26  EC12  F03A         	call	_aveSensor
  3974  007F2A  6E28               	movwf	calibrate@temp,c
  3975                           
  3976                           ;./functions.c: 279:         if (temp >= Mranges[3])
  3977  007F2C  0100               	movlb	0	; () banked
  3978  007F2E  51F3               	movf	(_Mranges+3)& (0+255),w,b
  3979  007F30  5C28               	subwf	calibrate@temp,w,c
  3980  007F32  B0D8               	btfsc	status,0,c
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;./functions.c: 280:         {;./functions.c: 281:             Mranges[3] = temp;
  3984  007F34  C028  F0F3         	movff	calibrate@temp,_Mranges+3
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;./functions.c: 283:         temp = aveSensor(9);
  3988  007F38  0E09               	movlw	9
  3989  007F3A  EC12  F03A         	call	_aveSensor
  3990  007F3E  6E28               	movwf	calibrate@temp,c
  3991                           
  3992                           ;./functions.c: 284:         if (temp >= Rranges[3])
  3993  007F40  0100               	movlb	0	; () banked
  3994  007F42  51EE               	movf	(_Rranges+3)& (0+255),w,b
  3995  007F44  5C28               	subwf	calibrate@temp,w,c
  3996  007F46  B0D8               	btfsc	status,0,c
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;./functions.c: 285:         {;./functions.c: 286:             Rranges[3] = temp;
  4000  007F48  C028  F0EE         	movff	calibrate@temp,_Rranges+3
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;./functions.c: 288:         temp = aveSensor(13);
  4004  007F4C  0E0D               	movlw	13
  4005  007F4E  EC12  F03A         	call	_aveSensor
  4006  007F52  6E28               	movwf	calibrate@temp,c
  4007                           
  4008                           ;./functions.c: 289:         if (temp >= RRranges[3])
  4009  007F54  0100               	movlb	0	; () banked
  4010  007F56  51E9               	movf	(_RRranges+3)& (0+255),w,b
  4011  007F58  5C28               	subwf	calibrate@temp,w,c
  4012  007F5A  B0D8               	btfsc	status,0,c
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;./functions.c: 290:         {;./functions.c: 291:             RRranges[3] = temp;
  4016  007F5C  C028  F0E9         	movff	calibrate@temp,_RRranges+3
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;./functions.c: 293:     }
  4020  007F60  2A24               	incf	calibrate@samples_1179,f,c
  4021                           
  4022                           ; BSR set to: 0
  4023  007F62  0EF9               	movlw	249
  4024  007F64  6424               	cpfsgt	calibrate@samples_1179,c
  4025  007F66  D7CB               	goto	l2969
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;./functions.c: 294:     PORTAbits.RA3 = 1;
  4029  007F68  8680               	bsf	3968,3,c	;volatile
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;./functions.c: 295:     PORTD = 0b11001000;
  4033  007F6A  0EC8               	movlw	200
  4034  007F6C  6E83               	movwf	3971,c	;volatile
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;./functions.c: 297:     oneSecDelay();
  4038  007F6E  ECE3  F038         	call	_oneSecDelay	;wreg free
  4039                           
  4040                           ;./functions.c: 298:     oneSecDelay();
  4041  007F72  ECE3  F038         	call	_oneSecDelay	;wreg free
  4042                           
  4043                           ;./functions.c: 299:     oneSecDelay();
  4044  007F76  ECE3  F038         	call	_oneSecDelay	;wreg free
  4045                           
  4046                           ;./functions.c: 300:     oneSecDelay();
  4047  007F7A  ECE3  F038         	call	_oneSecDelay	;wreg free
  4048                           
  4049                           ;./functions.c: 301:     oneSecDelay();
  4050  007F7E  ECE3  F038         	call	_oneSecDelay	;wreg free
  4051                           
  4052                           ;./functions.c: 302:     oneSecDelay();
  4053  007F82  ECE3  F038         	call	_oneSecDelay	;wreg free
  4054                           
  4055                           ;./functions.c: 303:     for (unsigned char samples = 0; samples < 250; samples++)
  4056  007F86  0E00               	movlw	0
  4057  007F88  6E25               	movwf	calibrate@samples_1180,c
  4058  007F8A                     l3021:
  4059                           
  4060                           ;./functions.c: 304:     {;./functions.c: 305:         temp = aveSensor(12);
  4061  007F8A  0E0C               	movlw	12
  4062  007F8C  EC12  F03A         	call	_aveSensor
  4063  007F90  6E28               	movwf	calibrate@temp,c
  4064                           
  4065                           ;./functions.c: 306:         if (temp >= LLranges[4])
  4066  007F92  505B               	movf	_LLranges+4,w,c
  4067  007F94  5C28               	subwf	calibrate@temp,w,c
  4068  007F96  B0D8               	btfsc	status,0,c
  4069                           
  4070                           ;./functions.c: 307:         {;./functions.c: 308:             LLranges[4] = temp;
  4071  007F98  C028  F05B         	movff	calibrate@temp,_LLranges+4
  4072                           
  4073                           ;./functions.c: 310:         temp = aveSensor(10);
  4074  007F9C  0E0A               	movlw	10
  4075  007F9E  EC12  F03A         	call	_aveSensor
  4076  007FA2  6E28               	movwf	calibrate@temp,c
  4077                           
  4078                           ;./functions.c: 311:         if (temp >= Lranges[4])
  4079  007FA4  0100               	movlb	0	; () banked
  4080  007FA6  51F9               	movf	(_Lranges+4)& (0+255),w,b
  4081  007FA8  5C28               	subwf	calibrate@temp,w,c
  4082  007FAA  B0D8               	btfsc	status,0,c
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;./functions.c: 312:         {;./functions.c: 313:             Lranges[4] = temp;
  4086  007FAC  C028  F0F9         	movff	calibrate@temp,_Lranges+4
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;./functions.c: 315:         temp = aveSensor(8);
  4090  007FB0  0E08               	movlw	8
  4091  007FB2  EC12  F03A         	call	_aveSensor
  4092  007FB6  6E28               	movwf	calibrate@temp,c
  4093                           
  4094                           ;./functions.c: 316:         if (temp >= Mranges[4])
  4095  007FB8  0100               	movlb	0	; () banked
  4096  007FBA  51F4               	movf	(_Mranges+4)& (0+255),w,b
  4097  007FBC  5C28               	subwf	calibrate@temp,w,c
  4098  007FBE  B0D8               	btfsc	status,0,c
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;./functions.c: 317:         {;./functions.c: 318:             Mranges[4] = temp;
  4102  007FC0  C028  F0F4         	movff	calibrate@temp,_Mranges+4
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;./functions.c: 320:         temp = aveSensor(9);
  4106  007FC4  0E09               	movlw	9
  4107  007FC6  EC12  F03A         	call	_aveSensor
  4108  007FCA  6E28               	movwf	calibrate@temp,c
  4109                           
  4110                           ;./functions.c: 321:         if (temp >= Rranges[4])
  4111  007FCC  0100               	movlb	0	; () banked
  4112  007FCE  51EF               	movf	(_Rranges+4)& (0+255),w,b
  4113  007FD0  5C28               	subwf	calibrate@temp,w,c
  4114  007FD2  B0D8               	btfsc	status,0,c
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;./functions.c: 322:         {;./functions.c: 323:             Rranges[4] = temp;
  4118  007FD4  C028  F0EF         	movff	calibrate@temp,_Rranges+4
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;./functions.c: 325:         temp = aveSensor(13);
  4122  007FD8  0E0D               	movlw	13
  4123  007FDA  EC12  F03A         	call	_aveSensor
  4124  007FDE  6E28               	movwf	calibrate@temp,c
  4125                           
  4126                           ;./functions.c: 326:         if (temp >= RRranges[4])
  4127  007FE0  0100               	movlb	0	; () banked
  4128  007FE2  51EA               	movf	(_RRranges+4)& (0+255),w,b
  4129  007FE4  5C28               	subwf	calibrate@temp,w,c
  4130  007FE6  B0D8               	btfsc	status,0,c
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;./functions.c: 327:         {;./functions.c: 328:             RRranges[4] = temp;
  4134  007FE8  C028  F0EA         	movff	calibrate@temp,_RRranges+4
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;./functions.c: 330:     }
  4138  007FEC  2A25               	incf	calibrate@samples_1180,f,c
  4139                           
  4140                           ; BSR set to: 0
  4141  007FEE  0EF9               	movlw	249
  4142  007FF0  6425               	cpfsgt	calibrate@samples_1180,c
  4143  007FF2  D7CB               	goto	l3021
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;./functions.c: 331:     PORTAbits.RA4 = 1;
  4147  007FF4  8880               	bsf	3968,4,c	;volatile
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;./functions.c: 333:     ranges();
  4151  007FF6  EC08  F03C         	call	_ranges	;wreg free
  4152                           
  4153                           ;./functions.c: 334:     PORTA = 0;
  4154  007FFA  0E00               	movlw	0
  4155  007FFC  6E80               	movwf	3968,c	;volatile
  4156  007FFE  0012               	return		;funcret
  4157  008000                     __end_of_calibrate:
  4158                           	opt callstack 0
  4159                           
  4160 ;; *************** function _ranges *****************
  4161 ;; Defined at:
  4162 ;;		line 902 in file "./functions.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  b               1   14[COMRAM] unsigned char 
  4167 ;;  a               1   13[COMRAM] unsigned char 
  4168 ;;  rangeArray     10    3[COMRAM] PTR unsigned char [5]
  4169 ;;		 -> RRranges(5), Rranges(5), Mranges(5), Lranges(5), 
  4170 ;;		 -> LLranges(5), 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4180 ;;      Params:         0       0       0       0       0       0       0
  4181 ;;      Locals:        12       0       0       0       0       0       0
  4182 ;;      Temps:          2       0       0       0       0       0       0
  4183 ;;      Totals:        14       0       0       0       0       0       0
  4184 ;;Total ram usage:       14 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    1
  4187 ;; This function calls:
  4188 ;;		_trans
  4189 ;; This function is called by:
  4190 ;;		_calibrate
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text28
  4195  007810                     __ptext28:
  4196                           	opt callstack 0
  4197  007810                     _ranges:
  4198                           	opt callstack 27
  4199                           
  4200                           ;./functions.c: 904:     unsigned char* rangeArray[] = {LLranges, Lranges, Mranges, Rran
      +                          ges, RRranges};
  4201                           
  4202                           ;incstack = 0
  4203  007810  EE20  F0A8         	lfsr	2,ranges@F6085
  4204  007814  EE10  F004         	lfsr	1,ranges@rangeArray
  4205  007818  0E09               	movlw	9
  4206  00781A                     u1171:
  4207  00781A  CFDB FFE3          	movff	plusw2,plusw1
  4208  00781E  06E8               	decf	wreg,f,c
  4209  007820  E2FC               	bc	u1171
  4210                           
  4211                           ;./functions.c: 905:     LLranges[0] += 10;
  4212  007822  0E0A               	movlw	10
  4213  007824  2657               	addwf	_LLranges,f,c
  4214                           
  4215                           ;./functions.c: 906:     LLranges[1] += 5;
  4216  007826  0E05               	movlw	5
  4217  007828  2658               	addwf	_LLranges+1,f,c
  4218                           
  4219                           ;./functions.c: 907:     LLranges[2] += 10;
  4220  00782A  0E0A               	movlw	10
  4221  00782C  2659               	addwf	_LLranges+2,f,c
  4222                           
  4223                           ;./functions.c: 911:     Lranges[0] += 10;
  4224  00782E  0E0A               	movlw	10
  4225  007830  0100               	movlb	0	; () banked
  4226  007832  27F5               	addwf	_Lranges& (0+255),f,b
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;./functions.c: 912:     Lranges[1] += 10;
  4230  007834  0E0A               	movlw	10
  4231  007836  27F6               	addwf	(_Lranges+1)& (0+255),f,b
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;./functions.c: 913:     Lranges[2] += 10;
  4235  007838  0E0A               	movlw	10
  4236  00783A  27F7               	addwf	(_Lranges+2)& (0+255),f,b
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;./functions.c: 917:     Mranges[0] += 10;
  4240  00783C  0E0A               	movlw	10
  4241  00783E  27F0               	addwf	_Mranges& (0+255),f,b
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;./functions.c: 918:     Mranges[1] += 10;
  4245  007840  0E0A               	movlw	10
  4246  007842  27F1               	addwf	(_Mranges+1)& (0+255),f,b
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;./functions.c: 923:     Rranges[0] += 10;
  4250  007844  0E0A               	movlw	10
  4251  007846  27EB               	addwf	_Rranges& (0+255),f,b
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;./functions.c: 924:     Rranges[1] += 10;
  4255  007848  0E0A               	movlw	10
  4256  00784A  27EC               	addwf	(_Rranges+1)& (0+255),f,b
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;./functions.c: 929:     RRranges[0] += 10;
  4260  00784C  0E0A               	movlw	10
  4261  00784E  27E6               	addwf	_RRranges& (0+255),f,b
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;./functions.c: 930:     RRranges[1] += 10;
  4265  007850  0E0A               	movlw	10
  4266  007852  27E7               	addwf	(_RRranges+1)& (0+255),f,b
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;./functions.c: 936:     for (unsigned char a = 0; a < 5; a++){
  4270  007854  0E00               	movlw	0
  4271  007856  6E0E               	movwf	ranges@a,c
  4272  007858                     l2545:
  4273                           
  4274                           ;./functions.c: 937:         for (unsigned char b = 0; b < 5; b++){
  4275  007858  0E00               	movlw	0
  4276  00785A  6E0F               	movwf	ranges@b,c
  4277  00785C                     l2551:
  4278                           
  4279                           ;./functions.c: 938:             trans(rangeArray[a][b]);
  4280  00785C  500E               	movf	ranges@a,w,c
  4281  00785E  0D02               	mullw	2
  4282  007860  0E04               	movlw	low ranges@rangeArray
  4283  007862  24F3               	addwf	prodl,w,c
  4284  007864  6ED9               	movwf	fsr2l,c
  4285  007866  0E00               	movlw	high ranges@rangeArray
  4286  007868  20F4               	addwfc	prodh,w,c
  4287  00786A  6EDA               	movwf	fsr2h,c
  4288  00786C  CFDE F002          	movff	postinc2,??_ranges
  4289  007870  CFDD F003          	movff	postdec2,??_ranges+1
  4290  007874  500F               	movf	ranges@b,w,c
  4291  007876  2402               	addwf	??_ranges,w,c
  4292  007878  6ED9               	movwf	fsr2l,c
  4293  00787A  0E00               	movlw	0
  4294  00787C  2003               	addwfc	??_ranges+1,w,c
  4295  00787E  6EDA               	movwf	fsr2h,c
  4296  007880  50DF               	movf	indf2,w,c
  4297  007882  ECC5  F038         	call	_trans
  4298                           
  4299                           ;./functions.c: 939:         }
  4300  007886  2A0F               	incf	ranges@b,f,c
  4301  007888  0E04               	movlw	4
  4302  00788A  640F               	cpfsgt	ranges@b,c
  4303  00788C  D7E7               	goto	l2551
  4304                           
  4305                           ;./functions.c: 940:         trans('\n');
  4306  00788E  0E0A               	movlw	10
  4307  007890  ECC5  F038         	call	_trans
  4308                           
  4309                           ;./functions.c: 941:     }
  4310  007894  2A0E               	incf	ranges@a,f,c
  4311  007896  0E04               	movlw	4
  4312  007898  640E               	cpfsgt	ranges@a,c
  4313  00789A  D7DE               	goto	l2545
  4314  00789C  0012               	return	
  4315  00789E                     __end_of_ranges:
  4316                           	opt callstack 0
  4317                           
  4318 ;; *************** function _oneSecDelay *****************
  4319 ;; Defined at:
  4320 ;;		line 962 in file "./functions.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  a               1    1[COMRAM] unsigned char 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4334 ;;      Params:         0       0       0       0       0       0       0
  4335 ;;      Locals:         1       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0
  4337 ;;      Totals:         1       0       0       0       0       0       0
  4338 ;;Total ram usage:        1 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    1
  4341 ;; This function calls:
  4342 ;;		_msDelay
  4343 ;; This function is called by:
  4344 ;;		_calibrate
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text29
  4349  0071C6                     __ptext29:
  4350                           	opt callstack 0
  4351  0071C6                     _oneSecDelay:
  4352                           	opt callstack 27
  4353                           
  4354                           ;./functions.c: 964:     for (unsigned char a = 0; a < 15; a++)
  4355                           
  4356                           ;incstack = 0
  4357  0071C6  0E00               	movlw	0
  4358  0071C8  6E02               	movwf	oneSecDelay@a,c
  4359  0071CA                     l2507:
  4360                           
  4361                           ;./functions.c: 965:     {;./functions.c: 966:         msDelay(63);
  4362  0071CA  0E3F               	movlw	63
  4363  0071CC  EC46  F039         	call	_msDelay
  4364                           
  4365                           ;./functions.c: 967:     }
  4366  0071D0  2A02               	incf	oneSecDelay@a,f,c
  4367  0071D2  0E0E               	movlw	14
  4368  0071D4  6402               	cpfsgt	oneSecDelay@a,c
  4369  0071D6  D7F9               	goto	l2507
  4370  0071D8  0012               	return	
  4371  0071DA                     __end_of_oneSecDelay:
  4372                           	opt callstack 0
  4373                           
  4374 ;; *************** function _msDelay *****************
  4375 ;; Defined at:
  4376 ;;		line 972 in file "./functions.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  delayInMs       1    wreg     unsigned char 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  delayInMs       1    0[COMRAM] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0, prodl, prodh
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4390 ;;      Params:         0       0       0       0       0       0       0
  4391 ;;      Locals:         1       0       0       0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0
  4393 ;;      Totals:         1       0       0       0       0       0       0
  4394 ;;Total ram usage:        1 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_pyCal
  4400 ;;		_capTouch
  4401 ;;		_oneSecDelay
  4402 ;;		_turn45p
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text30
  4407  00728C                     __ptext30:
  4408                           	opt callstack 0
  4409  00728C                     _msDelay:
  4410                           	opt callstack 28
  4411                           
  4412                           ;incstack = 0
  4413                           ;msDelay@delayInMs stored from wreg
  4414  00728C  6E01               	movwf	msDelay@delayInMs,c
  4415                           
  4416                           ;./functions.c: 972: void msDelay(unsigned char delayInMs);./functions.c: 973: {;./funct
      +                          ions.c: 974:     TMR6 = 0;
  4417  00728E  0E00               	movlw	0
  4418  007290  010F               	movlb	15	; () banked
  4419  007292  6F4C               	movwf	76,b	;volatile
  4420                           
  4421                           ; BSR set to: 15
  4422                           ;./functions.c: 975:     PR6 = 4 * delayInMs;
  4423  007294  5001               	movf	msDelay@delayInMs,w,c
  4424  007296  0D04               	mullw	4
  4425  007298  CFF3 FF4B          	movff	prodl,3915	;volatile
  4426                           
  4427                           ; BSR set to: 15
  4428                           ;./functions.c: 976:     T6CON = 0xFF;
  4429  00729C  694A               	setf	74,b	;volatile
  4430  00729E                     l505:
  4431  00729E  A47E               	btfss	3966,2,c	;volatile
  4432  0072A0  D7FE               	goto	l505
  4433                           
  4434                           ;./functions.c: 979:     PIR5bits.TMR6IF = 0;
  4435  0072A2  947E               	bcf	3966,2,c	;volatile
  4436                           
  4437                           ;./functions.c: 980:     T6CON = 0;
  4438  0072A4  0E00               	movlw	0
  4439  0072A6  010F               	movlb	15	; () banked
  4440  0072A8  6F4A               	movwf	74,b	;volatile
  4441                           
  4442                           ; BSR set to: 15
  4443  0072AA  0012               	return		;funcret
  4444  0072AC                     __end_of_msDelay:
  4445                           	opt callstack 0
  4446                           
  4447 ;; *************** function _aveSensor *****************
  4448 ;; Defined at:
  4449 ;;		line 887 in file "./functions.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  s               1    wreg     unsigned char 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  s               1    5[COMRAM] unsigned char 
  4454 ;;  a               1    9[COMRAM] unsigned char 
  4455 ;;  measurements    2    6[COMRAM] unsigned int 
  4456 ;;  result          1    8[COMRAM] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      unsigned char 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0, cstack
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4466 ;;      Params:         0       0       0       0       0       0       0
  4467 ;;      Locals:         5       0       0       0       0       0       0
  4468 ;;      Temps:          2       0       0       0       0       0       0
  4469 ;;      Totals:         7       0       0       0       0       0       0
  4470 ;;Total ram usage:        7 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    1
  4473 ;; This function calls:
  4474 ;;		_readADC
  4475 ;;		_setADCChannel
  4476 ;; This function is called by:
  4477 ;;		_calibrate
  4478 ;;		_pyCal
  4479 ;;		_capTouch
  4480 ;;		_readAllSensors
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text31
  4485  007424                     __ptext31:
  4486                           	opt callstack 0
  4487  007424                     _aveSensor:
  4488                           	opt callstack 27
  4489                           
  4490                           ; BSR set to: 15
  4491                           ;incstack = 0
  4492                           ;aveSensor@s stored from wreg
  4493  007424  6E06               	movwf	aveSensor@s,c
  4494                           
  4495                           ;./functions.c: 887: unsigned char aveSensor(unsigned char s);./functions.c: 888: {;./fu
      +                          nctions.c: 889:     setADCChannel(s);
  4496  007426  5006               	movf	aveSensor@s,w,c
  4497  007428  EC40  F03B         	call	_setADCChannel
  4498                           
  4499                           ;./functions.c: 890:     unsigned int measurements = 0;
  4500  00742C  0E00               	movlw	0
  4501  00742E  6E08               	movwf	aveSensor@measurements+1,c
  4502  007430  0E00               	movlw	0
  4503  007432  6E07               	movwf	aveSensor@measurements,c
  4504                           
  4505                           ;./functions.c: 892:     for (unsigned char a = 0; a < 4; a++)
  4506  007434  0E00               	movlw	0
  4507  007436  6E0A               	movwf	aveSensor@a,c
  4508  007438                     l2407:
  4509                           
  4510                           ;./functions.c: 893:     {;./functions.c: 894:         measurements += readADC();
  4511  007438  ECB6  F038         	call	_readADC	;wreg free
  4512  00743C  6E04               	movwf	??_aveSensor& (0+255),c
  4513  00743E  5004               	movf	??_aveSensor,w,c
  4514  007440  2607               	addwf	aveSensor@measurements,f,c
  4515  007442  0E00               	movlw	0
  4516  007444  2208               	addwfc	aveSensor@measurements+1,f,c
  4517                           
  4518                           ;./functions.c: 895:     }
  4519  007446  2A0A               	incf	aveSensor@a,f,c
  4520  007448  0E03               	movlw	3
  4521  00744A  640A               	cpfsgt	aveSensor@a,c
  4522  00744C  D7F5               	goto	l2407
  4523                           
  4524                           ;./functions.c: 897:     unsigned char result = measurements / 4;
  4525  00744E  C007  F004         	movff	aveSensor@measurements,??_aveSensor
  4526  007452  C008  F005         	movff	aveSensor@measurements+1,??_aveSensor+1
  4527  007456  90D8               	bcf	status,0,c
  4528  007458  3205               	rrcf	??_aveSensor+1,f,c
  4529  00745A  3204               	rrcf	??_aveSensor,f,c
  4530  00745C  90D8               	bcf	status,0,c
  4531  00745E  3205               	rrcf	??_aveSensor+1,f,c
  4532  007460  3204               	rrcf	??_aveSensor,f,c
  4533  007462  5004               	movf	??_aveSensor,w,c
  4534  007464  6E09               	movwf	aveSensor@result,c
  4535                           
  4536                           ;./functions.c: 899:     return result;
  4537  007466  5009               	movf	aveSensor@result,w,c
  4538  007468  0012               	return		;funcret
  4539  00746A                     __end_of_aveSensor:
  4540                           	opt callstack 0
  4541                           
  4542 ;; *************** function _setADCChannel *****************
  4543 ;; Defined at:
  4544 ;;		line 836 in file "./functions.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  channel         1    wreg     unsigned char 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  channel         1    2[COMRAM] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:         0       0       0       0       0       0       0
  4559 ;;      Locals:         1       0       0       0       0       0       0
  4560 ;;      Temps:          2       0       0       0       0       0       0
  4561 ;;      Totals:         3       0       0       0       0       0       0
  4562 ;;Total ram usage:        3 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_aveSensor
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text32
  4572  007680                     __ptext32:
  4573                           	opt callstack 0
  4574  007680                     _setADCChannel:
  4575                           	opt callstack 27
  4576                           
  4577                           ;incstack = 0
  4578                           ;setADCChannel@channel stored from wreg
  4579  007680  6E03               	movwf	setADCChannel@channel,c
  4580                           
  4581                           ;./functions.c: 836: void setADCChannel(unsigned char channel);./functions.c: 837: {;./f
      +                          unctions.c: 838:     ADCON0bits.CHS = channel;
  4582  007682  C003  F001         	movff	setADCChannel@channel,??_setADCChannel
  4583  007686  4601               	rlncf	??_setADCChannel,f,c
  4584  007688  4601               	rlncf	??_setADCChannel,f,c
  4585  00768A  50C2               	movf	4034,w,c	;volatile
  4586  00768C  1801               	xorwf	??_setADCChannel,w,c
  4587  00768E  0B83               	andlw	-125
  4588  007690  1801               	xorwf	??_setADCChannel,w,c
  4589  007692  6EC2               	movwf	4034,c	;volatile
  4590                           
  4591                           ;./functions.c: 840:     switch (channel)
  4592  007694  D01C               	goto	l2385
  4593  007696                     l462:
  4594                           
  4595                           ;./functions.c: 843:         TRISBbits.TRISB2 = 1;
  4596  007696  8493               	bsf	3987,2,c	;volatile
  4597                           
  4598                           ;./functions.c: 844:         ANSELBbits.ANSB2 = 1;
  4599  007698  010F               	movlb	15	; () banked
  4600  00769A  8539               	bsf	57,2,b	;volatile
  4601                           
  4602                           ;./functions.c: 845:         break;
  4603  00769C  0012               	return	
  4604  00769E                     l464:
  4605                           
  4606                           ;./functions.c: 847:         TRISBbits.TRISB3 = 1;
  4607  00769E  8693               	bsf	3987,3,c	;volatile
  4608                           
  4609                           ;./functions.c: 848:         ANSELBbits.ANSB3 = 1;
  4610  0076A0  010F               	movlb	15	; () banked
  4611  0076A2  8739               	bsf	57,3,b	;volatile
  4612                           
  4613                           ;./functions.c: 849:         break;
  4614  0076A4  0012               	return	
  4615  0076A6                     l465:
  4616                           
  4617                           ;./functions.c: 851:         TRISBbits.TRISB1 = 1;
  4618  0076A6  8293               	bsf	3987,1,c	;volatile
  4619                           
  4620                           ;./functions.c: 852:         ANSELBbits.ANSB1 = 1;
  4621  0076A8  010F               	movlb	15	; () banked
  4622  0076AA  8339               	bsf	57,1,b	;volatile
  4623                           
  4624                           ;./functions.c: 853:         break;
  4625  0076AC  0012               	return	
  4626  0076AE                     l466:
  4627                           
  4628                           ;./functions.c: 855:         TRISBbits.TRISB0 = 1;
  4629  0076AE  8093               	bsf	3987,0,c	;volatile
  4630                           
  4631                           ;./functions.c: 856:         ANSELBbits.ANSB0 = 1;
  4632  0076B0  010F               	movlb	15	; () banked
  4633  0076B2  8139               	bsf	57,0,b	;volatile
  4634                           
  4635                           ;./functions.c: 857:         break;
  4636  0076B4  0012               	return	
  4637  0076B6                     l467:
  4638                           
  4639                           ;./functions.c: 859:         TRISBbits.TRISB5 = 1;
  4640  0076B6  8A93               	bsf	3987,5,c	;volatile
  4641                           
  4642                           ;./functions.c: 860:         ANSELBbits.ANSB5 = 1;
  4643  0076B8  010F               	movlb	15	; () banked
  4644  0076BA  8B39               	bsf	57,5,b	;volatile
  4645                           
  4646                           ;./functions.c: 861:         break;
  4647  0076BC  0012               	return	
  4648  0076BE                     l468:
  4649                           
  4650                           ;./functions.c: 863:         TRISCbits.TRISC3 = 1;
  4651  0076BE  8694               	bsf	3988,3,c	;volatile
  4652                           
  4653                           ;./functions.c: 864:         ANSELCbits.ANSC3 = 1;
  4654  0076C0  010F               	movlb	15	; () banked
  4655  0076C2  873A               	bsf	58,3,b	;volatile
  4656                           
  4657                           ;./functions.c: 865:         break;
  4658  0076C4  0012               	return	
  4659  0076C6                     l469:
  4660                           
  4661                           ;./functions.c: 868:         TRISBbits.TRISB0 = 1;
  4662  0076C6  8093               	bsf	3987,0,c	;volatile
  4663                           
  4664                           ;./functions.c: 869:         ANSELBbits.ANSB0 = 1;
  4665  0076C8  010F               	movlb	15	; () banked
  4666  0076CA  8139               	bsf	57,0,b	;volatile
  4667                           
  4668                           ;./functions.c: 870:         break;
  4669  0076CC  0012               	return	
  4670  0076CE                     l2385:
  4671  0076CE  5003               	movf	setADCChannel@channel,w,c
  4672  0076D0  6E01               	movwf	??_setADCChannel& (0+255),c
  4673  0076D2  6A02               	clrf	(??_setADCChannel+1)& (0+255),c
  4674                           
  4675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4676                           ; Switch size 1, requested type "simple"
  4677                           ; Number of cases is 1, Range of values is 0 to 0
  4678                           ; switch strategies available:
  4679                           ; Name         Instructions Cycles
  4680                           ; simple_byte            4     3 (average)
  4681                           ;	Chosen strategy is simple_byte
  4682  0076D4  5002               	movf	??_setADCChannel+1,w,c
  4683  0076D6  0A00               	xorlw	0	; case 0
  4684  0076D8  A4D8               	btfss	status,2,c
  4685  0076DA  D7F5               	goto	l469
  4686                           
  4687                           ; Switch size 1, requested type "simple"
  4688                           ; Number of cases is 6, Range of values is 8 to 15
  4689                           ; switch strategies available:
  4690                           ; Name         Instructions Cycles
  4691                           ; simple_byte           19    10 (average)
  4692                           ;	Chosen strategy is simple_byte
  4693  0076DC  5001               	movf	??_setADCChannel,w,c
  4694  0076DE  0A08               	xorlw	8	; case 8
  4695  0076E0  B4D8               	btfsc	status,2,c
  4696  0076E2  D7D9               	goto	l462
  4697  0076E4  0A01               	xorlw	1	; case 9
  4698  0076E6  B4D8               	btfsc	status,2,c
  4699  0076E8  D7DA               	goto	l464
  4700  0076EA  0A03               	xorlw	3	; case 10
  4701  0076EC  B4D8               	btfsc	status,2,c
  4702  0076EE  D7DB               	goto	l465
  4703  0076F0  0A06               	xorlw	6	; case 12
  4704  0076F2  B4D8               	btfsc	status,2,c
  4705  0076F4  D7DC               	goto	l466
  4706  0076F6  0A01               	xorlw	1	; case 13
  4707  0076F8  B4D8               	btfsc	status,2,c
  4708  0076FA  D7DD               	goto	l467
  4709  0076FC  0A02               	xorlw	2	; case 15
  4710  0076FE  B4D8               	btfsc	status,2,c
  4711  007700  D7DE               	goto	l468
  4712  007702  D7E1               	goto	l469
  4713  007704                     __end_of_setADCChannel:
  4714                           	opt callstack 0
  4715                           
  4716 ;; *************** function _readADC *****************
  4717 ;; Defined at:
  4718 ;;		line 877 in file "./functions.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;		None
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      unsigned char 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4732 ;;      Params:         0       0       0       0       0       0       0
  4733 ;;      Locals:         0       0       0       0       0       0       0
  4734 ;;      Temps:          0       0       0       0       0       0       0
  4735 ;;      Totals:         0       0       0       0       0       0       0
  4736 ;;Total ram usage:        0 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_aveSensor
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text33
  4746  00716C                     __ptext33:
  4747                           	opt callstack 0
  4748  00716C                     _readADC:
  4749                           	opt callstack 27
  4750                           
  4751                           ;./functions.c: 879:     ADCON0bits.GO = 1;
  4752                           
  4753                           ; BSR set to: 15
  4754                           ;incstack = 0
  4755  00716C  82C2               	bsf	4034,1,c	;volatile
  4756  00716E                     l473:
  4757                           
  4758                           ;./functions.c: 881:     while (ADCON0bits.GO)
  4759  00716E  B2C2               	btfsc	4034,1,c	;volatile
  4760  007170  D7FE               	goto	l473
  4761                           
  4762                           ;./functions.c: 883:     return ADRESH;
  4763  007172  50C4               	movf	4036,w,c	;volatile
  4764  007174  0012               	return		;funcret
  4765  007176                     __end_of_readADC:
  4766                           	opt callstack 0
  4767                           
  4768 ;; *************** function _PRC *****************
  4769 ;; Defined at:
  4770 ;;		line 338 in file "./functions.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  a               1   56[COMRAM] unsigned char 
  4775 ;;  a               1   55[COMRAM] unsigned char 
  4776 ;;  a               1   54[COMRAM] unsigned char 
  4777 ;;  a               1   53[COMRAM] unsigned char 
  4778 ;;  a               1   52[COMRAM] unsigned char 
  4779 ;;  a               1   51[COMRAM] unsigned char 
  4780 ;;  a               1   50[COMRAM] unsigned char 
  4781 ;;  a               1   49[COMRAM] unsigned char 
  4782 ;;  a               1   48[COMRAM] unsigned char 
  4783 ;;  message        32   11[COMRAM] unsigned char [32]
  4784 ;;  message2        5   43[COMRAM] unsigned char [5]
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4794 ;;      Params:         0       0       0       0       0       0       0
  4795 ;;      Locals:        46       0       0       0       0       0       0
  4796 ;;      Temps:          2       0       0       0       0       0       0
  4797 ;;      Totals:        48       0       0       0       0       0       0
  4798 ;;Total ram usage:       48 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    2
  4801 ;; This function calls:
  4802 ;;		_error
  4803 ;;		_trans
  4804 ;; This function is called by:
  4805 ;;		_RCE
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text34
  4810  007B5E                     __ptext34:
  4811                           	opt callstack 0
  4812  007B5E                     _PRC:
  4813                           	opt callstack 27
  4814                           
  4815                           ;./functions.c: 340:     PORTD = 0b11111001;
  4816                           
  4817                           ;incstack = 0
  4818  007B5E  0EF9               	movlw	249
  4819  007B60  6E83               	movwf	3971,c	;volatile
  4820  007B62                     l3063:
  4821                           
  4822                           ;./functions.c: 342:     {;./functions.c: 343:         unsigned char message[] = "\nWhat
      +                           color should sanic race?\n";
  4823  007B62  EE20  F060         	lfsr	2,PRC@F6028
  4824  007B66  EE10  F00C         	lfsr	1,PRC@message
  4825  007B6A  0E1F               	movlw	31
  4826  007B6C                     u1901:
  4827  007B6C  CFDB FFE3          	movff	plusw2,plusw1
  4828  007B70  06E8               	decf	wreg,f,c
  4829  007B72  E2FC               	bc	u1901
  4830                           
  4831                           ;./functions.c: 344:         unsigned char message2[] = "\nSet";
  4832  007B74  EE20  F0DC         	lfsr	2,PRC@F6030
  4833  007B78  EE10  F02C         	lfsr	1,PRC@message2
  4834  007B7C  0E04               	movlw	4
  4835  007B7E                     u1911:
  4836  007B7E  CFDB FFE3          	movff	plusw2,plusw1
  4837  007B82  06E8               	decf	wreg,f,c
  4838  007B84  E2FC               	bc	u1911
  4839                           
  4840                           ;./functions.c: 346:         for (unsigned char a = 0; a < 31; a++)
  4841  007B86  0E00               	movlw	0
  4842  007B88  6E31               	movwf	PRC@a,c
  4843  007B8A                     l3071:
  4844                           
  4845                           ;./functions.c: 347:         {;./functions.c: 348:             trans(message[a]);
  4846  007B8A  0E0C               	movlw	low PRC@message
  4847  007B8C  2431               	addwf	PRC@a,w,c
  4848  007B8E  6ED9               	movwf	fsr2l,c
  4849  007B90  6ADA               	clrf	fsr2h,c
  4850  007B92  0E00               	movlw	high PRC@message
  4851  007B94  22DA               	addwfc	fsr2h,f,c
  4852  007B96  50DF               	movf	indf2,w,c
  4853  007B98  ECC5  F038         	call	_trans
  4854                           
  4855                           ;./functions.c: 349:         }
  4856  007B9C  2A31               	incf	PRC@a,f,c
  4857  007B9E  0E1E               	movlw	30
  4858  007BA0  6431               	cpfsgt	PRC@a,c
  4859  007BA2  D7F3               	goto	l3071
  4860  007BA4                     u1920:
  4861  007BA4  BA9E               	btfsc	3998,5,c	;volatile
  4862  007BA6  D088               	goto	l3187
  4863  007BA8  D7FD               	goto	u1920
  4864  007BAA                     l3077:
  4865                           
  4866                           ;./functions.c: 355:             for (unsigned char a = 0; a < 8; a++)
  4867  007BAA  0E00               	movlw	0
  4868  007BAC  6E32               	movwf	PRC@a_1187,c
  4869  007BAE                     l3083:
  4870                           
  4871                           ;./functions.c: 356:             {;./functions.c: 357:                 raceColor[a] = 0;
  4872  007BAE  0EC6               	movlw	low _raceColor
  4873  007BB0  2432               	addwf	PRC@a_1187,w,c
  4874  007BB2  6ED9               	movwf	fsr2l,c
  4875  007BB4  6ADA               	clrf	fsr2h,c
  4876  007BB6  0E00               	movlw	high _raceColor
  4877  007BB8  22DA               	addwfc	fsr2h,f,c
  4878  007BBA  0E00               	movlw	0
  4879  007BBC  6EDF               	movwf	indf2,c
  4880                           
  4881                           ;./functions.c: 358:             }
  4882  007BBE  2A32               	incf	PRC@a_1187,f,c
  4883  007BC0  0E07               	movlw	7
  4884  007BC2  6432               	cpfsgt	PRC@a_1187,c
  4885  007BC4  D7F4               	goto	l3083
  4886                           
  4887                           ;./functions.c: 359:             raceColor[3] = 1;
  4888  007BC6  0E01               	movlw	1
  4889  007BC8  0100               	movlb	0	; () banked
  4890  007BCA  6FC9               	movwf	(_raceColor+3)& (0+255),b
  4891                           
  4892                           ;./functions.c: 360:             for (unsigned char a = 0; a < 4; a++)
  4893  007BCC  0E00               	movlw	0
  4894  007BCE  6E33               	movwf	PRC@a_1188,c
  4895  007BD0                     l3095:
  4896                           
  4897                           ;./functions.c: 361:             {;./functions.c: 362:                 trans(message2[a]
      +                          );
  4898  007BD0  0E2C               	movlw	low PRC@message2
  4899  007BD2  2433               	addwf	PRC@a_1188,w,c
  4900  007BD4  6ED9               	movwf	fsr2l,c
  4901  007BD6  6ADA               	clrf	fsr2h,c
  4902  007BD8  0E00               	movlw	high PRC@message2
  4903  007BDA  22DA               	addwfc	fsr2h,f,c
  4904  007BDC  50DF               	movf	indf2,w,c
  4905  007BDE  ECC5  F038         	call	_trans
  4906                           
  4907                           ;./functions.c: 363:             }
  4908  007BE2  2A33               	incf	PRC@a_1188,f,c
  4909  007BE4  0E03               	movlw	3
  4910  007BE6  6433               	cpfsgt	PRC@a_1188,c
  4911  007BE8  D7F3               	goto	l3095
  4912  007BEA  0012               	return	
  4913  007BEC                     l3103:
  4914                           
  4915                           ;./functions.c: 367:             for (unsigned char a = 0; a < 8; a++)
  4916  007BEC  0E00               	movlw	0
  4917  007BEE  6E34               	movwf	PRC@a_1189,c
  4918  007BF0                     l3109:
  4919                           
  4920                           ;./functions.c: 368:             {;./functions.c: 369:                 raceColor[a] = 0;
  4921  007BF0  0EC6               	movlw	low _raceColor
  4922  007BF2  2434               	addwf	PRC@a_1189,w,c
  4923  007BF4  6ED9               	movwf	fsr2l,c
  4924  007BF6  6ADA               	clrf	fsr2h,c
  4925  007BF8  0E00               	movlw	high _raceColor
  4926  007BFA  22DA               	addwfc	fsr2h,f,c
  4927  007BFC  0E00               	movlw	0
  4928  007BFE  6EDF               	movwf	indf2,c
  4929                           
  4930                           ;./functions.c: 370:             }
  4931  007C00  2A34               	incf	PRC@a_1189,f,c
  4932  007C02  0E07               	movlw	7
  4933  007C04  6434               	cpfsgt	PRC@a_1189,c
  4934  007C06  D7F4               	goto	l3109
  4935                           
  4936                           ;./functions.c: 371:             raceColor[1] = 1;
  4937  007C08  0E01               	movlw	1
  4938  007C0A  0100               	movlb	0	; () banked
  4939  007C0C  6FC7               	movwf	(_raceColor+1)& (0+255),b
  4940                           
  4941                           ;./functions.c: 372:             for (unsigned char a = 0; a < 4; a++)
  4942  007C0E  0E00               	movlw	0
  4943  007C10  6E35               	movwf	PRC@a_1190,c
  4944  007C12                     l3121:
  4945                           
  4946                           ;./functions.c: 373:             {;./functions.c: 374:                 trans(message2[a]
      +                          );
  4947  007C12  0E2C               	movlw	low PRC@message2
  4948  007C14  2435               	addwf	PRC@a_1190,w,c
  4949  007C16  6ED9               	movwf	fsr2l,c
  4950  007C18  6ADA               	clrf	fsr2h,c
  4951  007C1A  0E00               	movlw	high PRC@message2
  4952  007C1C  22DA               	addwfc	fsr2h,f,c
  4953  007C1E  50DF               	movf	indf2,w,c
  4954  007C20  ECC5  F038         	call	_trans
  4955                           
  4956                           ;./functions.c: 375:             }
  4957  007C24  2A35               	incf	PRC@a_1190,f,c
  4958  007C26  0E03               	movlw	3
  4959  007C28  6435               	cpfsgt	PRC@a_1190,c
  4960  007C2A  D7F3               	goto	l3121
  4961  007C2C  0012               	return	
  4962  007C2E                     l3129:
  4963                           
  4964                           ;./functions.c: 379:             for (unsigned char a = 0; a < 8; a++)
  4965  007C2E  0E00               	movlw	0
  4966  007C30  6E36               	movwf	PRC@a_1191,c
  4967  007C32                     l3135:
  4968                           
  4969                           ;./functions.c: 380:             {;./functions.c: 381:                 raceColor[a] = 0;
  4970  007C32  0EC6               	movlw	low _raceColor
  4971  007C34  2436               	addwf	PRC@a_1191,w,c
  4972  007C36  6ED9               	movwf	fsr2l,c
  4973  007C38  6ADA               	clrf	fsr2h,c
  4974  007C3A  0E00               	movlw	high _raceColor
  4975  007C3C  22DA               	addwfc	fsr2h,f,c
  4976  007C3E  0E00               	movlw	0
  4977  007C40  6EDF               	movwf	indf2,c
  4978                           
  4979                           ;./functions.c: 382:             }
  4980  007C42  2A36               	incf	PRC@a_1191,f,c
  4981  007C44  0E07               	movlw	7
  4982  007C46  6436               	cpfsgt	PRC@a_1191,c
  4983  007C48  D7F4               	goto	l3135
  4984                           
  4985                           ;./functions.c: 383:             raceColor[2] = 1;
  4986  007C4A  0E01               	movlw	1
  4987  007C4C  0100               	movlb	0	; () banked
  4988  007C4E  6FC8               	movwf	(_raceColor+2)& (0+255),b
  4989                           
  4990                           ;./functions.c: 384:             for (unsigned char a = 0; a < 4; a++)
  4991  007C50  0E00               	movlw	0
  4992  007C52  6E37               	movwf	PRC@a_1192,c
  4993  007C54                     l3147:
  4994                           
  4995                           ;./functions.c: 385:             {;./functions.c: 386:                 trans(message2[a]
      +                          );
  4996  007C54  0E2C               	movlw	low PRC@message2
  4997  007C56  2437               	addwf	PRC@a_1192,w,c
  4998  007C58  6ED9               	movwf	fsr2l,c
  4999  007C5A  6ADA               	clrf	fsr2h,c
  5000  007C5C  0E00               	movlw	high PRC@message2
  5001  007C5E  22DA               	addwfc	fsr2h,f,c
  5002  007C60  50DF               	movf	indf2,w,c
  5003  007C62  ECC5  F038         	call	_trans
  5004                           
  5005                           ;./functions.c: 387:             }
  5006  007C66  2A37               	incf	PRC@a_1192,f,c
  5007  007C68  0E03               	movlw	3
  5008  007C6A  6437               	cpfsgt	PRC@a_1192,c
  5009  007C6C  D7F3               	goto	l3147
  5010  007C6E  0012               	return	
  5011  007C70                     l3155:
  5012                           
  5013                           ;./functions.c: 391:             for (unsigned char a = 0; a < 8; a++)
  5014  007C70  0E00               	movlw	0
  5015  007C72  6E38               	movwf	PRC@a_1193,c
  5016  007C74                     l3161:
  5017                           
  5018                           ;./functions.c: 392:             {;./functions.c: 393:                 raceColor[a] = 0;
  5019  007C74  0EC6               	movlw	low _raceColor
  5020  007C76  2438               	addwf	PRC@a_1193,w,c
  5021  007C78  6ED9               	movwf	fsr2l,c
  5022  007C7A  6ADA               	clrf	fsr2h,c
  5023  007C7C  0E00               	movlw	high _raceColor
  5024  007C7E  22DA               	addwfc	fsr2h,f,c
  5025  007C80  0E00               	movlw	0
  5026  007C82  6EDF               	movwf	indf2,c
  5027                           
  5028                           ;./functions.c: 394:             }
  5029  007C84  2A38               	incf	PRC@a_1193,f,c
  5030  007C86  0E07               	movlw	7
  5031  007C88  6438               	cpfsgt	PRC@a_1193,c
  5032  007C8A  D7F4               	goto	l3161
  5033                           
  5034                           ;./functions.c: 395:             raceColor[4] = 1;
  5035  007C8C  0E01               	movlw	1
  5036  007C8E  0100               	movlb	0	; () banked
  5037  007C90  6FCA               	movwf	(_raceColor+4)& (0+255),b
  5038                           
  5039                           ;./functions.c: 396:             for (unsigned char a = 0; a < 4; a++)
  5040  007C92  0E00               	movlw	0
  5041  007C94  6E39               	movwf	PRC@a_1194,c
  5042  007C96                     l3173:
  5043                           
  5044                           ;./functions.c: 397:             {;./functions.c: 398:                 trans(message2[a]
      +                          );
  5045  007C96  0E2C               	movlw	low PRC@message2
  5046  007C98  2439               	addwf	PRC@a_1194,w,c
  5047  007C9A  6ED9               	movwf	fsr2l,c
  5048  007C9C  6ADA               	clrf	fsr2h,c
  5049  007C9E  0E00               	movlw	high PRC@message2
  5050  007CA0  22DA               	addwfc	fsr2h,f,c
  5051  007CA2  50DF               	movf	indf2,w,c
  5052  007CA4  ECC5  F038         	call	_trans
  5053                           
  5054                           ;./functions.c: 399:             }
  5055  007CA8  2A39               	incf	PRC@a_1194,f,c
  5056  007CAA  0E03               	movlw	3
  5057  007CAC  6439               	cpfsgt	PRC@a_1194,c
  5058  007CAE  D7F3               	goto	l3173
  5059  007CB0  0012               	return	
  5060  007CB2                     l3181:
  5061                           
  5062                           ;./functions.c: 404:             error();
  5063  007CB2  ECBA  F039         	call	_error	;wreg free
  5064                           
  5065                           ;./functions.c: 405:             continue;
  5066  007CB6  D755               	goto	l3063
  5067  007CB8                     l3187:
  5068  007CB8  50AE               	movf	4014,w,c	;volatile
  5069  007CBA  6E0A               	movwf	??_PRC& (0+255),c
  5070  007CBC  6A0B               	clrf	(??_PRC+1)& (0+255),c
  5071                           
  5072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5073                           ; Switch size 1, requested type "simple"
  5074                           ; Number of cases is 1, Range of values is 0 to 0
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte            4     3 (average)
  5078                           ;	Chosen strategy is simple_byte
  5079  007CBE  500B               	movf	??_PRC+1,w,c
  5080  007CC0  0A00               	xorlw	0	; case 0
  5081  007CC2  A4D8               	btfss	status,2,c
  5082  007CC4  D7F6               	goto	l3181
  5083                           
  5084                           ; Switch size 1, requested type "simple"
  5085                           ; Number of cases is 4, Range of values is 66 to 110
  5086                           ; switch strategies available:
  5087                           ; Name         Instructions Cycles
  5088                           ; simple_byte           13     7 (average)
  5089                           ;	Chosen strategy is simple_byte
  5090  007CC6  500A               	movf	??_PRC,w,c
  5091  007CC8  0A42               	xorlw	66	; case 66
  5092  007CCA  B4D8               	btfsc	status,2,c
  5093  007CCC  D76E               	goto	l3077
  5094  007CCE  0A05               	xorlw	5	; case 71
  5095  007CD0  B4D8               	btfsc	status,2,c
  5096  007CD2  D78C               	goto	l3103
  5097  007CD4  0A15               	xorlw	21	; case 82
  5098  007CD6  B4D8               	btfsc	status,2,c
  5099  007CD8  D7AA               	goto	l3129
  5100  007CDA  0A3C               	xorlw	60	; case 110
  5101  007CDC  B4D8               	btfsc	status,2,c
  5102  007CDE  D7C8               	goto	l3155
  5103  007CE0  D7E8               	goto	l3181
  5104  007CE2                     __end_of_PRC:
  5105                           	opt callstack 0
  5106                           
  5107 ;; *************** function _error *****************
  5108 ;; Defined at:
  5109 ;;		line 946 in file "./functions.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  a               1    8[COMRAM] unsigned char 
  5114 ;;  message         7    1[COMRAM] unsigned char [7]
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5124 ;;      Params:         0       0       0       0       0       0       0
  5125 ;;      Locals:         8       0       0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0
  5127 ;;      Totals:         8       0       0       0       0       0       0
  5128 ;;Total ram usage:        8 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    1
  5131 ;; This function calls:
  5132 ;;		_trans
  5133 ;; This function is called by:
  5134 ;;		_PRC
  5135 ;;		_RCE
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text35
  5140  007374                     __ptext35:
  5141                           	opt callstack 0
  5142  007374                     _error:
  5143                           	opt callstack 28
  5144                           
  5145                           ;./functions.c: 948:     unsigned char message[] = "ERROR\n";
  5146                           
  5147                           ;incstack = 0
  5148  007374  EE20  F0CF         	lfsr	2,error@F6090
  5149  007378  EE10  F002         	lfsr	1,error@message
  5150  00737C  0E06               	movlw	6
  5151  00737E                     u1201:
  5152  00737E  CFDB FFE3          	movff	plusw2,plusw1
  5153  007382  06E8               	decf	wreg,f,c
  5154  007384  E2FC               	bc	u1201
  5155                           
  5156                           ;./functions.c: 950:     for (unsigned char a = 0; a < 6; a++)
  5157  007386  0E00               	movlw	0
  5158  007388  6E09               	movwf	error@a,c
  5159  00738A                     l2571:
  5160                           
  5161                           ;./functions.c: 951:     {;./functions.c: 952:         trans(message[a]);
  5162  00738A  0E02               	movlw	low error@message
  5163  00738C  2409               	addwf	error@a,w,c
  5164  00738E  6ED9               	movwf	fsr2l,c
  5165  007390  6ADA               	clrf	fsr2h,c
  5166  007392  0E00               	movlw	high error@message
  5167  007394  22DA               	addwfc	fsr2h,f,c
  5168  007396  50DF               	movf	indf2,w,c
  5169  007398  ECC5  F038         	call	_trans
  5170                           
  5171                           ;./functions.c: 953:     }
  5172  00739C  2A09               	incf	error@a,f,c
  5173  00739E  0E05               	movlw	5
  5174  0073A0  6409               	cpfsgt	error@a,c
  5175  0073A2  D7F3               	goto	l2571
  5176                           
  5177                           ;./functions.c: 955:     RCREG = 0;
  5178  0073A4  0E00               	movlw	0
  5179  0073A6  6EAE               	movwf	4014,c	;volatile
  5180  0073A8  0012               	return		;funcret
  5181  0073AA                     __end_of_error:
  5182                           	opt callstack 0
  5183                           
  5184 ;; *************** function _trans *****************
  5185 ;; Defined at:
  5186 ;;		line 820 in file "./functions.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  s               1    wreg     unsigned char 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  s               1    0[COMRAM] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5200 ;;      Params:         0       0       0       0       0       0       0
  5201 ;;      Locals:         1       0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0
  5203 ;;      Totals:         1       0       0       0       0       0       0
  5204 ;;Total ram usage:        1 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_PRC
  5210 ;;		_pyCal
  5211 ;;		_capTouch
  5212 ;;		_ranges
  5213 ;;		_error
  5214 ;;		_RCE
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text36
  5219  00718A                     __ptext36:
  5220                           	opt callstack 0
  5221  00718A                     _trans:
  5222                           	opt callstack 29
  5223                           
  5224                           ;incstack = 0
  5225                           ;trans@s stored from wreg
  5226  00718A  6E01               	movwf	trans@s,c
  5227  00718C                     
  5228                           ;./functions.c: 822:     while (!PIR1bits.TX1IF)
  5229                           
  5230                           ;./functions.c: 823:         ;
  5231  00718C  A89E               	btfss	3998,4,c	;volatile
  5232  00718E  D7FE               	goto	l2419
  5233                           
  5234                           ;./functions.c: 824:     TXREG = s;
  5235  007190  C001  FFAD         	movff	trans@s,4013	;volatile
  5236  007194  0012               	return		;funcret
  5237  007196                     __end_of_trans:
  5238                           	opt callstack 0
  5239  0000                     
  5240                           	psect	rparam
  5241  0000                     tosu	equ	0xFFF
  5242                           tosh	equ	0xFFE
  5243                           tosl	equ	0xFFD
  5244                           stkptr	equ	0xFFC
  5245                           pclatu	equ	0xFFB
  5246                           pclath	equ	0xFFA
  5247                           pcl	equ	0xFF9
  5248                           tblptru	equ	0xFF8
  5249                           tblptrh	equ	0xFF7
  5250                           tblptrl	equ	0xFF6
  5251                           tablat	equ	0xFF5
  5252                           prodh	equ	0xFF4
  5253                           prodl	equ	0xFF3
  5254                           indf0	equ	0xFEF
  5255                           postinc0	equ	0xFEE
  5256                           postdec0	equ	0xFED
  5257                           preinc0	equ	0xFEC
  5258                           plusw0	equ	0xFEB
  5259                           fsr0h	equ	0xFEA
  5260                           fsr0l	equ	0xFE9
  5261                           wreg	equ	0xFE8
  5262                           indf1	equ	0xFE7
  5263                           postinc1	equ	0xFE6
  5264                           postdec1	equ	0xFE5
  5265                           preinc1	equ	0xFE4
  5266                           plusw1	equ	0xFE3
  5267                           fsr1h	equ	0xFE2
  5268                           fsr1l	equ	0xFE1
  5269                           bsr	equ	0xFE0
  5270                           indf2	equ	0xFDF
  5271                           postinc2	equ	0xFDE
  5272                           postdec2	equ	0xFDD
  5273                           preinc2	equ	0xFDC
  5274                           plusw2	equ	0xFDB
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        166
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     79      92
    BANK0           160      0     159
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ranges@rangeArray	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 

    ranges@F6085	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 

    classifyColors@sensorRanges	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 

    classifyColors@F6065	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 

    calibrate@rangeArray	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 

    calibrate@F6015	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_RCE
    _RCE->_PRC
    _pyCal->_aveSensor
    _navigate->_classifyColors
    _readAllSensors->_aveSensor
    _capTouch->_aveSensor
    _calibrate->_ranges
    _ranges->_trans
    _oneSecDelay->_msDelay
    _aveSensor->_setADCChannel
    _PRC->_error
    _error->_trans

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4638
                                _RCE
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupADC
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RCE                                                 22    22      0    4638
                                             57 COMRAM    22    22      0
                                _PRC
                          _calibrate
                           _capTouch
                              _error
                           _navigate
                              _pyCal
                              _trans
 ---------------------------------------------------------------------------------
 (2) _pyCal                                                2     2      0     272
                                             10 COMRAM     2     2      0
                          _aveSensor
                            _msDelay
                           _setupADC
                              _trans
 ---------------------------------------------------------------------------------
 (2) _navigate                                             0     0      0     674
                     _classifyColors
                 _determineDirection
               _displayColorDetected
                   _displayRaceColor
                     _readAllSensors
                           _setupADC
                       _setupPWMLeft
                      _setupPWMRight
                         _stopMotors
                          _testBlack
 ---------------------------------------------------------------------------------
 (3) _testBlack                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _stopMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMRight                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMLeft                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readAllSensors                                       2     2      0     249
                                             10 COMRAM     2     2      0
                          _aveSensor
 ---------------------------------------------------------------------------------
 (3) _displayRaceColor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displayColorDetected                                 3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _determineDirection                                   0     0      0       0
                           _hardLeft
                          _hardRight
                               _left
                              _right
                         _searchMode
                           _straight
 ---------------------------------------------------------------------------------
 (4) _straight                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _searchMode                                           0     0      0       0
                        _timer1setup
 ---------------------------------------------------------------------------------
 (5) _timer1setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _right                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _left                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _hardRight                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _hardLeft                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _classifyColors                                      13    13      0     403
                                              0 COMRAM    13    13      0
 ---------------------------------------------------------------------------------
 (2) _capTouch                                            31    31      0     488
                                             10 COMRAM    31    31      0
                                _abs
                          _aveSensor
                            _msDelay
                              _trans
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calibrate                                           25    25      0    1926
                                             15 COMRAM    25    25      0
                          _aveSensor
                        _oneSecDelay
                             _ranges
 ---------------------------------------------------------------------------------
 (3) _ranges                                              14    14      0     182
                                              1 COMRAM    14    14      0
                              _trans
 ---------------------------------------------------------------------------------
 (3) _oneSecDelay                                          1     1      0      68
                                              1 COMRAM     1     1      0
                            _msDelay
 ---------------------------------------------------------------------------------
 (3) _msDelay                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _aveSensor                                            7     7      0     159
                                              3 COMRAM     7     7      0
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (4) _setADCChannel                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PRC                                                 48    48      0     865
                                              9 COMRAM    48    48      0
                              _error
                              _trans
 ---------------------------------------------------------------------------------
 (2) _error                                                8     8      0     114
                                              1 COMRAM     8     8      0
                              _trans
 ---------------------------------------------------------------------------------
 (2) _trans                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RCE
     _PRC
       _error
         _trans
       _trans
     _calibrate
       _aveSensor
         _readADC
         _setADCChannel
       _oneSecDelay
         _msDelay
       _ranges
         _trans
     _capTouch
       _abs
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
       _trans
     _error
       _trans
     _navigate
       _classifyColors
       _determineDirection
         _hardLeft
         _hardRight
         _left
         _right
         _searchMode
           _timer1setup
         _straight
       _displayColorDetected
       _displayRaceColor
       _readAllSensors
         _aveSensor
           _readADC
           _setADCChannel
       _setupADC
       _setupPWMLeft
       _setupPWMRight
       _stopMotors
       _testBlack
     _pyCal
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
       _setupADC
       _trans
     _trans
   _init
     _clearPorts
     _setupADC
     _setupOSC
     _setupSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      9F       4       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4F      5C       1       96.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB       9        0.0%
DATA                 0      0      FB      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 27 00:12:23 2019

               _colorsDetected 00FA                  capTouch@F6046 0080                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                  __CFG_LVP$ON 000000                            l330 767E                            l430 77BC  
                          l431 77C8                            l336 71AE                            l505 729E  
                          l337 71A8                            l425 778C                            l522 7188  
                          l427 7798                            l372 773A                            l428 77A4  
                          l429 77B0                            l462 7696                            l543 79AE  
                          l464 769E                            l473 716E                            l465 76A6  
                          l537 799E                            l466 76AE                            l467 76B6  
                          l468 76BE                            l469 76C6                   __CFG_CPB$OFF 000000  
                          _RCE 7938                            _PR2 000FBB                            _PR4 000F52  
                 __CFG_CPD$OFF 000000                            _PR6 000F4B                            _PRC 7B5E  
                          _abs 7342                            _col 0055                            prod 000FF3  
                          wreg 000FE8                ??_setupPWMRight 0001                           ?_RCE 0001  
                         ?_PRC 0001                           RCE@a 004E                           PRC@a 0031  
                         ?_abs 0001                           l1236 736A                           l3021 7F8A  
                         l3103 7BEC                           l3121 7C12                           l3109 7BF0  
                         l3301 7952                           l3135 7C32                           l3071 7B8A  
                         l3063 7B62                           l2407 7438                           l3207 74C6  
                         l3311 797C                           l3161 7C74                           l3129 7C2E  
                         l3225 747A                           l2419 718C                           l3155 7C70  
                         l3147 7C54                           l3083 7BAE                           l2507 71CA  
                         l3331 79C4                           l3315 798A                           l3181 7CB2  
                         l3173 7C96                           l3077 7BAA                           l2621 7A54  
                         l3245 74A8                           l3341 79E4                           l3333 79CC  
                         l3095 7BD0                           l2551 785C                           l2631 7B04  
                         l2607 73B2                           l2711 756E                           l3343 79EA  
                         l3335 79D2                           l3319 7998                           l2385 76CE  
                         l2545 7858                           l2625 7A94                           l3337 79D8  
                         l2571 738A                           l3187 7CB8                           l3267 7646  
                         l3259 7624                           l2635 7B44                           l3355 7A24  
                         l3339 79DE                           l3347 79F0                           l2813 7D5A  
                         l2661 7720                           l2645 77D4                           l3197 74BC  
                         l3349 7A20                           l2591 740C                           l2583 73F4  
                         l2681 7758                           l2665 772A                           l2657 7716  
                         l2595 7418                           l2587 7400                           l2917 7E72  
                         l2693 7782                           l2685 7766                           l2677 774A  
                         l2865 7DE6                           l2785 7CFC                           l2689 7774  
                         l2779 7CF8                           l2969 7EFE                           u1201 737E  
                         u2101 7618                           u1310 7AF4                           u1171 781A  
                         u2131 7946                           _LATA 000F89                           u1270 73E4  
                         _LATB 000F8A                           _LATC 000F8B                           u2080 74A2  
                         _LATD 000F8C                           _FSR0 000FE9                           u1281 7A48  
                         _LATE 000F8D                           u1370 7726                           u1460 756A  
                         u1550 7350                           u1561 7CEC                           u1901 7B6C  
                         u1911 7B7E                           u1591 7D42                           u1920 7BA4  
                         _TMR1 000FCE                           _TMR2 000FBC                           _TMR4 000F53  
                         _TMR6 000F4C                           abs@a 0001                           _main 7180  
                         _left 723E                           _init 71F2                           _size 0056  
                         fsr1h 000FE2                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                  __CFG_BORV$190 000000  
                         prodl 000FF3                           start 0000                  __CFG_IESO$OFF 000000  
        ?_displayColorDetected 0001                   ___param_bank 000000                 capTouch@touch1 0027  
               capTouch@touch2 0028                          ??_RCE 003A                          ??_PRC 000A  
                        ??_abs 0003                   _BAUDCON1bits 000FB8                          ?_main 0001  
                        ?_left 0001                          ?_init 0001                          _T1CON 000FCD  
                        _T2CON 000FBA                          _T4CON 000F51                          _T6CON 000F4A  
                        _RCREG 000FAE                          _PORTA 000F80                          _PORTB 000F81  
                        _PORTC 000F82                          _PORTD 000F83                          _PORTE 000F84  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TRISD 000F95                          _TRISE 000F96                          _TXREG 000FAD  
       __size_of_setADCChannel 0084                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
                 ?_oneSecDelay 0001                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                __end_of_msDelay 72AC  
              __end_of_readADC 7176                 __CFG_EBTRB$OFF 000000                          _error 7374  
                        _pyCal 74B4                          _right 7258             __CFG_MCLRE$EXTMCLR 000000  
                        _trans 718A                          tablat 000FF5                          plusw1 000FE3  
                        plusw2 000FDB                          status 000FD8                 __CFG_HFOFST$ON 000000  
               __CFG_PBADEN$ON 000000                capTouch@message 000B                __initialization 7502  
                 __end_of_main 718A                   __end_of_left 7258                   __end_of_init 720A  
                calibrate@temp 0028                         ??_main 0050                         ??_left 0001  
                       ??_init 0001                  __activetblptr 000002                         _ADCON1 000FC1  
                       ?_error 0001                         ?_pyCal 0001                         _ADRESH 000FC4  
                       _CCPR1L 000FBE                         _CCPR5L 000F55    __size_of_determineDirection 0084  
                       ?_right 0001                         ?_trans 0001                         _ANSELA 000F38  
                       _ANSELB 000F39                         _ANSELC 000F3A                         _ANSELD 000F3B  
                       _ANSELE 000F3C               calibrate@samples 0021                 __CFG_WDTEN$OFF 000000  
             calibrate@sensors 0012                         _RCSTA1 000FAB                         _SPBRG1 000FAF  
             __end_of_capTouch 7680                         _TXSTA1 000FAC         ??_displayColorDetected 0001  
                _setADCChannel 7680               __end_of_hardLeft 7224                 __CFG_XINST$OFF 000000  
               __CFG_STVREN$ON 000000                   ?_timer1setup 0001                         _ranges 7810  
             __end_of_navigate 74B4                classifyColors@a 000D        __size_of_readAllSensors 003C  
                    ??_msDelay 0001                      ??_readADC 0001                         error@a 0009  
                       pyCal@a 000C                   __pdataCOMRAM 0050               __end_of_setupADC 72CE  
             __end_of_setupOSC 7180                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             RCE@commandReceived 004A                         trans@s 0001  
                 ?_setupSerial 0001               __end_of_straight 728C                     __accesstop 0060  
      __end_of__initialization 7550                 ?_setADCChannel 0001                  ___rparam_used 000001  
            ?_displayRaceColor 0001                 __pcstackCOMRAM 0001                 calibrate@F6015 00BC  
               calibrate@F6019 00E1                    ranges@F6085 00A8             __size_of_calibrate 031E  
                 __pidataBANK0 789E             ??_displayRaceColor 0001           setADCChannel@channel 0003  
                __end_of_error 73AA                  __end_of_pyCal 7502                  __end_of_right 7272  
                __end_of_trans 7196                      RCE@a_1356 004F             __size_of_aveSensor 0046  
           __size_of_hardRight 001A                        ??_error 0002                        ??_pyCal 000B  
                      ??_right 0001           __size_of_oneSecDelay 0014                        ??_trans 0001  
                   __pbssBANK0 00FA                __CFG_PLLCFG$OFF 000000                      PRC@a_1190 0035  
                    PRC@a_1191 0036                      PRC@a_1192 0037                      PRC@a_1193 0038  
                    PRC@a_1194 0039                      PRC@a_1187 0032                      PRC@a_1188 0033  
                    PRC@a_1189 0034                     _clearPorts 75B4             __CFG_CCP2MX$PORTC1 000000  
      __size_of_classifyColors 0120             __CFG_CCP3MX$PORTB5 000000                        _CCP1CON 000FBD  
                      _CCP5CON 000F54                        ?_ranges 0001             __size_of_testBlack 005A  
                    ?_capTouch 0001                      ?_hardLeft 0001                        _SPBRGH1 000FB0  
            __end_of_calibrate 8000     displayColorDetected@sensor 0003          __end_of_setupPWMRight 7312  
              ??_setADCChannel 0001                      ?_navigate 0001                    PRC@message2 002C  
            __end_of_aveSensor 746A              __end_of_hardRight 723E                     calibrate@a 0026  
                   calibrate@b 0027                __CFG_PWRTEN$OFF 000000                        _Lranges 00F5  
                      __Hparam 0000                        _Mranges 00F0                        __Lparam 0000  
          calibrate@rangeArray 0017                      ?_setupADC 0001                        _Rranges 00EB  
            RCE@nCharsReceived 004D                      ?_setupOSC 0001                   error@message 0002  
                    ?_straight 0001                        __pcinit 7502                        __ramtop 0600  
              __size_of_ranges 008E                        __ptext0 7180                        __ptext1 71F2  
                      __ptext2 7312                        __ptext3 7176                        __ptext4 75B4  
                      __ptext5 7938                        __ptext6 74B4                        __ptext7 746A  
                      __ptext8 755A                        __ptext9 71B4                 _readAllSensors 73AA  
             ranges@rangeArray 0004                        _msDelay 728C                        _readADC 716C  
                 __size_of_RCE 0106                   __size_of_PRC 0184                      _T1CONbits 000FCD  
         __size_of_timer1setup 0018                     ??_capTouch 000B                      _T2CONbits 000FBA  
                 __size_of_abs 0032                      _T4CONbits 000F51                     ??_hardLeft 0001  
                   _searchMode 71A2           end_of_initialization 7550           __size_of_setupSerial 0030  
                __Lmediumconst 0000                     ??_navigate 000E                        ranges@a 000E  
                      ranges@b 000F                  ?_setupPWMLeft 0001              __end_of_testBlack 75B4  
                  ?_clearPorts 0001                     aveSensor@a 000A                     aveSensor@s 0006  
                   ??_setupADC 0001                   oneSecDelay@a 0002                     ??_setupOSC 0001  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     _sensorVals 0050  
       __end_of_readAllSensors 73E6                     ??_straight 0001                      _PORTAbits 000F80  
                    _PORTCbits 000F82                      _PORTEbits 000F84            classifyColors@F6065 00B2  
   __end_of_determineDirection 7788                      _TRISBbits 000F93                      _TRISCbits 000F94  
                    _TRISEbits 000F96          aveSensor@measurements 0007                 ??_setupPWMLeft 0001  
             msDelay@delayInMs 0001                     _stopMotors 71B4  __size_of_displayColorDetected 0088  
               _classifyColors 7A3E                ?_readAllSensors 0001                  __pidataCOMRAM 7196  
               __end_of_ranges 789E            start_initialization 7502      __size_of_displayRaceColor 003E  
                  __end_of_RCE 7A3E                    __end_of_PRC 7CE2            __size_of_clearPorts 005A  
                  __end_of_abs 7374                    ?_searchMode 0001                     error@F6090 00CF  
       __end_of_classifyColors 7B5E                 _sensorChannels 00D6                     RCE@message 003C  
                  __pdataBANK0 0060                       ??_ranges 0002                       RCE@F6106 009A  
                  __pbssCOMRAM 005C                  ??_oneSecDelay 0002              __size_of_capTouch 0072  
            __size_of_hardLeft 001A     classifyColors@sensorRanges 0003                       PRC@F6030 00DC  
                     PRC@F6028 0060                      _calibrate 7CE2                    ?_stopMotors 0001  
              ?_classifyColors 0001              __size_of_navigate 004A                      _aveSensor 7424  
                    _hardRight 7224            __size_of_searchMode 0012              __size_of_setupADC 0022  
            __size_of_setupOSC 000A               __CFG_PRICLKEN$ON 000000           __end_of_setupPWMLeft 72F0  
                     ?_msDelay 0001                      capTouch@a 0029                       ?_readADC 0001  
            __size_of_straight 001A                     PRC@message 000C                      _raceColor 00C6  
                     _CCPTMRS0 000F49                       _CCPTMRS1 000F48          calibrate@samples_1180 0025  
        calibrate@samples_1177 0022          calibrate@samples_1178 0023          calibrate@samples_1179 0024  
               __size_of_error 0036                 __size_of_pyCal 004E                 __size_of_right 001A  
               __size_of_trans 000C            __end_of_oneSecDelay 71DA                     ?_calibrate 0001  
        __end_of_setADCChannel 7704                       _PIE1bits 000F9D                       _PIE5bits 000F7D  
                 ??_clearPorts 0001                       _PIR1bits 000F9E                       _PIR5bits 000F7E  
                    _testBlack 755A               __CFG_WDTPS$32768 000000                     ?_aveSensor 0001  
                   ?_hardRight 0001                  ??_timer1setup 0001         __size_of_setupPWMRight 0022  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0                readAllSensors@a 000B  
                     _LLranges 0057               _displayRaceColor 73E6            __size_of_stopMotors 0012  
                ??_setupSerial 0001             __end_of_clearPorts 760E                      copy_data0 7516  
                    copy_data1 7536                       _RRranges 00E6             _determineDirection 7704  
                     __Hrparam 0000               ??_readAllSensors 000B                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000                     ?_testBlack 0001              __CFG_P2BMX$PORTD2 000000  
          ?_determineDirection 0001                     _ANSELBbits 000F39                     _ANSELCbits 000F3A  
                     _capTouch 760E               __size_of_msDelay 0020               __size_of_readADC 000A  
 __end_of_displayColorDetected 7810            __end_of_timer1setup 71F2                    _oneSecDelay 71C6  
                     _hardLeft 720A                       __ptext10 72F0                       __ptext11 72CE  
                     __ptext20 7258                       __ptext12 72AC                       __ptext21 723E  
                     __ptext13 73AA                       __ptext30 728C                       __ptext22 7224  
                     __ptext14 73E6                       __ptext31 7424                       __ptext23 720A  
                     __ptext15 7788                       __ptext32 7680                       __ptext24 7A3E  
                     __ptext16 7704                       __ptext33 716C                       __ptext25 760E  
                     __ptext17 7272                       __ptext34 7B5E                       __ptext26 7342  
                     __ptext18 71A2                       __ptext35 7374                       __ptext27 7CE2  
                     __ptext19 71DA                       __ptext36 718A                       __ptext28 7810  
                 ??_searchMode 0001                       __ptext29 71C6           ??_determineDirection 0001  
                _setupPWMRight 72F0                    ??_calibrate 0010                  __size_of_main 000A  
                __size_of_left 001A                  __size_of_init 0018                       _navigate 746A  
          __end_of_setupSerial 7342                       _setupADC 72AC                       _setupOSC 7176  
                  ??_aveSensor 0004                    ??_hardRight 0001          __size_of_setupPWMLeft 0022  
           __end_of_searchMode 71B4                       _straight 7272                     _INTCONbits 000FF2  
         determineDirection@rc 005C               ??_classifyColors 0001                 ?_setupPWMRight 0001  
                 _setupPWMLeft 72CE                   ??_stopMotors 0001                     _OSCCONbits 000FD3  
                  ??_testBlack 0001                    _timer1setup 71DA                aveSensor@result 0009  
            __CFG_T3CMX$PORTC0 000000             __end_of_stopMotors 71C6                    _setupSerial 7312  
            __CFG_FOSC$INTIO67 000000       __end_of_displayRaceColor 7424           _displayColorDetected 7788  
