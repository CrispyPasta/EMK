

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 26 16:55:33 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F45K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  006E8A                     __pidataCOMRAM:
    83                           	opt callstack 0
    84                           
    85                           ;initializer for _col
    86  006E8A  42                 	db	66
    87                           
    88                           ;initializer for _size
    89  006E8B  05                 	db	5
    90                           
    91                           ;initializer for _Lranges
    92  006E8C  82                 	db	130
    93  006E8D  B2                 	db	178
    94  006E8E  B4                 	db	180
    95  006E8F  BC                 	db	188
    96  006E90  FF                 	db	255
    97                           
    98                           ;initializer for _LLranges
    99  006E91  8C                 	db	140
   100  006E92  A8                 	db	168
   101  006E93  B9                 	db	185
   102  006E94  B9                 	db	185
   103  006E95  FF                 	db	255
   104                           
   105                           	psect	idataBANK0
   106  007326                     __pidataBANK0:
   107                           	opt callstack 0
   108                           
   109                           ;initializer for PRC@F6024
   110  007326  0A                 	db	10
   111  007327  57                 	db	87
   112  007328  68                 	db	104
   113  007329  61                 	db	97
   114  00732A  74                 	db	116
   115  00732B  20                 	db	32
   116  00732C  63                 	db	99
   117  00732D  6F                 	db	111
   118  00732E  6C                 	db	108
   119  00732F  6F                 	db	111
   120  007330  72                 	db	114
   121  007331  20                 	db	32
   122  007332  73                 	db	115
   123  007333  68                 	db	104
   124  007334  6F                 	db	111
   125  007335  75                 	db	117
   126  007336  6C                 	db	108
   127  007337  64                 	db	100
   128  007338  20                 	db	32
   129  007339  73                 	db	115
   130  00733A  61                 	db	97
   131  00733B  6E                 	db	110
   132  00733C  69                 	db	105
   133  00733D  63                 	db	99
   134  00733E  20                 	db	32
   135  00733F  72                 	db	114
   136  007340  61                 	db	97
   137  007341  63                 	db	99
   138  007342  65                 	db	101
   139  007343  3F                 	db	63
   140  007344  0A                 	db	10
   141  007345  00                 	db	0
   142                           
   143                           ;initializer for capTouch@F6042
   144  007346  0A                 	db	10
   145  007347  53                 	db	83
   146  007348  61                 	db	97
   147  007349  6E                 	db	110
   148  00734A  69                 	db	105
   149  00734B  63                 	db	99
   150  00734C  20                 	db	32
   151  00734D  77                 	db	119
   152  00734E  61                 	db	97
   153  00734F  69                 	db	105
   154  007350  74                 	db	116
   155  007351  73                 	db	115
   156  007352  20                 	db	32
   157  007353  66                 	db	102
   158  007354  6F                 	db	111
   159  007355  72                 	db	114
   160  007356  20                 	db	32
   161  007357  61                 	db	97
   162  007358  20                 	db	32
   163  007359  74                 	db	116
   164  00735A  6F                 	db	111
   165  00735B  75                 	db	117
   166  00735C  63                 	db	99
   167  00735D  68                 	db	104
   168  00735E  0A                 	db	10
   169  00735F  00                 	db	0
   170                           
   171                           ;initializer for RCE@F6098
   172  007360  0A                 	db	10
   173  007361  53                 	db	83
   174  007362  61                 	db	97
   175  007363  6E                 	db	110
   176  007364  69                 	db	105
   177  007365  63                 	db	99
   178  007366  20                 	db	32
   179  007367  72                 	db	114
   180  007368  61                 	db	97
   181  007369  63                 	db	99
   182  00736A  65                 	db	101
   183  00736B  73                 	db	115
   184  00736C  20                 	db	32
   185  00736D  00                 	db	0
   186                           
   187                           ;initializer for classifyColors@F6061
   188  00736E  5B                 	db	low _LLranges
   189  00736F  00                 	db	high _LLranges
   190  007370  56                 	db	low _Lranges
   191  007371  00                 	db	high _Lranges
   192  007372  E1                 	db	low _Mranges
   193  007373  00                 	db	high _Mranges
   194  007374  DC                 	db	low _Rranges
   195  007375  00                 	db	high _Rranges
   196  007376  D7                 	db	low _RRranges
   197  007377  00                 	db	high _RRranges
   198                           
   199                           ;initializer for _raceColor
   200  007378  30                 	db	48
   201  007379  30                 	db	48
   202  00737A  30                 	db	48
   203  00737B  30                 	db	48
   204  00737C  31                 	db	49
   205  00737D  30                 	db	48
   206  00737E  30                 	db	48
   207  00737F  30                 	db	48
   208  007380  00                 	db	0
   209                           
   210                           ;initializer for error@F6083
   211  007381  45                 	db	69
   212  007382  52                 	db	82
   213  007383  52                 	db	82
   214  007384  4F                 	db	79
   215  007385  52                 	db	82
   216  007386  0A                 	db	10
   217  007387  00                 	db	0
   218                           
   219                           ;initializer for _sensorChannels
   220  007388  0C                 	db	12
   221  007389  0A                 	db	10
   222  00738A  08                 	db	8
   223  00738B  09                 	db	9
   224  00738C  0D                 	db	13
   225  00738D  0F                 	db	15
   226                           
   227                           ;initializer for PRC@F6026
   228  00738E  0A                 	db	10
   229  00738F  53                 	db	83
   230  007390  65                 	db	101
   231  007391  74                 	db	116
   232  007392  00                 	db	0
   233                           
   234                           ;initializer for calibrate@F6015
   235  007393  0C                 	db	12
   236  007394  08                 	db	8
   237  007395  09                 	db	9
   238  007396  0A                 	db	10
   239  007397  0D                 	db	13
   240                           
   241                           ;initializer for _sensorVals
   242  007398  78                 	db	120
   243  007399  AA                 	db	170
   244  00739A  AA                 	db	170
   245  00739B  BE                 	db	190
   246  00739C  FA                 	db	250
   247                           
   248                           ;initializer for _RRranges
   249  00739D  8C                 	db	140
   250  00739E  B9                 	db	185
   251  00739F  C3                 	db	195
   252  0073A0  C3                 	db	195
   253  0073A1  FF                 	db	255
   254                           
   255                           ;initializer for _Rranges
   256  0073A2  8C                 	db	140
   257  0073A3  AA                 	db	170
   258  0073A4  AF                 	db	175
   259  0073A5  D2                 	db	210
   260  0073A6  FF                 	db	255
   261                           
   262                           ;initializer for _Mranges
   263  0073A7  82                 	db	130
   264  0073A8  A5                 	db	165
   265  0073A9  AF                 	db	175
   266  0073AA  BC                 	db	188
   267  0073AB  FF                 	db	255
   268  0000                     _T6CON	set	3914
   269  0000                     _PR6	set	3915
   270  0000                     _TMR6	set	3916
   271  0000                     _ANSELCbits	set	3898
   272  0000                     _ANSELBbits	set	3897
   273  0000                     _ANSELE	set	3900
   274  0000                     _ANSELD	set	3899
   275  0000                     _ANSELC	set	3898
   276  0000                     _ANSELB	set	3897
   277  0000                     _ANSELA	set	3896
   278  0000                     _T4CONbits	set	3921
   279  0000                     _TMR4	set	3923
   280  0000                     _T4CON	set	3921
   281  0000                     _CCPTMRS1	set	3912
   282  0000                     _CCPR5L	set	3925
   283  0000                     _PR4	set	3922
   284  0000                     _CCP5CON	set	3924
   285  0000                     _CCPTMRS0	set	3913
   286  0000                     _TMR1	set	4046
   287  0000                     _FSR0	set	4073
   288  0000                     _T1CONbits	set	4045
   289  0000                     _INTCONbits	set	4082
   290  0000                     _T1CON	set	4045
   291  0000                     _PIR5bits	set	3966
   292  0000                     _ADRESH	set	4036
   293  0000                     _TRISBbits	set	3987
   294  0000                     _TXREG	set	4013
   295  0000                     _PORTEbits	set	3972
   296  0000                     _PORTCbits	set	3970
   297  0000                     _RCREG	set	4014
   298  0000                     _PORTAbits	set	3968
   299  0000                     _ADCON0bits	set	4034
   300  0000                     _ADCON1	set	4033
   301  0000                     _ADCON2bits	set	4032
   302  0000                     _BAUDCON1bits	set	4024
   303  0000                     _SPBRGH1	set	4016
   304  0000                     _SPBRG1	set	4015
   305  0000                     _RCSTA1	set	4011
   306  0000                     _TXSTA1	set	4012
   307  0000                     _OSCCONbits	set	4051
   308  0000                     _TRISE	set	3990
   309  0000                     _LATE	set	3981
   310  0000                     _PORTE	set	3972
   311  0000                     _TRISD	set	3989
   312  0000                     _LATD	set	3980
   313  0000                     _PORTD	set	3971
   314  0000                     _TRISC	set	3988
   315  0000                     _LATC	set	3979
   316  0000                     _PORTC	set	3970
   317  0000                     _TRISB	set	3987
   318  0000                     _LATB	set	3978
   319  0000                     _PORTB	set	3969
   320  0000                     _TRISA	set	3986
   321  0000                     _LATA	set	3977
   322  0000                     _PORTA	set	3968
   323  0000                     _PIE5bits	set	3965
   324  0000                     _TRISEbits	set	3990
   325  0000                     _T2CONbits	set	4026
   326  0000                     _PIE1bits	set	3997
   327  0000                     _TMR2	set	4028
   328  0000                     _T2CON	set	4026
   329  0000                     _TRISCbits	set	3988
   330  0000                     _CCPR1L	set	4030
   331  0000                     _PR2	set	4027
   332  0000                     _CCP1CON	set	4029
   333  0000                     _PIR1bits	set	3998
   334                           
   335                           ; #config settings
   336  0000                     
   337                           	psect	cinit
   338  00711A                     __pcinit:
   339                           	opt callstack 0
   340  00711A                     start_initialization:
   341                           	opt callstack 0
   342  00711A                     __initialization:
   343                           	opt callstack 0
   344                           
   345                           ; Initialize objects allocated to BANK0 (134 bytes)
   346                           ; load TBLPTR registers with __pidataBANK0
   347  00711A  0E26               	movlw	low __pidataBANK0
   348  00711C  6EF6               	movwf	tblptrl,c
   349  00711E  0E73               	movlw	high __pidataBANK0
   350  007120  6EF7               	movwf	tblptrh,c
   351  007122  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   352  007124  6EF8               	movwf	tblptru,c
   353  007126  EE00  F060         	lfsr	0,__pdataBANK0
   354  00712A  EE10 F086          	lfsr	1,134
   355  00712E                     copy_data0:
   356  00712E  0009               	tblrd		*+
   357  007130  CFF5 FFEE          	movff	tablat,postinc0
   358  007134  50E5               	movf	postdec1,w,c
   359  007136  50E1               	movf	fsr1l,w,c
   360  007138  E1FA               	bnz	copy_data0
   361                           
   362                           ; Initialize objects allocated to COMRAM (12 bytes)
   363                           ; load TBLPTR registers with __pidataCOMRAM
   364  00713A  0E8A               	movlw	low __pidataCOMRAM
   365  00713C  6EF6               	movwf	tblptrl,c
   366  00713E  0E6E               	movlw	high __pidataCOMRAM
   367  007140  6EF7               	movwf	tblptrh,c
   368  007142  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   369  007144  6EF8               	movwf	tblptru,c
   370  007146  EE00  F054         	lfsr	0,__pdataCOMRAM
   371  00714A  EE10 F00C          	lfsr	1,12
   372  00714E                     copy_data1:
   373  00714E  0009               	tblrd		*+
   374  007150  CFF5 FFEE          	movff	tablat,postinc0
   375  007154  50E5               	movf	postdec1,w,c
   376  007156  50E1               	movf	fsr1l,w,c
   377  007158  E1FA               	bnz	copy_data1
   378                           
   379                           ; Clear objects allocated to BANK0 (5 bytes)
   380  00715A  0100               	movlb	0
   381  00715C  6BFE               	clrf	(__pbssBANK0+4)& (0+255),b
   382  00715E  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   383  007160  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   384  007162  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   385  007164  6BFA               	clrf	__pbssBANK0& (0+255),b
   386  007166                     end_of_initialization:
   387                           	opt callstack 0
   388  007166                     __end_of__initialization:
   389                           	opt callstack 0
   390  007166  0E00               	movlw	low (__Lmediumconst shr (0+16))
   391  007168  6EF8               	movwf	tblptru,c
   392  00716A  0100               	movlb	0
   393  00716C  EF3A  F037         	goto	_main	;jump to C main() function
   394                           
   395                           	psect	dataCOMRAM
   396  000054                     __pdataCOMRAM:
   397                           	opt callstack 0
   398  000054                     _col:
   399                           	opt callstack 0
   400  000054                     	ds	1
   401  000055                     _size:
   402                           	opt callstack 0
   403  000055                     	ds	1
   404  000056                     _Lranges:
   405                           	opt callstack 0
   406  000056                     	ds	5
   407  00005B                     _LLranges:
   408                           	opt callstack 0
   409  00005B                     	ds	5
   410                           
   411                           	psect	bssBANK0
   412  0000FA                     __pbssBANK0:
   413                           	opt callstack 0
   414  0000FA                     _colorsDetected:
   415                           	opt callstack 0
   416  0000FA                     	ds	5
   417                           
   418                           	psect	dataBANK0
   419  000060                     __pdataBANK0:
   420                           	opt callstack 0
   421  000060                     PRC@F6024:
   422                           	opt callstack 0
   423  000060                     	ds	32
   424  000080                     capTouch@F6042:
   425                           	opt callstack 0
   426  000080                     	ds	26
   427  00009A                     RCE@F6098:
   428                           	opt callstack 0
   429  00009A                     	ds	14
   430  0000A8                     classifyColors@F6061:
   431                           	opt callstack 0
   432  0000A8                     	ds	10
   433  0000B2                     _raceColor:
   434                           	opt callstack 0
   435  0000B2                     	ds	9
   436  0000BB                     error@F6083:
   437                           	opt callstack 0
   438  0000BB                     	ds	7
   439  0000C2                     _sensorChannels:
   440                           	opt callstack 0
   441  0000C2                     	ds	6
   442  0000C8                     PRC@F6026:
   443                           	opt callstack 0
   444  0000C8                     	ds	5
   445  0000CD                     calibrate@F6015:
   446                           	opt callstack 0
   447  0000CD                     	ds	5
   448  0000D2                     _sensorVals:
   449                           	opt callstack 0
   450  0000D2                     	ds	5
   451  0000D7                     _RRranges:
   452                           	opt callstack 0
   453  0000D7                     	ds	5
   454  0000DC                     _Rranges:
   455                           	opt callstack 0
   456  0000DC                     	ds	5
   457  0000E1                     _Mranges:
   458                           	opt callstack 0
   459  0000E1                     	ds	5
   460                           
   461                           	psect	cstackBANK0
   462  0000E6                     __pcstackBANK0:
   463                           	opt callstack 0
   464  0000E6                     RCE@message:
   465                           	opt callstack 0
   466                           
   467                           ; 14 bytes @ 0x0
   468  0000E6                     	ds	14
   469  0000F4                     RCE@commandReceived:
   470                           	opt callstack 0
   471                           
   472                           ; 3 bytes @ 0xE
   473  0000F4                     	ds	3
   474  0000F7                     RCE@nCharsReceived:
   475                           	opt callstack 0
   476                           
   477                           ; 1 bytes @ 0x11
   478  0000F7                     	ds	1
   479  0000F8                     RCE@a:
   480                           	opt callstack 0
   481                           
   482                           ; 1 bytes @ 0x12
   483  0000F8                     	ds	1
   484  0000F9                     RCE@a_1331:
   485                           	opt callstack 0
   486                           
   487                           ; 1 bytes @ 0x13
   488  0000F9                     	ds	1
   489                           
   490                           	psect	cstackCOMRAM
   491  000001                     __pcstackCOMRAM:
   492                           	opt callstack 0
   493  000001                     ??_classifyColors:
   494  000001                     ??_displayColorDetected:
   495  000001                     ??_setADCChannel:
   496  000001                     ?_abs:
   497                           	opt callstack 0
   498  000001                     ?___xxtofl:
   499                           	opt callstack 0
   500  000001                     trans@s:
   501                           	opt callstack 0
   502  000001                     abs@a:
   503                           	opt callstack 0
   504  000001                     ___xxtofl@val:
   505                           	opt callstack 0
   506                           
   507                           ; 4 bytes @ 0x0
   508  000001                     	ds	1
   509  000002                     error@message:
   510                           	opt callstack 0
   511                           
   512                           ; 7 bytes @ 0x1
   513  000002                     	ds	1
   514  000003                     ??_abs:
   515  000003                     displayColorDetected@sensor:
   516                           	opt callstack 0
   517  000003                     setADCChannel@channel:
   518                           	opt callstack 0
   519                           
   520                           ; 1 bytes @ 0x2
   521  000003                     	ds	1
   522  000004                     ??_aveSensor:
   523                           
   524                           ; 1 bytes @ 0x3
   525  000004                     	ds	1
   526  000005                     ??___xxtofl:
   527  000005                     classifyColors@sensorRanges:
   528                           	opt callstack 0
   529                           
   530                           ; 10 bytes @ 0x4
   531  000005                     	ds	1
   532  000006                     aveSensor@s:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x5
   536  000006                     	ds	1
   537  000007                     aveSensor@measurements:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x6
   541  000007                     	ds	2
   542  000009                     aveSensor@result:
   543                           	opt callstack 0
   544  000009                     error@a:
   545                           	opt callstack 0
   546  000009                     ___xxtofl@sign:
   547                           	opt callstack 0
   548                           
   549                           ; 1 bytes @ 0x8
   550  000009                     	ds	1
   551  00000A                     ??_PRC:
   552  00000A                     aveSensor@a:
   553                           	opt callstack 0
   554  00000A                     ___xxtofl@exp:
   555                           	opt callstack 0
   556                           
   557                           ; 1 bytes @ 0x9
   558  00000A                     	ds	1
   559  00000B                     readAllSensors@a:
   560                           	opt callstack 0
   561  00000B                     ___xxtofl@arg:
   562                           	opt callstack 0
   563                           
   564                           ; 4 bytes @ 0xA
   565  00000B                     	ds	1
   566  00000C                     PRC@message:
   567                           	opt callstack 0
   568                           
   569                           ; 32 bytes @ 0xB
   570  00000C                     	ds	3
   571  00000F                     ?___flmul:
   572                           	opt callstack 0
   573  00000F                     classifyColors@a:
   574                           	opt callstack 0
   575  00000F                     ___flmul@b:
   576                           	opt callstack 0
   577                           
   578                           ; 4 bytes @ 0xE
   579  00000F                     	ds	1
   580  000010                     
   581                           ; 1 bytes @ 0xF
   582  000010                     	ds	3
   583  000013                     ___flmul@a:
   584                           	opt callstack 0
   585                           
   586                           ; 4 bytes @ 0x12
   587  000013                     	ds	4
   588  000017                     ??___flmul:
   589                           
   590                           ; 1 bytes @ 0x16
   591  000017                     	ds	4
   592  00001B                     ___flmul@sign:
   593                           	opt callstack 0
   594                           
   595                           ; 1 bytes @ 0x1A
   596  00001B                     	ds	1
   597  00001C                     ___flmul@grs:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0x1B
   601  00001C                     	ds	4
   602  000020                     ___flmul@aexp:
   603                           	opt callstack 0
   604                           
   605                           ; 1 bytes @ 0x1F
   606  000020                     	ds	1
   607  000021                     ___flmul@bexp:
   608                           	opt callstack 0
   609                           
   610                           ; 1 bytes @ 0x20
   611  000021                     	ds	1
   612  000022                     ___flmul@prod:
   613                           	opt callstack 0
   614                           
   615                           ; 4 bytes @ 0x21
   616  000022                     	ds	4
   617  000026                     ___flmul@temp:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x25
   621  000026                     	ds	2
   622  000028                     ?___fltol:
   623                           	opt callstack 0
   624  000028                     ___fltol@f1:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x27
   628  000028                     	ds	4
   629  00002C                     ??___fltol:
   630  00002C                     PRC@message2:
   631                           	opt callstack 0
   632                           
   633                           ; 5 bytes @ 0x2B
   634  00002C                     	ds	4
   635  000030                     ___fltol@sign1:
   636                           	opt callstack 0
   637                           
   638                           ; 1 bytes @ 0x2F
   639  000030                     	ds	1
   640  000031                     PRC@a:
   641                           	opt callstack 0
   642  000031                     ___fltol@exp1:
   643                           	opt callstack 0
   644                           
   645                           ; 1 bytes @ 0x30
   646  000031                     	ds	1
   647  000032                     PRC@a_1167:
   648                           	opt callstack 0
   649  000032                     msDelay@delayInMs:
   650                           	opt callstack 0
   651                           
   652                           ; 1 bytes @ 0x31
   653  000032                     	ds	1
   654  000033                     PRC@a_1168:
   655                           	opt callstack 0
   656  000033                     oneSecDelay@a:
   657                           	opt callstack 0
   658  000033                     capTouch@message:
   659                           	opt callstack 0
   660                           
   661                           ; 26 bytes @ 0x32
   662  000033                     	ds	1
   663  000034                     PRC@a_1169:
   664                           	opt callstack 0
   665  000034                     pyCal@a:
   666                           	opt callstack 0
   667  000034                     calibrate@sensors:
   668                           	opt callstack 0
   669                           
   670                           ; 5 bytes @ 0x33
   671  000034                     	ds	1
   672  000035                     PRC@a_1170:
   673                           	opt callstack 0
   674                           
   675                           ; 1 bytes @ 0x34
   676  000035                     	ds	1
   677  000036                     PRC@a_1171:
   678                           	opt callstack 0
   679                           
   680                           ; 1 bytes @ 0x35
   681  000036                     	ds	1
   682  000037                     PRC@a_1172:
   683                           	opt callstack 0
   684                           
   685                           ; 1 bytes @ 0x36
   686  000037                     	ds	1
   687  000038                     PRC@a_1173:
   688                           	opt callstack 0
   689                           
   690                           ; 1 bytes @ 0x37
   691  000038                     	ds	1
   692  000039                     calibrate@samples:
   693                           	opt callstack 0
   694  000039                     PRC@a_1174:
   695                           	opt callstack 0
   696                           
   697                           ; 1 bytes @ 0x38
   698  000039                     	ds	1
   699  00003A                     calibrate@samples_1157:
   700                           	opt callstack 0
   701                           
   702                           ; 1 bytes @ 0x39
   703  00003A                     	ds	1
   704  00003B                     calibrate@samples_1158:
   705                           	opt callstack 0
   706                           
   707                           ; 1 bytes @ 0x3A
   708  00003B                     	ds	1
   709  00003C                     calibrate@samples_1159:
   710                           	opt callstack 0
   711                           
   712                           ; 1 bytes @ 0x3B
   713  00003C                     	ds	1
   714  00003D                     calibrate@samples_1160:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0x3C
   718  00003D                     	ds	1
   719  00003E                     calibrate@temp:
   720                           	opt callstack 0
   721                           
   722                           ; 1 bytes @ 0x3D
   723  00003E                     	ds	17
   724  00004F                     capTouch@touch1:
   725                           	opt callstack 0
   726                           
   727                           ; 1 bytes @ 0x4E
   728  00004F                     	ds	1
   729  000050                     capTouch@touch2:
   730                           	opt callstack 0
   731                           
   732                           ; 1 bytes @ 0x4F
   733  000050                     	ds	1
   734  000051                     capTouch@a:
   735                           	opt callstack 0
   736                           
   737                           ; 1 bytes @ 0x50
   738  000051                     	ds	1
   739  000052                     ??_RCE:
   740                           
   741                           ; 1 bytes @ 0x51
   742  000052                     	ds	2
   743  000054                     
   744                           ; 1 bytes @ 0x53
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 93 in file "sanic.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   764 ;;      Params:         0       0       0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0
   767 ;;      Totals:         0       0       0       0       0       0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels required when called:    5
   770 ;; This function calls:
   771 ;;		_RCE
   772 ;;		_init
   773 ;; This function is called by:
   774 ;;		Startup code after reset
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text0
   779  006E74                     __ptext0:
   780                           	opt callstack 0
   781  006E74                     _main:
   782                           	opt callstack 26
   783                           
   784                           ;sanic.c: 110:     init();
   785                           
   786                           ;incstack = 0
   787  006E74  EC5E  F037         	call	_init	;wreg free
   788                           
   789                           ;sanic.c: 111:     RCE();
   790  006E78  EC77  F03A         	call	_RCE	;wreg free
   791  006E7C                     l482:
   792  006E7C  D7FF               	goto	l482
   793  006E7E                     __end_of_main:
   794                           	opt callstack 0
   795                           
   796 ;; *************** function _init *****************
   797 ;; Defined at:
   798 ;;		line 122 in file "sanic.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, status,2, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   812 ;;      Params:         0       0       0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    1
   819 ;; This function calls:
   820 ;;		_clearPorts
   821 ;;		_setupADC
   822 ;;		_setupOSC
   823 ;;		_setupSerial
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text1
   830  006EBC                     __ptext1:
   831                           	opt callstack 0
   832  006EBC                     _init:
   833                           	opt callstack 29
   834                           
   835                           ;sanic.c: 123:     raceColor[3] = 1;
   836                           
   837                           ;incstack = 0
   838  006EBC  0E01               	movlw	1
   839  006EBE  0100               	movlb	0	; () banked
   840  006EC0  6FB5               	movwf	(_raceColor+3)& (0+255),b
   841                           
   842                           ; BSR set to: 0
   843                           ;sanic.c: 124:     setupOSC();
   844  006EC2  EC35  F037         	call	_setupOSC	;wreg free
   845                           
   846                           ;sanic.c: 125:     clearPorts();
   847  006EC6  ECB8  F038         	call	_clearPorts	;wreg free
   848                           
   849                           ;sanic.c: 126:     setupSerial();
   850  006ECA  EC9D  F037         	call	_setupSerial	;wreg free
   851                           
   852                           ;sanic.c: 127:     setupADC();
   853  006ECE  EC6A  F037         	call	_setupADC	;wreg free
   854  006ED2  0012               	return		;funcret
   855  006ED4                     __end_of_init:
   856                           	opt callstack 0
   857                           
   858 ;; *************** function _setupSerial *****************
   859 ;; Defined at:
   860 ;;		line 96 in file "./functions.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   874 ;;      Params:         0       0       0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_init
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text2
   888  006F3A                     __ptext2:
   889                           	opt callstack 0
   890  006F3A                     _setupSerial:
   891                           	opt callstack 29
   892                           
   893                           ;./functions.c: 98:     PIE1bits.RC1IE = 0;
   894                           
   895                           ;incstack = 0
   896  006F3A  9A9D               	bcf	3997,5,c	;volatile
   897                           
   898                           ;./functions.c: 99:     PIE1bits.TX1IE = 0;
   899  006F3C  989D               	bcf	3997,4,c	;volatile
   900                           
   901                           ;./functions.c: 100:     PIR1bits.RCIF = 0;
   902  006F3E  9A9E               	bcf	3998,5,c	;volatile
   903                           
   904                           ;./functions.c: 102:     FSR0 = 0;
   905  006F40  0E00               	movlw	0
   906  006F42  6EEA               	movwf	fsr0h,c	;volatile
   907  006F44  0E00               	movlw	0
   908  006F46  6EE9               	movwf	fsr0l,c	;volatile
   909                           
   910                           ;./functions.c: 103:     TXSTA1 = 0b00100100;
   911  006F48  0E24               	movlw	36
   912  006F4A  6EAC               	movwf	4012,c	;volatile
   913                           
   914                           ;./functions.c: 104:     RCSTA1 = 0b10010000;
   915  006F4C  0E90               	movlw	144
   916  006F4E  6EAB               	movwf	4011,c	;volatile
   917                           
   918                           ;./functions.c: 106:     SPBRG1 = 25;
   919  006F50  0E19               	movlw	25
   920  006F52  6EAF               	movwf	4015,c	;volatile
   921                           
   922                           ;./functions.c: 107:     SPBRGH1 = 0;
   923  006F54  0E00               	movlw	0
   924  006F56  6EB0               	movwf	4016,c	;volatile
   925                           
   926                           ;./functions.c: 108:     BAUDCON1bits.BRG16 = 0;
   927  006F58  96B8               	bcf	4024,3,c	;volatile
   928                           
   929                           ;./functions.c: 109:     TRISCbits.RC6 = 1;
   930  006F5A  8C94               	bsf	3988,6,c	;volatile
   931                           
   932                           ;./functions.c: 110:     TRISCbits.RC7 = 1;
   933  006F5C  8E94               	bsf	3988,7,c	;volatile
   934                           
   935                           ;./functions.c: 112:     PORTC = 0;
   936  006F5E  0E00               	movlw	0
   937  006F60  6E82               	movwf	3970,c	;volatile
   938                           
   939                           ;./functions.c: 113:     ANSELC = 0;
   940  006F62  0E00               	movlw	0
   941  006F64  010F               	movlb	15	; () banked
   942  006F66  6F3A               	movwf	58,b	;volatile
   943                           
   944                           ; BSR set to: 15
   945  006F68  0012               	return		;funcret
   946  006F6A                     __end_of_setupSerial:
   947                           	opt callstack 0
   948                           
   949 ;; *************** function _setupOSC *****************
   950 ;; Defined at:
   951 ;;		line 90 in file "./functions.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   965 ;;      Params:         0       0       0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0
   968 ;;      Totals:         0       0       0       0       0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_init
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text3
   979  006E6A                     __ptext3:
   980                           	opt callstack 0
   981  006E6A                     _setupOSC:
   982                           	opt callstack 29
   983                           
   984                           ;./functions.c: 92:     OSCCONbits.IRCF = 0b101;
   985                           
   986                           ; BSR set to: 15
   987                           ;incstack = 0
   988  006E6A  50D3               	movf	4051,w,c	;volatile
   989  006E6C  0B8F               	andlw	-113
   990  006E6E  0950               	iorlw	80
   991  006E70  6ED3               	movwf	4051,c	;volatile
   992  006E72  0012               	return		;funcret
   993  006E74                     __end_of_setupOSC:
   994                           	opt callstack 0
   995                           
   996 ;; *************** function _clearPorts *****************
   997 ;; Defined at:
   998 ;;		line 59 in file "./functions.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1012 ;;      Params:         0       0       0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_init
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text4
  1026  007170                     __ptext4:
  1027                           	opt callstack 0
  1028  007170                     _clearPorts:
  1029                           	opt callstack 29
  1030                           
  1031                           ;./functions.c: 61:     PORTA = 0;
  1032                           
  1033                           ;incstack = 0
  1034  007170  0E00               	movlw	0
  1035  007172  6E80               	movwf	3968,c	;volatile
  1036                           
  1037                           ;./functions.c: 62:     LATA = 0;
  1038  007174  0E00               	movlw	0
  1039  007176  6E89               	movwf	3977,c	;volatile
  1040                           
  1041                           ;./functions.c: 63:     TRISA = 0;
  1042  007178  0E00               	movlw	0
  1043  00717A  6E92               	movwf	3986,c	;volatile
  1044                           
  1045                           ;./functions.c: 64:     ANSELA = 0;
  1046  00717C  0E00               	movlw	0
  1047  00717E  010F               	movlb	15	; () banked
  1048  007180  6F38               	movwf	56,b	;volatile
  1049                           
  1050                           ;./functions.c: 66:     PORTB = 0;
  1051  007182  0E00               	movlw	0
  1052  007184  6E81               	movwf	3969,c	;volatile
  1053                           
  1054                           ;./functions.c: 67:     LATB = 0;
  1055  007186  0E00               	movlw	0
  1056  007188  6E8A               	movwf	3978,c	;volatile
  1057                           
  1058                           ;./functions.c: 68:     TRISB = 0;
  1059  00718A  0E00               	movlw	0
  1060  00718C  6E93               	movwf	3987,c	;volatile
  1061                           
  1062                           ;./functions.c: 69:     ANSELB = 0;
  1063  00718E  0E00               	movlw	0
  1064  007190  6F39               	movwf	57,b	;volatile
  1065                           
  1066                           ;./functions.c: 71:     PORTC = 0;
  1067  007192  0E00               	movlw	0
  1068  007194  6E82               	movwf	3970,c	;volatile
  1069                           
  1070                           ;./functions.c: 72:     LATC = 0;
  1071  007196  0E00               	movlw	0
  1072  007198  6E8B               	movwf	3979,c	;volatile
  1073                           
  1074                           ;./functions.c: 73:     TRISC = 0;
  1075  00719A  0E00               	movlw	0
  1076  00719C  6E94               	movwf	3988,c	;volatile
  1077                           
  1078                           ;./functions.c: 74:     ANSELC = 0;
  1079  00719E  0E00               	movlw	0
  1080  0071A0  6F3A               	movwf	58,b	;volatile
  1081                           
  1082                           ;./functions.c: 76:     PORTD = 0;
  1083  0071A2  0E00               	movlw	0
  1084  0071A4  6E83               	movwf	3971,c	;volatile
  1085                           
  1086                           ;./functions.c: 77:     LATD = 0;
  1087  0071A6  0E00               	movlw	0
  1088  0071A8  6E8C               	movwf	3980,c	;volatile
  1089                           
  1090                           ;./functions.c: 78:     TRISD = 0;
  1091  0071AA  0E00               	movlw	0
  1092  0071AC  6E95               	movwf	3989,c	;volatile
  1093                           
  1094                           ;./functions.c: 79:     ANSELD = 0;
  1095  0071AE  0E00               	movlw	0
  1096  0071B0  6F3B               	movwf	59,b	;volatile
  1097                           
  1098                           ;./functions.c: 81:     PORTE = 0;
  1099  0071B2  0E00               	movlw	0
  1100  0071B4  6E84               	movwf	3972,c	;volatile
  1101                           
  1102                           ;./functions.c: 82:     LATE = 0;
  1103  0071B6  0E00               	movlw	0
  1104  0071B8  6E8D               	movwf	3981,c	;volatile
  1105                           
  1106                           ;./functions.c: 83:     TRISE = 0;
  1107  0071BA  0E00               	movlw	0
  1108  0071BC  6E96               	movwf	3990,c	;volatile
  1109                           
  1110                           ;./functions.c: 84:     ANSELE = 0;
  1111  0071BE  0E00               	movlw	0
  1112  0071C0  6F3C               	movwf	60,b	;volatile
  1113                           
  1114                           ;./functions.c: 85:     raceColor[3] = 1;
  1115  0071C2  0E01               	movlw	1
  1116  0071C4  0100               	movlb	0	; () banked
  1117  0071C6  6FB5               	movwf	(_raceColor+3)& (0+255),b
  1118                           
  1119                           ; BSR set to: 0
  1120  0071C8  0012               	return		;funcret
  1121  0071CA                     __end_of_clearPorts:
  1122                           	opt callstack 0
  1123                           
  1124 ;; *************** function _RCE *****************
  1125 ;; Defined at:
  1126 ;;		line 130 in file "sanic.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  a               1   19[BANK0 ] unsigned char 
  1131 ;;  a               1   18[BANK0 ] unsigned char 
  1132 ;;  message        14    0[BANK0 ] unsigned char [14]
  1133 ;;  commandRecei    3   14[BANK0 ] unsigned char [3]
  1134 ;;  nCharsReceiv    1   17[BANK0 ] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1144 ;;      Params:         0       0       0       0       0       0       0
  1145 ;;      Locals:         0      20       0       0       0       0       0
  1146 ;;      Temps:          2       0       0       0       0       0       0
  1147 ;;      Totals:         2      20       0       0       0       0       0
  1148 ;;Total ram usage:       22 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    4
  1151 ;; This function calls:
  1152 ;;		_PRC
  1153 ;;		_calibrate
  1154 ;;		_capTouch
  1155 ;;		_error
  1156 ;;		_navigate
  1157 ;;		_pyCal
  1158 ;;		_trans
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text5
  1165  0074EE                     __ptext5:
  1166                           	opt callstack 0
  1167  0074EE                     _RCE:
  1168                           	opt callstack 26
  1169                           
  1170                           ;sanic.c: 132:         PORTD = 0b10100100;
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;incstack = 0
  1174                           ;sanic.c: 131:     while(1){
  1175  0074EE  0EA4               	movlw	164
  1176  0074F0  6E83               	movwf	3971,c	;volatile
  1177                           
  1178                           ;sanic.c: 134:         unsigned char message[] = "\nSanic races ";
  1179  0074F2  EE20  F09A         	lfsr	2,RCE@F6098
  1180  0074F6  EE10  F0E6         	lfsr	1,RCE@message
  1181  0074FA  0E0D               	movlw	13
  1182  0074FC                     u2421:
  1183  0074FC  CFDB FFE3          	movff	plusw2,plusw1
  1184  007500  06E8               	decf	wreg,f,c
  1185  007502  E2FC               	bc	u2421
  1186                           
  1187                           ;sanic.c: 136:         for (unsigned char a = 0; a < 13; a++)
  1188  007504  0E00               	movlw	0
  1189  007506  0100               	movlb	0	; () banked
  1190  007508  6FF8               	movwf	RCE@a& (0+255),b
  1191  00750A                     l3427:
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;sanic.c: 137:         {;sanic.c: 138:             trans(message[a]);
  1195  00750A  0EE6               	movlw	low RCE@message
  1196  00750C  25F8               	addwf	RCE@a& (0+255),w,b
  1197  00750E  6ED9               	movwf	fsr2l,c
  1198  007510  6ADA               	clrf	fsr2h,c
  1199  007512  0E00               	movlw	high RCE@message
  1200  007514  22DA               	addwfc	fsr2h,f,c
  1201  007516  50DF               	movf	indf2,w,c
  1202  007518  EC3F  F037         	call	_trans
  1203                           
  1204                           ;sanic.c: 139:         }
  1205  00751C  0100               	movlb	0	; () banked
  1206  00751E  2BF8               	incf	RCE@a& (0+255),f,b
  1207                           
  1208                           ; BSR set to: 0
  1209  007520  0E0C               	movlw	12
  1210  007522  65F8               	cpfsgt	RCE@a& (0+255),b
  1211  007524  D7F2               	goto	l3427
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;sanic.c: 141:         if (raceColor[3] == 1){
  1215  007526  05B5               	decf	(_raceColor+3)& (0+255),w,b
  1216  007528  A4D8               	btfss	status,2,c
  1217  00752A  D004               	goto	l3437
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;sanic.c: 142:             trans('B');
  1221  00752C  0E42               	movlw	66
  1222  00752E  EC3F  F037         	call	_trans
  1223                           
  1224                           ;sanic.c: 143:         }
  1225  007532  D011               	goto	l497
  1226  007534                     l3437:
  1227                           
  1228                           ; BSR set to: 0
  1229  007534  05B4               	decf	(_raceColor+2)& (0+255),w,b
  1230  007536  A4D8               	btfss	status,2,c
  1231  007538  D004               	goto	l3441
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;sanic.c: 145:             trans('R');
  1235  00753A  0E52               	movlw	82
  1236  00753C  EC3F  F037         	call	_trans
  1237                           
  1238                           ;sanic.c: 146:         }
  1239  007540  D00A               	goto	l497
  1240  007542                     l3441:
  1241                           
  1242                           ; BSR set to: 0
  1243  007542  05B3               	decf	(_raceColor+1)& (0+255),w,b
  1244  007544  A4D8               	btfss	status,2,c
  1245  007546  D004               	goto	l3445
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;sanic.c: 148:             trans('G');
  1249  007548  0E47               	movlw	71
  1250  00754A  EC3F  F037         	call	_trans
  1251                           
  1252                           ;sanic.c: 149:         }
  1253  00754E  D003               	goto	l497
  1254  007550                     l3445:
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;sanic.c: 151:             trans('n');
  1258  007550  0E6E               	movlw	110
  1259  007552  EC3F  F037         	call	_trans
  1260  007556                     l497:
  1261                           
  1262                           ;sanic.c: 153:         trans('\n');
  1263  007556  0E0A               	movlw	10
  1264  007558  EC3F  F037         	call	_trans
  1265                           
  1266                           ;sanic.c: 156:         INTCONbits.GIE = 0;
  1267  00755C  9EF2               	bcf	4082,7,c	;volatile
  1268                           
  1269                           ;sanic.c: 157:         INTCONbits.PEIE = 0;
  1270  00755E  9CF2               	bcf	4082,6,c	;volatile
  1271                           
  1272                           ;sanic.c: 158:         unsigned char nCharsReceived = 0;
  1273  007560  0E00               	movlw	0
  1274  007562  0100               	movlb	0	; () banked
  1275  007564  6FF7               	movwf	RCE@nCharsReceived& (0+255),b
  1276                           
  1277                           ;sanic.c: 159:         unsigned char commandReceived[3];;sanic.c: 161:         while(nCh
      +                          arsReceived < 3){
  1278  007566  D00B               	goto	l3457
  1279  007568                     l503:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;sanic.c: 162:             if (PIR1bits.RC1IF){
  1283  007568  AA9E               	btfss	3998,5,c	;volatile
  1284  00756A  D009               	goto	l3457
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;sanic.c: 163:                 commandReceived[nCharsReceived] = RCREG;
  1288  00756C  0EF4               	movlw	low RCE@commandReceived
  1289  00756E  25F7               	addwf	RCE@nCharsReceived& (0+255),w,b
  1290  007570  6ED9               	movwf	fsr2l,c
  1291  007572  6ADA               	clrf	fsr2h,c
  1292  007574  0E00               	movlw	high RCE@commandReceived
  1293  007576  22DA               	addwfc	fsr2h,f,c
  1294  007578  CFAE FFDF          	movff	4014,indf2	;volatile
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;sanic.c: 164:                 nCharsReceived++;
  1298  00757C  2BF7               	incf	RCE@nCharsReceived& (0+255),f,b
  1299  00757E                     l3457:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;sanic.c: 161:         while(nCharsReceived < 3){
  1303  00757E  0E02               	movlw	2
  1304  007580  65F7               	cpfsgt	RCE@nCharsReceived& (0+255),b
  1305  007582  D7F2               	goto	l503
  1306  007584  D012               	goto	l3473
  1307  007586                     l3459:
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;sanic.c: 172:             capTouch();
  1311  007586  EC18  F039         	call	_capTouch	;wreg free
  1312                           
  1313                           ;sanic.c: 173:             break;
  1314  00758A  D027               	goto	l3475
  1315  00758C                     l3461:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;sanic.c: 175:             PRC();
  1319  00758C  EC37  F03C         	call	_PRC	;wreg free
  1320                           
  1321                           ;sanic.c: 176:             break;
  1322  007590  D024               	goto	l3475
  1323  007592                     l3463:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;sanic.c: 178:             navigate();
  1327  007592  ECE9  F037         	call	_navigate	;wreg free
  1328                           
  1329                           ;sanic.c: 179:             break;
  1330  007596  D021               	goto	l3475
  1331  007598                     l3465:
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;sanic.c: 181:             pyCal();
  1335  007598  EC66  F038         	call	_pyCal	;wreg free
  1336                           
  1337                           ;sanic.c: 182:             break;
  1338  00759C  D01E               	goto	l3475
  1339  00759E                     l3467:
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;sanic.c: 184:             calibrate();
  1343  00759E  ECF9  F03C         	call	_calibrate	;wreg free
  1344                           
  1345                           ;sanic.c: 185:             break;
  1346  0075A2  D01B               	goto	l3475
  1347  0075A4                     l3469:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;sanic.c: 188:             error();
  1351  0075A4  ECCE  F037         	call	_error	;wreg free
  1352                           
  1353                           ;sanic.c: 189:             break;
  1354  0075A8  D018               	goto	l3475
  1355  0075AA                     l3473:
  1356                           
  1357                           ; BSR set to: 0
  1358  0075AA  51F4               	movf	RCE@commandReceived& (0+255),w,b
  1359  0075AC  6E52               	movwf	??_RCE& (0+255),c
  1360  0075AE  6A53               	clrf	(??_RCE+1)& (0+255),c
  1361                           
  1362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1363                           ; Switch size 1, requested type "simple"
  1364                           ; Number of cases is 1, Range of values is 0 to 0
  1365                           ; switch strategies available:
  1366                           ; Name         Instructions Cycles
  1367                           ; simple_byte            4     3 (average)
  1368                           ;	Chosen strategy is simple_byte
  1369  0075B0  5053               	movf	??_RCE+1,w,c
  1370  0075B2  0A00               	xorlw	0	; case 0
  1371  0075B4  A4D8               	btfss	status,2,c
  1372  0075B6  D7F6               	goto	l3469
  1373                           
  1374                           ; BSR set to: 0
  1375                           ; Switch size 1, requested type "simple"
  1376                           ; Number of cases is 5, Range of values is 67 to 82
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte           16     9 (average)
  1380                           ;	Chosen strategy is simple_byte
  1381  0075B8  5052               	movf	??_RCE,w,c
  1382  0075BA  0A43               	xorlw	67	; case 67
  1383  0075BC  B4D8               	btfsc	status,2,c
  1384  0075BE  D7EF               	goto	l3467
  1385  0075C0  0A0D               	xorlw	13	; case 78
  1386  0075C2  B4D8               	btfsc	status,2,c
  1387  0075C4  D7E6               	goto	l3463
  1388  0075C6  0A1E               	xorlw	30	; case 80
  1389  0075C8  B4D8               	btfsc	status,2,c
  1390  0075CA  D7E0               	goto	l3461
  1391  0075CC  0A01               	xorlw	1	; case 81
  1392  0075CE  B4D8               	btfsc	status,2,c
  1393  0075D0  D7E3               	goto	l3465
  1394  0075D2  0A03               	xorlw	3	; case 82
  1395  0075D4  B4D8               	btfsc	status,2,c
  1396  0075D6  D7D7               	goto	l3459
  1397  0075D8  D7E5               	goto	l3469
  1398  0075DA                     l3475:
  1399                           
  1400                           ;sanic.c: 192:         for (unsigned char a = 0; a < 3; a++){
  1401  0075DA  0E00               	movlw	0
  1402  0075DC  0100               	movlb	0	; () banked
  1403  0075DE  6FF9               	movwf	RCE@a_1331& (0+255),b
  1404  0075E0                     l3481:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;sanic.c: 193:             commandReceived[a] = 0;
  1408  0075E0  0EF4               	movlw	low RCE@commandReceived
  1409  0075E2  25F9               	addwf	RCE@a_1331& (0+255),w,b
  1410  0075E4  6ED9               	movwf	fsr2l,c
  1411  0075E6  6ADA               	clrf	fsr2h,c
  1412  0075E8  0E00               	movlw	high RCE@commandReceived
  1413  0075EA  22DA               	addwfc	fsr2h,f,c
  1414  0075EC  0E00               	movlw	0
  1415  0075EE  6EDF               	movwf	indf2,c
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;sanic.c: 194:         }
  1419  0075F0  2BF9               	incf	RCE@a_1331& (0+255),f,b
  1420                           
  1421                           ; BSR set to: 0
  1422  0075F2  0E02               	movlw	2
  1423  0075F4  65F9               	cpfsgt	RCE@a_1331& (0+255),b
  1424  0075F6  D7F4               	goto	l3481
  1425  0075F8  D77A               	goto	_RCE
  1426  0075FA                     __end_of_RCE:
  1427                           	opt callstack 0
  1428                           
  1429 ;; *************** function _pyCal *****************
  1430 ;; Defined at:
  1431 ;;		line 410 in file "./functions.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  a               1   51[COMRAM] unsigned char 
  1436 ;;  done            1    0        unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1446 ;;      Params:         0       0       0       0       0       0       0
  1447 ;;      Locals:         2       0       0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0
  1449 ;;      Totals:         2       0       0       0       0       0       0
  1450 ;;Total ram usage:        2 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    2
  1453 ;; This function calls:
  1454 ;;		_aveSensor
  1455 ;;		_msDelay
  1456 ;;		_setupADC
  1457 ;;		_trans
  1458 ;; This function is called by:
  1459 ;;		_RCE
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text6
  1464  0070CC                     __ptext6:
  1465                           	opt callstack 0
  1466  0070CC                     _pyCal:
  1467                           	opt callstack 27
  1468                           
  1469                           ;./functions.c: 412:     setupADC();
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;incstack = 0
  1473  0070CC  EC6A  F037         	call	_setupADC	;wreg free
  1474                           
  1475                           ;./functions.c: 413:     PORTD = 0b00001100;
  1476  0070D0  0E0C               	movlw	12
  1477  0070D2  6E83               	movwf	3971,c	;volatile
  1478  0070D4                     
  1479                           ;./functions.c: 416:     {;./functions.c: 417:         msDelay(9);
  1480  0070D4  0E09               	movlw	9
  1481  0070D6  ECE5  F038         	call	_msDelay
  1482                           
  1483                           ;./functions.c: 418:         for (unsigned char a = 0; a < 5; a++)
  1484  0070DA  0E00               	movlw	0
  1485  0070DC  6E34               	movwf	pyCal@a,c
  1486  0070DE                     l3313:
  1487                           
  1488                           ;./functions.c: 419:         {;./functions.c: 420:             trans(aveSensor(sensorCha
      +                          nnels[a]));
  1489  0070DE  0EC2               	movlw	low _sensorChannels
  1490  0070E0  2434               	addwf	pyCal@a,w,c
  1491  0070E2  6ED9               	movwf	fsr2l,c
  1492  0070E4  6ADA               	clrf	fsr2h,c
  1493  0070E6  0E00               	movlw	high _sensorChannels
  1494  0070E8  22DA               	addwfc	fsr2h,f,c
  1495  0070EA  50DF               	movf	indf2,w,c
  1496  0070EC  EC43  F038         	call	_aveSensor
  1497  0070F0  EC3F  F037         	call	_trans
  1498                           
  1499                           ;./functions.c: 421:         }
  1500  0070F4  2A34               	incf	pyCal@a,f,c
  1501  0070F6  0E04               	movlw	4
  1502  0070F8  6434               	cpfsgt	pyCal@a,c
  1503  0070FA  D7F1               	goto	l3313
  1504                           
  1505                           ;./functions.c: 422:         trans('\n');
  1506  0070FC  0E0A               	movlw	10
  1507  0070FE  EC3F  F037         	call	_trans
  1508                           
  1509                           ;./functions.c: 424:         if (PIR1bits.RC1IF)
  1510  007102  AA9E               	btfss	3998,5,c	;volatile
  1511  007104  D7E7               	goto	l3303
  1512                           
  1513                           ;./functions.c: 425:         {;./functions.c: 426:             PIR1bits.RC1IF = 0;
  1514  007106  9A9E               	bcf	3998,5,c	;volatile
  1515                           
  1516                           ;./functions.c: 427:             if (RCREG == 'S' || RCREG == 's')
  1517  007108  0E53               	movlw	83
  1518  00710A  18AE               	xorwf	4014,w,c	;volatile
  1519  00710C  B4D8               	btfsc	status,2,c
  1520  00710E  0012               	return	
  1521  007110  0E73               	movlw	115
  1522  007112  18AE               	xorwf	4014,w,c	;volatile
  1523  007114  B4D8               	btfsc	status,2,c
  1524  007116  0012               	return	
  1525  007118  D7DD               	goto	l3303
  1526  00711A                     __end_of_pyCal:
  1527                           	opt callstack 0
  1528                           
  1529 ;; *************** function _navigate *****************
  1530 ;; Defined at:
  1531 ;;		line 435 in file "./functions.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1545 ;;      Params:         0       0       0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    3
  1552 ;; This function calls:
  1553 ;;		_classifyColors
  1554 ;;		_displayColorDetected
  1555 ;;		_displayRaceColor
  1556 ;;		_readAllSensors
  1557 ;;		_setupADC
  1558 ;;		_setupPWMLeft
  1559 ;;		_setupPWMRight
  1560 ;;		_stopMotors
  1561 ;; This function is called by:
  1562 ;;		_RCE
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text7
  1567  006FD2                     __ptext7:
  1568                           	opt callstack 0
  1569  006FD2                     _navigate:
  1570                           	opt callstack 26
  1571                           
  1572                           ;./functions.c: 436:     displayRaceColor();
  1573                           
  1574                           ;incstack = 0
  1575  006FD2  EC24  F038         	call	_displayRaceColor	;wreg free
  1576                           
  1577                           ;./functions.c: 437:     setupPWMLeft();
  1578  006FD6  EC7B  F037         	call	_setupPWMLeft	;wreg free
  1579                           
  1580                           ;./functions.c: 438:     setupPWMRight();
  1581  006FDA  EC8C  F037         	call	_setupPWMRight	;wreg free
  1582  006FDE                     l298:
  1583                           
  1584                           ;./functions.c: 440:         setupADC();
  1585  006FDE  EC6A  F037         	call	_setupADC	;wreg free
  1586                           
  1587                           ;./functions.c: 441:         readAllSensors();
  1588  006FE2  EC06  F038         	call	_readAllSensors	;wreg free
  1589                           
  1590                           ;./functions.c: 442:         classifyColors();
  1591  006FE6  ECFD  F03A         	call	_classifyColors	;wreg free
  1592                           
  1593                           ;./functions.c: 443:         displayColorDetected(2);
  1594  006FEA  0E02               	movlw	2
  1595  006FEC  ECD6  F039         	call	_displayColorDetected
  1596                           
  1597                           ;./functions.c: 447:         if (PIR1bits.RC1IF)
  1598  006FF0  AA9E               	btfss	3998,5,c	;volatile
  1599  006FF2  D7F5               	goto	l298
  1600                           
  1601                           ;./functions.c: 448:         {;./functions.c: 449:             PIR1bits.RC1IF = 0;
  1602  006FF4  9A9E               	bcf	3998,5,c	;volatile
  1603                           
  1604                           ;./functions.c: 450:             if (RCREG == 'S' || RCREG == 's')
  1605  006FF6  0E53               	movlw	83
  1606  006FF8  18AE               	xorwf	4014,w,c	;volatile
  1607  006FFA  B4D8               	btfsc	status,2,c
  1608  006FFC  D004               	goto	u2380
  1609  006FFE  0E73               	movlw	115
  1610  007000  18AE               	xorwf	4014,w,c	;volatile
  1611  007002  A4D8               	btfss	status,2,c
  1612  007004  D7EC               	goto	l298
  1613  007006                     u2380:
  1614                           
  1615                           ;./functions.c: 451:             {;./functions.c: 452:                 stopMotors();
  1616  007006  EC4B  F037         	call	_stopMotors	;wreg free
  1617  00700A  0012               	return		;funcret
  1618  00700C                     __end_of_navigate:
  1619                           	opt callstack 0
  1620                           
  1621 ;; *************** function _stopMotors *****************
  1622 ;; Defined at:
  1623 ;;		line 768 in file "./functions.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1637 ;;      Params:         0       0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_navigate
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text8
  1651  006E96                     __ptext8:
  1652                           	opt callstack 0
  1653  006E96                     _stopMotors:
  1654                           	opt callstack 28
  1655                           
  1656                           ;./functions.c: 769:     PORTCbits.RC0 = 0;
  1657                           
  1658                           ;incstack = 0
  1659  006E96  9082               	bcf	3970,0,c	;volatile
  1660                           
  1661                           ;./functions.c: 770:     PORTCbits.RC1 = 0;
  1662  006E98  9282               	bcf	3970,1,c	;volatile
  1663                           
  1664                           ;./functions.c: 771:     TRISCbits.TRISC2 = 1;
  1665  006E9A  8494               	bsf	3988,2,c	;volatile
  1666                           
  1667                           ;./functions.c: 772:     PORTEbits.RE0 = 0;
  1668  006E9C  9084               	bcf	3972,0,c	;volatile
  1669                           
  1670                           ;./functions.c: 773:     PORTEbits.RE1 = 0;
  1671  006E9E  9284               	bcf	3972,1,c	;volatile
  1672                           
  1673                           ;./functions.c: 774:     TRISEbits.TRISE2 = 1;
  1674  006EA0  8496               	bsf	3990,2,c	;volatile
  1675                           
  1676                           ;./functions.c: 775:     PORTA = 0;
  1677  006EA2  0E00               	movlw	0
  1678  006EA4  6E80               	movwf	3968,c	;volatile
  1679  006EA6  0012               	return		;funcret
  1680  006EA8                     __end_of_stopMotors:
  1681                           	opt callstack 0
  1682                           
  1683 ;; *************** function _setupPWMRight *****************
  1684 ;; Defined at:
  1685 ;;		line 40 in file "./functions.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1699 ;;      Params:         0       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_navigate
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text9
  1713  006F18                     __ptext9:
  1714                           	opt callstack 0
  1715  006F18                     _setupPWMRight:
  1716                           	opt callstack 28
  1717                           
  1718                           ;./functions.c: 42:     CCP5CON = 0;
  1719                           
  1720                           ;incstack = 0
  1721  006F18  0E00               	movlw	0
  1722  006F1A  010F               	movlb	15	; () banked
  1723  006F1C  6F54               	movwf	84,b	;volatile
  1724                           
  1725                           ; BSR set to: 15
  1726                           ;./functions.c: 43:     PR4 = 255;
  1727  006F1E  6952               	setf	82,b	;volatile
  1728                           
  1729                           ; BSR set to: 15
  1730                           ;./functions.c: 44:     CCPR5L = 255;
  1731  006F20  6955               	setf	85,b	;volatile
  1732                           
  1733                           ; BSR set to: 15
  1734                           ;./functions.c: 46:     TRISEbits.RE2 = 0;
  1735  006F22  9496               	bcf	3990,2,c	;volatile
  1736                           
  1737                           ;./functions.c: 48:     CCPTMRS1 = 0b00000100;
  1738  006F24  0E04               	movlw	4
  1739  006F26  6F48               	movwf	72,b	;volatile
  1740                           
  1741                           ;./functions.c: 49:     CCP5CON = 0b00001100;
  1742  006F28  0E0C               	movlw	12
  1743  006F2A  6F54               	movwf	84,b	;volatile
  1744                           
  1745                           ;./functions.c: 50:     T4CON = 0b00000000;
  1746  006F2C  0E00               	movlw	0
  1747  006F2E  6F51               	movwf	81,b	;volatile
  1748                           
  1749                           ;./functions.c: 51:     TMR4 = 0;
  1750  006F30  0E00               	movlw	0
  1751  006F32  6F53               	movwf	83,b	;volatile
  1752                           
  1753                           ; BSR set to: 15
  1754                           ;./functions.c: 52:     PIE5bits.TMR4IE = 0;
  1755  006F34  907D               	bcf	3965,0,c	;volatile
  1756                           
  1757                           ; BSR set to: 15
  1758                           ;./functions.c: 53:     T4CONbits.TMR4ON = 1;
  1759  006F36  8551               	bsf	81,2,b	;volatile
  1760                           
  1761                           ; BSR set to: 15
  1762  006F38  0012               	return		;funcret
  1763  006F3A                     __end_of_setupPWMRight:
  1764                           	opt callstack 0
  1765                           
  1766 ;; *************** function _setupPWMLeft *****************
  1767 ;; Defined at:
  1768 ;;		line 23 in file "./functions.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1782 ;;      Params:         0       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_navigate
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text10
  1796  006EF6                     __ptext10:
  1797                           	opt callstack 0
  1798  006EF6                     _setupPWMLeft:
  1799                           	opt callstack 28
  1800                           
  1801                           ;./functions.c: 25:     CCP1CON = 0;
  1802                           
  1803                           ; BSR set to: 15
  1804                           ;incstack = 0
  1805  006EF6  0E00               	movlw	0
  1806  006EF8  6EBD               	movwf	4029,c	;volatile
  1807                           
  1808                           ;./functions.c: 26:     PR2 = 255;
  1809  006EFA  68BB               	setf	4027,c	;volatile
  1810                           
  1811                           ;./functions.c: 27:     CCPR1L = 255;
  1812  006EFC  68BE               	setf	4030,c	;volatile
  1813                           
  1814                           ;./functions.c: 29:     TRISCbits.RC2 = 0;
  1815  006EFE  9494               	bcf	3988,2,c	;volatile
  1816                           
  1817                           ;./functions.c: 31:     CCPTMRS0 = 0;
  1818  006F00  0E00               	movlw	0
  1819  006F02  010F               	movlb	15	; () banked
  1820  006F04  6F49               	movwf	73,b	;volatile
  1821                           
  1822                           ;./functions.c: 32:     CCP1CON = 0b00001100;
  1823  006F06  0E0C               	movlw	12
  1824  006F08  6EBD               	movwf	4029,c	;volatile
  1825                           
  1826                           ;./functions.c: 33:     T2CON = 0b00000000;
  1827  006F0A  0E00               	movlw	0
  1828  006F0C  6EBA               	movwf	4026,c	;volatile
  1829                           
  1830                           ;./functions.c: 34:     TMR2 = 0;
  1831  006F0E  0E00               	movlw	0
  1832  006F10  6EBC               	movwf	4028,c	;volatile
  1833                           
  1834                           ; BSR set to: 15
  1835                           ;./functions.c: 35:     PIE1bits.TMR1IE = 0;
  1836  006F12  909D               	bcf	3997,0,c	;volatile
  1837                           
  1838                           ; BSR set to: 15
  1839                           ;./functions.c: 36:     T2CONbits.TMR2ON = 1;
  1840  006F14  84BA               	bsf	4026,2,c	;volatile
  1841                           
  1842                           ; BSR set to: 15
  1843  006F16  0012               	return		;funcret
  1844  006F18                     __end_of_setupPWMLeft:
  1845                           	opt callstack 0
  1846                           
  1847 ;; *************** function _setupADC *****************
  1848 ;; Defined at:
  1849 ;;		line 119 in file "./functions.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1863 ;;      Params:         0       0       0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_pyCal
  1873 ;;		_navigate
  1874 ;;		_init
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text11
  1879  006ED4                     __ptext11:
  1880                           	opt callstack 0
  1881  006ED4                     _setupADC:
  1882                           	opt callstack 29
  1883                           
  1884                           ;./functions.c: 121:     ADCON2bits.ADCS = 0b100;
  1885                           
  1886                           ; BSR set to: 15
  1887                           ;incstack = 0
  1888  006ED4  50C0               	movf	4032,w,c	;volatile
  1889  006ED6  0BF8               	andlw	-8
  1890  006ED8  0904               	iorlw	4
  1891  006EDA  6EC0               	movwf	4032,c	;volatile
  1892                           
  1893                           ;./functions.c: 122:     ADCON1 = 0;
  1894  006EDC  0E00               	movlw	0
  1895  006EDE  6EC1               	movwf	4033,c	;volatile
  1896                           
  1897                           ;./functions.c: 123:     ADCON0bits.CHS = 0b01100;
  1898  006EE0  50C2               	movf	4034,w,c	;volatile
  1899  006EE2  0B83               	andlw	-125
  1900  006EE4  0930               	iorlw	48
  1901  006EE6  6EC2               	movwf	4034,c	;volatile
  1902                           
  1903                           ;./functions.c: 124:     ADCON2bits.ADFM = 0;
  1904  006EE8  9EC0               	bcf	4032,7,c	;volatile
  1905                           
  1906                           ;./functions.c: 125:     ADCON2bits.ACQT = 0b101;
  1907  006EEA  50C0               	movf	4032,w,c	;volatile
  1908  006EEC  0BC7               	andlw	-57
  1909  006EEE  0928               	iorlw	40
  1910  006EF0  6EC0               	movwf	4032,c	;volatile
  1911                           
  1912                           ;./functions.c: 126:     ADCON0bits.ADON = 1;
  1913  006EF2  80C2               	bsf	4034,0,c	;volatile
  1914  006EF4  0012               	return		;funcret
  1915  006EF6                     __end_of_setupADC:
  1916                           	opt callstack 0
  1917                           
  1918 ;; *************** function _readAllSensors *****************
  1919 ;; Defined at:
  1920 ;;		line 800 in file "./functions.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  a               2   10[COMRAM] unsigned int 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1934 ;;      Params:         0       0       0       0       0       0       0
  1935 ;;      Locals:         2       0       0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0
  1937 ;;      Totals:         2       0       0       0       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    2
  1941 ;; This function calls:
  1942 ;;		_aveSensor
  1943 ;; This function is called by:
  1944 ;;		_navigate
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text12
  1949  00700C                     __ptext12:
  1950                           	opt callstack 0
  1951  00700C                     _readAllSensors:
  1952                           	opt callstack 26
  1953                           
  1954                           ;./functions.c: 801:     for (unsigned a = 0; a < 5; a++){
  1955                           
  1956                           ;incstack = 0
  1957  00700C  0E00               	movlw	0
  1958  00700E  6E0C               	movwf	readAllSensors@a+1,c
  1959  007010  0E00               	movlw	0
  1960  007012  6E0B               	movwf	readAllSensors@a,c
  1961  007014                     l2817:
  1962                           
  1963                           ;./functions.c: 802:         sensorVals[a] = aveSensor(sensorChannels[a]);
  1964  007014  0ED2               	movlw	low _sensorVals
  1965  007016  240B               	addwf	readAllSensors@a,w,c
  1966  007018  6ED9               	movwf	fsr2l,c
  1967  00701A  0E00               	movlw	high _sensorVals
  1968  00701C  200C               	addwfc	readAllSensors@a+1,w,c
  1969  00701E  6EDA               	movwf	fsr2h,c
  1970  007020  0EC2               	movlw	low _sensorChannels
  1971  007022  240B               	addwf	readAllSensors@a,w,c
  1972  007024  6EE1               	movwf	fsr1l,c
  1973  007026  0E00               	movlw	high _sensorChannels
  1974  007028  200C               	addwfc	readAllSensors@a+1,w,c
  1975  00702A  6EE2               	movwf	fsr1h,c
  1976  00702C  50E7               	movf	indf1,w,c
  1977  00702E  EC43  F038         	call	_aveSensor
  1978  007032  6EDF               	movwf	indf2,c
  1979                           
  1980                           ;./functions.c: 803:     }
  1981  007034  4A0B               	infsnz	readAllSensors@a,f,c
  1982  007036  2A0C               	incf	readAllSensors@a+1,f,c
  1983  007038  500C               	movf	readAllSensors@a+1,w,c
  1984  00703A  E105               	bnz	u1810
  1985  00703C  0E05               	movlw	5
  1986  00703E  5C0B               	subwf	readAllSensors@a,w,c
  1987  007040  B0D8               	btfsc	status,0,c
  1988  007042  0012               	return	
  1989  007044  D7E7               	goto	l2817
  1990  007046                     u1810:
  1991  007046  0012               	return		;funcret
  1992  007048                     __end_of_readAllSensors:
  1993                           	opt callstack 0
  1994                           
  1995 ;; *************** function _displayRaceColor *****************
  1996 ;; Defined at:
  1997 ;;		line 780 in file "./functions.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2011 ;;      Params:         0       0       0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_navigate
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text13
  2025  007048                     __ptext13:
  2026                           	opt callstack 0
  2027  007048                     _displayRaceColor:
  2028                           	opt callstack 28
  2029                           
  2030                           ;./functions.c: 781:     if (raceColor[0]){
  2031                           
  2032                           ;incstack = 0
  2033  007048  0100               	movlb	0	; () banked
  2034  00704A  51B2               	movf	_raceColor& (0+255),w,b
  2035  00704C  B4D8               	btfsc	status,2,c
  2036  00704E  D003               	goto	l2793
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;./functions.c: 782:         PORTD = 0b10111111;
  2040  007050  0EBF               	movlw	191
  2041  007052  6E83               	movwf	3971,c	;volatile
  2042                           
  2043                           ;./functions.c: 783:     }
  2044  007054  0012               	return	
  2045  007056                     l2793:
  2046                           
  2047                           ; BSR set to: 0
  2048  007056  51B3               	movf	(_raceColor+1)& (0+255),w,b
  2049  007058  B4D8               	btfsc	status,2,c
  2050  00705A  D003               	goto	l2797
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;./functions.c: 785:         PORTD = 0b10000010;
  2054  00705C  0E82               	movlw	130
  2055  00705E  6E83               	movwf	3971,c	;volatile
  2056                           
  2057                           ;./functions.c: 786:     }
  2058  007060  0012               	return	
  2059  007062                     l2797:
  2060                           
  2061                           ; BSR set to: 0
  2062  007062  51B4               	movf	(_raceColor+2)& (0+255),w,b
  2063  007064  B4D8               	btfsc	status,2,c
  2064  007066  D003               	goto	l2801
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;./functions.c: 788:         PORTD = 0b10001000;
  2068  007068  0E88               	movlw	136
  2069  00706A  6E83               	movwf	3971,c	;volatile
  2070                           
  2071                           ;./functions.c: 789:     }
  2072  00706C  0012               	return	
  2073  00706E                     l2801:
  2074                           
  2075                           ; BSR set to: 0
  2076  00706E  51B5               	movf	(_raceColor+3)& (0+255),w,b
  2077  007070  B4D8               	btfsc	status,2,c
  2078  007072  D003               	goto	l2805
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;./functions.c: 791:         PORTD = 0b10000000;
  2082  007074  0E80               	movlw	128
  2083  007076  6E83               	movwf	3971,c	;volatile
  2084                           
  2085                           ;./functions.c: 792:     }
  2086  007078  0012               	return	
  2087  00707A                     l2805:
  2088                           
  2089                           ; BSR set to: 0
  2090  00707A  51B6               	movf	(_raceColor+4)& (0+255),w,b
  2091  00707C  B4D8               	btfsc	status,2,c
  2092  00707E  0012               	return	
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;./functions.c: 794:         PORTD = 0b11001000;
  2096  007080  0EC8               	movlw	200
  2097  007082  6E83               	movwf	3971,c	;volatile
  2098  007084  0012               	return	
  2099  007086                     __end_of_displayRaceColor:
  2100                           	opt callstack 0
  2101                           
  2102 ;; *************** function _displayColorDetected *****************
  2103 ;; Defined at:
  2104 ;;		line 715 in file "./functions.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  sensor          1    wreg     unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  sensor          1    2[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2118 ;;      Params:         0       0       0       0       0       0       0
  2119 ;;      Locals:         1       0       0       0       0       0       0
  2120 ;;      Temps:          2       0       0       0       0       0       0
  2121 ;;      Totals:         3       0       0       0       0       0       0
  2122 ;;Total ram usage:        3 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_navigate
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text14
  2132  0073AC                     __ptext14:
  2133                           	opt callstack 0
  2134  0073AC                     _displayColorDetected:
  2135                           	opt callstack 28
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;incstack = 0
  2139                           ;displayColorDetected@sensor stored from wreg
  2140  0073AC  6E03               	movwf	displayColorDetected@sensor,c
  2141                           
  2142                           ;./functions.c: 716:     switch (colorsDetected[sensor])
  2143  0073AE  D024               	goto	l2857
  2144  0073B0                     l392:
  2145                           
  2146                           ;./functions.c: 719:         PORTAbits.RA0 = 1;
  2147  0073B0  8080               	bsf	3968,0,c	;volatile
  2148                           
  2149                           ;./functions.c: 720:         PORTAbits.RA1 = 0;
  2150  0073B2  9280               	bcf	3968,1,c	;volatile
  2151                           
  2152                           ;./functions.c: 721:         PORTAbits.RA2 = 0;
  2153  0073B4  9480               	bcf	3968,2,c	;volatile
  2154                           
  2155                           ;./functions.c: 722:         PORTAbits.RA3 = 0;
  2156  0073B6  9680               	bcf	3968,3,c	;volatile
  2157                           
  2158                           ;./functions.c: 723:         PORTAbits.RA4 = 0;
  2159  0073B8  9880               	bcf	3968,4,c	;volatile
  2160                           
  2161                           ;./functions.c: 724:         break;
  2162  0073BA  0012               	return	
  2163  0073BC                     l394:
  2164                           
  2165                           ;./functions.c: 726:         PORTAbits.RA0 = 0;
  2166  0073BC  9080               	bcf	3968,0,c	;volatile
  2167                           
  2168                           ;./functions.c: 727:         PORTAbits.RA1 = 1;
  2169  0073BE  8280               	bsf	3968,1,c	;volatile
  2170                           
  2171                           ;./functions.c: 728:         PORTAbits.RA2 = 0;
  2172  0073C0  9480               	bcf	3968,2,c	;volatile
  2173                           
  2174                           ;./functions.c: 729:         PORTAbits.RA3 = 0;
  2175  0073C2  9680               	bcf	3968,3,c	;volatile
  2176                           
  2177                           ;./functions.c: 730:         PORTAbits.RA4 = 0;
  2178  0073C4  9880               	bcf	3968,4,c	;volatile
  2179                           
  2180                           ;./functions.c: 731:         break;
  2181  0073C6  0012               	return	
  2182  0073C8                     l395:
  2183                           
  2184                           ;./functions.c: 733:         PORTAbits.RA0 = 0;
  2185  0073C8  9080               	bcf	3968,0,c	;volatile
  2186                           
  2187                           ;./functions.c: 734:         PORTAbits.RA1 = 0;
  2188  0073CA  9280               	bcf	3968,1,c	;volatile
  2189                           
  2190                           ;./functions.c: 735:         PORTAbits.RA2 = 1;
  2191  0073CC  8480               	bsf	3968,2,c	;volatile
  2192                           
  2193                           ;./functions.c: 736:         PORTAbits.RA3 = 0;
  2194  0073CE  9680               	bcf	3968,3,c	;volatile
  2195                           
  2196                           ;./functions.c: 737:         PORTAbits.RA4 = 0;
  2197  0073D0  9880               	bcf	3968,4,c	;volatile
  2198                           
  2199                           ;./functions.c: 738:         break;
  2200  0073D2  0012               	return	
  2201  0073D4                     l396:
  2202                           
  2203                           ;./functions.c: 740:         PORTAbits.RA0 = 0;
  2204  0073D4  9080               	bcf	3968,0,c	;volatile
  2205                           
  2206                           ;./functions.c: 741:         PORTAbits.RA1 = 0;
  2207  0073D6  9280               	bcf	3968,1,c	;volatile
  2208                           
  2209                           ;./functions.c: 742:         PORTAbits.RA2 = 0;
  2210  0073D8  9480               	bcf	3968,2,c	;volatile
  2211                           
  2212                           ;./functions.c: 743:         PORTAbits.RA3 = 1;
  2213  0073DA  8680               	bsf	3968,3,c	;volatile
  2214                           
  2215                           ;./functions.c: 744:         PORTAbits.RA4 = 0;
  2216  0073DC  9880               	bcf	3968,4,c	;volatile
  2217                           
  2218                           ;./functions.c: 745:         break;
  2219  0073DE  0012               	return	
  2220  0073E0                     l397:
  2221                           
  2222                           ;./functions.c: 747:         PORTAbits.RA0 = 0;
  2223  0073E0  9080               	bcf	3968,0,c	;volatile
  2224                           
  2225                           ;./functions.c: 748:         PORTAbits.RA1 = 0;
  2226  0073E2  9280               	bcf	3968,1,c	;volatile
  2227                           
  2228                           ;./functions.c: 749:         PORTAbits.RA2 = 0;
  2229  0073E4  9480               	bcf	3968,2,c	;volatile
  2230                           
  2231                           ;./functions.c: 750:         PORTAbits.RA3 = 0;
  2232  0073E6  9680               	bcf	3968,3,c	;volatile
  2233                           
  2234                           ;./functions.c: 751:         PORTAbits.RA4 = 1;
  2235  0073E8  8880               	bsf	3968,4,c	;volatile
  2236                           
  2237                           ;./functions.c: 752:         break;
  2238  0073EA  0012               	return	
  2239  0073EC                     l398:
  2240                           
  2241                           ;./functions.c: 755:         PORTAbits.RA0 = 1;
  2242  0073EC  8080               	bsf	3968,0,c	;volatile
  2243                           
  2244                           ;./functions.c: 756:         PORTAbits.RA1 = 1;
  2245  0073EE  8280               	bsf	3968,1,c	;volatile
  2246                           
  2247                           ;./functions.c: 757:         PORTAbits.RA2 = 1;
  2248  0073F0  8480               	bsf	3968,2,c	;volatile
  2249                           
  2250                           ;./functions.c: 758:         PORTAbits.RA3 = 1;
  2251  0073F2  8680               	bsf	3968,3,c	;volatile
  2252                           
  2253                           ;./functions.c: 759:         PORTAbits.RA4 = 1;
  2254  0073F4  8880               	bsf	3968,4,c	;volatile
  2255                           
  2256                           ;./functions.c: 760:         break;
  2257  0073F6  0012               	return	
  2258  0073F8                     l2857:
  2259  0073F8  0EFA               	movlw	low _colorsDetected
  2260  0073FA  2403               	addwf	displayColorDetected@sensor,w,c
  2261  0073FC  6ED9               	movwf	fsr2l,c
  2262  0073FE  6ADA               	clrf	fsr2h,c
  2263  007400  0E00               	movlw	high _colorsDetected
  2264  007402  22DA               	addwfc	fsr2h,f,c
  2265  007404  50DF               	movf	indf2,w,c
  2266  007406  6E01               	movwf	??_displayColorDetected& (0+255),c
  2267  007408  6A02               	clrf	(??_displayColorDetected+1)& (0+255),c
  2268                           
  2269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 1, Range of values is 0 to 0
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte            4     3 (average)
  2275                           ;	Chosen strategy is simple_byte
  2276  00740A  5002               	movf	??_displayColorDetected+1,w,c
  2277  00740C  0A00               	xorlw	0	; case 0
  2278  00740E  A4D8               	btfss	status,2,c
  2279  007410  D7ED               	goto	l398
  2280                           
  2281                           ; Switch size 1, requested type "simple"
  2282                           ; Number of cases is 5, Range of values is 66 to 110
  2283                           ; switch strategies available:
  2284                           ; Name         Instructions Cycles
  2285                           ; simple_byte           16     9 (average)
  2286                           ;	Chosen strategy is simple_byte
  2287  007412  5001               	movf	??_displayColorDetected,w,c
  2288  007414  0A42               	xorlw	66	; case 66
  2289  007416  B4D8               	btfsc	status,2,c
  2290  007418  D7DD               	goto	l396
  2291  00741A  0A05               	xorlw	5	; case 71
  2292  00741C  B4D8               	btfsc	status,2,c
  2293  00741E  D7CE               	goto	l394
  2294  007420  0A15               	xorlw	21	; case 82
  2295  007422  B4D8               	btfsc	status,2,c
  2296  007424  D7D1               	goto	l395
  2297  007426  0A05               	xorlw	5	; case 87
  2298  007428  B4D8               	btfsc	status,2,c
  2299  00742A  D7C2               	goto	l392
  2300  00742C  0A39               	xorlw	57	; case 110
  2301  00742E  B4D8               	btfsc	status,2,c
  2302  007430  D7D7               	goto	l397
  2303  007432  D7DC               	goto	l398
  2304  007434                     __end_of_displayColorDetected:
  2305                           	opt callstack 0
  2306                           
  2307 ;; *************** function _classifyColors *****************
  2308 ;; Defined at:
  2309 ;;		line 690 in file "./functions.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  a               1   14[COMRAM] unsigned char 
  2314 ;;  sensorRanges   10    4[COMRAM] PTR unsigned char [5]
  2315 ;;		 -> RRranges(5), Rranges(5), Mranges(5), Lranges(5), 
  2316 ;;		 -> LLranges(5), 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2326 ;;      Params:         0       0       0       0       0       0       0
  2327 ;;      Locals:        11       0       0       0       0       0       0
  2328 ;;      Temps:          4       0       0       0       0       0       0
  2329 ;;      Totals:        15       0       0       0       0       0       0
  2330 ;;Total ram usage:       15 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_navigate
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text15
  2340  0075FA                     __ptext15:
  2341                           	opt callstack 0
  2342  0075FA                     _classifyColors:
  2343                           	opt callstack 28
  2344                           
  2345                           ;./functions.c: 691:     unsigned char* sensorRanges[] = {LLranges, Lranges, Mranges, Rr
      +                          anges, RRranges};
  2346                           
  2347                           ;incstack = 0
  2348  0075FA  EE20  F0A8         	lfsr	2,classifyColors@F6061
  2349  0075FE  EE10  F005         	lfsr	1,classifyColors@sensorRanges
  2350  007602  0E09               	movlw	9
  2351  007604                     u1821:
  2352  007604  CFDB FFE3          	movff	plusw2,plusw1
  2353  007608  06E8               	decf	wreg,f,c
  2354  00760A  E2FC               	bc	u1821
  2355                           
  2356                           ;./functions.c: 693:     for (unsigned char a = 0; a < 5; a++){
  2357  00760C  0E00               	movlw	0
  2358  00760E  6E0F               	movwf	classifyColors@a,c
  2359  007610                     l2831:
  2360                           
  2361                           ;./functions.c: 694:         if (sensorVals[a] < sensorRanges[a][0]){
  2362  007610  500F               	movf	classifyColors@a,w,c
  2363  007612  0D02               	mullw	2
  2364  007614  0E05               	movlw	low classifyColors@sensorRanges
  2365  007616  24F3               	addwf	prodl,w,c
  2366  007618  6ED9               	movwf	fsr2l,c
  2367  00761A  0E00               	movlw	high classifyColors@sensorRanges
  2368  00761C  20F4               	addwfc	prodh,w,c
  2369  00761E  6EDA               	movwf	fsr2h,c
  2370  007620  CFDE F001          	movff	postinc2,??_classifyColors
  2371  007624  CFDD F002          	movff	postdec2,??_classifyColors+1
  2372  007628  C001  FFD9         	movff	??_classifyColors,fsr2l
  2373  00762C  C002  FFDA         	movff	??_classifyColors+1,fsr2h
  2374  007630  0ED2               	movlw	low _sensorVals
  2375  007632  240F               	addwf	classifyColors@a,w,c
  2376  007634  6EE1               	movwf	fsr1l,c
  2377  007636  6AE2               	clrf	fsr1h,c
  2378  007638  0E00               	movlw	high _sensorVals
  2379  00763A  22E2               	addwfc	fsr1h,f,c
  2380  00763C  50DE               	movf	postinc2,w,c
  2381  00763E  5CE6               	subwf	postinc1,w,c
  2382  007640  B0D8               	btfsc	status,0,c
  2383  007642  D008               	goto	l2835
  2384                           
  2385                           ;./functions.c: 695:             colorsDetected[a] = 'W';
  2386  007644  0EFA               	movlw	low _colorsDetected
  2387  007646  240F               	addwf	classifyColors@a,w,c
  2388  007648  6ED9               	movwf	fsr2l,c
  2389  00764A  6ADA               	clrf	fsr2h,c
  2390  00764C  0E00               	movlw	high _colorsDetected
  2391  00764E  22DA               	addwfc	fsr2h,f,c
  2392  007650  0E57               	movlw	87
  2393  007652  D067               	goto	L1
  2394  007654                     l2835:
  2395  007654  500F               	movf	classifyColors@a,w,c
  2396  007656  0D02               	mullw	2
  2397  007658  0E05               	movlw	low classifyColors@sensorRanges
  2398  00765A  24F3               	addwf	prodl,w,c
  2399  00765C  6ED9               	movwf	fsr2l,c
  2400  00765E  0E00               	movlw	high classifyColors@sensorRanges
  2401  007660  20F4               	addwfc	prodh,w,c
  2402  007662  6EDA               	movwf	fsr2h,c
  2403  007664  EE10 F001          	lfsr	1,1
  2404  007668  50DE               	movf	postinc2,w,c
  2405  00766A  26E1               	addwf	fsr1l,f,c
  2406  00766C  50DD               	movf	postdec2,w,c
  2407  00766E  22E2               	addwfc	fsr1h,f,c
  2408  007670  0ED2               	movlw	low _sensorVals
  2409  007672  240F               	addwf	classifyColors@a,w,c
  2410  007674  6ED9               	movwf	fsr2l,c
  2411  007676  6ADA               	clrf	fsr2h,c
  2412  007678  0E00               	movlw	high _sensorVals
  2413  00767A  22DA               	addwfc	fsr2h,f,c
  2414  00767C  50E6               	movf	postinc1,w,c
  2415  00767E  5CDE               	subwf	postinc2,w,c
  2416  007680  B0D8               	btfsc	status,0,c
  2417  007682  D008               	goto	l2839
  2418                           
  2419                           ;./functions.c: 698:             colorsDetected[a] = 'G';
  2420  007684  0EFA               	movlw	low _colorsDetected
  2421  007686  240F               	addwf	classifyColors@a,w,c
  2422  007688  6ED9               	movwf	fsr2l,c
  2423  00768A  6ADA               	clrf	fsr2h,c
  2424  00768C  0E00               	movlw	high _colorsDetected
  2425  00768E  22DA               	addwfc	fsr2h,f,c
  2426  007690  0E47               	movlw	71
  2427  007692  D047               	goto	L1
  2428  007694                     l2839:
  2429  007694  500F               	movf	classifyColors@a,w,c
  2430  007696  0D02               	mullw	2
  2431  007698  0E05               	movlw	low classifyColors@sensorRanges
  2432  00769A  24F3               	addwf	prodl,w,c
  2433  00769C  6ED9               	movwf	fsr2l,c
  2434  00769E  0E00               	movlw	high classifyColors@sensorRanges
  2435  0076A0  20F4               	addwfc	prodh,w,c
  2436  0076A2  6EDA               	movwf	fsr2h,c
  2437  0076A4  EE10 F002          	lfsr	1,2
  2438  0076A8  50DE               	movf	postinc2,w,c
  2439  0076AA  26E1               	addwf	fsr1l,f,c
  2440  0076AC  50DD               	movf	postdec2,w,c
  2441  0076AE  22E2               	addwfc	fsr1h,f,c
  2442  0076B0  0ED2               	movlw	low _sensorVals
  2443  0076B2  240F               	addwf	classifyColors@a,w,c
  2444  0076B4  6ED9               	movwf	fsr2l,c
  2445  0076B6  6ADA               	clrf	fsr2h,c
  2446  0076B8  0E00               	movlw	high _sensorVals
  2447  0076BA  22DA               	addwfc	fsr2h,f,c
  2448  0076BC  50E6               	movf	postinc1,w,c
  2449  0076BE  5CDE               	subwf	postinc2,w,c
  2450  0076C0  B0D8               	btfsc	status,0,c
  2451  0076C2  D008               	goto	l2843
  2452                           
  2453                           ;./functions.c: 701:             colorsDetected[a] = 'R';
  2454  0076C4  0EFA               	movlw	low _colorsDetected
  2455  0076C6  240F               	addwf	classifyColors@a,w,c
  2456  0076C8  6ED9               	movwf	fsr2l,c
  2457  0076CA  6ADA               	clrf	fsr2h,c
  2458  0076CC  0E00               	movlw	high _colorsDetected
  2459  0076CE  22DA               	addwfc	fsr2h,f,c
  2460  0076D0  0E52               	movlw	82
  2461  0076D2  D027               	goto	L1
  2462  0076D4                     l2843:
  2463  0076D4  500F               	movf	classifyColors@a,w,c
  2464  0076D6  0D02               	mullw	2
  2465  0076D8  0E05               	movlw	low classifyColors@sensorRanges
  2466  0076DA  24F3               	addwf	prodl,w,c
  2467  0076DC  6ED9               	movwf	fsr2l,c
  2468  0076DE  0E00               	movlw	high classifyColors@sensorRanges
  2469  0076E0  20F4               	addwfc	prodh,w,c
  2470  0076E2  6EDA               	movwf	fsr2h,c
  2471  0076E4  EE10 F003          	lfsr	1,3
  2472  0076E8  50DE               	movf	postinc2,w,c
  2473  0076EA  26E1               	addwf	fsr1l,f,c
  2474  0076EC  50DD               	movf	postdec2,w,c
  2475  0076EE  22E2               	addwfc	fsr1h,f,c
  2476  0076F0  0ED2               	movlw	low _sensorVals
  2477  0076F2  240F               	addwf	classifyColors@a,w,c
  2478  0076F4  6ED9               	movwf	fsr2l,c
  2479  0076F6  6ADA               	clrf	fsr2h,c
  2480  0076F8  0E00               	movlw	high _sensorVals
  2481  0076FA  22DA               	addwfc	fsr2h,f,c
  2482  0076FC  50E6               	movf	postinc1,w,c
  2483  0076FE  5CDE               	subwf	postinc2,w,c
  2484  007700  B0D8               	btfsc	status,0,c
  2485  007702  D008               	goto	l2847
  2486                           
  2487                           ;./functions.c: 704:             colorsDetected[a] = 'B';
  2488  007704  0EFA               	movlw	low _colorsDetected
  2489  007706  240F               	addwf	classifyColors@a,w,c
  2490  007708  6ED9               	movwf	fsr2l,c
  2491  00770A  6ADA               	clrf	fsr2h,c
  2492  00770C  0E00               	movlw	high _colorsDetected
  2493  00770E  22DA               	addwfc	fsr2h,f,c
  2494  007710  0E42               	movlw	66
  2495  007712  D007               	goto	L1
  2496  007714                     l2847:
  2497                           
  2498                           ;./functions.c: 707:             colorsDetected[a] = 'n';
  2499  007714  0EFA               	movlw	low _colorsDetected
  2500  007716  240F               	addwf	classifyColors@a,w,c
  2501  007718  6ED9               	movwf	fsr2l,c
  2502  00771A  6ADA               	clrf	fsr2h,c
  2503  00771C  0E00               	movlw	high _colorsDetected
  2504  00771E  22DA               	addwfc	fsr2h,f,c
  2505  007720  0E6E               	movlw	110
  2506  007722                     L1:
  2507  007722  6EDF               	movwf	indf2,c
  2508                           
  2509                           ;./functions.c: 709:     }
  2510  007724  2A0F               	incf	classifyColors@a,f,c
  2511  007726  0E04               	movlw	4
  2512  007728  640F               	cpfsgt	classifyColors@a,c
  2513  00772A  D772               	goto	l2831
  2514  00772C  0012               	return	
  2515  00772E                     __end_of_classifyColors:
  2516                           	opt callstack 0
  2517                           
  2518 ;; *************** function _capTouch *****************
  2519 ;; Defined at:
  2520 ;;		line 459 in file "./functions.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  a               1   80[COMRAM] unsigned char 
  2525 ;;  message        26   50[COMRAM] unsigned char [26]
  2526 ;;  change          2    0        int 
  2527 ;;  touch2          1   79[COMRAM] unsigned char 
  2528 ;;  touch1          1   78[COMRAM] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2538 ;;      Params:         0       0       0       0       0       0       0
  2539 ;;      Locals:        31       0       0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0
  2541 ;;      Totals:        31       0       0       0       0       0       0
  2542 ;;Total ram usage:       31 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    2
  2545 ;; This function calls:
  2546 ;;		_abs
  2547 ;;		_aveSensor
  2548 ;;		_msDelay
  2549 ;;		_trans
  2550 ;; This function is called by:
  2551 ;;		_RCE
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text16
  2556  007230                     __ptext16:
  2557                           	opt callstack 0
  2558  007230                     _capTouch:
  2559                           	opt callstack 27
  2560                           
  2561                           ;./functions.c: 461:     unsigned char message[] = "\nSanic waits for a touch\n";
  2562                           
  2563                           ;incstack = 0
  2564  007230  EE20  F080         	lfsr	2,capTouch@F6042
  2565  007234  EE10  F033         	lfsr	1,capTouch@message
  2566  007238  0E19               	movlw	25
  2567  00723A                     u2391:
  2568  00723A  CFDB FFE3          	movff	plusw2,plusw1
  2569  00723E  06E8               	decf	wreg,f,c
  2570  007240  E2FC               	bc	u2391
  2571                           
  2572                           ;./functions.c: 463:     for (unsigned char a = 0; a < 25; a++)
  2573  007242  0E00               	movlw	0
  2574  007244  6E51               	movwf	capTouch@a,c
  2575  007246                     l3357:
  2576                           
  2577                           ;./functions.c: 464:     {;./functions.c: 465:         trans(message[a]);
  2578  007246  0E33               	movlw	low capTouch@message
  2579  007248  2451               	addwf	capTouch@a,w,c
  2580  00724A  6ED9               	movwf	fsr2l,c
  2581  00724C  6ADA               	clrf	fsr2h,c
  2582  00724E  0E00               	movlw	high capTouch@message
  2583  007250  22DA               	addwfc	fsr2h,f,c
  2584  007252  50DF               	movf	indf2,w,c
  2585  007254  EC3F  F037         	call	_trans
  2586                           
  2587                           ;./functions.c: 466:     }
  2588  007258  2A51               	incf	capTouch@a,f,c
  2589  00725A  0E18               	movlw	24
  2590  00725C  6451               	cpfsgt	capTouch@a,c
  2591  00725E  D7F3               	goto	l3357
  2592                           
  2593                           ;./functions.c: 469:     unsigned char touch1 = 0;
  2594  007260  0E00               	movlw	0
  2595  007262  6E4F               	movwf	capTouch@touch1,c
  2596                           
  2597                           ;./functions.c: 470:     unsigned char touch2 = 0;
  2598  007264  0E00               	movlw	0
  2599  007266  6E50               	movwf	capTouch@touch2,c
  2600  007268                     l3365:
  2601                           
  2602                           ;./functions.c: 473:         touch1 = aveSensor(15);
  2603  007268  0E0F               	movlw	15
  2604  00726A  EC43  F038         	call	_aveSensor
  2605  00726E  6E4F               	movwf	capTouch@touch1,c
  2606                           
  2607                           ;./functions.c: 474:         msDelay(5);
  2608  007270  0E05               	movlw	5
  2609  007272  ECE5  F038         	call	_msDelay
  2610                           
  2611                           ;./functions.c: 475:         touch2 = aveSensor(15);
  2612  007276  0E0F               	movlw	15
  2613  007278  EC43  F038         	call	_aveSensor
  2614  00727C  6E50               	movwf	capTouch@touch2,c
  2615                           
  2616                           ;./functions.c: 479:         if (abs(touch2 - touch1) > 10){
  2617  00727E  504F               	movf	capTouch@touch1,w,c
  2618  007280  5C50               	subwf	capTouch@touch2,w,c
  2619  007282  6E01               	movwf	abs@a,c
  2620  007284  6A02               	clrf	abs@a+1,c
  2621  007286  A0D8               	btfss	status,0,c
  2622  007288  0602               	decf	abs@a+1,f,c
  2623  00728A  ECB5  F037         	call	_abs	;wreg free
  2624  00728E  BE02               	btfsc	?_abs+1,7,c
  2625  007290  D7EB               	goto	l3365
  2626  007292  5002               	movf	?_abs+1,w,c
  2627  007294  E105               	bnz	l314
  2628  007296  0E0B               	movlw	11
  2629  007298  5C01               	subwf	?_abs,w,c
  2630  00729A  B0D8               	btfsc	status,0,c
  2631  00729C  0012               	return	
  2632  00729E  D7E4               	goto	l3365
  2633  0072A0                     l314:
  2634  0072A0  0012               	return		;funcret
  2635  0072A2                     __end_of_capTouch:
  2636                           	opt callstack 0
  2637                           
  2638 ;; *************** function _abs *****************
  2639 ;; Defined at:
  2640 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  a               2    0[COMRAM] int 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2    0[COMRAM] int 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2654 ;;      Params:         2       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0
  2656 ;;      Temps:          2       0       0       0       0       0       0
  2657 ;;      Totals:         4       0       0       0       0       0       0
  2658 ;;Total ram usage:        4 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_capTouch
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text17
  2668  006F6A                     __ptext17:
  2669                           	opt callstack 0
  2670  006F6A                     _abs:
  2671                           	opt callstack 28
  2672                           
  2673                           ;incstack = 0
  2674  006F6A  BE02               	btfsc	abs@a+1,7,c
  2675  006F6C  D005               	goto	u1880
  2676  006F6E  5002               	movf	abs@a+1,w,c
  2677  006F70  E110               	bnz	l1196
  2678  006F72  0401               	decf	abs@a,w,c
  2679  006F74  B0D8               	btfsc	status,0,c
  2680  006F76  D00D               	goto	l1196
  2681  006F78                     u1880:
  2682  006F78  C001  F003         	movff	abs@a,??_abs
  2683  006F7C  C002  F004         	movff	abs@a+1,??_abs+1
  2684  006F80  1E03               	comf	??_abs,f,c
  2685  006F82  1E04               	comf	??_abs+1,f,c
  2686  006F84  4A03               	infsnz	??_abs,f,c
  2687  006F86  2A04               	incf	??_abs+1,f,c
  2688  006F88  C003  F001         	movff	??_abs,?_abs
  2689  006F8C  C004  F002         	movff	??_abs+1,?_abs+1
  2690  006F90  0012               	return	
  2691  006F92                     l1196:
  2692  006F92  C001  F001         	movff	abs@a,?_abs
  2693  006F96  C002  F002         	movff	abs@a+1,?_abs+1
  2694  006F9A  0012               	return		;funcret
  2695  006F9C                     __end_of_abs:
  2696                           	opt callstack 0
  2697                           
  2698 ;; *************** function _calibrate *****************
  2699 ;; Defined at:
  2700 ;;		line 137 in file "./functions.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  samples         1   60[COMRAM] unsigned char 
  2705 ;;  samples         1   59[COMRAM] unsigned char 
  2706 ;;  samples         1   58[COMRAM] unsigned char 
  2707 ;;  samples         1   57[COMRAM] unsigned char 
  2708 ;;  samples         1   56[COMRAM] unsigned char 
  2709 ;;  sensors         5   51[COMRAM] unsigned char [5]
  2710 ;;  temp            1   61[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2720 ;;      Params:         0       0       0       0       0       0       0
  2721 ;;      Locals:        11       0       0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0
  2723 ;;      Totals:        11       0       0       0       0       0       0
  2724 ;;Total ram usage:       11 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    3
  2727 ;; This function calls:
  2728 ;;		_aveSensor
  2729 ;;		_oneSecDelay
  2730 ;; This function is called by:
  2731 ;;		_RCE
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text18
  2736  0079F2                     __ptext18:
  2737                           	opt callstack 0
  2738  0079F2                     _calibrate:
  2739                           	opt callstack 26
  2740                           
  2741                           ;./functions.c: 139:     PORTA = 0;
  2742                           
  2743                           ;incstack = 0
  2744  0079F2  0E00               	movlw	0
  2745  0079F4  6E80               	movwf	3968,c	;volatile
  2746                           
  2747                           ;./functions.c: 140:     unsigned char sensors[5] = {12, 8, 9, 10, 13};
  2748  0079F6  EE20  F0CD         	lfsr	2,calibrate@F6015
  2749  0079FA  EE10  F034         	lfsr	1,calibrate@sensors
  2750  0079FE  0E04               	movlw	4
  2751  007A00                     u1891:
  2752  007A00  CFDB FFE3          	movff	plusw2,plusw1
  2753  007A04  06E8               	decf	wreg,f,c
  2754  007A06  E2FC               	bc	u1891
  2755                           
  2756                           ;./functions.c: 143:     PORTD = 0b11000001;
  2757  007A08  0EC1               	movlw	193
  2758  007A0A  6E83               	movwf	3971,c	;volatile
  2759                           
  2760                           ;./functions.c: 144:     oneSecDelay();
  2761  007A0C  EC54  F037         	call	_oneSecDelay	;wreg free
  2762                           
  2763                           ;./functions.c: 145:     oneSecDelay();
  2764  007A10  EC54  F037         	call	_oneSecDelay	;wreg free
  2765                           
  2766                           ;./functions.c: 146:     oneSecDelay();
  2767  007A14  EC54  F037         	call	_oneSecDelay	;wreg free
  2768                           
  2769                           ;./functions.c: 147:     oneSecDelay();
  2770  007A18  EC54  F037         	call	_oneSecDelay	;wreg free
  2771                           
  2772                           ;./functions.c: 148:     oneSecDelay();
  2773  007A1C  EC54  F037         	call	_oneSecDelay	;wreg free
  2774                           
  2775                           ;./functions.c: 149:     oneSecDelay();
  2776  007A20  EC54  F037         	call	_oneSecDelay	;wreg free
  2777                           
  2778                           ;./functions.c: 150:     for (unsigned char samples = 0; samples < 250; samples++)
  2779  007A24  0E00               	movlw	0
  2780  007A26  6E39               	movwf	calibrate@samples,c
  2781  007A28                     l2919:
  2782                           
  2783                           ;./functions.c: 151:     {;./functions.c: 152:         temp = aveSensor(12);
  2784  007A28  0E0C               	movlw	12
  2785  007A2A  EC43  F038         	call	_aveSensor
  2786  007A2E  6E3E               	movwf	calibrate@temp,c
  2787                           
  2788                           ;./functions.c: 153:         if (temp >= LLranges[0])
  2789  007A30  505B               	movf	_LLranges,w,c
  2790  007A32  5C3E               	subwf	calibrate@temp,w,c
  2791  007A34  B0D8               	btfsc	status,0,c
  2792                           
  2793                           ;./functions.c: 154:         {;./functions.c: 155:             LLranges[0] = temp;
  2794  007A36  C03E  F05B         	movff	calibrate@temp,_LLranges
  2795                           
  2796                           ;./functions.c: 157:         temp = aveSensor(10);
  2797  007A3A  0E0A               	movlw	10
  2798  007A3C  EC43  F038         	call	_aveSensor
  2799  007A40  6E3E               	movwf	calibrate@temp,c
  2800                           
  2801                           ;./functions.c: 158:         if (temp >= Lranges[0])
  2802  007A42  5056               	movf	_Lranges,w,c
  2803  007A44  5C3E               	subwf	calibrate@temp,w,c
  2804  007A46  B0D8               	btfsc	status,0,c
  2805                           
  2806                           ;./functions.c: 159:         {;./functions.c: 160:             Lranges[0] = temp;
  2807  007A48  C03E  F056         	movff	calibrate@temp,_Lranges
  2808                           
  2809                           ;./functions.c: 162:         temp = aveSensor(8);
  2810  007A4C  0E08               	movlw	8
  2811  007A4E  EC43  F038         	call	_aveSensor
  2812  007A52  6E3E               	movwf	calibrate@temp,c
  2813                           
  2814                           ;./functions.c: 163:         if (temp >= LLranges[0])
  2815  007A54  505B               	movf	_LLranges,w,c
  2816  007A56  5C3E               	subwf	calibrate@temp,w,c
  2817  007A58  B0D8               	btfsc	status,0,c
  2818                           
  2819                           ;./functions.c: 164:         {;./functions.c: 165:             Mranges[0] = temp;
  2820  007A5A  C03E  F0E1         	movff	calibrate@temp,_Mranges
  2821                           
  2822                           ;./functions.c: 167:         temp = aveSensor(9);
  2823  007A5E  0E09               	movlw	9
  2824  007A60  EC43  F038         	call	_aveSensor
  2825  007A64  6E3E               	movwf	calibrate@temp,c
  2826                           
  2827                           ;./functions.c: 168:         if (temp >= LLranges[0])
  2828  007A66  505B               	movf	_LLranges,w,c
  2829  007A68  5C3E               	subwf	calibrate@temp,w,c
  2830  007A6A  B0D8               	btfsc	status,0,c
  2831                           
  2832                           ;./functions.c: 169:         {;./functions.c: 170:             Rranges[0] = temp;
  2833  007A6C  C03E  F0DC         	movff	calibrate@temp,_Rranges
  2834                           
  2835                           ;./functions.c: 172:         temp = aveSensor(13);
  2836  007A70  0E0D               	movlw	13
  2837  007A72  EC43  F038         	call	_aveSensor
  2838  007A76  6E3E               	movwf	calibrate@temp,c
  2839                           
  2840                           ;./functions.c: 173:         if (temp >= LLranges[0])
  2841  007A78  505B               	movf	_LLranges,w,c
  2842  007A7A  5C3E               	subwf	calibrate@temp,w,c
  2843  007A7C  B0D8               	btfsc	status,0,c
  2844                           
  2845                           ;./functions.c: 174:         {;./functions.c: 175:             RRranges[0] = temp;
  2846  007A7E  C03E  F0D7         	movff	calibrate@temp,_RRranges
  2847                           
  2848                           ;./functions.c: 177:     }
  2849  007A82  2A39               	incf	calibrate@samples,f,c
  2850  007A84  0EF9               	movlw	249
  2851  007A86  6439               	cpfsgt	calibrate@samples,c
  2852  007A88  D7CF               	goto	l2919
  2853                           
  2854                           ;./functions.c: 178:     PORTAbits.RA0 = 1;
  2855  007A8A  8080               	bsf	3968,0,c	;volatile
  2856                           
  2857                           ;./functions.c: 179:     PORTD = 0b10000010;
  2858  007A8C  0E82               	movlw	130
  2859  007A8E  6E83               	movwf	3971,c	;volatile
  2860                           
  2861                           ;./functions.c: 181:     oneSecDelay();
  2862  007A90  EC54  F037         	call	_oneSecDelay	;wreg free
  2863                           
  2864                           ;./functions.c: 182:     oneSecDelay();
  2865  007A94  EC54  F037         	call	_oneSecDelay	;wreg free
  2866                           
  2867                           ;./functions.c: 183:     oneSecDelay();
  2868  007A98  EC54  F037         	call	_oneSecDelay	;wreg free
  2869                           
  2870                           ;./functions.c: 184:     oneSecDelay();
  2871  007A9C  EC54  F037         	call	_oneSecDelay	;wreg free
  2872                           
  2873                           ;./functions.c: 185:     oneSecDelay();
  2874  007AA0  EC54  F037         	call	_oneSecDelay	;wreg free
  2875                           
  2876                           ;./functions.c: 186:     oneSecDelay();
  2877  007AA4  EC54  F037         	call	_oneSecDelay	;wreg free
  2878                           
  2879                           ;./functions.c: 187:     for (unsigned char samples = 0; samples < 250; samples++)
  2880  007AA8  0E00               	movlw	0
  2881  007AAA  6E3A               	movwf	calibrate@samples_1157,c
  2882  007AAC                     l2971:
  2883                           
  2884                           ;./functions.c: 188:     {;./functions.c: 189:         temp = aveSensor(12);
  2885  007AAC  0E0C               	movlw	12
  2886  007AAE  EC43  F038         	call	_aveSensor
  2887  007AB2  6E3E               	movwf	calibrate@temp,c
  2888                           
  2889                           ;./functions.c: 190:         if (temp >= LLranges[1])
  2890  007AB4  505C               	movf	_LLranges+1,w,c
  2891  007AB6  5C3E               	subwf	calibrate@temp,w,c
  2892  007AB8  B0D8               	btfsc	status,0,c
  2893                           
  2894                           ;./functions.c: 191:         {;./functions.c: 192:             LLranges[1] = temp;
  2895  007ABA  C03E  F05C         	movff	calibrate@temp,_LLranges+1
  2896                           
  2897                           ;./functions.c: 194:         temp = aveSensor(10);
  2898  007ABE  0E0A               	movlw	10
  2899  007AC0  EC43  F038         	call	_aveSensor
  2900  007AC4  6E3E               	movwf	calibrate@temp,c
  2901                           
  2902                           ;./functions.c: 195:         if (temp >= Lranges[1])
  2903  007AC6  5057               	movf	_Lranges+1,w,c
  2904  007AC8  5C3E               	subwf	calibrate@temp,w,c
  2905  007ACA  B0D8               	btfsc	status,0,c
  2906                           
  2907                           ;./functions.c: 196:         {;./functions.c: 197:             Lranges[1] = temp;
  2908  007ACC  C03E  F057         	movff	calibrate@temp,_Lranges+1
  2909                           
  2910                           ;./functions.c: 199:         temp = aveSensor(8);
  2911  007AD0  0E08               	movlw	8
  2912  007AD2  EC43  F038         	call	_aveSensor
  2913  007AD6  6E3E               	movwf	calibrate@temp,c
  2914                           
  2915                           ;./functions.c: 200:         if (temp >= LLranges[1])
  2916  007AD8  505C               	movf	_LLranges+1,w,c
  2917  007ADA  5C3E               	subwf	calibrate@temp,w,c
  2918  007ADC  B0D8               	btfsc	status,0,c
  2919                           
  2920                           ;./functions.c: 201:         {;./functions.c: 202:             Mranges[1] = temp;
  2921  007ADE  C03E  F0E2         	movff	calibrate@temp,_Mranges+1
  2922                           
  2923                           ;./functions.c: 204:         temp = aveSensor(9);
  2924  007AE2  0E09               	movlw	9
  2925  007AE4  EC43  F038         	call	_aveSensor
  2926  007AE8  6E3E               	movwf	calibrate@temp,c
  2927                           
  2928                           ;./functions.c: 205:         if (temp >= LLranges[1])
  2929  007AEA  505C               	movf	_LLranges+1,w,c
  2930  007AEC  5C3E               	subwf	calibrate@temp,w,c
  2931  007AEE  B0D8               	btfsc	status,0,c
  2932                           
  2933                           ;./functions.c: 206:         {;./functions.c: 207:             Rranges[1] = temp;
  2934  007AF0  C03E  F0DD         	movff	calibrate@temp,_Rranges+1
  2935                           
  2936                           ;./functions.c: 209:         temp = aveSensor(13);
  2937  007AF4  0E0D               	movlw	13
  2938  007AF6  EC43  F038         	call	_aveSensor
  2939  007AFA  6E3E               	movwf	calibrate@temp,c
  2940                           
  2941                           ;./functions.c: 210:         if (temp >= LLranges[1])
  2942  007AFC  505C               	movf	_LLranges+1,w,c
  2943  007AFE  5C3E               	subwf	calibrate@temp,w,c
  2944  007B00  B0D8               	btfsc	status,0,c
  2945                           
  2946                           ;./functions.c: 211:         {;./functions.c: 212:             RRranges[1] = temp;
  2947  007B02  C03E  F0D8         	movff	calibrate@temp,_RRranges+1
  2948                           
  2949                           ;./functions.c: 214:     }
  2950  007B06  2A3A               	incf	calibrate@samples_1157,f,c
  2951  007B08  0EF9               	movlw	249
  2952  007B0A  643A               	cpfsgt	calibrate@samples_1157,c
  2953  007B0C  D7CF               	goto	l2971
  2954                           
  2955                           ;./functions.c: 215:     PORTAbits.RA1 = 1;
  2956  007B0E  8280               	bsf	3968,1,c	;volatile
  2957                           
  2958                           ;./functions.c: 216:     PORTD = 0b10001000;
  2959  007B10  0E88               	movlw	136
  2960  007B12  6E83               	movwf	3971,c	;volatile
  2961                           
  2962                           ;./functions.c: 218:     oneSecDelay();
  2963  007B14  EC54  F037         	call	_oneSecDelay	;wreg free
  2964                           
  2965                           ;./functions.c: 219:     oneSecDelay();
  2966  007B18  EC54  F037         	call	_oneSecDelay	;wreg free
  2967                           
  2968                           ;./functions.c: 220:     oneSecDelay();
  2969  007B1C  EC54  F037         	call	_oneSecDelay	;wreg free
  2970                           
  2971                           ;./functions.c: 221:     oneSecDelay();
  2972  007B20  EC54  F037         	call	_oneSecDelay	;wreg free
  2973                           
  2974                           ;./functions.c: 222:     oneSecDelay();
  2975  007B24  EC54  F037         	call	_oneSecDelay	;wreg free
  2976                           
  2977                           ;./functions.c: 223:     oneSecDelay();
  2978  007B28  EC54  F037         	call	_oneSecDelay	;wreg free
  2979                           
  2980                           ;./functions.c: 224:     for (unsigned char samples = 0; samples < 250; samples++)
  2981  007B2C  0E00               	movlw	0
  2982  007B2E  6E3B               	movwf	calibrate@samples_1158,c
  2983  007B30                     l3023:
  2984                           
  2985                           ;./functions.c: 225:     {;./functions.c: 226:         temp = aveSensor(12);
  2986  007B30  0E0C               	movlw	12
  2987  007B32  EC43  F038         	call	_aveSensor
  2988  007B36  6E3E               	movwf	calibrate@temp,c
  2989                           
  2990                           ;./functions.c: 227:         if (temp >= LLranges[2])
  2991  007B38  505D               	movf	_LLranges+2,w,c
  2992  007B3A  5C3E               	subwf	calibrate@temp,w,c
  2993  007B3C  B0D8               	btfsc	status,0,c
  2994                           
  2995                           ;./functions.c: 228:         {;./functions.c: 229:             LLranges[2] = temp;
  2996  007B3E  C03E  F05D         	movff	calibrate@temp,_LLranges+2
  2997                           
  2998                           ;./functions.c: 231:         temp = aveSensor(10);
  2999  007B42  0E0A               	movlw	10
  3000  007B44  EC43  F038         	call	_aveSensor
  3001  007B48  6E3E               	movwf	calibrate@temp,c
  3002                           
  3003                           ;./functions.c: 232:         if (temp >= Lranges[2])
  3004  007B4A  5058               	movf	_Lranges+2,w,c
  3005  007B4C  5C3E               	subwf	calibrate@temp,w,c
  3006  007B4E  B0D8               	btfsc	status,0,c
  3007                           
  3008                           ;./functions.c: 233:         {;./functions.c: 234:             Lranges[2] = temp;
  3009  007B50  C03E  F058         	movff	calibrate@temp,_Lranges+2
  3010                           
  3011                           ;./functions.c: 236:         temp = aveSensor(8);
  3012  007B54  0E08               	movlw	8
  3013  007B56  EC43  F038         	call	_aveSensor
  3014  007B5A  6E3E               	movwf	calibrate@temp,c
  3015                           
  3016                           ;./functions.c: 237:         if (temp >= LLranges[2])
  3017  007B5C  505D               	movf	_LLranges+2,w,c
  3018  007B5E  5C3E               	subwf	calibrate@temp,w,c
  3019  007B60  B0D8               	btfsc	status,0,c
  3020                           
  3021                           ;./functions.c: 238:         {;./functions.c: 239:             Mranges[2] = temp;
  3022  007B62  C03E  F0E3         	movff	calibrate@temp,_Mranges+2
  3023                           
  3024                           ;./functions.c: 241:         temp = aveSensor(9);
  3025  007B66  0E09               	movlw	9
  3026  007B68  EC43  F038         	call	_aveSensor
  3027  007B6C  6E3E               	movwf	calibrate@temp,c
  3028                           
  3029                           ;./functions.c: 242:         if (temp >= LLranges[2])
  3030  007B6E  505D               	movf	_LLranges+2,w,c
  3031  007B70  5C3E               	subwf	calibrate@temp,w,c
  3032  007B72  B0D8               	btfsc	status,0,c
  3033                           
  3034                           ;./functions.c: 243:         {;./functions.c: 244:             Rranges[2] = temp;
  3035  007B74  C03E  F0DE         	movff	calibrate@temp,_Rranges+2
  3036                           
  3037                           ;./functions.c: 246:         temp = aveSensor(13);
  3038  007B78  0E0D               	movlw	13
  3039  007B7A  EC43  F038         	call	_aveSensor
  3040  007B7E  6E3E               	movwf	calibrate@temp,c
  3041                           
  3042                           ;./functions.c: 247:         if (temp >= LLranges[2])
  3043  007B80  505D               	movf	_LLranges+2,w,c
  3044  007B82  5C3E               	subwf	calibrate@temp,w,c
  3045  007B84  B0D8               	btfsc	status,0,c
  3046                           
  3047                           ;./functions.c: 248:         {;./functions.c: 249:             RRranges[2] = temp;
  3048  007B86  C03E  F0D9         	movff	calibrate@temp,_RRranges+2
  3049                           
  3050                           ;./functions.c: 251:     }
  3051  007B8A  2A3B               	incf	calibrate@samples_1158,f,c
  3052  007B8C  0EF9               	movlw	249
  3053  007B8E  643B               	cpfsgt	calibrate@samples_1158,c
  3054  007B90  D7CF               	goto	l3023
  3055                           
  3056                           ;./functions.c: 252:     PORTAbits.RA2 = 1;
  3057  007B92  8480               	bsf	3968,2,c	;volatile
  3058                           
  3059                           ;./functions.c: 253:     PORTD = 0b10000000;
  3060  007B94  0E80               	movlw	128
  3061  007B96  6E83               	movwf	3971,c	;volatile
  3062                           
  3063                           ;./functions.c: 255:     oneSecDelay();
  3064  007B98  EC54  F037         	call	_oneSecDelay	;wreg free
  3065                           
  3066                           ;./functions.c: 256:     oneSecDelay();
  3067  007B9C  EC54  F037         	call	_oneSecDelay	;wreg free
  3068                           
  3069                           ;./functions.c: 257:     oneSecDelay();
  3070  007BA0  EC54  F037         	call	_oneSecDelay	;wreg free
  3071                           
  3072                           ;./functions.c: 258:     oneSecDelay();
  3073  007BA4  EC54  F037         	call	_oneSecDelay	;wreg free
  3074                           
  3075                           ;./functions.c: 259:     oneSecDelay();
  3076  007BA8  EC54  F037         	call	_oneSecDelay	;wreg free
  3077                           
  3078                           ;./functions.c: 260:     oneSecDelay();
  3079  007BAC  EC54  F037         	call	_oneSecDelay	;wreg free
  3080                           
  3081                           ;./functions.c: 261:     for (unsigned char samples = 0; samples < 250; samples++)
  3082  007BB0  0E00               	movlw	0
  3083  007BB2  6E3C               	movwf	calibrate@samples_1159,c
  3084  007BB4                     l3075:
  3085                           
  3086                           ;./functions.c: 262:     {;./functions.c: 263:         temp = aveSensor(12);
  3087  007BB4  0E0C               	movlw	12
  3088  007BB6  EC43  F038         	call	_aveSensor
  3089  007BBA  6E3E               	movwf	calibrate@temp,c
  3090                           
  3091                           ;./functions.c: 264:         if (temp >= LLranges[3])
  3092  007BBC  505E               	movf	_LLranges+3,w,c
  3093  007BBE  5C3E               	subwf	calibrate@temp,w,c
  3094  007BC0  B0D8               	btfsc	status,0,c
  3095                           
  3096                           ;./functions.c: 265:         {;./functions.c: 266:             LLranges[3] = temp;
  3097  007BC2  C03E  F05E         	movff	calibrate@temp,_LLranges+3
  3098                           
  3099                           ;./functions.c: 268:         temp = aveSensor(10);
  3100  007BC6  0E0A               	movlw	10
  3101  007BC8  EC43  F038         	call	_aveSensor
  3102  007BCC  6E3E               	movwf	calibrate@temp,c
  3103                           
  3104                           ;./functions.c: 269:         if (temp >= Lranges[3])
  3105  007BCE  5059               	movf	_Lranges+3,w,c
  3106  007BD0  5C3E               	subwf	calibrate@temp,w,c
  3107  007BD2  B0D8               	btfsc	status,0,c
  3108                           
  3109                           ;./functions.c: 270:         {;./functions.c: 271:             Lranges[3] = temp;
  3110  007BD4  C03E  F059         	movff	calibrate@temp,_Lranges+3
  3111                           
  3112                           ;./functions.c: 273:         temp = aveSensor(8);
  3113  007BD8  0E08               	movlw	8
  3114  007BDA  EC43  F038         	call	_aveSensor
  3115  007BDE  6E3E               	movwf	calibrate@temp,c
  3116                           
  3117                           ;./functions.c: 274:         if (temp >= LLranges[3])
  3118  007BE0  505E               	movf	_LLranges+3,w,c
  3119  007BE2  5C3E               	subwf	calibrate@temp,w,c
  3120  007BE4  B0D8               	btfsc	status,0,c
  3121                           
  3122                           ;./functions.c: 275:         {;./functions.c: 276:             Mranges[3] = temp;
  3123  007BE6  C03E  F0E4         	movff	calibrate@temp,_Mranges+3
  3124                           
  3125                           ;./functions.c: 278:         temp = aveSensor(9);
  3126  007BEA  0E09               	movlw	9
  3127  007BEC  EC43  F038         	call	_aveSensor
  3128  007BF0  6E3E               	movwf	calibrate@temp,c
  3129                           
  3130                           ;./functions.c: 279:         if (temp >= LLranges[3])
  3131  007BF2  505E               	movf	_LLranges+3,w,c
  3132  007BF4  5C3E               	subwf	calibrate@temp,w,c
  3133  007BF6  B0D8               	btfsc	status,0,c
  3134                           
  3135                           ;./functions.c: 280:         {;./functions.c: 281:             Rranges[3] = temp;
  3136  007BF8  C03E  F0DF         	movff	calibrate@temp,_Rranges+3
  3137                           
  3138                           ;./functions.c: 283:         temp = aveSensor(13);
  3139  007BFC  0E0D               	movlw	13
  3140  007BFE  EC43  F038         	call	_aveSensor
  3141  007C02  6E3E               	movwf	calibrate@temp,c
  3142                           
  3143                           ;./functions.c: 284:         if (temp >= LLranges[3])
  3144  007C04  505E               	movf	_LLranges+3,w,c
  3145  007C06  5C3E               	subwf	calibrate@temp,w,c
  3146  007C08  B0D8               	btfsc	status,0,c
  3147                           
  3148                           ;./functions.c: 285:         {;./functions.c: 286:             RRranges[3] = temp;
  3149  007C0A  C03E  F0DA         	movff	calibrate@temp,_RRranges+3
  3150                           
  3151                           ;./functions.c: 288:     }
  3152  007C0E  2A3C               	incf	calibrate@samples_1159,f,c
  3153  007C10  0EF9               	movlw	249
  3154  007C12  643C               	cpfsgt	calibrate@samples_1159,c
  3155  007C14  D7CF               	goto	l3075
  3156                           
  3157                           ;./functions.c: 289:     PORTAbits.RA3 = 1;
  3158  007C16  8680               	bsf	3968,3,c	;volatile
  3159                           
  3160                           ;./functions.c: 290:     PORTD = 0b11001000;
  3161  007C18  0EC8               	movlw	200
  3162  007C1A  6E83               	movwf	3971,c	;volatile
  3163                           
  3164                           ;./functions.c: 292:     oneSecDelay();
  3165  007C1C  EC54  F037         	call	_oneSecDelay	;wreg free
  3166                           
  3167                           ;./functions.c: 293:     oneSecDelay();
  3168  007C20  EC54  F037         	call	_oneSecDelay	;wreg free
  3169                           
  3170                           ;./functions.c: 294:     oneSecDelay();
  3171  007C24  EC54  F037         	call	_oneSecDelay	;wreg free
  3172                           
  3173                           ;./functions.c: 295:     oneSecDelay();
  3174  007C28  EC54  F037         	call	_oneSecDelay	;wreg free
  3175                           
  3176                           ;./functions.c: 296:     oneSecDelay();
  3177  007C2C  EC54  F037         	call	_oneSecDelay	;wreg free
  3178                           
  3179                           ;./functions.c: 297:     oneSecDelay();
  3180  007C30  EC54  F037         	call	_oneSecDelay	;wreg free
  3181                           
  3182                           ;./functions.c: 298:     for (unsigned char samples = 0; samples < 250; samples++)
  3183  007C34  0E00               	movlw	0
  3184  007C36  6E3D               	movwf	calibrate@samples_1160,c
  3185  007C38                     l3127:
  3186                           
  3187                           ;./functions.c: 299:     {;./functions.c: 300:         temp = aveSensor(12);
  3188  007C38  0E0C               	movlw	12
  3189  007C3A  EC43  F038         	call	_aveSensor
  3190  007C3E  6E3E               	movwf	calibrate@temp,c
  3191                           
  3192                           ;./functions.c: 301:         if (temp >= LLranges[4])
  3193  007C40  505F               	movf	_LLranges+4,w,c
  3194  007C42  5C3E               	subwf	calibrate@temp,w,c
  3195  007C44  B0D8               	btfsc	status,0,c
  3196                           
  3197                           ;./functions.c: 302:         {;./functions.c: 303:             LLranges[4] = temp;
  3198  007C46  C03E  F05F         	movff	calibrate@temp,_LLranges+4
  3199                           
  3200                           ;./functions.c: 305:         temp = aveSensor(10);
  3201  007C4A  0E0A               	movlw	10
  3202  007C4C  EC43  F038         	call	_aveSensor
  3203  007C50  6E3E               	movwf	calibrate@temp,c
  3204                           
  3205                           ;./functions.c: 306:         if (temp >= Lranges[4])
  3206  007C52  505A               	movf	_Lranges+4,w,c
  3207  007C54  5C3E               	subwf	calibrate@temp,w,c
  3208  007C56  B0D8               	btfsc	status,0,c
  3209                           
  3210                           ;./functions.c: 307:         {;./functions.c: 308:             Lranges[4] = temp;
  3211  007C58  C03E  F05A         	movff	calibrate@temp,_Lranges+4
  3212                           
  3213                           ;./functions.c: 310:         temp = aveSensor(8);
  3214  007C5C  0E08               	movlw	8
  3215  007C5E  EC43  F038         	call	_aveSensor
  3216  007C62  6E3E               	movwf	calibrate@temp,c
  3217                           
  3218                           ;./functions.c: 311:         if (temp >= LLranges[4])
  3219  007C64  505F               	movf	_LLranges+4,w,c
  3220  007C66  5C3E               	subwf	calibrate@temp,w,c
  3221  007C68  B0D8               	btfsc	status,0,c
  3222                           
  3223                           ;./functions.c: 312:         {;./functions.c: 313:             Mranges[4] = temp;
  3224  007C6A  C03E  F0E5         	movff	calibrate@temp,_Mranges+4
  3225                           
  3226                           ;./functions.c: 315:         temp = aveSensor(9);
  3227  007C6E  0E09               	movlw	9
  3228  007C70  EC43  F038         	call	_aveSensor
  3229  007C74  6E3E               	movwf	calibrate@temp,c
  3230                           
  3231                           ;./functions.c: 316:         if (temp >= LLranges[4])
  3232  007C76  505F               	movf	_LLranges+4,w,c
  3233  007C78  5C3E               	subwf	calibrate@temp,w,c
  3234  007C7A  B0D8               	btfsc	status,0,c
  3235                           
  3236                           ;./functions.c: 317:         {;./functions.c: 318:             Rranges[4] = temp;
  3237  007C7C  C03E  F0E0         	movff	calibrate@temp,_Rranges+4
  3238                           
  3239                           ;./functions.c: 320:         temp = aveSensor(13);
  3240  007C80  0E0D               	movlw	13
  3241  007C82  EC43  F038         	call	_aveSensor
  3242  007C86  6E3E               	movwf	calibrate@temp,c
  3243                           
  3244                           ;./functions.c: 321:         if (temp >= LLranges[4])
  3245  007C88  505F               	movf	_LLranges+4,w,c
  3246  007C8A  5C3E               	subwf	calibrate@temp,w,c
  3247  007C8C  B0D8               	btfsc	status,0,c
  3248                           
  3249                           ;./functions.c: 322:         {;./functions.c: 323:             RRranges[4] = temp;
  3250  007C8E  C03E  F0DB         	movff	calibrate@temp,_RRranges+4
  3251                           
  3252                           ;./functions.c: 325:     }
  3253  007C92  2A3D               	incf	calibrate@samples_1160,f,c
  3254  007C94  0EF9               	movlw	249
  3255  007C96  643D               	cpfsgt	calibrate@samples_1160,c
  3256  007C98  D7CF               	goto	l3127
  3257                           
  3258                           ;./functions.c: 326:     PORTAbits.RA4 = 1;
  3259  007C9A  8880               	bsf	3968,4,c	;volatile
  3260                           
  3261                           ;./functions.c: 327:     oneSecDelay();
  3262  007C9C  EC54  F037         	call	_oneSecDelay	;wreg free
  3263                           
  3264                           ;./functions.c: 328:     oneSecDelay();
  3265  007CA0  EC54  F037         	call	_oneSecDelay	;wreg free
  3266                           
  3267                           ;./functions.c: 329:     oneSecDelay();
  3268  007CA4  EC54  F037         	call	_oneSecDelay	;wreg free
  3269                           
  3270                           ;./functions.c: 331:     PORTA = 0;
  3271  007CA8  0E00               	movlw	0
  3272  007CAA  6E80               	movwf	3968,c	;volatile
  3273  007CAC  0012               	return		;funcret
  3274  007CAE                     __end_of_calibrate:
  3275                           	opt callstack 0
  3276                           
  3277 ;; *************** function _oneSecDelay *****************
  3278 ;; Defined at:
  3279 ;;		line 918 in file "./functions.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  a               1   50[COMRAM] unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3293 ;;      Params:         0       0       0       0       0       0       0
  3294 ;;      Locals:         1       0       0       0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0
  3296 ;;      Totals:         1       0       0       0       0       0       0
  3297 ;;Total ram usage:        1 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    2
  3300 ;; This function calls:
  3301 ;;		_msDelay
  3302 ;; This function is called by:
  3303 ;;		_calibrate
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text19
  3308  006EA8                     __ptext19:
  3309                           	opt callstack 0
  3310  006EA8                     _oneSecDelay:
  3311                           	opt callstack 26
  3312                           
  3313                           ;./functions.c: 920:     for (unsigned char a = 0; a < 15; a++)
  3314                           
  3315                           ;incstack = 0
  3316  006EA8  0E00               	movlw	0
  3317  006EAA  6E33               	movwf	oneSecDelay@a,c
  3318  006EAC                     l2767:
  3319                           
  3320                           ;./functions.c: 921:     {;./functions.c: 922:         msDelay(63);
  3321  006EAC  0E3F               	movlw	63
  3322  006EAE  ECE5  F038         	call	_msDelay
  3323                           
  3324                           ;./functions.c: 923:     }
  3325  006EB2  2A33               	incf	oneSecDelay@a,f,c
  3326  006EB4  0E0E               	movlw	14
  3327  006EB6  6433               	cpfsgt	oneSecDelay@a,c
  3328  006EB8  D7F9               	goto	l2767
  3329  006EBA  0012               	return	
  3330  006EBC                     __end_of_oneSecDelay:
  3331                           	opt callstack 0
  3332                           
  3333 ;; *************** function _msDelay *****************
  3334 ;; Defined at:
  3335 ;;		line 928 in file "./functions.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  delayInMs       1    wreg     unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  delayInMs       1   49[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3349 ;;      Params:         0       0       0       0       0       0       0
  3350 ;;      Locals:         1       0       0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0
  3352 ;;      Totals:         1       0       0       0       0       0       0
  3353 ;;Total ram usage:        1 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    1
  3356 ;; This function calls:
  3357 ;;		___flmul
  3358 ;;		___fltol
  3359 ;;		___xxtofl
  3360 ;; This function is called by:
  3361 ;;		_pyCal
  3362 ;;		_capTouch
  3363 ;;		_oneSecDelay
  3364 ;;		_turn45p
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text20
  3369  0071CA                     __ptext20:
  3370                           	opt callstack 0
  3371  0071CA                     _msDelay:
  3372                           	opt callstack 27
  3373                           
  3374                           ;incstack = 0
  3375                           ;msDelay@delayInMs stored from wreg
  3376  0071CA  6E32               	movwf	msDelay@delayInMs,c
  3377                           
  3378                           ;./functions.c: 928: void msDelay(unsigned char delayInMs);./functions.c: 929: {;./funct
      +                          ions.c: 930:     TMR6 = 0;
  3379  0071CC  0E00               	movlw	0
  3380  0071CE  010F               	movlb	15	; () banked
  3381  0071D0  6F4C               	movwf	76,b	;volatile
  3382                           
  3383                           ; BSR set to: 15
  3384                           ;./functions.c: 931:     PR6 = 3.90625 * delayInMs;
  3385  0071D2  0E00               	movlw	0
  3386  0071D4  6E13               	movwf	___flmul@a,c
  3387  0071D6  0E00               	movlw	0
  3388  0071D8  6E14               	movwf	___flmul@a+1,c
  3389  0071DA  0E7A               	movlw	122
  3390  0071DC  6E15               	movwf	___flmul@a+2,c
  3391  0071DE  0E40               	movlw	64
  3392  0071E0  6E16               	movwf	___flmul@a+3,c
  3393  0071E2  5032               	movf	msDelay@delayInMs,w,c
  3394  0071E4  6E01               	movwf	___xxtofl@val,c
  3395  0071E6  6A02               	clrf	___xxtofl@val+1,c
  3396  0071E8  6A03               	clrf	___xxtofl@val+2,c
  3397  0071EA  6A04               	clrf	___xxtofl@val+3,c
  3398  0071EC  0E01               	movlw	1
  3399  0071EE  EC97  F03B         	call	___xxtofl
  3400  0071F2  C001  F00F         	movff	?___xxtofl,___flmul@b
  3401  0071F6  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3402  0071FA  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3403  0071FE  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3404  007202  EC57  F03E         	call	___flmul	;wreg free
  3405  007206  C00F  F028         	movff	?___flmul,___fltol@f1
  3406  00720A  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3407  00720E  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3408  007212  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3409  007216  EC1A  F03A         	call	___fltol	;wreg free
  3410  00721A  5028               	movf	?___fltol,w,c
  3411  00721C  010F               	movlb	15	; () banked
  3412  00721E  6F4B               	movwf	75,b	;volatile
  3413                           
  3414                           ; BSR set to: 15
  3415                           ;./functions.c: 932:     T6CON = 0xFF;
  3416  007220  694A               	setf	74,b	;volatile
  3417  007222                     l468:
  3418  007222  A47E               	btfss	3966,2,c	;volatile
  3419  007224  D7FE               	goto	l468
  3420                           
  3421                           ;./functions.c: 935:     PIR5bits.TMR6IF = 0;
  3422  007226  947E               	bcf	3966,2,c	;volatile
  3423                           
  3424                           ;./functions.c: 936:     T6CON = 0;
  3425  007228  0E00               	movlw	0
  3426  00722A  010F               	movlb	15	; () banked
  3427  00722C  6F4A               	movwf	74,b	;volatile
  3428                           
  3429                           ; BSR set to: 15
  3430  00722E  0012               	return		;funcret
  3431  007230                     __end_of_msDelay:
  3432                           	opt callstack 0
  3433                           
  3434 ;; *************** function ___xxtofl *****************
  3435 ;; Defined at:
  3436 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  sign            1    wreg     unsigned char 
  3439 ;;  val             4    0[COMRAM] long 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  sign            1    8[COMRAM] unsigned char 
  3442 ;;  arg             4   10[COMRAM] unsigned long 
  3443 ;;  exp             1    9[COMRAM] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  4    0[COMRAM] unsigned char 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3453 ;;      Params:         4       0       0       0       0       0       0
  3454 ;;      Locals:         6       0       0       0       0       0       0
  3455 ;;      Temps:          4       0       0       0       0       0       0
  3456 ;;      Totals:        14       0       0       0       0       0       0
  3457 ;;Total ram usage:       14 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_msDelay
  3463 ;;		_timer6Setup
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text21
  3468  00772E                     __ptext21:
  3469                           	opt callstack 0
  3470  00772E                     ___xxtofl:
  3471                           	opt callstack 27
  3472                           
  3473                           ; BSR set to: 15
  3474                           ;incstack = 0
  3475                           ;___xxtofl@sign stored from wreg
  3476  00772E  6E09               	movwf	___xxtofl@sign,c
  3477  007730  5009               	movf	___xxtofl@sign,w,c
  3478  007732  A4D8               	btfss	status,2,c
  3479  007734  AE04               	btfss	___xxtofl@val+3,7,c
  3480  007736  D01A               	goto	l1176
  3481  007738  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3482  00773C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3483  007740  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3484  007744  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3485  007748  1E05               	comf	??___xxtofl,f,c
  3486  00774A  1E06               	comf	??___xxtofl+1,f,c
  3487  00774C  1E07               	comf	??___xxtofl+2,f,c
  3488  00774E  1E08               	comf	??___xxtofl+3,f,c
  3489  007750  2A05               	incf	??___xxtofl,f,c
  3490  007752  0E00               	movlw	0
  3491  007754  2206               	addwfc	??___xxtofl+1,f,c
  3492  007756  2207               	addwfc	??___xxtofl+2,f,c
  3493  007758  2208               	addwfc	??___xxtofl+3,f,c
  3494  00775A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3495  00775E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3496  007762  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3497  007766  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3498  00776A  D008               	goto	l2647
  3499  00776C                     l1176:
  3500  00776C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3501  007770  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3502  007774  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3503  007778  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3504  00777C                     l2647:
  3505  00777C  5001               	movf	___xxtofl@val,w,c
  3506  00777E  1002               	iorwf	___xxtofl@val+1,w,c
  3507  007780  1003               	iorwf	___xxtofl@val+2,w,c
  3508  007782  1004               	iorwf	___xxtofl@val+3,w,c
  3509  007784  A4D8               	btfss	status,2,c
  3510  007786  D009               	goto	l2653
  3511  007788  0E00               	movlw	0
  3512  00778A  6E01               	movwf	?___xxtofl,c
  3513  00778C  0E00               	movlw	0
  3514  00778E  6E02               	movwf	?___xxtofl+1,c
  3515  007790  0E00               	movlw	0
  3516  007792  6E03               	movwf	?___xxtofl+2,c
  3517  007794  0E00               	movlw	0
  3518  007796  6E04               	movwf	?___xxtofl+3,c
  3519  007798  0012               	return	
  3520  00779A                     l2653:
  3521  00779A  0E96               	movlw	150
  3522  00779C  6E0A               	movwf	___xxtofl@exp,c
  3523  00779E  D006               	goto	l2657
  3524  0077A0                     l2655:
  3525  0077A0  2A0A               	incf	___xxtofl@exp,f,c
  3526  0077A2  90D8               	bcf	status,0,c
  3527  0077A4  320E               	rrcf	___xxtofl@arg+3,f,c
  3528  0077A6  320D               	rrcf	___xxtofl@arg+2,f,c
  3529  0077A8  320C               	rrcf	___xxtofl@arg+1,f,c
  3530  0077AA  320B               	rrcf	___xxtofl@arg,f,c
  3531  0077AC                     l2657:
  3532  0077AC  0E00               	movlw	0
  3533  0077AE  140B               	andwf	___xxtofl@arg,w,c
  3534  0077B0  6E05               	movwf	??___xxtofl& (0+255),c
  3535  0077B2  0E00               	movlw	0
  3536  0077B4  140C               	andwf	___xxtofl@arg+1,w,c
  3537  0077B6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3538  0077B8  0E00               	movlw	0
  3539  0077BA  140D               	andwf	___xxtofl@arg+2,w,c
  3540  0077BC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3541  0077BE  0EFE               	movlw	254
  3542  0077C0  140E               	andwf	___xxtofl@arg+3,w,c
  3543  0077C2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3544  0077C4  5005               	movf	??___xxtofl,w,c
  3545  0077C6  1006               	iorwf	??___xxtofl+1,w,c
  3546  0077C8  1007               	iorwf	??___xxtofl+2,w,c
  3547  0077CA  1008               	iorwf	??___xxtofl+3,w,c
  3548  0077CC  B4D8               	btfsc	status,2,c
  3549  0077CE  D00D               	goto	l1183
  3550  0077D0  D7E7               	goto	l2655
  3551  0077D2                     l2659:
  3552  0077D2  2A0A               	incf	___xxtofl@exp,f,c
  3553  0077D4  0E01               	movlw	1
  3554  0077D6  260B               	addwf	___xxtofl@arg,f,c
  3555  0077D8  0E00               	movlw	0
  3556  0077DA  220C               	addwfc	___xxtofl@arg+1,f,c
  3557  0077DC  220D               	addwfc	___xxtofl@arg+2,f,c
  3558  0077DE  220E               	addwfc	___xxtofl@arg+3,f,c
  3559  0077E0  90D8               	bcf	status,0,c
  3560  0077E2  320E               	rrcf	___xxtofl@arg+3,f,c
  3561  0077E4  320D               	rrcf	___xxtofl@arg+2,f,c
  3562  0077E6  320C               	rrcf	___xxtofl@arg+1,f,c
  3563  0077E8  320B               	rrcf	___xxtofl@arg,f,c
  3564  0077EA                     l1183:
  3565  0077EA  0E00               	movlw	0
  3566  0077EC  140B               	andwf	___xxtofl@arg,w,c
  3567  0077EE  6E05               	movwf	??___xxtofl& (0+255),c
  3568  0077F0  0E00               	movlw	0
  3569  0077F2  140C               	andwf	___xxtofl@arg+1,w,c
  3570  0077F4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3571  0077F6  0E00               	movlw	0
  3572  0077F8  140D               	andwf	___xxtofl@arg+2,w,c
  3573  0077FA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3574  0077FC  0EFF               	movlw	255
  3575  0077FE  140E               	andwf	___xxtofl@arg+3,w,c
  3576  007800  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3577  007802  5005               	movf	??___xxtofl,w,c
  3578  007804  1006               	iorwf	??___xxtofl+1,w,c
  3579  007806  1007               	iorwf	??___xxtofl+2,w,c
  3580  007808  1008               	iorwf	??___xxtofl+3,w,c
  3581  00780A  B4D8               	btfsc	status,2,c
  3582  00780C  D007               	goto	l2667
  3583  00780E  D7E1               	goto	l2659
  3584  007810                     l2665:
  3585  007810  060A               	decf	___xxtofl@exp,f,c
  3586  007812  90D8               	bcf	status,0,c
  3587  007814  360B               	rlcf	___xxtofl@arg,f,c
  3588  007816  360C               	rlcf	___xxtofl@arg+1,f,c
  3589  007818  360D               	rlcf	___xxtofl@arg+2,f,c
  3590  00781A  360E               	rlcf	___xxtofl@arg+3,f,c
  3591  00781C                     l2667:
  3592  00781C  BE0D               	btfsc	___xxtofl@arg+2,7,c
  3593  00781E  D003               	goto	u1660
  3594  007820  0E02               	movlw	2
  3595  007822  600A               	cpfslt	___xxtofl@exp,c
  3596  007824  D7F5               	goto	l2665
  3597  007826                     u1660:
  3598  007826  A00A               	btfss	___xxtofl@exp,0,c
  3599  007828  9E0D               	bcf	___xxtofl@arg+2,7,c
  3600  00782A  90D8               	bcf	status,0,c
  3601  00782C  320A               	rrcf	___xxtofl@exp,f,c
  3602  00782E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3603  007832  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  3604  007834  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  3605  007836  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  3606  007838  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3607  00783C  6A07               	clrf	??___xxtofl+2,c
  3608  00783E  6A06               	clrf	??___xxtofl+1,c
  3609  007840  6A05               	clrf	??___xxtofl,c
  3610  007842  5005               	movf	??___xxtofl,w,c
  3611  007844  120B               	iorwf	___xxtofl@arg,f,c
  3612  007846  5006               	movf	??___xxtofl+1,w,c
  3613  007848  120C               	iorwf	___xxtofl@arg+1,f,c
  3614  00784A  5007               	movf	??___xxtofl+2,w,c
  3615  00784C  120D               	iorwf	___xxtofl@arg+2,f,c
  3616  00784E  5008               	movf	??___xxtofl+3,w,c
  3617  007850  120E               	iorwf	___xxtofl@arg+3,f,c
  3618  007852  5009               	movf	___xxtofl@sign,w,c
  3619  007854  A4D8               	btfss	status,2,c
  3620  007856  AE04               	btfss	___xxtofl@val+3,7,c
  3621  007858  D001               	goto	l2683
  3622  00785A  8E0E               	bsf	___xxtofl@arg+3,7,c
  3623  00785C                     l2683:
  3624  00785C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3625  007860  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3626  007864  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3627  007868  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3628  00786C  0012               	return		;funcret
  3629  00786E                     __end_of___xxtofl:
  3630                           	opt callstack 0
  3631                           
  3632 ;; *************** function ___fltol *****************
  3633 ;; Defined at:
  3634 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  f1              4   39[COMRAM] unsigned char 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  exp1            1   48[COMRAM] unsigned char 
  3639 ;;  sign1           1   47[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  4   39[COMRAM] long 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3649 ;;      Params:         4       0       0       0       0       0       0
  3650 ;;      Locals:         2       0       0       0       0       0       0
  3651 ;;      Temps:          4       0       0       0       0       0       0
  3652 ;;      Totals:        10       0       0       0       0       0       0
  3653 ;;Total ram usage:       10 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_msDelay
  3659 ;;		_timer6Setup
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text22
  3664  007434                     __ptext22:
  3665                           	opt callstack 0
  3666  007434                     ___fltol:
  3667                           	opt callstack 27
  3668                           
  3669                           ;incstack = 0
  3670  007434  342A               	rlcf	___fltol@f1+2,w,c
  3671  007436  342B               	rlcf	___fltol@f1+3,w,c
  3672  007438  6E31               	movwf	___fltol@exp1,c
  3673  00743A  5031               	movf	___fltol@exp1,w,c
  3674  00743C  A4D8               	btfss	status,2,c
  3675  00743E  D009               	goto	l2603
  3676  007440                     u1530:
  3677  007440  0E00               	movlw	0
  3678  007442  6E28               	movwf	?___fltol,c
  3679  007444  0E00               	movlw	0
  3680  007446  6E29               	movwf	?___fltol+1,c
  3681  007448  0E00               	movlw	0
  3682  00744A  6E2A               	movwf	?___fltol+2,c
  3683  00744C  0E00               	movlw	0
  3684  00744E  6E2B               	movwf	?___fltol+3,c
  3685  007450  0012               	return	
  3686  007452                     l2603:
  3687  007452  C028  F02C         	movff	___fltol@f1,??___fltol
  3688  007456  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3689  00745A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3690  00745E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3691  007462  0E20               	movlw	32
  3692  007464  D005               	goto	u1540
  3693  007466                     u1545:
  3694  007466  90D8               	bcf	status,0,c
  3695  007468  322F               	rrcf	??___fltol+3,f,c
  3696  00746A  322E               	rrcf	??___fltol+2,f,c
  3697  00746C  322D               	rrcf	??___fltol+1,f,c
  3698  00746E  322C               	rrcf	??___fltol,f,c
  3699  007470                     u1540:
  3700  007470  2EE8               	decfsz	wreg,f,c
  3701  007472  D7F9               	goto	u1545
  3702  007474  502C               	movf	??___fltol,w,c
  3703  007476  6E30               	movwf	___fltol@sign1,c
  3704  007478  8E2A               	bsf	___fltol@f1+2,7,c
  3705  00747A  0EFF               	movlw	255
  3706  00747C  1628               	andwf	___fltol@f1,f,c
  3707  00747E  0EFF               	movlw	255
  3708  007480  1629               	andwf	___fltol@f1+1,f,c
  3709  007482  0EFF               	movlw	255
  3710  007484  162A               	andwf	___fltol@f1+2,f,c
  3711  007486  0E00               	movlw	0
  3712  007488  162B               	andwf	___fltol@f1+3,f,c
  3713  00748A  0E96               	movlw	150
  3714  00748C  5E31               	subwf	___fltol@exp1,f,c
  3715  00748E  AE31               	btfss	___fltol@exp1,7,c
  3716  007490  D00D               	goto	l2623
  3717  007492  5031               	movf	___fltol@exp1,w,c
  3718  007494  0A80               	xorlw	128
  3719  007496  0F97               	addlw	151
  3720  007498  A0D8               	btfss	status,0,c
  3721  00749A  D7D2               	goto	u1530
  3722  00749C                     l2619:
  3723  00749C  90D8               	bcf	status,0,c
  3724  00749E  322B               	rrcf	___fltol@f1+3,f,c
  3725  0074A0  322A               	rrcf	___fltol@f1+2,f,c
  3726  0074A2  3229               	rrcf	___fltol@f1+1,f,c
  3727  0074A4  3228               	rrcf	___fltol@f1,f,c
  3728  0074A6  3E31               	incfsz	___fltol@exp1,f,c
  3729  0074A8  D7F9               	goto	l2619
  3730  0074AA  D00D               	goto	u1580
  3731  0074AC                     l2623:
  3732  0074AC  0E1F               	movlw	31
  3733  0074AE  6431               	cpfsgt	___fltol@exp1,c
  3734  0074B0  D007               	goto	l2631
  3735  0074B2  D7C6               	goto	u1530
  3736  0074B4                     l2629:
  3737  0074B4  90D8               	bcf	status,0,c
  3738  0074B6  3628               	rlcf	___fltol@f1,f,c
  3739  0074B8  3629               	rlcf	___fltol@f1+1,f,c
  3740  0074BA  362A               	rlcf	___fltol@f1+2,f,c
  3741  0074BC  362B               	rlcf	___fltol@f1+3,f,c
  3742  0074BE  0631               	decf	___fltol@exp1,f,c
  3743  0074C0                     l2631:
  3744  0074C0  5031               	movf	___fltol@exp1,w,c
  3745  0074C2  A4D8               	btfss	status,2,c
  3746  0074C4  D7F7               	goto	l2629
  3747  0074C6                     u1580:
  3748  0074C6  5030               	movf	___fltol@sign1,w,c
  3749  0074C8  B4D8               	btfsc	status,2,c
  3750  0074CA  D008               	goto	l2637
  3751  0074CC  1E2B               	comf	___fltol@f1+3,f,c
  3752  0074CE  1E2A               	comf	___fltol@f1+2,f,c
  3753  0074D0  1E29               	comf	___fltol@f1+1,f,c
  3754  0074D2  6C28               	negf	___fltol@f1,c
  3755  0074D4  0E00               	movlw	0
  3756  0074D6  2229               	addwfc	___fltol@f1+1,f,c
  3757  0074D8  222A               	addwfc	___fltol@f1+2,f,c
  3758  0074DA  222B               	addwfc	___fltol@f1+3,f,c
  3759  0074DC                     l2637:
  3760  0074DC  C028  F028         	movff	___fltol@f1,?___fltol
  3761  0074E0  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3762  0074E4  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3763  0074E8  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3764  0074EC  0012               	return		;funcret
  3765  0074EE                     __end_of___fltol:
  3766                           	opt callstack 0
  3767                           
  3768 ;; *************** function ___flmul *****************
  3769 ;; Defined at:
  3770 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  b               4   14[COMRAM] long 
  3773 ;;  a               4   18[COMRAM] long 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  prod            4   33[COMRAM] struct .
  3776 ;;  grs             4   27[COMRAM] unsigned long 
  3777 ;;  temp            2   37[COMRAM] struct .
  3778 ;;  bexp            1   32[COMRAM] unsigned char 
  3779 ;;  aexp            1   31[COMRAM] unsigned char 
  3780 ;;  sign            1   26[COMRAM] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  4   14[COMRAM] unsigned char 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0, prodl, prodh
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3790 ;;      Params:         8       0       0       0       0       0       0
  3791 ;;      Locals:        13       0       0       0       0       0       0
  3792 ;;      Temps:          4       0       0       0       0       0       0
  3793 ;;      Totals:        25       0       0       0       0       0       0
  3794 ;;Total ram usage:       25 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_msDelay
  3800 ;;		_timer6Setup
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text23
  3805  007CAE                     __ptext23:
  3806                           	opt callstack 0
  3807  007CAE                     ___flmul:
  3808                           	opt callstack 27
  3809                           
  3810                           ;incstack = 0
  3811  007CAE  5012               	movf	___flmul@b+3,w,c
  3812  007CB0  0B80               	andlw	128
  3813  007CB2  6E1B               	movwf	___flmul@sign,c
  3814  007CB4  5012               	movf	___flmul@b+3,w,c
  3815  007CB6  2412               	addwf	___flmul@b+3,w,c
  3816  007CB8  6E21               	movwf	___flmul@bexp,c
  3817  007CBA  BE11               	btfsc	___flmul@b+2,7,c
  3818  007CBC  8021               	bsf	___flmul@bexp,0,c
  3819  007CBE  5021               	movf	___flmul@bexp,w,c
  3820  007CC0  B4D8               	btfsc	status,2,c
  3821  007CC2  D00D               	goto	l2481
  3822  007CC4  2821               	incf	___flmul@bexp,w,c
  3823  007CC6  A4D8               	btfss	status,2,c
  3824  007CC8  D008               	goto	l2479
  3825  007CCA  0E00               	movlw	0
  3826  007CCC  6E0F               	movwf	___flmul@b,c
  3827  007CCE  0E00               	movlw	0
  3828  007CD0  6E10               	movwf	___flmul@b+1,c
  3829  007CD2  0E00               	movlw	0
  3830  007CD4  6E11               	movwf	___flmul@b+2,c
  3831  007CD6  0E00               	movlw	0
  3832  007CD8  6E12               	movwf	___flmul@b+3,c
  3833  007CDA                     l2479:
  3834  007CDA  8E11               	bsf	___flmul@b+2,7,c
  3835  007CDC  D008               	goto	l2483
  3836  007CDE                     l2481:
  3837  007CDE  0E00               	movlw	0
  3838  007CE0  6E0F               	movwf	___flmul@b,c
  3839  007CE2  0E00               	movlw	0
  3840  007CE4  6E10               	movwf	___flmul@b+1,c
  3841  007CE6  0E00               	movlw	0
  3842  007CE8  6E11               	movwf	___flmul@b+2,c
  3843  007CEA  0E00               	movlw	0
  3844  007CEC  6E12               	movwf	___flmul@b+3,c
  3845  007CEE                     l2483:
  3846  007CEE  5016               	movf	___flmul@a+3,w,c
  3847  007CF0  0B80               	andlw	128
  3848  007CF2  1A1B               	xorwf	___flmul@sign,f,c
  3849  007CF4  5016               	movf	___flmul@a+3,w,c
  3850  007CF6  2416               	addwf	___flmul@a+3,w,c
  3851  007CF8  6E20               	movwf	___flmul@aexp,c
  3852  007CFA  BE15               	btfsc	___flmul@a+2,7,c
  3853  007CFC  8020               	bsf	___flmul@aexp,0,c
  3854  007CFE  5020               	movf	___flmul@aexp,w,c
  3855  007D00  B4D8               	btfsc	status,2,c
  3856  007D02  D00D               	goto	l2499
  3857  007D04  2820               	incf	___flmul@aexp,w,c
  3858  007D06  A4D8               	btfss	status,2,c
  3859  007D08  D008               	goto	l2497
  3860  007D0A  0E00               	movlw	0
  3861  007D0C  6E13               	movwf	___flmul@a,c
  3862  007D0E  0E00               	movlw	0
  3863  007D10  6E14               	movwf	___flmul@a+1,c
  3864  007D12  0E00               	movlw	0
  3865  007D14  6E15               	movwf	___flmul@a+2,c
  3866  007D16  0E00               	movlw	0
  3867  007D18  6E16               	movwf	___flmul@a+3,c
  3868  007D1A                     l2497:
  3869  007D1A  8E15               	bsf	___flmul@a+2,7,c
  3870  007D1C  D008               	goto	l1135
  3871  007D1E                     l2499:
  3872  007D1E  0E00               	movlw	0
  3873  007D20  6E13               	movwf	___flmul@a,c
  3874  007D22  0E00               	movlw	0
  3875  007D24  6E14               	movwf	___flmul@a+1,c
  3876  007D26  0E00               	movlw	0
  3877  007D28  6E15               	movwf	___flmul@a+2,c
  3878  007D2A  0E00               	movlw	0
  3879  007D2C  6E16               	movwf	___flmul@a+3,c
  3880  007D2E                     l1135:
  3881  007D2E  5020               	movf	___flmul@aexp,w,c
  3882  007D30  B4D8               	btfsc	status,2,c
  3883  007D32  D003               	goto	u1410
  3884  007D34  5021               	movf	___flmul@bexp,w,c
  3885  007D36  A4D8               	btfss	status,2,c
  3886  007D38  D009               	goto	l2507
  3887  007D3A                     u1410:
  3888  007D3A  0E00               	movlw	0
  3889  007D3C  6E0F               	movwf	?___flmul,c
  3890  007D3E  0E00               	movlw	0
  3891  007D40  6E10               	movwf	?___flmul+1,c
  3892  007D42  0E00               	movlw	0
  3893  007D44  6E11               	movwf	?___flmul+2,c
  3894  007D46  0E00               	movlw	0
  3895  007D48  6E12               	movwf	?___flmul+3,c
  3896  007D4A  0012               	return	
  3897  007D4C                     l2507:
  3898  007D4C  5015               	movf	___flmul@a+2,w,c
  3899  007D4E  020F               	mulwf	___flmul@b,c
  3900  007D50  CFF3 F026          	movff	prodl,___flmul@temp
  3901  007D54  CFF4 F027          	movff	prodh,___flmul@temp+1
  3902  007D58  5026               	movf	___flmul@temp,w,c
  3903  007D5A  6E1C               	movwf	___flmul@grs,c
  3904  007D5C  6A1D               	clrf	___flmul@grs+1,c
  3905  007D5E  6A1E               	clrf	___flmul@grs+2,c
  3906  007D60  6A1F               	clrf	___flmul@grs+3,c
  3907  007D62  5027               	movf	___flmul@temp+1,w,c
  3908  007D64  6E22               	movwf	___flmul@prod,c
  3909  007D66  6A23               	clrf	___flmul@prod+1,c
  3910  007D68  6A24               	clrf	___flmul@prod+2,c
  3911  007D6A  6A25               	clrf	___flmul@prod+3,c
  3912  007D6C  5014               	movf	___flmul@a+1,w,c
  3913  007D6E  0210               	mulwf	___flmul@b+1,c
  3914  007D70  CFF3 F026          	movff	prodl,___flmul@temp
  3915  007D74  CFF4 F027          	movff	prodh,___flmul@temp+1
  3916  007D78  5026               	movf	___flmul@temp,w,c
  3917  007D7A  261C               	addwf	___flmul@grs,f,c
  3918  007D7C  0E00               	movlw	0
  3919  007D7E  221D               	addwfc	___flmul@grs+1,f,c
  3920  007D80  221E               	addwfc	___flmul@grs+2,f,c
  3921  007D82  221F               	addwfc	___flmul@grs+3,f,c
  3922  007D84  5027               	movf	___flmul@temp+1,w,c
  3923  007D86  2622               	addwf	___flmul@prod,f,c
  3924  007D88  0E00               	movlw	0
  3925  007D8A  2223               	addwfc	___flmul@prod+1,f,c
  3926  007D8C  2224               	addwfc	___flmul@prod+2,f,c
  3927  007D8E  2225               	addwfc	___flmul@prod+3,f,c
  3928  007D90  5013               	movf	___flmul@a,w,c
  3929  007D92  0211               	mulwf	___flmul@b+2,c
  3930  007D94  CFF3 F026          	movff	prodl,___flmul@temp
  3931  007D98  CFF4 F027          	movff	prodh,___flmul@temp+1
  3932  007D9C  5026               	movf	___flmul@temp,w,c
  3933  007D9E  261C               	addwf	___flmul@grs,f,c
  3934  007DA0  0E00               	movlw	0
  3935  007DA2  221D               	addwfc	___flmul@grs+1,f,c
  3936  007DA4  221E               	addwfc	___flmul@grs+2,f,c
  3937  007DA6  221F               	addwfc	___flmul@grs+3,f,c
  3938  007DA8  5027               	movf	___flmul@temp+1,w,c
  3939  007DAA  2622               	addwf	___flmul@prod,f,c
  3940  007DAC  0E00               	movlw	0
  3941  007DAE  2223               	addwfc	___flmul@prod+1,f,c
  3942  007DB0  2224               	addwfc	___flmul@prod+2,f,c
  3943  007DB2  2225               	addwfc	___flmul@prod+3,f,c
  3944  007DB4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3945  007DB8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3946  007DBC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3947  007DC0  6A1C               	clrf	___flmul@grs,c
  3948  007DC2  5013               	movf	___flmul@a,w,c
  3949  007DC4  0210               	mulwf	___flmul@b+1,c
  3950  007DC6  CFF3 F026          	movff	prodl,___flmul@temp
  3951  007DCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3952  007DCE  5026               	movf	___flmul@temp,w,c
  3953  007DD0  261C               	addwf	___flmul@grs,f,c
  3954  007DD2  5027               	movf	___flmul@temp+1,w,c
  3955  007DD4  221D               	addwfc	___flmul@grs+1,f,c
  3956  007DD6  0E00               	movlw	0
  3957  007DD8  221E               	addwfc	___flmul@grs+2,f,c
  3958  007DDA  0E00               	movlw	0
  3959  007DDC  221F               	addwfc	___flmul@grs+3,f,c
  3960  007DDE  5014               	movf	___flmul@a+1,w,c
  3961  007DE0  020F               	mulwf	___flmul@b,c
  3962  007DE2  CFF3 F026          	movff	prodl,___flmul@temp
  3963  007DE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3964  007DEA  5026               	movf	___flmul@temp,w,c
  3965  007DEC  261C               	addwf	___flmul@grs,f,c
  3966  007DEE  5027               	movf	___flmul@temp+1,w,c
  3967  007DF0  221D               	addwfc	___flmul@grs+1,f,c
  3968  007DF2  0E00               	movlw	0
  3969  007DF4  221E               	addwfc	___flmul@grs+2,f,c
  3970  007DF6  0E00               	movlw	0
  3971  007DF8  221F               	addwfc	___flmul@grs+3,f,c
  3972  007DFA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3973  007DFE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3974  007E02  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3975  007E06  6A1C               	clrf	___flmul@grs,c
  3976  007E08  5013               	movf	___flmul@a,w,c
  3977  007E0A  020F               	mulwf	___flmul@b,c
  3978  007E0C  CFF3 F026          	movff	prodl,___flmul@temp
  3979  007E10  CFF4 F027          	movff	prodh,___flmul@temp+1
  3980  007E14  5026               	movf	___flmul@temp,w,c
  3981  007E16  261C               	addwf	___flmul@grs,f,c
  3982  007E18  5027               	movf	___flmul@temp+1,w,c
  3983  007E1A  221D               	addwfc	___flmul@grs+1,f,c
  3984  007E1C  0E00               	movlw	0
  3985  007E1E  221E               	addwfc	___flmul@grs+2,f,c
  3986  007E20  0E00               	movlw	0
  3987  007E22  221F               	addwfc	___flmul@grs+3,f,c
  3988  007E24  5015               	movf	___flmul@a+2,w,c
  3989  007E26  0210               	mulwf	___flmul@b+1,c
  3990  007E28  CFF3 F026          	movff	prodl,___flmul@temp
  3991  007E2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3992  007E30  5026               	movf	___flmul@temp,w,c
  3993  007E32  2622               	addwf	___flmul@prod,f,c
  3994  007E34  5027               	movf	___flmul@temp+1,w,c
  3995  007E36  2223               	addwfc	___flmul@prod+1,f,c
  3996  007E38  0E00               	movlw	0
  3997  007E3A  2224               	addwfc	___flmul@prod+2,f,c
  3998  007E3C  0E00               	movlw	0
  3999  007E3E  2225               	addwfc	___flmul@prod+3,f,c
  4000  007E40  5014               	movf	___flmul@a+1,w,c
  4001  007E42  0211               	mulwf	___flmul@b+2,c
  4002  007E44  CFF3 F026          	movff	prodl,___flmul@temp
  4003  007E48  CFF4 F027          	movff	prodh,___flmul@temp+1
  4004  007E4C  5026               	movf	___flmul@temp,w,c
  4005  007E4E  2622               	addwf	___flmul@prod,f,c
  4006  007E50  5027               	movf	___flmul@temp+1,w,c
  4007  007E52  2223               	addwfc	___flmul@prod+1,f,c
  4008  007E54  0E00               	movlw	0
  4009  007E56  2224               	addwfc	___flmul@prod+2,f,c
  4010  007E58  0E00               	movlw	0
  4011  007E5A  2225               	addwfc	___flmul@prod+3,f,c
  4012  007E5C  5015               	movf	___flmul@a+2,w,c
  4013  007E5E  0211               	mulwf	___flmul@b+2,c
  4014  007E60  CFF3 F026          	movff	prodl,___flmul@temp
  4015  007E64  CFF4 F027          	movff	prodh,___flmul@temp+1
  4016  007E68  5026               	movf	___flmul@temp,w,c
  4017  007E6A  6E17               	movwf	??___flmul& (0+255),c
  4018  007E6C  5027               	movf	___flmul@temp+1,w,c
  4019  007E6E  6E18               	movwf	(??___flmul+1)& (0+255),c
  4020  007E70  6A19               	clrf	(??___flmul+2)& (0+255),c
  4021  007E72  6A1A               	clrf	(??___flmul+3)& (0+255),c
  4022  007E74  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4023  007E78  C018  F019         	movff	??___flmul+1,??___flmul+2
  4024  007E7C  C017  F018         	movff	??___flmul,??___flmul+1
  4025  007E80  6A17               	clrf	??___flmul,c
  4026  007E82  5017               	movf	??___flmul,w,c
  4027  007E84  2622               	addwf	___flmul@prod,f,c
  4028  007E86  5018               	movf	??___flmul+1,w,c
  4029  007E88  2223               	addwfc	___flmul@prod+1,f,c
  4030  007E8A  5019               	movf	??___flmul+2,w,c
  4031  007E8C  2224               	addwfc	___flmul@prod+2,f,c
  4032  007E8E  501A               	movf	??___flmul+3,w,c
  4033  007E90  2225               	addwfc	___flmul@prod+3,f,c
  4034  007E92  C01C  F017         	movff	___flmul@grs,??___flmul
  4035  007E96  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4036  007E9A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4037  007E9E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4038  007EA2  0E19               	movlw	25
  4039  007EA4  D005               	goto	u1420
  4040  007EA6                     u1425:
  4041  007EA6  90D8               	bcf	status,0,c
  4042  007EA8  321A               	rrcf	??___flmul+3,f,c
  4043  007EAA  3219               	rrcf	??___flmul+2,f,c
  4044  007EAC  3218               	rrcf	??___flmul+1,f,c
  4045  007EAE  3217               	rrcf	??___flmul,f,c
  4046  007EB0                     u1420:
  4047  007EB0  2EE8               	decfsz	wreg,f,c
  4048  007EB2  D7F9               	goto	u1425
  4049  007EB4  5017               	movf	??___flmul,w,c
  4050  007EB6  2622               	addwf	___flmul@prod,f,c
  4051  007EB8  5018               	movf	??___flmul+1,w,c
  4052  007EBA  2223               	addwfc	___flmul@prod+1,f,c
  4053  007EBC  5019               	movf	??___flmul+2,w,c
  4054  007EBE  2224               	addwfc	___flmul@prod+2,f,c
  4055  007EC0  501A               	movf	??___flmul+3,w,c
  4056  007EC2  2225               	addwfc	___flmul@prod+3,f,c
  4057  007EC4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4058  007EC8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4059  007ECC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4060  007ED0  6A1C               	clrf	___flmul@grs,c
  4061  007ED2  5020               	movf	___flmul@aexp,w,c
  4062  007ED4  C021  F017         	movff	___flmul@bexp,??___flmul
  4063  007ED8  6A18               	clrf	(??___flmul+1)& (0+255),c
  4064  007EDA  2617               	addwf	??___flmul,f,c
  4065  007EDC  0E00               	movlw	0
  4066  007EDE  2218               	addwfc	??___flmul+1,f,c
  4067  007EE0  0E82               	movlw	130
  4068  007EE2  2417               	addwf	??___flmul,w,c
  4069  007EE4  6E26               	movwf	___flmul@temp,c
  4070  007EE6  0EFF               	movlw	255
  4071  007EE8  2018               	addwfc	??___flmul+1,w,c
  4072  007EEA  6E27               	movwf	___flmul@temp+1,c
  4073  007EEC  D00F               	goto	l2555
  4074  007EEE                     l2549:
  4075  007EEE  90D8               	bcf	status,0,c
  4076  007EF0  3622               	rlcf	___flmul@prod,f,c
  4077  007EF2  3623               	rlcf	___flmul@prod+1,f,c
  4078  007EF4  3624               	rlcf	___flmul@prod+2,f,c
  4079  007EF6  3625               	rlcf	___flmul@prod+3,f,c
  4080  007EF8  BE1F               	btfsc	___flmul@grs+3,7,c
  4081  007EFA  8022               	bsf	___flmul@prod,0,c
  4082  007EFC  90D8               	bcf	status,0,c
  4083  007EFE  361C               	rlcf	___flmul@grs,f,c
  4084  007F00  361D               	rlcf	___flmul@grs+1,f,c
  4085  007F02  361E               	rlcf	___flmul@grs+2,f,c
  4086  007F04  361F               	rlcf	___flmul@grs+3,f,c
  4087  007F06  0626               	decf	___flmul@temp,f,c
  4088  007F08  A0D8               	btfss	status,0,c
  4089  007F0A  0627               	decf	___flmul@temp+1,f,c
  4090  007F0C                     l2555:
  4091  007F0C  AE24               	btfss	___flmul@prod+2,7,c
  4092  007F0E  D7EF               	goto	l2549
  4093  007F10  0E00               	movlw	0
  4094  007F12  6E20               	movwf	___flmul@aexp,c
  4095  007F14  AE1F               	btfss	___flmul@grs+3,7,c
  4096  007F16  D017               	goto	l1144
  4097  007F18  0EFF               	movlw	255
  4098  007F1A  141C               	andwf	___flmul@grs,w,c
  4099  007F1C  6E17               	movwf	??___flmul& (0+255),c
  4100  007F1E  0EFF               	movlw	255
  4101  007F20  141D               	andwf	___flmul@grs+1,w,c
  4102  007F22  6E18               	movwf	(??___flmul+1)& (0+255),c
  4103  007F24  0EFF               	movlw	255
  4104  007F26  141E               	andwf	___flmul@grs+2,w,c
  4105  007F28  6E19               	movwf	(??___flmul+2)& (0+255),c
  4106  007F2A  0E7F               	movlw	127
  4107  007F2C  141F               	andwf	___flmul@grs+3,w,c
  4108  007F2E  6E1A               	movwf	(??___flmul+3)& (0+255),c
  4109  007F30  5017               	movf	??___flmul,w,c
  4110  007F32  1018               	iorwf	??___flmul+1,w,c
  4111  007F34  1019               	iorwf	??___flmul+2,w,c
  4112  007F36  101A               	iorwf	??___flmul+3,w,c
  4113  007F38  B4D8               	btfsc	status,2,c
  4114  007F3A  D003               	goto	l1145
  4115  007F3C                     u1460:
  4116  007F3C  0E01               	movlw	1
  4117  007F3E  6E20               	movwf	___flmul@aexp,c
  4118  007F40  D002               	goto	l1144
  4119  007F42                     l1145:
  4120  007F42  B022               	btfsc	___flmul@prod,0,c
  4121  007F44  D7FB               	goto	u1460
  4122  007F46                     l1144:
  4123  007F46  5020               	movf	___flmul@aexp,w,c
  4124  007F48  B4D8               	btfsc	status,2,c
  4125  007F4A  D01F               	goto	l2575
  4126  007F4C  0E01               	movlw	1
  4127  007F4E  2622               	addwf	___flmul@prod,f,c
  4128  007F50  0E00               	movlw	0
  4129  007F52  2223               	addwfc	___flmul@prod+1,f,c
  4130  007F54  2224               	addwfc	___flmul@prod+2,f,c
  4131  007F56  2225               	addwfc	___flmul@prod+3,f,c
  4132  007F58  A025               	btfss	___flmul@prod+3,0,c
  4133  007F5A  D017               	goto	l2575
  4134  007F5C  C022  F017         	movff	___flmul@prod,??___flmul
  4135  007F60  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4136  007F64  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4137  007F68  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4138  007F6C  341A               	rlcf	??___flmul+3,w,c
  4139  007F6E  321A               	rrcf	??___flmul+3,f,c
  4140  007F70  3219               	rrcf	??___flmul+2,f,c
  4141  007F72  3218               	rrcf	??___flmul+1,f,c
  4142  007F74  3217               	rrcf	??___flmul,f,c
  4143  007F76  C017  F022         	movff	??___flmul,___flmul@prod
  4144  007F7A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4145  007F7E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4146  007F82  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4147  007F86  4A26               	infsnz	___flmul@temp,f,c
  4148  007F88  2A27               	incf	___flmul@temp+1,f,c
  4149  007F8A                     l2575:
  4150  007F8A  BE27               	btfsc	___flmul@temp+1,7,c
  4151  007F8C  D00D               	goto	l2579
  4152  007F8E  5027               	movf	___flmul@temp+1,w,c
  4153  007F90  E103               	bnz	u1500
  4154  007F92  2826               	incf	___flmul@temp,w,c
  4155  007F94  A0D8               	btfss	status,0,c
  4156  007F96  D008               	goto	l2579
  4157  007F98                     u1500:
  4158  007F98  0E00               	movlw	0
  4159  007F9A  6E22               	movwf	___flmul@prod,c
  4160  007F9C  0E00               	movlw	0
  4161  007F9E  6E23               	movwf	___flmul@prod+1,c
  4162  007FA0  0E80               	movlw	128
  4163  007FA2  6E24               	movwf	___flmul@prod+2,c
  4164  007FA4  0E7F               	movlw	127
  4165  007FA6  D020               	goto	L2
  4166  007FA8                     l2579:
  4167  007FA8  BE27               	btfsc	___flmul@temp+1,7,c
  4168  007FAA  D005               	goto	u1510
  4169  007FAC  5027               	movf	___flmul@temp+1,w,c
  4170  007FAE  E10E               	bnz	l1152
  4171  007FB0  0426               	decf	___flmul@temp,w,c
  4172  007FB2  B0D8               	btfsc	status,0,c
  4173  007FB4  D00B               	goto	l1152
  4174  007FB6                     u1510:
  4175  007FB6  0E00               	movlw	0
  4176  007FB8  6E22               	movwf	___flmul@prod,c
  4177  007FBA  0E00               	movlw	0
  4178  007FBC  6E23               	movwf	___flmul@prod+1,c
  4179  007FBE  0E00               	movlw	0
  4180  007FC0  6E24               	movwf	___flmul@prod+2,c
  4181  007FC2  0E00               	movlw	0
  4182  007FC4  6E25               	movwf	___flmul@prod+3,c
  4183  007FC6  0E00               	movlw	0
  4184  007FC8  6E1B               	movwf	___flmul@sign,c
  4185  007FCA  D00F               	goto	l2591
  4186  007FCC                     l1152:
  4187  007FCC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4188  007FD0  0EFF               	movlw	255
  4189  007FD2  1622               	andwf	___flmul@prod,f,c
  4190  007FD4  0EFF               	movlw	255
  4191  007FD6  1623               	andwf	___flmul@prod+1,f,c
  4192  007FD8  0E7F               	movlw	127
  4193  007FDA  1624               	andwf	___flmul@prod+2,f,c
  4194  007FDC  0E00               	movlw	0
  4195  007FDE  1625               	andwf	___flmul@prod+3,f,c
  4196  007FE0  B021               	btfsc	___flmul@bexp,0,c
  4197  007FE2  8E24               	bsf	___flmul@prod+2,7,c
  4198  007FE4  90D8               	bcf	status,0,c
  4199  007FE6  3021               	rrcf	___flmul@bexp,w,c
  4200  007FE8                     L2:
  4201  007FE8  6E25               	movwf	___flmul@prod+3,c
  4202  007FEA                     l2591:
  4203  007FEA  501B               	movf	___flmul@sign,w,c
  4204  007FEC  1225               	iorwf	___flmul@prod+3,f,c
  4205  007FEE  C022  F00F         	movff	___flmul@prod,?___flmul
  4206  007FF2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4207  007FF6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4208  007FFA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4209  007FFE  0012               	return		;funcret
  4210  008000                     __end_of___flmul:
  4211                           	opt callstack 0
  4212                           
  4213 ;; *************** function _aveSensor *****************
  4214 ;; Defined at:
  4215 ;;		line 874 in file "./functions.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  s               1    wreg     unsigned char 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  s               1    5[COMRAM] unsigned char 
  4220 ;;  a               1    9[COMRAM] unsigned char 
  4221 ;;  measurements    2    6[COMRAM] unsigned int 
  4222 ;;  result          1    8[COMRAM] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4232 ;;      Params:         0       0       0       0       0       0       0
  4233 ;;      Locals:         5       0       0       0       0       0       0
  4234 ;;      Temps:          2       0       0       0       0       0       0
  4235 ;;      Totals:         7       0       0       0       0       0       0
  4236 ;;Total ram usage:        7 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    1
  4239 ;; This function calls:
  4240 ;;		_readADC
  4241 ;;		_setADCChannel
  4242 ;; This function is called by:
  4243 ;;		_calibrate
  4244 ;;		_pyCal
  4245 ;;		_capTouch
  4246 ;;		_readAllSensors
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text24
  4251  007086                     __ptext24:
  4252                           	opt callstack 0
  4253  007086                     _aveSensor:
  4254                           	opt callstack 27
  4255                           
  4256                           ;incstack = 0
  4257                           ;aveSensor@s stored from wreg
  4258  007086  6E06               	movwf	aveSensor@s,c
  4259                           
  4260                           ;./functions.c: 874: unsigned char aveSensor(unsigned char s);./functions.c: 875: {;./fu
      +                          nctions.c: 876:     setADCChannel(s);
  4261  007088  5006               	movf	aveSensor@s,w,c
  4262  00708A  EC51  F039         	call	_setADCChannel
  4263                           
  4264                           ;./functions.c: 877:     unsigned int measurements = 0;
  4265  00708E  0E00               	movlw	0
  4266  007090  6E08               	movwf	aveSensor@measurements+1,c
  4267  007092  0E00               	movlw	0
  4268  007094  6E07               	movwf	aveSensor@measurements,c
  4269                           
  4270                           ;./functions.c: 879:     for (unsigned char a = 0; a < 4; a++)
  4271  007096  0E00               	movlw	0
  4272  007098  6E0A               	movwf	aveSensor@a,c
  4273  00709A                     l2697:
  4274                           
  4275                           ;./functions.c: 880:     {;./functions.c: 881:         measurements += readADC();
  4276  00709A  EC30  F037         	call	_readADC	;wreg free
  4277  00709E  6E04               	movwf	??_aveSensor& (0+255),c
  4278  0070A0  5004               	movf	??_aveSensor,w,c
  4279  0070A2  2607               	addwf	aveSensor@measurements,f,c
  4280  0070A4  0E00               	movlw	0
  4281  0070A6  2208               	addwfc	aveSensor@measurements+1,f,c
  4282                           
  4283                           ;./functions.c: 882:     }
  4284  0070A8  2A0A               	incf	aveSensor@a,f,c
  4285  0070AA  0E03               	movlw	3
  4286  0070AC  640A               	cpfsgt	aveSensor@a,c
  4287  0070AE  D7F5               	goto	l2697
  4288                           
  4289                           ;./functions.c: 884:     unsigned char result = measurements / 4;
  4290  0070B0  C007  F004         	movff	aveSensor@measurements,??_aveSensor
  4291  0070B4  C008  F005         	movff	aveSensor@measurements+1,??_aveSensor+1
  4292  0070B8  90D8               	bcf	status,0,c
  4293  0070BA  3205               	rrcf	??_aveSensor+1,f,c
  4294  0070BC  3204               	rrcf	??_aveSensor,f,c
  4295  0070BE  90D8               	bcf	status,0,c
  4296  0070C0  3205               	rrcf	??_aveSensor+1,f,c
  4297  0070C2  3204               	rrcf	??_aveSensor,f,c
  4298  0070C4  5004               	movf	??_aveSensor,w,c
  4299  0070C6  6E09               	movwf	aveSensor@result,c
  4300                           
  4301                           ;./functions.c: 886:     return result;
  4302  0070C8  5009               	movf	aveSensor@result,w,c
  4303  0070CA  0012               	return		;funcret
  4304  0070CC                     __end_of_aveSensor:
  4305                           	opt callstack 0
  4306                           
  4307 ;; *************** function _setADCChannel *****************
  4308 ;; Defined at:
  4309 ;;		line 823 in file "./functions.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  channel         1    wreg     unsigned char 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  channel         1    2[COMRAM] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4323 ;;      Params:         0       0       0       0       0       0       0
  4324 ;;      Locals:         1       0       0       0       0       0       0
  4325 ;;      Temps:          2       0       0       0       0       0       0
  4326 ;;      Totals:         3       0       0       0       0       0       0
  4327 ;;Total ram usage:        3 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_aveSensor
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text25
  4337  0072A2                     __ptext25:
  4338                           	opt callstack 0
  4339  0072A2                     _setADCChannel:
  4340                           	opt callstack 27
  4341                           
  4342                           ;incstack = 0
  4343                           ;setADCChannel@channel stored from wreg
  4344  0072A2  6E03               	movwf	setADCChannel@channel,c
  4345                           
  4346                           ;./functions.c: 823: void setADCChannel(unsigned char channel);./functions.c: 824: {;./f
      +                          unctions.c: 825:     ADCON0bits.CHS = channel;
  4347  0072A4  C003  F001         	movff	setADCChannel@channel,??_setADCChannel
  4348  0072A8  4601               	rlncf	??_setADCChannel,f,c
  4349  0072AA  4601               	rlncf	??_setADCChannel,f,c
  4350  0072AC  50C2               	movf	4034,w,c	;volatile
  4351  0072AE  1801               	xorwf	??_setADCChannel,w,c
  4352  0072B0  0B83               	andlw	-125
  4353  0072B2  1801               	xorwf	??_setADCChannel,w,c
  4354  0072B4  6EC2               	movwf	4034,c	;volatile
  4355                           
  4356                           ;./functions.c: 827:     switch (channel)
  4357  0072B6  D01C               	goto	l2455
  4358  0072B8                     l429:
  4359                           
  4360                           ;./functions.c: 830:         TRISBbits.TRISB2 = 1;
  4361  0072B8  8493               	bsf	3987,2,c	;volatile
  4362                           
  4363                           ;./functions.c: 831:         ANSELBbits.ANSB2 = 1;
  4364  0072BA  010F               	movlb	15	; () banked
  4365  0072BC  8539               	bsf	57,2,b	;volatile
  4366                           
  4367                           ;./functions.c: 832:         break;
  4368  0072BE  0012               	return	
  4369  0072C0                     l431:
  4370                           
  4371                           ;./functions.c: 834:         TRISBbits.TRISB3 = 1;
  4372  0072C0  8693               	bsf	3987,3,c	;volatile
  4373                           
  4374                           ;./functions.c: 835:         ANSELBbits.ANSB3 = 1;
  4375  0072C2  010F               	movlb	15	; () banked
  4376  0072C4  8739               	bsf	57,3,b	;volatile
  4377                           
  4378                           ;./functions.c: 836:         break;
  4379  0072C6  0012               	return	
  4380  0072C8                     l432:
  4381                           
  4382                           ;./functions.c: 838:         TRISBbits.TRISB1 = 1;
  4383  0072C8  8293               	bsf	3987,1,c	;volatile
  4384                           
  4385                           ;./functions.c: 839:         ANSELBbits.ANSB1 = 1;
  4386  0072CA  010F               	movlb	15	; () banked
  4387  0072CC  8339               	bsf	57,1,b	;volatile
  4388                           
  4389                           ;./functions.c: 840:         break;
  4390  0072CE  0012               	return	
  4391  0072D0                     l433:
  4392                           
  4393                           ;./functions.c: 842:         TRISBbits.TRISB0 = 1;
  4394  0072D0  8093               	bsf	3987,0,c	;volatile
  4395                           
  4396                           ;./functions.c: 843:         ANSELBbits.ANSB0 = 1;
  4397  0072D2  010F               	movlb	15	; () banked
  4398  0072D4  8139               	bsf	57,0,b	;volatile
  4399                           
  4400                           ;./functions.c: 844:         break;
  4401  0072D6  0012               	return	
  4402  0072D8                     l434:
  4403                           
  4404                           ;./functions.c: 846:         TRISBbits.TRISB5 = 1;
  4405  0072D8  8A93               	bsf	3987,5,c	;volatile
  4406                           
  4407                           ;./functions.c: 847:         ANSELBbits.ANSB5 = 1;
  4408  0072DA  010F               	movlb	15	; () banked
  4409  0072DC  8B39               	bsf	57,5,b	;volatile
  4410                           
  4411                           ;./functions.c: 848:         break;
  4412  0072DE  0012               	return	
  4413  0072E0                     l435:
  4414                           
  4415                           ;./functions.c: 850:         TRISCbits.TRISC3 = 1;
  4416  0072E0  8694               	bsf	3988,3,c	;volatile
  4417                           
  4418                           ;./functions.c: 851:         ANSELCbits.ANSC3 = 1;
  4419  0072E2  010F               	movlb	15	; () banked
  4420  0072E4  873A               	bsf	58,3,b	;volatile
  4421                           
  4422                           ;./functions.c: 852:         break;
  4423  0072E6  0012               	return	
  4424  0072E8                     l436:
  4425                           
  4426                           ;./functions.c: 855:         TRISBbits.TRISB0 = 1;
  4427  0072E8  8093               	bsf	3987,0,c	;volatile
  4428                           
  4429                           ;./functions.c: 856:         ANSELBbits.ANSB0 = 1;
  4430  0072EA  010F               	movlb	15	; () banked
  4431  0072EC  8139               	bsf	57,0,b	;volatile
  4432                           
  4433                           ;./functions.c: 857:         break;
  4434  0072EE  0012               	return	
  4435  0072F0                     l2455:
  4436  0072F0  5003               	movf	setADCChannel@channel,w,c
  4437  0072F2  6E01               	movwf	??_setADCChannel& (0+255),c
  4438  0072F4  6A02               	clrf	(??_setADCChannel+1)& (0+255),c
  4439                           
  4440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4441                           ; Switch size 1, requested type "simple"
  4442                           ; Number of cases is 1, Range of values is 0 to 0
  4443                           ; switch strategies available:
  4444                           ; Name         Instructions Cycles
  4445                           ; simple_byte            4     3 (average)
  4446                           ;	Chosen strategy is simple_byte
  4447  0072F6  5002               	movf	??_setADCChannel+1,w,c
  4448  0072F8  0A00               	xorlw	0	; case 0
  4449  0072FA  A4D8               	btfss	status,2,c
  4450  0072FC  D7F5               	goto	l436
  4451                           
  4452                           ; Switch size 1, requested type "simple"
  4453                           ; Number of cases is 6, Range of values is 8 to 15
  4454                           ; switch strategies available:
  4455                           ; Name         Instructions Cycles
  4456                           ; simple_byte           19    10 (average)
  4457                           ;	Chosen strategy is simple_byte
  4458  0072FE  5001               	movf	??_setADCChannel,w,c
  4459  007300  0A08               	xorlw	8	; case 8
  4460  007302  B4D8               	btfsc	status,2,c
  4461  007304  D7D9               	goto	l429
  4462  007306  0A01               	xorlw	1	; case 9
  4463  007308  B4D8               	btfsc	status,2,c
  4464  00730A  D7DA               	goto	l431
  4465  00730C  0A03               	xorlw	3	; case 10
  4466  00730E  B4D8               	btfsc	status,2,c
  4467  007310  D7DB               	goto	l432
  4468  007312  0A06               	xorlw	6	; case 12
  4469  007314  B4D8               	btfsc	status,2,c
  4470  007316  D7DC               	goto	l433
  4471  007318  0A01               	xorlw	1	; case 13
  4472  00731A  B4D8               	btfsc	status,2,c
  4473  00731C  D7DD               	goto	l434
  4474  00731E  0A02               	xorlw	2	; case 15
  4475  007320  B4D8               	btfsc	status,2,c
  4476  007322  D7DE               	goto	l435
  4477  007324  D7E1               	goto	l436
  4478  007326                     __end_of_setADCChannel:
  4479                           	opt callstack 0
  4480                           
  4481 ;; *************** function _readADC *****************
  4482 ;; Defined at:
  4483 ;;		line 864 in file "./functions.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      unsigned char 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4497 ;;      Params:         0       0       0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0
  4500 ;;      Totals:         0       0       0       0       0       0       0
  4501 ;;Total ram usage:        0 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_aveSensor
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text26
  4511  006E60                     __ptext26:
  4512                           	opt callstack 0
  4513  006E60                     _readADC:
  4514                           	opt callstack 27
  4515                           
  4516                           ;./functions.c: 866:     ADCON0bits.GO = 1;
  4517                           
  4518                           ; BSR set to: 15
  4519                           ;incstack = 0
  4520  006E60  82C2               	bsf	4034,1,c	;volatile
  4521  006E62                     l440:
  4522                           
  4523                           ;./functions.c: 868:     while (ADCON0bits.GO)
  4524  006E62  B2C2               	btfsc	4034,1,c	;volatile
  4525  006E64  D7FE               	goto	l440
  4526                           
  4527                           ;./functions.c: 870:     return ADRESH;
  4528  006E66  50C4               	movf	4036,w,c	;volatile
  4529  006E68  0012               	return		;funcret
  4530  006E6A                     __end_of_readADC:
  4531                           	opt callstack 0
  4532                           
  4533 ;; *************** function _PRC *****************
  4534 ;; Defined at:
  4535 ;;		line 335 in file "./functions.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  a               1   56[COMRAM] unsigned char 
  4540 ;;  a               1   55[COMRAM] unsigned char 
  4541 ;;  a               1   54[COMRAM] unsigned char 
  4542 ;;  a               1   53[COMRAM] unsigned char 
  4543 ;;  a               1   52[COMRAM] unsigned char 
  4544 ;;  a               1   51[COMRAM] unsigned char 
  4545 ;;  a               1   50[COMRAM] unsigned char 
  4546 ;;  a               1   49[COMRAM] unsigned char 
  4547 ;;  a               1   48[COMRAM] unsigned char 
  4548 ;;  message        32   11[COMRAM] unsigned char [32]
  4549 ;;  message2        5   43[COMRAM] unsigned char [5]
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4559 ;;      Params:         0       0       0       0       0       0       0
  4560 ;;      Locals:        46       0       0       0       0       0       0
  4561 ;;      Temps:          2       0       0       0       0       0       0
  4562 ;;      Totals:        48       0       0       0       0       0       0
  4563 ;;Total ram usage:       48 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    2
  4566 ;; This function calls:
  4567 ;;		_error
  4568 ;;		_trans
  4569 ;; This function is called by:
  4570 ;;		_RCE
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text27
  4575  00786E                     __ptext27:
  4576                           	opt callstack 0
  4577  00786E                     _PRC:
  4578                           	opt callstack 27
  4579                           
  4580                           ;./functions.c: 337:     PORTD = 0b11111001;
  4581                           
  4582                           ;incstack = 0
  4583  00786E  0EF9               	movlw	249
  4584  007870  6E83               	movwf	3971,c	;volatile
  4585  007872                     l3169:
  4586                           
  4587                           ;./functions.c: 339:     {;./functions.c: 340:         unsigned char message[] = "\nWhat
      +                           color should sanic race?\n";
  4588  007872  EE20  F060         	lfsr	2,PRC@F6024
  4589  007876  EE10  F00C         	lfsr	1,PRC@message
  4590  00787A  0E1F               	movlw	31
  4591  00787C                     u2201:
  4592  00787C  CFDB FFE3          	movff	plusw2,plusw1
  4593  007880  06E8               	decf	wreg,f,c
  4594  007882  E2FC               	bc	u2201
  4595                           
  4596                           ;./functions.c: 341:         unsigned char message2[] = "\nSet";
  4597  007884  EE20  F0C8         	lfsr	2,PRC@F6026
  4598  007888  EE10  F02C         	lfsr	1,PRC@message2
  4599  00788C  0E04               	movlw	4
  4600  00788E                     u2211:
  4601  00788E  CFDB FFE3          	movff	plusw2,plusw1
  4602  007892  06E8               	decf	wreg,f,c
  4603  007894  E2FC               	bc	u2211
  4604                           
  4605                           ;./functions.c: 343:         for (unsigned char a = 0; a < 31; a++)
  4606  007896  0E00               	movlw	0
  4607  007898  6E31               	movwf	PRC@a,c
  4608  00789A                     l3177:
  4609                           
  4610                           ;./functions.c: 344:         {;./functions.c: 345:             trans(message[a]);
  4611  00789A  0E0C               	movlw	low PRC@message
  4612  00789C  2431               	addwf	PRC@a,w,c
  4613  00789E  6ED9               	movwf	fsr2l,c
  4614  0078A0  6ADA               	clrf	fsr2h,c
  4615  0078A2  0E00               	movlw	high PRC@message
  4616  0078A4  22DA               	addwfc	fsr2h,f,c
  4617  0078A6  50DF               	movf	indf2,w,c
  4618  0078A8  EC3F  F037         	call	_trans
  4619                           
  4620                           ;./functions.c: 346:         }
  4621  0078AC  2A31               	incf	PRC@a,f,c
  4622  0078AE  0E1E               	movlw	30
  4623  0078B0  6431               	cpfsgt	PRC@a,c
  4624  0078B2  D7F3               	goto	l3177
  4625  0078B4                     u2220:
  4626  0078B4  BA9E               	btfsc	3998,5,c	;volatile
  4627  0078B6  D088               	goto	l3293
  4628  0078B8  D7FD               	goto	u2220
  4629  0078BA                     l3183:
  4630                           
  4631                           ;./functions.c: 352:             for (unsigned char a = 0; a < 8; a++)
  4632  0078BA  0E00               	movlw	0
  4633  0078BC  6E32               	movwf	PRC@a_1167,c
  4634  0078BE                     l3189:
  4635                           
  4636                           ;./functions.c: 353:             {;./functions.c: 354:                 raceColor[a] = 0;
  4637  0078BE  0EB2               	movlw	low _raceColor
  4638  0078C0  2432               	addwf	PRC@a_1167,w,c
  4639  0078C2  6ED9               	movwf	fsr2l,c
  4640  0078C4  6ADA               	clrf	fsr2h,c
  4641  0078C6  0E00               	movlw	high _raceColor
  4642  0078C8  22DA               	addwfc	fsr2h,f,c
  4643  0078CA  0E00               	movlw	0
  4644  0078CC  6EDF               	movwf	indf2,c
  4645                           
  4646                           ;./functions.c: 355:             }
  4647  0078CE  2A32               	incf	PRC@a_1167,f,c
  4648  0078D0  0E07               	movlw	7
  4649  0078D2  6432               	cpfsgt	PRC@a_1167,c
  4650  0078D4  D7F4               	goto	l3189
  4651                           
  4652                           ;./functions.c: 356:             raceColor[3] = 1;
  4653  0078D6  0E01               	movlw	1
  4654  0078D8  0100               	movlb	0	; () banked
  4655  0078DA  6FB5               	movwf	(_raceColor+3)& (0+255),b
  4656                           
  4657                           ;./functions.c: 357:             for (unsigned char a = 0; a < 4; a++)
  4658  0078DC  0E00               	movlw	0
  4659  0078DE  6E33               	movwf	PRC@a_1168,c
  4660  0078E0                     l3201:
  4661                           
  4662                           ;./functions.c: 358:             {;./functions.c: 359:                 trans(message2[a]
      +                          );
  4663  0078E0  0E2C               	movlw	low PRC@message2
  4664  0078E2  2433               	addwf	PRC@a_1168,w,c
  4665  0078E4  6ED9               	movwf	fsr2l,c
  4666  0078E6  6ADA               	clrf	fsr2h,c
  4667  0078E8  0E00               	movlw	high PRC@message2
  4668  0078EA  22DA               	addwfc	fsr2h,f,c
  4669  0078EC  50DF               	movf	indf2,w,c
  4670  0078EE  EC3F  F037         	call	_trans
  4671                           
  4672                           ;./functions.c: 360:             }
  4673  0078F2  2A33               	incf	PRC@a_1168,f,c
  4674  0078F4  0E03               	movlw	3
  4675  0078F6  6433               	cpfsgt	PRC@a_1168,c
  4676  0078F8  D7F3               	goto	l3201
  4677  0078FA  0012               	return	
  4678  0078FC                     l3209:
  4679                           
  4680                           ;./functions.c: 364:             for (unsigned char a = 0; a < 8; a++)
  4681  0078FC  0E00               	movlw	0
  4682  0078FE  6E34               	movwf	PRC@a_1169,c
  4683  007900                     l3215:
  4684                           
  4685                           ;./functions.c: 365:             {;./functions.c: 366:                 raceColor[a] = 0;
  4686  007900  0EB2               	movlw	low _raceColor
  4687  007902  2434               	addwf	PRC@a_1169,w,c
  4688  007904  6ED9               	movwf	fsr2l,c
  4689  007906  6ADA               	clrf	fsr2h,c
  4690  007908  0E00               	movlw	high _raceColor
  4691  00790A  22DA               	addwfc	fsr2h,f,c
  4692  00790C  0E00               	movlw	0
  4693  00790E  6EDF               	movwf	indf2,c
  4694                           
  4695                           ;./functions.c: 367:             }
  4696  007910  2A34               	incf	PRC@a_1169,f,c
  4697  007912  0E07               	movlw	7
  4698  007914  6434               	cpfsgt	PRC@a_1169,c
  4699  007916  D7F4               	goto	l3215
  4700                           
  4701                           ;./functions.c: 368:             raceColor[1] = 1;
  4702  007918  0E01               	movlw	1
  4703  00791A  0100               	movlb	0	; () banked
  4704  00791C  6FB3               	movwf	(_raceColor+1)& (0+255),b
  4705                           
  4706                           ;./functions.c: 369:             for (unsigned char a = 0; a < 4; a++)
  4707  00791E  0E00               	movlw	0
  4708  007920  6E35               	movwf	PRC@a_1170,c
  4709  007922                     l3227:
  4710                           
  4711                           ;./functions.c: 370:             {;./functions.c: 371:                 trans(message2[a]
      +                          );
  4712  007922  0E2C               	movlw	low PRC@message2
  4713  007924  2435               	addwf	PRC@a_1170,w,c
  4714  007926  6ED9               	movwf	fsr2l,c
  4715  007928  6ADA               	clrf	fsr2h,c
  4716  00792A  0E00               	movlw	high PRC@message2
  4717  00792C  22DA               	addwfc	fsr2h,f,c
  4718  00792E  50DF               	movf	indf2,w,c
  4719  007930  EC3F  F037         	call	_trans
  4720                           
  4721                           ;./functions.c: 372:             }
  4722  007934  2A35               	incf	PRC@a_1170,f,c
  4723  007936  0E03               	movlw	3
  4724  007938  6435               	cpfsgt	PRC@a_1170,c
  4725  00793A  D7F3               	goto	l3227
  4726  00793C  0012               	return	
  4727  00793E                     l3235:
  4728                           
  4729                           ;./functions.c: 376:             for (unsigned char a = 0; a < 8; a++)
  4730  00793E  0E00               	movlw	0
  4731  007940  6E36               	movwf	PRC@a_1171,c
  4732  007942                     l3241:
  4733                           
  4734                           ;./functions.c: 377:             {;./functions.c: 378:                 raceColor[a] = 0;
  4735  007942  0EB2               	movlw	low _raceColor
  4736  007944  2436               	addwf	PRC@a_1171,w,c
  4737  007946  6ED9               	movwf	fsr2l,c
  4738  007948  6ADA               	clrf	fsr2h,c
  4739  00794A  0E00               	movlw	high _raceColor
  4740  00794C  22DA               	addwfc	fsr2h,f,c
  4741  00794E  0E00               	movlw	0
  4742  007950  6EDF               	movwf	indf2,c
  4743                           
  4744                           ;./functions.c: 379:             }
  4745  007952  2A36               	incf	PRC@a_1171,f,c
  4746  007954  0E07               	movlw	7
  4747  007956  6436               	cpfsgt	PRC@a_1171,c
  4748  007958  D7F4               	goto	l3241
  4749                           
  4750                           ;./functions.c: 380:             raceColor[2] = 1;
  4751  00795A  0E01               	movlw	1
  4752  00795C  0100               	movlb	0	; () banked
  4753  00795E  6FB4               	movwf	(_raceColor+2)& (0+255),b
  4754                           
  4755                           ;./functions.c: 381:             for (unsigned char a = 0; a < 4; a++)
  4756  007960  0E00               	movlw	0
  4757  007962  6E37               	movwf	PRC@a_1172,c
  4758  007964                     l3253:
  4759                           
  4760                           ;./functions.c: 382:             {;./functions.c: 383:                 trans(message2[a]
      +                          );
  4761  007964  0E2C               	movlw	low PRC@message2
  4762  007966  2437               	addwf	PRC@a_1172,w,c
  4763  007968  6ED9               	movwf	fsr2l,c
  4764  00796A  6ADA               	clrf	fsr2h,c
  4765  00796C  0E00               	movlw	high PRC@message2
  4766  00796E  22DA               	addwfc	fsr2h,f,c
  4767  007970  50DF               	movf	indf2,w,c
  4768  007972  EC3F  F037         	call	_trans
  4769                           
  4770                           ;./functions.c: 384:             }
  4771  007976  2A37               	incf	PRC@a_1172,f,c
  4772  007978  0E03               	movlw	3
  4773  00797A  6437               	cpfsgt	PRC@a_1172,c
  4774  00797C  D7F3               	goto	l3253
  4775  00797E  0012               	return	
  4776  007980                     l3261:
  4777                           
  4778                           ;./functions.c: 388:             for (unsigned char a = 0; a < 8; a++)
  4779  007980  0E00               	movlw	0
  4780  007982  6E38               	movwf	PRC@a_1173,c
  4781  007984                     l3267:
  4782                           
  4783                           ;./functions.c: 389:             {;./functions.c: 390:                 raceColor[a] = 0;
  4784  007984  0EB2               	movlw	low _raceColor
  4785  007986  2438               	addwf	PRC@a_1173,w,c
  4786  007988  6ED9               	movwf	fsr2l,c
  4787  00798A  6ADA               	clrf	fsr2h,c
  4788  00798C  0E00               	movlw	high _raceColor
  4789  00798E  22DA               	addwfc	fsr2h,f,c
  4790  007990  0E00               	movlw	0
  4791  007992  6EDF               	movwf	indf2,c
  4792                           
  4793                           ;./functions.c: 391:             }
  4794  007994  2A38               	incf	PRC@a_1173,f,c
  4795  007996  0E07               	movlw	7
  4796  007998  6438               	cpfsgt	PRC@a_1173,c
  4797  00799A  D7F4               	goto	l3267
  4798                           
  4799                           ;./functions.c: 392:             raceColor[4] = 1;
  4800  00799C  0E01               	movlw	1
  4801  00799E  0100               	movlb	0	; () banked
  4802  0079A0  6FB6               	movwf	(_raceColor+4)& (0+255),b
  4803                           
  4804                           ;./functions.c: 393:             for (unsigned char a = 0; a < 4; a++)
  4805  0079A2  0E00               	movlw	0
  4806  0079A4  6E39               	movwf	PRC@a_1174,c
  4807  0079A6                     l3279:
  4808                           
  4809                           ;./functions.c: 394:             {;./functions.c: 395:                 trans(message2[a]
      +                          );
  4810  0079A6  0E2C               	movlw	low PRC@message2
  4811  0079A8  2439               	addwf	PRC@a_1174,w,c
  4812  0079AA  6ED9               	movwf	fsr2l,c
  4813  0079AC  6ADA               	clrf	fsr2h,c
  4814  0079AE  0E00               	movlw	high PRC@message2
  4815  0079B0  22DA               	addwfc	fsr2h,f,c
  4816  0079B2  50DF               	movf	indf2,w,c
  4817  0079B4  EC3F  F037         	call	_trans
  4818                           
  4819                           ;./functions.c: 396:             }
  4820  0079B8  2A39               	incf	PRC@a_1174,f,c
  4821  0079BA  0E03               	movlw	3
  4822  0079BC  6439               	cpfsgt	PRC@a_1174,c
  4823  0079BE  D7F3               	goto	l3279
  4824  0079C0  0012               	return	
  4825  0079C2                     l3287:
  4826                           
  4827                           ;./functions.c: 401:             error();
  4828  0079C2  ECCE  F037         	call	_error	;wreg free
  4829                           
  4830                           ;./functions.c: 402:             continue;
  4831  0079C6  D755               	goto	l3169
  4832  0079C8                     l3293:
  4833  0079C8  50AE               	movf	4014,w,c	;volatile
  4834  0079CA  6E0A               	movwf	??_PRC& (0+255),c
  4835  0079CC  6A0B               	clrf	(??_PRC+1)& (0+255),c
  4836                           
  4837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4838                           ; Switch size 1, requested type "simple"
  4839                           ; Number of cases is 1, Range of values is 0 to 0
  4840                           ; switch strategies available:
  4841                           ; Name         Instructions Cycles
  4842                           ; simple_byte            4     3 (average)
  4843                           ;	Chosen strategy is simple_byte
  4844  0079CE  500B               	movf	??_PRC+1,w,c
  4845  0079D0  0A00               	xorlw	0	; case 0
  4846  0079D2  A4D8               	btfss	status,2,c
  4847  0079D4  D7F6               	goto	l3287
  4848                           
  4849                           ; Switch size 1, requested type "simple"
  4850                           ; Number of cases is 4, Range of values is 66 to 110
  4851                           ; switch strategies available:
  4852                           ; Name         Instructions Cycles
  4853                           ; simple_byte           13     7 (average)
  4854                           ;	Chosen strategy is simple_byte
  4855  0079D6  500A               	movf	??_PRC,w,c
  4856  0079D8  0A42               	xorlw	66	; case 66
  4857  0079DA  B4D8               	btfsc	status,2,c
  4858  0079DC  D76E               	goto	l3183
  4859  0079DE  0A05               	xorlw	5	; case 71
  4860  0079E0  B4D8               	btfsc	status,2,c
  4861  0079E2  D78C               	goto	l3209
  4862  0079E4  0A15               	xorlw	21	; case 82
  4863  0079E6  B4D8               	btfsc	status,2,c
  4864  0079E8  D7AA               	goto	l3235
  4865  0079EA  0A3C               	xorlw	60	; case 110
  4866  0079EC  B4D8               	btfsc	status,2,c
  4867  0079EE  D7C8               	goto	l3261
  4868  0079F0  D7E8               	goto	l3287
  4869  0079F2                     __end_of_PRC:
  4870                           	opt callstack 0
  4871                           
  4872 ;; *************** function _error *****************
  4873 ;; Defined at:
  4874 ;;		line 902 in file "./functions.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  a               1    8[COMRAM] unsigned char 
  4879 ;;  message         7    1[COMRAM] unsigned char [7]
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  1    wreg      void 
  4882 ;; Registers used:
  4883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4889 ;;      Params:         0       0       0       0       0       0       0
  4890 ;;      Locals:         8       0       0       0       0       0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0
  4892 ;;      Totals:         8       0       0       0       0       0       0
  4893 ;;Total ram usage:        8 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    1
  4896 ;; This function calls:
  4897 ;;		_trans
  4898 ;; This function is called by:
  4899 ;;		_PRC
  4900 ;;		_RCE
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text28
  4905  006F9C                     __ptext28:
  4906                           	opt callstack 0
  4907  006F9C                     _error:
  4908                           	opt callstack 28
  4909                           
  4910                           ;./functions.c: 904:     unsigned char message[] = "ERROR\n";
  4911                           
  4912                           ;incstack = 0
  4913  006F9C  EE20  F0BB         	lfsr	2,error@F6083
  4914  006FA0  EE10  F002         	lfsr	1,error@message
  4915  006FA4  0E06               	movlw	6
  4916  006FA6                     u1741:
  4917  006FA6  CFDB FFE3          	movff	plusw2,plusw1
  4918  006FAA  06E8               	decf	wreg,f,c
  4919  006FAC  E2FC               	bc	u1741
  4920                           
  4921                           ;./functions.c: 906:     for (unsigned char a = 0; a < 6; a++)
  4922  006FAE  0E00               	movlw	0
  4923  006FB0  6E09               	movwf	error@a,c
  4924  006FB2                     l2781:
  4925                           
  4926                           ;./functions.c: 907:     {;./functions.c: 908:         trans(message[a]);
  4927  006FB2  0E02               	movlw	low error@message
  4928  006FB4  2409               	addwf	error@a,w,c
  4929  006FB6  6ED9               	movwf	fsr2l,c
  4930  006FB8  6ADA               	clrf	fsr2h,c
  4931  006FBA  0E00               	movlw	high error@message
  4932  006FBC  22DA               	addwfc	fsr2h,f,c
  4933  006FBE  50DF               	movf	indf2,w,c
  4934  006FC0  EC3F  F037         	call	_trans
  4935                           
  4936                           ;./functions.c: 909:     }
  4937  006FC4  2A09               	incf	error@a,f,c
  4938  006FC6  0E05               	movlw	5
  4939  006FC8  6409               	cpfsgt	error@a,c
  4940  006FCA  D7F3               	goto	l2781
  4941                           
  4942                           ;./functions.c: 911:     RCREG = 0;
  4943  006FCC  0E00               	movlw	0
  4944  006FCE  6EAE               	movwf	4014,c	;volatile
  4945  006FD0  0012               	return		;funcret
  4946  006FD2                     __end_of_error:
  4947                           	opt callstack 0
  4948                           
  4949 ;; *************** function _trans *****************
  4950 ;; Defined at:
  4951 ;;		line 807 in file "./functions.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  s               1    wreg     unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  s               1    0[COMRAM] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4965 ;;      Params:         0       0       0       0       0       0       0
  4966 ;;      Locals:         1       0       0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0
  4968 ;;      Totals:         1       0       0       0       0       0       0
  4969 ;;Total ram usage:        1 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_PRC
  4975 ;;		_pyCal
  4976 ;;		_capTouch
  4977 ;;		_error
  4978 ;;		_RCE
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text29
  4983  006E7E                     __ptext29:
  4984                           	opt callstack 0
  4985  006E7E                     _trans:
  4986                           	opt callstack 29
  4987                           
  4988                           ;incstack = 0
  4989                           ;trans@s stored from wreg
  4990  006E7E  6E01               	movwf	trans@s,c
  4991  006E80                     
  4992                           ;./functions.c: 809:     while (!PIR1bits.TX1IF)
  4993                           
  4994                           ;./functions.c: 810:         ;
  4995  006E80  A89E               	btfss	3998,4,c	;volatile
  4996  006E82  D7FE               	goto	l2709
  4997                           
  4998                           ;./functions.c: 811:     TXREG = s;
  4999  006E84  C001  FFAD         	movff	trans@s,4013	;volatile
  5000  006E88  0012               	return		;funcret
  5001  006E8A                     __end_of_trans:
  5002                           	opt callstack 0
  5003  0000                     
  5004                           	psect	rparam
  5005  0000                     tosu	equ	0xFFF
  5006                           tosh	equ	0xFFE
  5007                           tosl	equ	0xFFD
  5008                           stkptr	equ	0xFFC
  5009                           pclatu	equ	0xFFB
  5010                           pclath	equ	0xFFA
  5011                           pcl	equ	0xFF9
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           prodh	equ	0xFF4
  5017                           prodl	equ	0xFF3
  5018                           indf0	equ	0xFEF
  5019                           postinc0	equ	0xFEE
  5020                           postdec0	equ	0xFED
  5021                           preinc0	equ	0xFEC
  5022                           plusw0	equ	0xFEB
  5023                           fsr0h	equ	0xFEA
  5024                           fsr0l	equ	0xFE9
  5025                           wreg	equ	0xFE8
  5026                           indf1	equ	0xFE7
  5027                           postinc1	equ	0xFE6
  5028                           postdec1	equ	0xFE5
  5029                           preinc1	equ	0xFE4
  5030                           plusw1	equ	0xFE3
  5031                           fsr1h	equ	0xFE2
  5032                           fsr1l	equ	0xFE1
  5033                           bsr	equ	0xFE0
  5034                           indf2	equ	0xFDF
  5035                           postinc2	equ	0xFDE
  5036                           postdec2	equ	0xFDD
  5037                           preinc2	equ	0xFDC
  5038                           plusw2	equ	0xFDB
  5039                           fsr2h	equ	0xFDA
  5040                           fsr2l	equ	0xFD9
  5041                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        146
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      95
    BANK0           160     20     159
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    classifyColors@sensorRanges	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(COMRAM[5]), 
		 -> LLranges(COMRAM[5]), 

    classifyColors@F6061	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(COMRAM[5]), 
		 -> LLranges(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_RCE
    _RCE->_capTouch
    _pyCal->_msDelay
    _navigate->_classifyColors
    _readAllSensors->_aveSensor
    _capTouch->_msDelay
    _calibrate->_oneSecDelay
    _oneSecDelay->_msDelay
    _msDelay->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _aveSensor->_setADCChannel
    _PRC->_error
    _error->_trans

Critical Paths under _main in BANK0

    _main->_RCE

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12571
                                _RCE
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupADC
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RCE                                                 22    22      0   12571
                                             81 COMRAM     2     2      0
                                              0 BANK0     20    20      0
                                _PRC
                          _calibrate
                           _capTouch
                              _error
                           _navigate
                              _pyCal
                              _trans
 ---------------------------------------------------------------------------------
 (2) _pyCal                                                2     2      0    3023
                                             50 COMRAM     2     2      0
                          _aveSensor
                            _msDelay
                           _setupADC
                              _trans
 ---------------------------------------------------------------------------------
 (2) _navigate                                             0     0      0     696
                     _classifyColors
               _displayColorDetected
                   _displayRaceColor
                     _readAllSensors
                           _setupADC
                       _setupPWMLeft
                      _setupPWMRight
                         _stopMotors
 ---------------------------------------------------------------------------------
 (3) _stopMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMRight                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMLeft                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readAllSensors                                       2     2      0     249
                                             10 COMRAM     2     2      0
                          _aveSensor
 ---------------------------------------------------------------------------------
 (3) _displayRaceColor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displayColorDetected                                 3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _classifyColors                                      15    15      0     425
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (2) _capTouch                                            31    31      0    3239
                                             50 COMRAM    31    31      0
                                _abs
                          _aveSensor
                            _msDelay
                              _trans
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calibrate                                           11    11      0    4335
                                             51 COMRAM    11    11      0
                          _aveSensor
                        _oneSecDelay
 ---------------------------------------------------------------------------------
 (3) _oneSecDelay                                          1     1      0    2819
                                             50 COMRAM     1     1      0
                            _msDelay
 ---------------------------------------------------------------------------------
 (3) _msDelay                                              1     1      0    2773
                                             49 COMRAM     1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _aveSensor                                            7     7      0     159
                                              3 COMRAM     7     7      0
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (4) _setADCChannel                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PRC                                                 48    48      0     865
                                              9 COMRAM    48    48      0
                              _error
                              _trans
 ---------------------------------------------------------------------------------
 (2) _error                                                8     8      0     114
                                              1 COMRAM     8     8      0
                              _trans
 ---------------------------------------------------------------------------------
 (2) _trans                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RCE
     _PRC
       _error
         _trans
       _trans
     _calibrate
       _aveSensor
         _readADC
         _setADCChannel
       _oneSecDelay
         _msDelay
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _capTouch
       _abs
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _trans
     _error
       _trans
     _navigate
       _classifyColors
       _displayColorDetected
       _displayRaceColor
       _readAllSensors
         _aveSensor
           _readADC
           _setADCChannel
       _setupADC
       _setupPWMLeft
       _setupPWMRight
       _stopMotors
     _pyCal
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _setupADC
       _trans
     _trans
   _init
     _clearPorts
     _setupADC
     _setupOSC
     _setupSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     14      9F       4       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     53      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FE       9        0.0%
DATA                 0      0      FE      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 26 16:55:33 2019

               _colorsDetected 00FA                  capTouch@F6042 0080                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                  __CFG_LVP$ON 000000                            l314 72A0                            l431 72C0  
                          l503 7568                            l440 6E62                            l432 72C8  
                          l433 72D0                            l434 72D8                            l435 72E0  
                          l436 72E8                            l429 72B8                            l392 73B0  
                          l394 73BC                            l298 6FDE                            l482 6E7C  
                          l395 73C8                            l468 7222                            l396 73D4  
                          l397 73E0                            l398 73EC                            l497 7556  
                 __CFG_CPB$OFF 000000                            _RCE 74EE                            _PR2 000FBB  
                          _PR4 000F52                   __CFG_CPD$OFF 000000                            _PR6 000F4B  
                          _PRC 786E                            _abs 6F6A                            _col 0054  
                          prod 000FF3                            wreg 000FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                ??_setupPWMRight 0001                           ?_RCE 0001  
                         ?_PRC 0001                           RCE@a 00F8                   ___fltol@exp1 0031  
                         PRC@a 0031                           ?_abs 0001                           l1135 7D2E  
                         l1152 7FCC                           l1144 7F46                           l1145 7F42  
                         l1183 77EA                           l3023 7B30                           l1176 776C  
                         l3201 78E0                           l1196 6F92                           l3215 7900  
                         l3127 7C38                           l3303 70D4                           l3241 7942  
                         l3209 78FC                           l3313 70DE                           l3235 793E  
                         l3227 7922                           l2507 7D4C                           l2603 7452  
                         l3075 7BB4                           l3261 7980                           l3253 7964  
                         l3183 78BA                           l2455 72F0                           l2631 74C0  
                         l2623 74AC                           l3177 789A                           l3169 7872  
                         l2481 7CDE                           l2801 706E                           l3441 7542  
                         l3267 7984                           l2555 7F0C                           l2483 7CEE  
                         l2619 749C                           l3427 750A                           l2709 6E80  
                         l3189 78BE                           l3293 79C8                           l2549 7EEE  
                         l2637 74DC                           l2629 74B4                           l2653 779A  
                         l3365 7268                           l3357 7246                           l2805 707A  
                         l3461 758C                           l3445 7550                           l3437 7534  
                         l3287 79C2                           l3279 79A6                           l2591 7FEA  
                         l2575 7F8A                           l2479 7CDA                           l2655 77A0  
                         l2647 777C                           l2831 7610                           l3463 7592  
                         l2497 7D1A                           l2665 7810                           l2657 77AC  
                         l2817 7014                           l3481 75E0                           l3465 7598  
                         l3473 75AA                           l3457 757E                           l2579 7FA8  
                         l2499 7D1E                           l2683 785C                           l2667 781C  
                         l2659 77D2                           l2843 76D4                           l2835 7654  
                         l3467 759E                           l3475 75DA                           l3459 7586  
                         l2781 6FB2                           l3469 75A4                           l2767 6EAC  
                         l2919 7A28                           l2847 7714                           l2839 7694  
                         l2697 709A                           l2857 73F8                           l2793 7056  
                         l2971 7AAC                           l2797 7062                           u2201 787C  
                         u1410 7D3A                           u2211 788E                           u2220 78B4  
                         u1500 7F98                           u1420 7EB0                           _LATA 000F89  
                         u1510 7FB6                           _LATB 000F8A                           _LATC 000F8B  
                         _LATD 000F8C                           _FSR0 000FE9                           u1425 7EA6  
                         _LATE 000F8D                           u1530 7440                           u1460 7F3C  
                         u1540 7470                           u2421 74FC                           u1545 7466  
                         u1810 7046                           u1580 74C6                           u1660 7826  
                         u2380 7006                           u1741 6FA6                           u1821 7604  
                         u2391 723A                           u1880 6F78                           u1891 7A00  
                         _TMR1 000FCE                           _TMR2 000FBC                           _TMR4 000F53  
                         _TMR6 000F4C                           abs@a 0001                           _main 6E74  
                         _init 6EBC                           _size 0055                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                  __CFG_BORV$190 000000  
                         prodh 000FF4                           prodl 000FF3                           start 0000  
                __CFG_IESO$OFF 000000          ?_displayColorDetected 0001                   ___param_bank 000000  
               capTouch@touch1 004F                 capTouch@touch2 0050                          ??_RCE 0052  
                        ??_PRC 000A                          ??_abs 0003                   _BAUDCON1bits 000FB8  
                ___fltol@sign1 0030                          ?_main 0001                          ?_init 0001  
              __end_of___flmul 8000                __end_of___fltol 74EE                          _T1CON 000FCD  
                        _T2CON 000FBA                          _T4CON 000F51                          _T6CON 000F4A  
                        _RCREG 000FAE                          _PORTA 000F80                          _PORTB 000F81  
                        _PORTC 000F82                          _PORTD 000F83                          _PORTE 000F84  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TRISD 000F95                          _TRISE 000F96                          _TXREG 000FAD  
       __size_of_setADCChannel 0084                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
                 ?_oneSecDelay 0001                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                __end_of_msDelay 7230  
              __end_of_readADC 6E6A                 __CFG_EBTRB$OFF 000000                          _error 6F9C  
                        _pyCal 70CC             __CFG_MCLRE$EXTMCLR 000000                          _trans 6E7E  
                        tablat 000FF5                          plusw1 000FE3                          plusw2 000FDB  
                        status 000FD8                 __CFG_HFOFST$ON 000000                 __CFG_PBADEN$ON 000000  
              capTouch@message 0033                __initialization 711A                   __end_of_main 6E7E  
                 __end_of_init 6ED4                  calibrate@temp 003E                         ??_main 0054  
                       ??_init 0001                  __activetblptr 000002                         _ADCON1 000FC1  
                       ?_error 0001                         ?_pyCal 0001                         _ADRESH 000FC4  
                       _CCPR1L 000FBE                         _CCPR5L 000F55                         ?_trans 0001  
                       _ANSELA 000F38                         _ANSELB 000F39                         _ANSELC 000F3A  
                       _ANSELD 000F3B                         _ANSELE 000F3C               calibrate@samples 0039  
               __CFG_WDTEN$OFF 000000               calibrate@sensors 0034                         _RCSTA1 000FAB  
                       _SPBRG1 000FAF               __end_of_capTouch 72A2               __end_of___xxtofl 786E  
                       _TXSTA1 000FAC         ??_displayColorDetected 0001                  _setADCChannel 72A2  
               __CFG_XINST$OFF 000000                 __CFG_STVREN$ON 000000                      ??___flmul 0017  
                    ??___fltol 002C               __end_of_navigate 700C                classifyColors@a 000F  
      __size_of_readAllSensors 003C                      ??_msDelay 0032                      ??_readADC 0001  
                       error@a 0009                         pyCal@a 0034                   __pdataCOMRAM 0054  
             __end_of_setupADC 6EF6               __end_of_setupOSC 6E74                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             RCE@commandReceived 00F4  
                       trans@s 0001                   ?_setupSerial 0001                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 7166                 ?_setADCChannel 0001                  ___rparam_used 000001  
                   ___fltol@f1 0028              ?_displayRaceColor 0001                 __pcstackCOMRAM 0001  
               calibrate@F6015 00CD             __size_of_calibrate 02BC                   __pidataBANK0 7326  
           ??_displayRaceColor 0001           setADCChannel@channel 0003                  __end_of_error 6FD2  
                __end_of_pyCal 711A                  __end_of_trans 6E8A                      RCE@a_1331 00F9  
           __size_of_aveSensor 0046                        ??_error 0002                        ??_pyCal 0033  
         __size_of_oneSecDelay 0014                        ??_trans 0001                     __pbssBANK0 00FA  
              __CFG_PLLCFG$OFF 000000                      PRC@a_1170 0035                      PRC@a_1171 0036  
                    PRC@a_1172 0037                      PRC@a_1173 0038                      PRC@a_1174 0039  
                    PRC@a_1167 0032                      PRC@a_1168 0033                      PRC@a_1169 0034  
                   _clearPorts 7170             __CFG_CCP2MX$PORTC1 000000        __size_of_classifyColors 0134  
           __CFG_CCP3MX$PORTB5 000000                        _CCP1CON 000FBD                        _CCP5CON 000F54  
                    ?_capTouch 0001                      ?___xxtofl 0001                        _SPBRGH1 000FB0  
            __end_of_calibrate 7CAE     displayColorDetected@sensor 0003          __end_of_setupPWMRight 6F3A  
              ??_setADCChannel 0001                      ?_navigate 0001                    PRC@message2 002C  
            __end_of_aveSensor 70CC                __CFG_PWRTEN$OFF 000000                        _Lranges 0056  
                      __Hparam 0000                        _Mranges 00E1                        __Lparam 0000  
                    ?_setupADC 0001                        _Rranges 00DC              RCE@nCharsReceived 00F7  
                    ?_setupOSC 0001                        ___flmul 7CAE                        ___fltol 7434  
                 error@message 0002                        __pcinit 711A                        __ramtop 0600  
                      __ptext0 6E74                        __ptext1 6EBC                        __ptext2 6F3A  
                      __ptext3 6E6A                        __ptext4 7170                        __ptext5 74EE  
                      __ptext6 70CC                        __ptext7 6FD2                        __ptext8 6E96  
                      __ptext9 6F18                 _readAllSensors 700C                        _msDelay 71CA  
                      _readADC 6E60                   __size_of_RCE 010C                   __size_of_PRC 0184  
                    _T1CONbits 000FCD                     ??_capTouch 0033                      _T2CONbits 000FBA  
                 __size_of_abs 0032                     ??___xxtofl 0005                      _T4CONbits 000F51  
         end_of_initialization 7166           __size_of_setupSerial 0030                  __Lmediumconst 0000  
                   ??_navigate 0010                  ?_setupPWMLeft 0001                    ?_clearPorts 0001  
                   aveSensor@a 000A                     aveSensor@s 0006                     ??_setupADC 0001  
                 oneSecDelay@a 0033                     ??_setupOSC 0001                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     _sensorVals 00D2         __end_of_readAllSensors 7048  
                    _PORTAbits 000F80                      _PORTCbits 000F82                      _PORTEbits 000F84  
          classifyColors@F6061 00A8                  ___xxtofl@sign 0009                      _TRISBbits 000F93  
                    _TRISCbits 000F94                      _TRISEbits 000F96                    ___flmul@grs 001C  
        aveSensor@measurements 0007                 ??_setupPWMLeft 0001               msDelay@delayInMs 0032  
                   _stopMotors 6E96  __size_of_displayColorDetected 0088                 _classifyColors 75FA  
              ?_readAllSensors 0001                  __pidataCOMRAM 6E8A            start_initialization 711A  
    __size_of_displayRaceColor 003E                    __end_of_RCE 75FA                    __end_of_PRC 79F2  
          __size_of_clearPorts 005A                    __end_of_abs 6F9C                     error@F6083 00BB  
       __end_of_classifyColors 772E                 _sensorChannels 00C2                     RCE@message 00E6  
                  __pdataBANK0 0060                       RCE@F6098 009A                      ___flmul@a 0013  
                    ___flmul@b 000F                  ??_oneSecDelay 0033                  __pcstackBANK0 00E6  
            __size_of_capTouch 0072              __size_of___xxtofl 0140     classifyColors@sensorRanges 0005  
                     PRC@F6024 0060                       PRC@F6026 00C8                      _calibrate 79F2  
                  ?_stopMotors 0001                ?_classifyColors 0001              __size_of_navigate 003A  
                    _aveSensor 7086                       ?___flmul 000F                       ?___fltol 0028  
            __size_of_setupADC 0022              __size_of_setupOSC 000A               __CFG_PRICLKEN$ON 000000  
         __end_of_setupPWMLeft 6F18                       ?_msDelay 0001                      capTouch@a 0051  
                     ?_readADC 0001                     PRC@message 000C                      _raceColor 00B2  
                     _CCPTMRS0 000F49                       _CCPTMRS1 000F48          calibrate@samples_1160 003D  
        calibrate@samples_1157 003A          calibrate@samples_1158 003B          calibrate@samples_1159 003C  
               __size_of_error 0036                 __size_of_pyCal 004E                 __size_of_trans 000C  
          __end_of_oneSecDelay 6EBC                     ?_calibrate 0001          __end_of_setADCChannel 7326  
                     _PIE1bits 000F9D                       _PIE5bits 000F7D                   ??_clearPorts 0001  
                     _PIR1bits 000F9E                       _PIR5bits 000F7E               __CFG_WDTPS$32768 000000  
                   ?_aveSensor 0001         __size_of_setupPWMRight 0022                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0                readAllSensors@a 000B                       _LLranges 005B  
             _displayRaceColor 7048            __size_of_stopMotors 0012                  ??_setupSerial 0001  
           __end_of_clearPorts 71CA                      copy_data0 712E                      copy_data1 714E  
                     _RRranges 00D7                       __Hrparam 0000               ??_readAllSensors 000B  
                     __Lrparam 0000             __CFG_BOREN$SBORDIS 000000              __CFG_P2BMX$PORTD2 000000  
             __size_of___flmul 0352               __size_of___fltol 00BA                     _ANSELBbits 000F39  
                   _ANSELCbits 000F3A                       _capTouch 7230               __size_of_msDelay 0066  
             __size_of_readADC 000A                       ___xxtofl 772E   __end_of_displayColorDetected 7434  
                  _oneSecDelay 6EA8                       __ptext10 6EF6                       __ptext11 6ED4  
                     __ptext20 71CA                       __ptext12 700C                       __ptext21 772E  
                     __ptext13 7048                       __ptext22 7434                       __ptext14 73AC  
                     __ptext23 7CAE                       __ptext15 75FA                       __ptext24 7086  
                     __ptext16 7230                       __ptext25 72A2                       __ptext17 6F6A  
                     __ptext26 6E60                       __ptext18 79F2                       __ptext27 786E  
                     __ptext19 6EA8                       __ptext28 6F9C                       __ptext29 6E7E  
                _setupPWMRight 6F18                    ??_calibrate 0034                  __size_of_main 000A  
                __size_of_init 0018                       _navigate 6FD2            __end_of_setupSerial 6F6A  
                     _setupADC 6ED4                       _setupOSC 6E6A                    ??_aveSensor 0004  
        __size_of_setupPWMLeft 0022                     _INTCONbits 000FF2               ??_classifyColors 0001  
               ?_setupPWMRight 0001                   _setupPWMLeft 6EF6                   ??_stopMotors 0001  
                   _OSCCONbits 000FD3                aveSensor@result 0009              __CFG_T3CMX$PORTC0 000000  
           __end_of_stopMotors 6EA8                    _setupSerial 6F3A              __CFG_FOSC$INTIO67 000000  
     __end_of_displayRaceColor 7086           _displayColorDetected 73AC  
