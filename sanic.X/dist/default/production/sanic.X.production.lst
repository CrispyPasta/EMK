

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 26 12:37:18 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F45K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  006E76                     __pidataCOMRAM:
    83                           	opt callstack 0
    84                           
    85                           ;initializer for _col
    86  006E76  42                 	db	66
    87                           
    88                           ;initializer for _size
    89  006E77  05                 	db	5
    90                           
    91                           ;initializer for _Lranges
    92  006E78  82                 	db	130
    93  006E79  B2                 	db	178
    94  006E7A  B4                 	db	180
    95  006E7B  BC                 	db	188
    96  006E7C  FF                 	db	255
    97                           
    98                           ;initializer for _LLranges
    99  006E7D  8C                 	db	140
   100  006E7E  A8                 	db	168
   101  006E7F  B9                 	db	185
   102  006E80  B9                 	db	185
   103  006E81  FF                 	db	255
   104                           
   105                           	psect	idataBANK0
   106  007326                     __pidataBANK0:
   107                           	opt callstack 0
   108                           
   109                           ;initializer for PRC@F6015
   110  007326  0A                 	db	10
   111  007327  57                 	db	87
   112  007328  68                 	db	104
   113  007329  61                 	db	97
   114  00732A  74                 	db	116
   115  00732B  20                 	db	32
   116  00732C  63                 	db	99
   117  00732D  6F                 	db	111
   118  00732E  6C                 	db	108
   119  00732F  6F                 	db	111
   120  007330  72                 	db	114
   121  007331  20                 	db	32
   122  007332  73                 	db	115
   123  007333  68                 	db	104
   124  007334  6F                 	db	111
   125  007335  75                 	db	117
   126  007336  6C                 	db	108
   127  007337  64                 	db	100
   128  007338  20                 	db	32
   129  007339  73                 	db	115
   130  00733A  61                 	db	97
   131  00733B  6E                 	db	110
   132  00733C  69                 	db	105
   133  00733D  63                 	db	99
   134  00733E  20                 	db	32
   135  00733F  72                 	db	114
   136  007340  61                 	db	97
   137  007341  63                 	db	99
   138  007342  65                 	db	101
   139  007343  3F                 	db	63
   140  007344  0A                 	db	10
   141  007345  00                 	db	0
   142                           
   143                           ;initializer for capTouch@F6033
   144  007346  0A                 	db	10
   145  007347  53                 	db	83
   146  007348  61                 	db	97
   147  007349  6E                 	db	110
   148  00734A  69                 	db	105
   149  00734B  63                 	db	99
   150  00734C  20                 	db	32
   151  00734D  77                 	db	119
   152  00734E  61                 	db	97
   153  00734F  69                 	db	105
   154  007350  74                 	db	116
   155  007351  73                 	db	115
   156  007352  20                 	db	32
   157  007353  66                 	db	102
   158  007354  6F                 	db	111
   159  007355  72                 	db	114
   160  007356  20                 	db	32
   161  007357  61                 	db	97
   162  007358  20                 	db	32
   163  007359  74                 	db	116
   164  00735A  6F                 	db	111
   165  00735B  75                 	db	117
   166  00735C  63                 	db	99
   167  00735D  68                 	db	104
   168  00735E  0A                 	db	10
   169  00735F  00                 	db	0
   170                           
   171                           ;initializer for RCE@F6083
   172  007360  0A                 	db	10
   173  007361  53                 	db	83
   174  007362  61                 	db	97
   175  007363  6E                 	db	110
   176  007364  69                 	db	105
   177  007365  63                 	db	99
   178  007366  20                 	db	32
   179  007367  72                 	db	114
   180  007368  61                 	db	97
   181  007369  63                 	db	99
   182  00736A  65                 	db	101
   183  00736B  73                 	db	115
   184  00736C  20                 	db	32
   185  00736D  00                 	db	0
   186                           
   187                           ;initializer for classifyColors@F6047
   188  00736E  5B                 	db	low _LLranges
   189  00736F  00                 	db	high _LLranges
   190  007370  56                 	db	low _Lranges
   191  007371  00                 	db	high _Lranges
   192  007372  E1                 	db	low _Mranges
   193  007373  00                 	db	high _Mranges
   194  007374  DC                 	db	low _Rranges
   195  007375  00                 	db	high _Rranges
   196  007376  D7                 	db	low _RRranges
   197  007377  00                 	db	high _RRranges
   198                           
   199                           ;initializer for _raceColor
   200  007378  30                 	db	48
   201  007379  30                 	db	48
   202  00737A  30                 	db	48
   203  00737B  30                 	db	48
   204  00737C  31                 	db	49
   205  00737D  30                 	db	48
   206  00737E  30                 	db	48
   207  00737F  30                 	db	48
   208  007380  00                 	db	0
   209                           
   210                           ;initializer for error@F6069
   211  007381  45                 	db	69
   212  007382  52                 	db	82
   213  007383  52                 	db	82
   214  007384  4F                 	db	79
   215  007385  52                 	db	82
   216  007386  0A                 	db	10
   217  007387  00                 	db	0
   218                           
   219                           ;initializer for _sensorChannels
   220  007388  0C                 	db	12
   221  007389  0A                 	db	10
   222  00738A  08                 	db	8
   223  00738B  09                 	db	9
   224  00738C  0D                 	db	13
   225  00738D  0F                 	db	15
   226                           
   227                           ;initializer for PRC@F6017
   228  00738E  0A                 	db	10
   229  00738F  53                 	db	83
   230  007390  65                 	db	101
   231  007391  74                 	db	116
   232  007392  00                 	db	0
   233                           
   234                           ;initializer for calibrate@F6006
   235  007393  0C                 	db	12
   236  007394  08                 	db	8
   237  007395  09                 	db	9
   238  007396  0A                 	db	10
   239  007397  0D                 	db	13
   240                           
   241                           ;initializer for _sensorVals
   242  007398  78                 	db	120
   243  007399  AA                 	db	170
   244  00739A  AA                 	db	170
   245  00739B  BE                 	db	190
   246  00739C  FA                 	db	250
   247                           
   248                           ;initializer for _RRranges
   249  00739D  8C                 	db	140
   250  00739E  B9                 	db	185
   251  00739F  C3                 	db	195
   252  0073A0  C3                 	db	195
   253  0073A1  FF                 	db	255
   254                           
   255                           ;initializer for _Rranges
   256  0073A2  8C                 	db	140
   257  0073A3  AA                 	db	170
   258  0073A4  AF                 	db	175
   259  0073A5  D2                 	db	210
   260  0073A6  FF                 	db	255
   261                           
   262                           ;initializer for _Mranges
   263  0073A7  82                 	db	130
   264  0073A8  A5                 	db	165
   265  0073A9  AF                 	db	175
   266  0073AA  BC                 	db	188
   267  0073AB  FF                 	db	255
   268  0000                     _T6CON	set	3914
   269  0000                     _PR6	set	3915
   270  0000                     _TMR6	set	3916
   271  0000                     _ANSELCbits	set	3898
   272  0000                     _ANSELBbits	set	3897
   273  0000                     _ANSELE	set	3900
   274  0000                     _ANSELD	set	3899
   275  0000                     _ANSELC	set	3898
   276  0000                     _ANSELB	set	3897
   277  0000                     _ANSELA	set	3896
   278  0000                     _T4CONbits	set	3921
   279  0000                     _TMR4	set	3923
   280  0000                     _T4CON	set	3921
   281  0000                     _CCPTMRS1	set	3912
   282  0000                     _CCPR5L	set	3925
   283  0000                     _PR4	set	3922
   284  0000                     _CCP5CON	set	3924
   285  0000                     _CCPTMRS0	set	3913
   286  0000                     _FSR0	set	4073
   287  0000                     _INTCONbits	set	4082
   288  0000                     _PIR5bits	set	3966
   289  0000                     _ADRESH	set	4036
   290  0000                     _TRISBbits	set	3987
   291  0000                     _TXREG	set	4013
   292  0000                     _PORTEbits	set	3972
   293  0000                     _PORTCbits	set	3970
   294  0000                     _RCREG	set	4014
   295  0000                     _PORTAbits	set	3968
   296  0000                     _ADCON0bits	set	4034
   297  0000                     _ADCON1	set	4033
   298  0000                     _ADCON2bits	set	4032
   299  0000                     _BAUDCON1bits	set	4024
   300  0000                     _SPBRGH1	set	4016
   301  0000                     _SPBRG1	set	4015
   302  0000                     _RCSTA1	set	4011
   303  0000                     _TXSTA1	set	4012
   304  0000                     _PIR1bits	set	3998
   305  0000                     _OSCCONbits	set	4051
   306  0000                     _TRISE	set	3990
   307  0000                     _LATE	set	3981
   308  0000                     _PORTE	set	3972
   309  0000                     _TRISD	set	3989
   310  0000                     _LATD	set	3980
   311  0000                     _PORTD	set	3971
   312  0000                     _TRISC	set	3988
   313  0000                     _LATC	set	3979
   314  0000                     _PORTC	set	3970
   315  0000                     _TRISB	set	3987
   316  0000                     _LATB	set	3978
   317  0000                     _PORTB	set	3969
   318  0000                     _TRISA	set	3986
   319  0000                     _LATA	set	3977
   320  0000                     _PORTA	set	3968
   321  0000                     _PIE5bits	set	3965
   322  0000                     _TRISEbits	set	3990
   323  0000                     _T2CONbits	set	4026
   324  0000                     _PIE1bits	set	3997
   325  0000                     _TMR2	set	4028
   326  0000                     _T2CON	set	4026
   327  0000                     _TRISCbits	set	3988
   328  0000                     _CCPR1L	set	4030
   329  0000                     _PR2	set	4027
   330  0000                     _CCP1CON	set	4029
   331                           
   332                           ; #config settings
   333  0000                     
   334                           	psect	cinit
   335  00710E                     __pcinit:
   336                           	opt callstack 0
   337  00710E                     start_initialization:
   338                           	opt callstack 0
   339  00710E                     __initialization:
   340                           	opt callstack 0
   341                           
   342                           ; Initialize objects allocated to BANK0 (134 bytes)
   343                           ; load TBLPTR registers with __pidataBANK0
   344  00710E  0E26               	movlw	low __pidataBANK0
   345  007110  6EF6               	movwf	tblptrl,c
   346  007112  0E73               	movlw	high __pidataBANK0
   347  007114  6EF7               	movwf	tblptrh,c
   348  007116  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   349  007118  6EF8               	movwf	tblptru,c
   350  00711A  EE00  F060         	lfsr	0,__pdataBANK0
   351  00711E  EE10 F086          	lfsr	1,134
   352  007122                     copy_data0:
   353  007122  0009               	tblrd		*+
   354  007124  CFF5 FFEE          	movff	tablat,postinc0
   355  007128  50E5               	movf	postdec1,w,c
   356  00712A  50E1               	movf	fsr1l,w,c
   357  00712C  E1FA               	bnz	copy_data0
   358                           
   359                           ; Initialize objects allocated to COMRAM (12 bytes)
   360                           ; load TBLPTR registers with __pidataCOMRAM
   361  00712E  0E76               	movlw	low __pidataCOMRAM
   362  007130  6EF6               	movwf	tblptrl,c
   363  007132  0E6E               	movlw	high __pidataCOMRAM
   364  007134  6EF7               	movwf	tblptrh,c
   365  007136  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   366  007138  6EF8               	movwf	tblptru,c
   367  00713A  EE00  F054         	lfsr	0,__pdataCOMRAM
   368  00713E  EE10 F00C          	lfsr	1,12
   369  007142                     copy_data1:
   370  007142  0009               	tblrd		*+
   371  007144  CFF5 FFEE          	movff	tablat,postinc0
   372  007148  50E5               	movf	postdec1,w,c
   373  00714A  50E1               	movf	fsr1l,w,c
   374  00714C  E1FA               	bnz	copy_data1
   375                           
   376                           ; Clear objects allocated to BANK0 (5 bytes)
   377  00714E  0100               	movlb	0
   378  007150  6BFE               	clrf	(__pbssBANK0+4)& (0+255),b
   379  007152  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   380  007154  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   381  007156  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   382  007158  6BFA               	clrf	__pbssBANK0& (0+255),b
   383  00715A                     end_of_initialization:
   384                           	opt callstack 0
   385  00715A                     __end_of__initialization:
   386                           	opt callstack 0
   387  00715A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   388  00715C  6EF8               	movwf	tblptru,c
   389  00715E  0100               	movlb	0
   390  007160  EF30  F037         	goto	_main	;jump to C main() function
   391                           
   392                           	psect	dataCOMRAM
   393  000054                     __pdataCOMRAM:
   394                           	opt callstack 0
   395  000054                     _col:
   396                           	opt callstack 0
   397  000054                     	ds	1
   398  000055                     _size:
   399                           	opt callstack 0
   400  000055                     	ds	1
   401  000056                     _Lranges:
   402                           	opt callstack 0
   403  000056                     	ds	5
   404  00005B                     _LLranges:
   405                           	opt callstack 0
   406  00005B                     	ds	5
   407                           
   408                           	psect	bssBANK0
   409  0000FA                     __pbssBANK0:
   410                           	opt callstack 0
   411  0000FA                     _colorsDetected:
   412                           	opt callstack 0
   413  0000FA                     	ds	5
   414                           
   415                           	psect	dataBANK0
   416  000060                     __pdataBANK0:
   417                           	opt callstack 0
   418  000060                     PRC@F6015:
   419                           	opt callstack 0
   420  000060                     	ds	32
   421  000080                     capTouch@F6033:
   422                           	opt callstack 0
   423  000080                     	ds	26
   424  00009A                     RCE@F6083:
   425                           	opt callstack 0
   426  00009A                     	ds	14
   427  0000A8                     classifyColors@F6047:
   428                           	opt callstack 0
   429  0000A8                     	ds	10
   430  0000B2                     _raceColor:
   431                           	opt callstack 0
   432  0000B2                     	ds	9
   433  0000BB                     error@F6069:
   434                           	opt callstack 0
   435  0000BB                     	ds	7
   436  0000C2                     _sensorChannels:
   437                           	opt callstack 0
   438  0000C2                     	ds	6
   439  0000C8                     PRC@F6017:
   440                           	opt callstack 0
   441  0000C8                     	ds	5
   442  0000CD                     calibrate@F6006:
   443                           	opt callstack 0
   444  0000CD                     	ds	5
   445  0000D2                     _sensorVals:
   446                           	opt callstack 0
   447  0000D2                     	ds	5
   448  0000D7                     _RRranges:
   449                           	opt callstack 0
   450  0000D7                     	ds	5
   451  0000DC                     _Rranges:
   452                           	opt callstack 0
   453  0000DC                     	ds	5
   454  0000E1                     _Mranges:
   455                           	opt callstack 0
   456  0000E1                     	ds	5
   457                           
   458                           	psect	cstackBANK0
   459  0000E6                     __pcstackBANK0:
   460                           	opt callstack 0
   461  0000E6                     RCE@message:
   462                           	opt callstack 0
   463                           
   464                           ; 14 bytes @ 0x0
   465  0000E6                     	ds	14
   466  0000F4                     RCE@commandReceived:
   467                           	opt callstack 0
   468                           
   469                           ; 3 bytes @ 0xE
   470  0000F4                     	ds	3
   471  0000F7                     RCE@nCharsReceived:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0x11
   475  0000F7                     	ds	1
   476  0000F8                     RCE@a:
   477                           	opt callstack 0
   478                           
   479                           ; 1 bytes @ 0x12
   480  0000F8                     	ds	1
   481  0000F9                     RCE@a_1260:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0x13
   485  0000F9                     	ds	1
   486                           
   487                           	psect	cstackCOMRAM
   488  000001                     __pcstackCOMRAM:
   489                           	opt callstack 0
   490  000001                     ??_classifyColors:
   491  000001                     ??_displayColorDetected:
   492  000001                     ??_setADCChannel:
   493  000001                     ?_abs:
   494                           	opt callstack 0
   495  000001                     ?___xxtofl:
   496                           	opt callstack 0
   497  000001                     trans@s:
   498                           	opt callstack 0
   499  000001                     abs@a:
   500                           	opt callstack 0
   501  000001                     ___xxtofl@val:
   502                           	opt callstack 0
   503                           
   504                           ; 4 bytes @ 0x0
   505  000001                     	ds	1
   506  000002                     error@message:
   507                           	opt callstack 0
   508                           
   509                           ; 7 bytes @ 0x1
   510  000002                     	ds	1
   511  000003                     ??_abs:
   512  000003                     displayColorDetected@sensor:
   513                           	opt callstack 0
   514  000003                     setADCChannel@channel:
   515                           	opt callstack 0
   516                           
   517                           ; 1 bytes @ 0x2
   518  000003                     	ds	1
   519  000004                     ??_aveSensor:
   520                           
   521                           ; 1 bytes @ 0x3
   522  000004                     	ds	1
   523  000005                     ??___xxtofl:
   524  000005                     classifyColors@sensorRanges:
   525                           	opt callstack 0
   526                           
   527                           ; 10 bytes @ 0x4
   528  000005                     	ds	1
   529  000006                     aveSensor@s:
   530                           	opt callstack 0
   531                           
   532                           ; 1 bytes @ 0x5
   533  000006                     	ds	1
   534  000007                     aveSensor@measurements:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x6
   538  000007                     	ds	2
   539  000009                     aveSensor@result:
   540                           	opt callstack 0
   541  000009                     error@a:
   542                           	opt callstack 0
   543  000009                     ___xxtofl@sign:
   544                           	opt callstack 0
   545                           
   546                           ; 1 bytes @ 0x8
   547  000009                     	ds	1
   548  00000A                     ??_PRC:
   549  00000A                     aveSensor@a:
   550                           	opt callstack 0
   551  00000A                     ___xxtofl@exp:
   552                           	opt callstack 0
   553                           
   554                           ; 1 bytes @ 0x9
   555  00000A                     	ds	1
   556  00000B                     readAllSensors@a:
   557                           	opt callstack 0
   558  00000B                     ___xxtofl@arg:
   559                           	opt callstack 0
   560                           
   561                           ; 4 bytes @ 0xA
   562  00000B                     	ds	1
   563  00000C                     PRC@message:
   564                           	opt callstack 0
   565                           
   566                           ; 32 bytes @ 0xB
   567  00000C                     	ds	3
   568  00000F                     ?___flmul:
   569                           	opt callstack 0
   570  00000F                     classifyColors@a:
   571                           	opt callstack 0
   572  00000F                     ___flmul@b:
   573                           	opt callstack 0
   574                           
   575                           ; 4 bytes @ 0xE
   576  00000F                     	ds	1
   577  000010                     
   578                           ; 1 bytes @ 0xF
   579  000010                     	ds	3
   580  000013                     ___flmul@a:
   581                           	opt callstack 0
   582                           
   583                           ; 4 bytes @ 0x12
   584  000013                     	ds	4
   585  000017                     ??___flmul:
   586                           
   587                           ; 1 bytes @ 0x16
   588  000017                     	ds	4
   589  00001B                     ___flmul@sign:
   590                           	opt callstack 0
   591                           
   592                           ; 1 bytes @ 0x1A
   593  00001B                     	ds	1
   594  00001C                     ___flmul@grs:
   595                           	opt callstack 0
   596                           
   597                           ; 4 bytes @ 0x1B
   598  00001C                     	ds	4
   599  000020                     ___flmul@aexp:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x1F
   603  000020                     	ds	1
   604  000021                     ___flmul@bexp:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0x20
   608  000021                     	ds	1
   609  000022                     ___flmul@prod:
   610                           	opt callstack 0
   611                           
   612                           ; 4 bytes @ 0x21
   613  000022                     	ds	4
   614  000026                     ___flmul@temp:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x25
   618  000026                     	ds	2
   619  000028                     ?___fltol:
   620                           	opt callstack 0
   621  000028                     ___fltol@f1:
   622                           	opt callstack 0
   623                           
   624                           ; 4 bytes @ 0x27
   625  000028                     	ds	4
   626  00002C                     ??___fltol:
   627  00002C                     PRC@message2:
   628                           	opt callstack 0
   629                           
   630                           ; 5 bytes @ 0x2B
   631  00002C                     	ds	4
   632  000030                     ___fltol@sign1:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0x2F
   636  000030                     	ds	1
   637  000031                     PRC@a:
   638                           	opt callstack 0
   639  000031                     ___fltol@exp1:
   640                           	opt callstack 0
   641                           
   642                           ; 1 bytes @ 0x30
   643  000031                     	ds	1
   644  000032                     PRC@a_1113:
   645                           	opt callstack 0
   646  000032                     msDelay@delayInMs:
   647                           	opt callstack 0
   648                           
   649                           ; 1 bytes @ 0x31
   650  000032                     	ds	1
   651  000033                     PRC@a_1114:
   652                           	opt callstack 0
   653  000033                     oneSecDelay@a:
   654                           	opt callstack 0
   655  000033                     capTouch@message:
   656                           	opt callstack 0
   657                           
   658                           ; 26 bytes @ 0x32
   659  000033                     	ds	1
   660  000034                     PRC@a_1115:
   661                           	opt callstack 0
   662  000034                     pyCal@a:
   663                           	opt callstack 0
   664  000034                     calibrate@sensors:
   665                           	opt callstack 0
   666                           
   667                           ; 5 bytes @ 0x33
   668  000034                     	ds	1
   669  000035                     PRC@a_1116:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0x34
   673  000035                     	ds	1
   674  000036                     PRC@a_1117:
   675                           	opt callstack 0
   676                           
   677                           ; 1 bytes @ 0x35
   678  000036                     	ds	1
   679  000037                     PRC@a_1118:
   680                           	opt callstack 0
   681                           
   682                           ; 1 bytes @ 0x36
   683  000037                     	ds	1
   684  000038                     PRC@a_1119:
   685                           	opt callstack 0
   686                           
   687                           ; 1 bytes @ 0x37
   688  000038                     	ds	1
   689  000039                     calibrate@samples:
   690                           	opt callstack 0
   691  000039                     PRC@a_1120:
   692                           	opt callstack 0
   693                           
   694                           ; 1 bytes @ 0x38
   695  000039                     	ds	1
   696  00003A                     calibrate@samples_1096:
   697                           	opt callstack 0
   698                           
   699                           ; 1 bytes @ 0x39
   700  00003A                     	ds	1
   701  00003B                     calibrate@samples_1097:
   702                           	opt callstack 0
   703                           
   704                           ; 1 bytes @ 0x3A
   705  00003B                     	ds	1
   706  00003C                     calibrate@samples_1098:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x3B
   710  00003C                     	ds	1
   711  00003D                     calibrate@samples_1099:
   712                           	opt callstack 0
   713                           
   714                           ; 1 bytes @ 0x3C
   715  00003D                     	ds	1
   716  00003E                     calibrate@temp:
   717                           	opt callstack 0
   718                           
   719                           ; 1 bytes @ 0x3D
   720  00003E                     	ds	17
   721  00004F                     capTouch@touch1:
   722                           	opt callstack 0
   723                           
   724                           ; 1 bytes @ 0x4E
   725  00004F                     	ds	1
   726  000050                     capTouch@touch2:
   727                           	opt callstack 0
   728                           
   729                           ; 1 bytes @ 0x4F
   730  000050                     	ds	1
   731  000051                     capTouch@a:
   732                           	opt callstack 0
   733                           
   734                           ; 1 bytes @ 0x50
   735  000051                     	ds	1
   736  000052                     ??_RCE:
   737                           
   738                           ; 1 bytes @ 0x51
   739  000052                     	ds	2
   740  000054                     
   741                           ; 1 bytes @ 0x53
   742 ;;
   743 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   744 ;;
   745 ;; *************** function _main *****************
   746 ;; Defined at:
   747 ;;		line 78 in file "sanic.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   761 ;;      Params:         0       0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels required when called:    5
   767 ;; This function calls:
   768 ;;		_RCE
   769 ;;		_init
   770 ;; This function is called by:
   771 ;;		Startup code after reset
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text0
   776  006E60                     __ptext0:
   777                           	opt callstack 0
   778  006E60                     _main:
   779                           	opt callstack 26
   780                           
   781                           ;sanic.c: 95:     init();
   782                           
   783                           ;incstack = 0
   784  006E60  EC54  F037         	call	_init	;wreg free
   785                           
   786                           ;sanic.c: 96:     RCE();
   787  006E64  EC77  F03A         	call	_RCE	;wreg free
   788  006E68                     l442:
   789  006E68  D7FF               	goto	l442
   790  006E6A                     __end_of_main:
   791                           	opt callstack 0
   792                           
   793 ;; *************** function _init *****************
   794 ;; Defined at:
   795 ;;		line 107 in file "sanic.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   809 ;;      Params:         0       0       0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    1
   816 ;; This function calls:
   817 ;;		_clearPorts
   818 ;;		_setupADC
   819 ;;		_setupOSC
   820 ;;		_setupSerial
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text1
   827  006EA8                     __ptext1:
   828                           	opt callstack 0
   829  006EA8                     _init:
   830                           	opt callstack 29
   831                           
   832                           ;sanic.c: 108:     raceColor[3] = 1;
   833                           
   834                           ;incstack = 0
   835  006EA8  0E01               	movlw	1
   836  006EAA  0100               	movlb	0	; () banked
   837  006EAC  6FB5               	movwf	(_raceColor+3)& (0+255),b
   838                           
   839                           ; BSR set to: 0
   840                           ;sanic.c: 109:     setupOSC();
   841  006EAE  EC2B  F037         	call	_setupOSC	;wreg free
   842                           
   843                           ;sanic.c: 110:     clearPorts();
   844  006EB2  ECB2  F038         	call	_clearPorts	;wreg free
   845                           
   846                           ;sanic.c: 111:     setupSerial();
   847  006EB6  EC97  F037         	call	_setupSerial	;wreg free
   848                           
   849                           ;sanic.c: 112:     setupADC();
   850  006EBA  EC60  F037         	call	_setupADC	;wreg free
   851  006EBE  0012               	return		;funcret
   852  006EC0                     __end_of_init:
   853                           	opt callstack 0
   854                           
   855 ;; *************** function _setupSerial *****************
   856 ;; Defined at:
   857 ;;		line 96 in file "./functions.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   871 ;;      Params:         0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		_init
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text2
   885  006F2E                     __ptext2:
   886                           	opt callstack 0
   887  006F2E                     _setupSerial:
   888                           	opt callstack 29
   889                           
   890                           ;./functions.c: 98:     PIE1bits.RC1IE = 0;
   891                           
   892                           ;incstack = 0
   893  006F2E  9A9D               	bcf	3997,5,c	;volatile
   894                           
   895                           ;./functions.c: 99:     PIE1bits.TX1IE = 0;
   896  006F30  989D               	bcf	3997,4,c	;volatile
   897                           
   898                           ;./functions.c: 100:     PIR1bits.RCIF = 0;
   899  006F32  9A9E               	bcf	3998,5,c	;volatile
   900                           
   901                           ;./functions.c: 102:     FSR0 = 0;
   902  006F34  0E00               	movlw	0
   903  006F36  6EEA               	movwf	fsr0h,c	;volatile
   904  006F38  0E00               	movlw	0
   905  006F3A  6EE9               	movwf	fsr0l,c	;volatile
   906                           
   907                           ;./functions.c: 103:     TXSTA1 = 0b00100100;
   908  006F3C  0E24               	movlw	36
   909  006F3E  6EAC               	movwf	4012,c	;volatile
   910                           
   911                           ;./functions.c: 104:     RCSTA1 = 0b10010000;
   912  006F40  0E90               	movlw	144
   913  006F42  6EAB               	movwf	4011,c	;volatile
   914                           
   915                           ;./functions.c: 106:     SPBRG1 = 25;
   916  006F44  0E19               	movlw	25
   917  006F46  6EAF               	movwf	4015,c	;volatile
   918                           
   919                           ;./functions.c: 107:     SPBRGH1 = 0;
   920  006F48  0E00               	movlw	0
   921  006F4A  6EB0               	movwf	4016,c	;volatile
   922                           
   923                           ;./functions.c: 108:     BAUDCON1bits.BRG16 = 0;
   924  006F4C  96B8               	bcf	4024,3,c	;volatile
   925                           
   926                           ;./functions.c: 109:     TRISCbits.RC6 = 1;
   927  006F4E  8C94               	bsf	3988,6,c	;volatile
   928                           
   929                           ;./functions.c: 110:     TRISCbits.RC7 = 1;
   930  006F50  8E94               	bsf	3988,7,c	;volatile
   931                           
   932                           ;./functions.c: 112:     PORTC = 0;
   933  006F52  0E00               	movlw	0
   934  006F54  6E82               	movwf	3970,c	;volatile
   935                           
   936                           ;./functions.c: 113:     ANSELC = 0;
   937  006F56  0E00               	movlw	0
   938  006F58  010F               	movlb	15	; () banked
   939  006F5A  6F3A               	movwf	58,b	;volatile
   940                           
   941                           ; BSR set to: 15
   942  006F5C  0012               	return		;funcret
   943  006F5E                     __end_of_setupSerial:
   944                           	opt callstack 0
   945                           
   946 ;; *************** function _setupOSC *****************
   947 ;; Defined at:
   948 ;;		line 90 in file "./functions.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   962 ;;      Params:         0       0       0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0
   965 ;;      Totals:         0       0       0       0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_init
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text3
   976  006E56                     __ptext3:
   977                           	opt callstack 0
   978  006E56                     _setupOSC:
   979                           	opt callstack 29
   980                           
   981                           ;./functions.c: 92:     OSCCONbits.IRCF = 0b101;
   982                           
   983                           ; BSR set to: 15
   984                           ;incstack = 0
   985  006E56  50D3               	movf	4051,w,c	;volatile
   986  006E58  0B8F               	andlw	-113
   987  006E5A  0950               	iorlw	80
   988  006E5C  6ED3               	movwf	4051,c	;volatile
   989  006E5E  0012               	return		;funcret
   990  006E60                     __end_of_setupOSC:
   991                           	opt callstack 0
   992                           
   993 ;; *************** function _clearPorts *****************
   994 ;; Defined at:
   995 ;;		line 59 in file "./functions.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1009 ;;      Params:         0       0       0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_init
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text4
  1023  007164                     __ptext4:
  1024                           	opt callstack 0
  1025  007164                     _clearPorts:
  1026                           	opt callstack 29
  1027                           
  1028                           ;./functions.c: 61:     PORTA = 0;
  1029                           
  1030                           ;incstack = 0
  1031  007164  0E00               	movlw	0
  1032  007166  6E80               	movwf	3968,c	;volatile
  1033                           
  1034                           ;./functions.c: 62:     LATA = 0;
  1035  007168  0E00               	movlw	0
  1036  00716A  6E89               	movwf	3977,c	;volatile
  1037                           
  1038                           ;./functions.c: 63:     TRISA = 0;
  1039  00716C  0E00               	movlw	0
  1040  00716E  6E92               	movwf	3986,c	;volatile
  1041                           
  1042                           ;./functions.c: 64:     ANSELA = 0;
  1043  007170  0E00               	movlw	0
  1044  007172  010F               	movlb	15	; () banked
  1045  007174  6F38               	movwf	56,b	;volatile
  1046                           
  1047                           ;./functions.c: 66:     PORTB = 0;
  1048  007176  0E00               	movlw	0
  1049  007178  6E81               	movwf	3969,c	;volatile
  1050                           
  1051                           ;./functions.c: 67:     LATB = 0;
  1052  00717A  0E00               	movlw	0
  1053  00717C  6E8A               	movwf	3978,c	;volatile
  1054                           
  1055                           ;./functions.c: 68:     TRISB = 0;
  1056  00717E  0E00               	movlw	0
  1057  007180  6E93               	movwf	3987,c	;volatile
  1058                           
  1059                           ;./functions.c: 69:     ANSELB = 0;
  1060  007182  0E00               	movlw	0
  1061  007184  6F39               	movwf	57,b	;volatile
  1062                           
  1063                           ;./functions.c: 71:     PORTC = 0;
  1064  007186  0E00               	movlw	0
  1065  007188  6E82               	movwf	3970,c	;volatile
  1066                           
  1067                           ;./functions.c: 72:     LATC = 0;
  1068  00718A  0E00               	movlw	0
  1069  00718C  6E8B               	movwf	3979,c	;volatile
  1070                           
  1071                           ;./functions.c: 73:     TRISC = 0;
  1072  00718E  0E00               	movlw	0
  1073  007190  6E94               	movwf	3988,c	;volatile
  1074                           
  1075                           ;./functions.c: 74:     ANSELC = 0;
  1076  007192  0E00               	movlw	0
  1077  007194  6F3A               	movwf	58,b	;volatile
  1078                           
  1079                           ;./functions.c: 76:     PORTD = 0;
  1080  007196  0E00               	movlw	0
  1081  007198  6E83               	movwf	3971,c	;volatile
  1082                           
  1083                           ;./functions.c: 77:     LATD = 0;
  1084  00719A  0E00               	movlw	0
  1085  00719C  6E8C               	movwf	3980,c	;volatile
  1086                           
  1087                           ;./functions.c: 78:     TRISD = 0;
  1088  00719E  0E00               	movlw	0
  1089  0071A0  6E95               	movwf	3989,c	;volatile
  1090                           
  1091                           ;./functions.c: 79:     ANSELD = 0;
  1092  0071A2  0E00               	movlw	0
  1093  0071A4  6F3B               	movwf	59,b	;volatile
  1094                           
  1095                           ;./functions.c: 81:     PORTE = 0;
  1096  0071A6  0E00               	movlw	0
  1097  0071A8  6E84               	movwf	3972,c	;volatile
  1098                           
  1099                           ;./functions.c: 82:     LATE = 0;
  1100  0071AA  0E00               	movlw	0
  1101  0071AC  6E8D               	movwf	3981,c	;volatile
  1102                           
  1103                           ;./functions.c: 83:     TRISE = 0;
  1104  0071AE  0E00               	movlw	0
  1105  0071B0  6E96               	movwf	3990,c	;volatile
  1106                           
  1107                           ;./functions.c: 84:     ANSELE = 0;
  1108  0071B2  0E00               	movlw	0
  1109  0071B4  6F3C               	movwf	60,b	;volatile
  1110                           
  1111                           ;./functions.c: 85:     raceColor[3] = 1;
  1112  0071B6  0E01               	movlw	1
  1113  0071B8  0100               	movlb	0	; () banked
  1114  0071BA  6FB5               	movwf	(_raceColor+3)& (0+255),b
  1115                           
  1116                           ; BSR set to: 0
  1117  0071BC  0012               	return		;funcret
  1118  0071BE                     __end_of_clearPorts:
  1119                           	opt callstack 0
  1120                           
  1121 ;; *************** function _RCE *****************
  1122 ;; Defined at:
  1123 ;;		line 115 in file "sanic.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  a               1   19[BANK0 ] unsigned char 
  1128 ;;  a               1   18[BANK0 ] unsigned char 
  1129 ;;  message        14    0[BANK0 ] unsigned char [14]
  1130 ;;  commandRecei    3   14[BANK0 ] unsigned char [3]
  1131 ;;  nCharsReceiv    1   17[BANK0 ] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1141 ;;      Params:         0       0       0       0       0       0       0
  1142 ;;      Locals:         0      20       0       0       0       0       0
  1143 ;;      Temps:          2       0       0       0       0       0       0
  1144 ;;      Totals:         2      20       0       0       0       0       0
  1145 ;;Total ram usage:       22 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    4
  1148 ;; This function calls:
  1149 ;;		_PRC
  1150 ;;		_calibrate
  1151 ;;		_capTouch
  1152 ;;		_error
  1153 ;;		_navigate
  1154 ;;		_pyCal
  1155 ;;		_trans
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text5
  1162  0074EE                     __ptext5:
  1163                           	opt callstack 0
  1164  0074EE                     _RCE:
  1165                           	opt callstack 26
  1166                           
  1167                           ;sanic.c: 117:         PORTD = 0b10100100;
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;incstack = 0
  1171                           ;sanic.c: 116:     while(1){
  1172  0074EE  0EA4               	movlw	164
  1173  0074F0  6E83               	movwf	3971,c	;volatile
  1174                           
  1175                           ;sanic.c: 119:         unsigned char message[] = "\nSanic races ";
  1176  0074F2  EE20  F09A         	lfsr	2,RCE@F6083
  1177  0074F6  EE10  F0E6         	lfsr	1,RCE@message
  1178  0074FA  0E0D               	movlw	13
  1179  0074FC                     u2371:
  1180  0074FC  CFDB FFE3          	movff	plusw2,plusw1
  1181  007500  06E8               	decf	wreg,f,c
  1182  007502  E2FC               	bc	u2371
  1183                           
  1184                           ;sanic.c: 121:         for (unsigned char a = 0; a < 13; a++)
  1185  007504  0E00               	movlw	0
  1186  007506  0100               	movlb	0	; () banked
  1187  007508  6FF8               	movwf	RCE@a& (0+255),b
  1188  00750A                     l3283:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;sanic.c: 122:         {;sanic.c: 123:             trans(message[a]);
  1192  00750A  0EE6               	movlw	low RCE@message
  1193  00750C  25F8               	addwf	RCE@a& (0+255),w,b
  1194  00750E  6ED9               	movwf	fsr2l,c
  1195  007510  6ADA               	clrf	fsr2h,c
  1196  007512  0E00               	movlw	high RCE@message
  1197  007514  22DA               	addwfc	fsr2h,f,c
  1198  007516  50DF               	movf	indf2,w,c
  1199  007518  EC35  F037         	call	_trans
  1200                           
  1201                           ;sanic.c: 124:         }
  1202  00751C  0100               	movlb	0	; () banked
  1203  00751E  2BF8               	incf	RCE@a& (0+255),f,b
  1204                           
  1205                           ; BSR set to: 0
  1206  007520  0E0C               	movlw	12
  1207  007522  65F8               	cpfsgt	RCE@a& (0+255),b
  1208  007524  D7F2               	goto	l3283
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;sanic.c: 126:         if (raceColor[3] == 1){
  1212  007526  05B5               	decf	(_raceColor+3)& (0+255),w,b
  1213  007528  A4D8               	btfss	status,2,c
  1214  00752A  D004               	goto	l3293
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;sanic.c: 127:             trans('B');
  1218  00752C  0E42               	movlw	66
  1219  00752E  EC35  F037         	call	_trans
  1220                           
  1221                           ;sanic.c: 128:         }
  1222  007532  D011               	goto	l457
  1223  007534                     l3293:
  1224                           
  1225                           ; BSR set to: 0
  1226  007534  05B4               	decf	(_raceColor+2)& (0+255),w,b
  1227  007536  A4D8               	btfss	status,2,c
  1228  007538  D004               	goto	l3297
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;sanic.c: 130:             trans('R');
  1232  00753A  0E52               	movlw	82
  1233  00753C  EC35  F037         	call	_trans
  1234                           
  1235                           ;sanic.c: 131:         }
  1236  007540  D00A               	goto	l457
  1237  007542                     l3297:
  1238                           
  1239                           ; BSR set to: 0
  1240  007542  05B3               	decf	(_raceColor+1)& (0+255),w,b
  1241  007544  A4D8               	btfss	status,2,c
  1242  007546  D004               	goto	l3301
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;sanic.c: 133:             trans('G');
  1246  007548  0E47               	movlw	71
  1247  00754A  EC35  F037         	call	_trans
  1248                           
  1249                           ;sanic.c: 134:         }
  1250  00754E  D003               	goto	l457
  1251  007550                     l3301:
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;sanic.c: 136:             trans('n');
  1255  007550  0E6E               	movlw	110
  1256  007552  EC35  F037         	call	_trans
  1257  007556                     l457:
  1258                           
  1259                           ;sanic.c: 138:         trans('\n');
  1260  007556  0E0A               	movlw	10
  1261  007558  EC35  F037         	call	_trans
  1262                           
  1263                           ;sanic.c: 141:         INTCONbits.GIE = 0;
  1264  00755C  9EF2               	bcf	4082,7,c	;volatile
  1265                           
  1266                           ;sanic.c: 142:         INTCONbits.PEIE = 0;
  1267  00755E  9CF2               	bcf	4082,6,c	;volatile
  1268                           
  1269                           ;sanic.c: 143:         unsigned char nCharsReceived = 0;
  1270  007560  0E00               	movlw	0
  1271  007562  0100               	movlb	0	; () banked
  1272  007564  6FF7               	movwf	RCE@nCharsReceived& (0+255),b
  1273                           
  1274                           ;sanic.c: 144:         unsigned char commandReceived[3];;sanic.c: 146:         while(nCh
      +                          arsReceived < 3){
  1275  007566  D00B               	goto	l3313
  1276  007568                     l463:
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;sanic.c: 147:             if (PIR1bits.RC1IF){
  1280  007568  AA9E               	btfss	3998,5,c	;volatile
  1281  00756A  D009               	goto	l3313
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;sanic.c: 148:                 commandReceived[nCharsReceived] = RCREG;
  1285  00756C  0EF4               	movlw	low RCE@commandReceived
  1286  00756E  25F7               	addwf	RCE@nCharsReceived& (0+255),w,b
  1287  007570  6ED9               	movwf	fsr2l,c
  1288  007572  6ADA               	clrf	fsr2h,c
  1289  007574  0E00               	movlw	high RCE@commandReceived
  1290  007576  22DA               	addwfc	fsr2h,f,c
  1291  007578  CFAE FFDF          	movff	4014,indf2	;volatile
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;sanic.c: 149:                 nCharsReceived++;
  1295  00757C  2BF7               	incf	RCE@nCharsReceived& (0+255),f,b
  1296  00757E                     l3313:
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;sanic.c: 146:         while(nCharsReceived < 3){
  1300  00757E  0E02               	movlw	2
  1301  007580  65F7               	cpfsgt	RCE@nCharsReceived& (0+255),b
  1302  007582  D7F2               	goto	l463
  1303  007584  D012               	goto	l3329
  1304  007586                     l3315:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;sanic.c: 157:             capTouch();
  1308  007586  EC12  F039         	call	_capTouch	;wreg free
  1309                           
  1310                           ;sanic.c: 158:             break;
  1311  00758A  D027               	goto	l3331
  1312  00758C                     l3317:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;sanic.c: 160:             PRC();
  1316  00758C  EC37  F03C         	call	_PRC	;wreg free
  1317                           
  1318                           ;sanic.c: 161:             break;
  1319  007590  D024               	goto	l3331
  1320  007592                     l3319:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;sanic.c: 163:             navigate();
  1324  007592  ECE3  F037         	call	_navigate	;wreg free
  1325                           
  1326                           ;sanic.c: 164:             break;
  1327  007596  D021               	goto	l3331
  1328  007598                     l3321:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;sanic.c: 166:             pyCal();
  1332  007598  EC60  F038         	call	_pyCal	;wreg free
  1333                           
  1334                           ;sanic.c: 167:             break;
  1335  00759C  D01E               	goto	l3331
  1336  00759E                     l3323:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;sanic.c: 169:             calibrate();
  1340  00759E  ECF9  F03C         	call	_calibrate	;wreg free
  1341                           
  1342                           ;sanic.c: 170:             break;
  1343  0075A2  D01B               	goto	l3331
  1344  0075A4                     l3325:
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;sanic.c: 173:             error();
  1348  0075A4  ECC8  F037         	call	_error	;wreg free
  1349                           
  1350                           ;sanic.c: 174:             break;
  1351  0075A8  D018               	goto	l3331
  1352  0075AA                     l3329:
  1353                           
  1354                           ; BSR set to: 0
  1355  0075AA  51F4               	movf	RCE@commandReceived& (0+255),w,b
  1356  0075AC  6E52               	movwf	??_RCE& (0+255),c
  1357  0075AE  6A53               	clrf	(??_RCE+1)& (0+255),c
  1358                           
  1359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1360                           ; Switch size 1, requested type "simple"
  1361                           ; Number of cases is 1, Range of values is 0 to 0
  1362                           ; switch strategies available:
  1363                           ; Name         Instructions Cycles
  1364                           ; simple_byte            4     3 (average)
  1365                           ;	Chosen strategy is simple_byte
  1366  0075B0  5053               	movf	??_RCE+1,w,c
  1367  0075B2  0A00               	xorlw	0	; case 0
  1368  0075B4  A4D8               	btfss	status,2,c
  1369  0075B6  D7F6               	goto	l3325
  1370                           
  1371                           ; BSR set to: 0
  1372                           ; Switch size 1, requested type "simple"
  1373                           ; Number of cases is 5, Range of values is 67 to 82
  1374                           ; switch strategies available:
  1375                           ; Name         Instructions Cycles
  1376                           ; simple_byte           16     9 (average)
  1377                           ;	Chosen strategy is simple_byte
  1378  0075B8  5052               	movf	??_RCE,w,c
  1379  0075BA  0A43               	xorlw	67	; case 67
  1380  0075BC  B4D8               	btfsc	status,2,c
  1381  0075BE  D7EF               	goto	l3323
  1382  0075C0  0A0D               	xorlw	13	; case 78
  1383  0075C2  B4D8               	btfsc	status,2,c
  1384  0075C4  D7E6               	goto	l3319
  1385  0075C6  0A1E               	xorlw	30	; case 80
  1386  0075C8  B4D8               	btfsc	status,2,c
  1387  0075CA  D7E0               	goto	l3317
  1388  0075CC  0A01               	xorlw	1	; case 81
  1389  0075CE  B4D8               	btfsc	status,2,c
  1390  0075D0  D7E3               	goto	l3321
  1391  0075D2  0A03               	xorlw	3	; case 82
  1392  0075D4  B4D8               	btfsc	status,2,c
  1393  0075D6  D7D7               	goto	l3315
  1394  0075D8  D7E5               	goto	l3325
  1395  0075DA                     l3331:
  1396                           
  1397                           ;sanic.c: 177:         for (unsigned char a = 0; a < 3; a++){
  1398  0075DA  0E00               	movlw	0
  1399  0075DC  0100               	movlb	0	; () banked
  1400  0075DE  6FF9               	movwf	RCE@a_1260& (0+255),b
  1401  0075E0                     l3337:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;sanic.c: 178:             commandReceived[a] = 0;
  1405  0075E0  0EF4               	movlw	low RCE@commandReceived
  1406  0075E2  25F9               	addwf	RCE@a_1260& (0+255),w,b
  1407  0075E4  6ED9               	movwf	fsr2l,c
  1408  0075E6  6ADA               	clrf	fsr2h,c
  1409  0075E8  0E00               	movlw	high RCE@commandReceived
  1410  0075EA  22DA               	addwfc	fsr2h,f,c
  1411  0075EC  0E00               	movlw	0
  1412  0075EE  6EDF               	movwf	indf2,c
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;sanic.c: 179:         }
  1416  0075F0  2BF9               	incf	RCE@a_1260& (0+255),f,b
  1417                           
  1418                           ; BSR set to: 0
  1419  0075F2  0E02               	movlw	2
  1420  0075F4  65F9               	cpfsgt	RCE@a_1260& (0+255),b
  1421  0075F6  D7F4               	goto	l3337
  1422  0075F8  D77A               	goto	_RCE
  1423  0075FA                     __end_of_RCE:
  1424                           	opt callstack 0
  1425                           
  1426 ;; *************** function _pyCal *****************
  1427 ;; Defined at:
  1428 ;;		line 410 in file "./functions.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  a               1   51[COMRAM] unsigned char 
  1433 ;;  done            1    0        unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1443 ;;      Params:         0       0       0       0       0       0       0
  1444 ;;      Locals:         2       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0
  1446 ;;      Totals:         2       0       0       0       0       0       0
  1447 ;;Total ram usage:        2 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    2
  1450 ;; This function calls:
  1451 ;;		_aveSensor
  1452 ;;		_msDelay
  1453 ;;		_setupADC
  1454 ;;		_trans
  1455 ;; This function is called by:
  1456 ;;		_RCE
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text6
  1461  0070C0                     __ptext6:
  1462                           	opt callstack 0
  1463  0070C0                     _pyCal:
  1464                           	opt callstack 27
  1465                           
  1466                           ;./functions.c: 412:     setupADC();
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;incstack = 0
  1470  0070C0  EC60  F037         	call	_setupADC	;wreg free
  1471                           
  1472                           ;./functions.c: 413:     PORTD = 0b00001100;
  1473  0070C4  0E0C               	movlw	12
  1474  0070C6  6E83               	movwf	3971,c	;volatile
  1475  0070C8                     
  1476                           ;./functions.c: 416:     {;./functions.c: 417:         msDelay(9);
  1477  0070C8  0E09               	movlw	9
  1478  0070CA  ECDF  F038         	call	_msDelay
  1479                           
  1480                           ;./functions.c: 418:         for (unsigned char a = 0; a < 5; a++)
  1481  0070CE  0E00               	movlw	0
  1482  0070D0  6E34               	movwf	pyCal@a,c
  1483  0070D2                     l3193:
  1484                           
  1485                           ;./functions.c: 419:         {;./functions.c: 420:             trans(aveSensor(sensorCha
      +                          nnels[a]));
  1486  0070D2  0EC2               	movlw	low _sensorChannels
  1487  0070D4  2434               	addwf	pyCal@a,w,c
  1488  0070D6  6ED9               	movwf	fsr2l,c
  1489  0070D8  6ADA               	clrf	fsr2h,c
  1490  0070DA  0E00               	movlw	high _sensorChannels
  1491  0070DC  22DA               	addwfc	fsr2h,f,c
  1492  0070DE  50DF               	movf	indf2,w,c
  1493  0070E0  EC3D  F038         	call	_aveSensor
  1494  0070E4  EC35  F037         	call	_trans
  1495                           
  1496                           ;./functions.c: 421:         }
  1497  0070E8  2A34               	incf	pyCal@a,f,c
  1498  0070EA  0E04               	movlw	4
  1499  0070EC  6434               	cpfsgt	pyCal@a,c
  1500  0070EE  D7F1               	goto	l3193
  1501                           
  1502                           ;./functions.c: 422:         trans('\n');
  1503  0070F0  0E0A               	movlw	10
  1504  0070F2  EC35  F037         	call	_trans
  1505                           
  1506                           ;./functions.c: 424:         if (PIR1bits.RC1IF)
  1507  0070F6  AA9E               	btfss	3998,5,c	;volatile
  1508  0070F8  D7E7               	goto	l3183
  1509                           
  1510                           ;./functions.c: 425:         {;./functions.c: 426:             PIR1bits.RC1IF = 0;
  1511  0070FA  9A9E               	bcf	3998,5,c	;volatile
  1512                           
  1513                           ;./functions.c: 427:             if (RCREG == 'S' || RCREG == 's')
  1514  0070FC  0E53               	movlw	83
  1515  0070FE  18AE               	xorwf	4014,w,c	;volatile
  1516  007100  B4D8               	btfsc	status,2,c
  1517  007102  0012               	return	
  1518  007104  0E73               	movlw	115
  1519  007106  18AE               	xorwf	4014,w,c	;volatile
  1520  007108  B4D8               	btfsc	status,2,c
  1521  00710A  0012               	return	
  1522  00710C  D7DD               	goto	l3183
  1523  00710E                     __end_of_pyCal:
  1524                           	opt callstack 0
  1525                           
  1526 ;; *************** function _navigate *****************
  1527 ;; Defined at:
  1528 ;;		line 435 in file "./functions.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1542 ;;      Params:         0       0       0       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0
  1545 ;;      Totals:         0       0       0       0       0       0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    3
  1549 ;; This function calls:
  1550 ;;		_classifyColors
  1551 ;;		_displayColorDetected
  1552 ;;		_displayRaceColor
  1553 ;;		_readAllSensors
  1554 ;;		_setupADC
  1555 ;;		_setupPWMLeft
  1556 ;;		_setupPWMRight
  1557 ;;		_stopMotors
  1558 ;; This function is called by:
  1559 ;;		_RCE
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text7
  1564  006FC6                     __ptext7:
  1565                           	opt callstack 0
  1566  006FC6                     _navigate:
  1567                           	opt callstack 26
  1568                           
  1569                           ;./functions.c: 436:     displayRaceColor();
  1570                           
  1571                           ;incstack = 0
  1572  006FC6  EC1E  F038         	call	_displayRaceColor	;wreg free
  1573                           
  1574                           ;./functions.c: 437:     setupPWMLeft();
  1575  006FCA  EC71  F037         	call	_setupPWMLeft	;wreg free
  1576                           
  1577                           ;./functions.c: 438:     setupPWMRight();
  1578  006FCE  EC84  F037         	call	_setupPWMRight	;wreg free
  1579  006FD2                     l285:
  1580                           
  1581                           ;./functions.c: 440:         setupADC();
  1582  006FD2  EC60  F037         	call	_setupADC	;wreg free
  1583                           
  1584                           ;./functions.c: 441:         readAllSensors();
  1585  006FD6  EC00  F038         	call	_readAllSensors	;wreg free
  1586                           
  1587                           ;./functions.c: 442:         classifyColors();
  1588  006FDA  ECFD  F03A         	call	_classifyColors	;wreg free
  1589                           
  1590                           ;./functions.c: 443:         displayColorDetected(2);
  1591  006FDE  0E02               	movlw	2
  1592  006FE0  ECD6  F039         	call	_displayColorDetected
  1593                           
  1594                           ;./functions.c: 447:         if (PIR1bits.RC1IF)
  1595  006FE4  AA9E               	btfss	3998,5,c	;volatile
  1596  006FE6  D7F5               	goto	l285
  1597                           
  1598                           ;./functions.c: 448:         {;./functions.c: 449:             PIR1bits.RC1IF = 0;
  1599  006FE8  9A9E               	bcf	3998,5,c	;volatile
  1600                           
  1601                           ;./functions.c: 450:             if (RCREG == 'S' || RCREG == 's')
  1602  006FEA  0E53               	movlw	83
  1603  006FEC  18AE               	xorwf	4014,w,c	;volatile
  1604  006FEE  B4D8               	btfsc	status,2,c
  1605  006FF0  D004               	goto	u2330
  1606  006FF2  0E73               	movlw	115
  1607  006FF4  18AE               	xorwf	4014,w,c	;volatile
  1608  006FF6  A4D8               	btfss	status,2,c
  1609  006FF8  D7EC               	goto	l285
  1610  006FFA                     u2330:
  1611                           
  1612                           ;./functions.c: 451:             {;./functions.c: 452:                 stopMotors();
  1613  006FFA  EC41  F037         	call	_stopMotors	;wreg free
  1614  006FFE  0012               	return		;funcret
  1615  007000                     __end_of_navigate:
  1616                           	opt callstack 0
  1617                           
  1618 ;; *************** function _stopMotors *****************
  1619 ;; Defined at:
  1620 ;;		line 669 in file "./functions.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1634 ;;      Params:         0       0       0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_navigate
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text8
  1648  006E82                     __ptext8:
  1649                           	opt callstack 0
  1650  006E82                     _stopMotors:
  1651                           	opt callstack 28
  1652                           
  1653                           ;./functions.c: 670:     PORTCbits.RC0 = 0;
  1654                           
  1655                           ;incstack = 0
  1656  006E82  9082               	bcf	3970,0,c	;volatile
  1657                           
  1658                           ;./functions.c: 671:     PORTCbits.RC1 = 0;
  1659  006E84  9282               	bcf	3970,1,c	;volatile
  1660                           
  1661                           ;./functions.c: 672:     TRISCbits.TRISC2 = 1;
  1662  006E86  8494               	bsf	3988,2,c	;volatile
  1663                           
  1664                           ;./functions.c: 673:     PORTEbits.RE0 = 0;
  1665  006E88  9084               	bcf	3972,0,c	;volatile
  1666                           
  1667                           ;./functions.c: 674:     PORTEbits.RE1 = 0;
  1668  006E8A  9284               	bcf	3972,1,c	;volatile
  1669                           
  1670                           ;./functions.c: 675:     TRISEbits.TRISE2 = 1;
  1671  006E8C  8496               	bsf	3990,2,c	;volatile
  1672                           
  1673                           ;./functions.c: 676:     PORTA = 0;
  1674  006E8E  0E00               	movlw	0
  1675  006E90  6E80               	movwf	3968,c	;volatile
  1676  006E92  0012               	return		;funcret
  1677  006E94                     __end_of_stopMotors:
  1678                           	opt callstack 0
  1679                           
  1680 ;; *************** function _setupPWMRight *****************
  1681 ;; Defined at:
  1682 ;;		line 40 in file "./functions.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1696 ;;      Params:         0       0       0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_navigate
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text9
  1710  006F08                     __ptext9:
  1711                           	opt callstack 0
  1712  006F08                     _setupPWMRight:
  1713                           	opt callstack 28
  1714                           
  1715                           ;./functions.c: 42:     CCP5CON = 0;
  1716                           
  1717                           ;incstack = 0
  1718  006F08  0E00               	movlw	0
  1719  006F0A  010F               	movlb	15	; () banked
  1720  006F0C  6F54               	movwf	84,b	;volatile
  1721                           
  1722                           ;./functions.c: 43:     PR4 = 200;
  1723  006F0E  0EC8               	movlw	200
  1724  006F10  6F52               	movwf	82,b	;volatile
  1725                           
  1726                           ;./functions.c: 44:     CCPR5L = 200;
  1727  006F12  0EC8               	movlw	200
  1728  006F14  6F55               	movwf	85,b	;volatile
  1729                           
  1730                           ; BSR set to: 15
  1731                           ;./functions.c: 46:     TRISEbits.RE2 = 0;
  1732  006F16  9496               	bcf	3990,2,c	;volatile
  1733                           
  1734                           ;./functions.c: 48:     CCPTMRS1 = 0b00000100;
  1735  006F18  0E04               	movlw	4
  1736  006F1A  6F48               	movwf	72,b	;volatile
  1737                           
  1738                           ;./functions.c: 49:     CCP5CON = 0b00001100;
  1739  006F1C  0E0C               	movlw	12
  1740  006F1E  6F54               	movwf	84,b	;volatile
  1741                           
  1742                           ;./functions.c: 50:     T4CON = 0b011111010;
  1743  006F20  0EFA               	movlw	250
  1744  006F22  6F51               	movwf	81,b	;volatile
  1745                           
  1746                           ;./functions.c: 51:     TMR4 = 0;
  1747  006F24  0E00               	movlw	0
  1748  006F26  6F53               	movwf	83,b	;volatile
  1749                           
  1750                           ; BSR set to: 15
  1751                           ;./functions.c: 52:     PIE5bits.TMR4IE = 0;
  1752  006F28  907D               	bcf	3965,0,c	;volatile
  1753                           
  1754                           ; BSR set to: 15
  1755                           ;./functions.c: 53:     T4CONbits.TMR4ON = 1;
  1756  006F2A  8551               	bsf	81,2,b	;volatile
  1757                           
  1758                           ; BSR set to: 15
  1759  006F2C  0012               	return		;funcret
  1760  006F2E                     __end_of_setupPWMRight:
  1761                           	opt callstack 0
  1762                           
  1763 ;; *************** function _setupPWMLeft *****************
  1764 ;; Defined at:
  1765 ;;		line 23 in file "./functions.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1779 ;;      Params:         0       0       0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0
  1782 ;;      Totals:         0       0       0       0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_navigate
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text10
  1793  006EE2                     __ptext10:
  1794                           	opt callstack 0
  1795  006EE2                     _setupPWMLeft:
  1796                           	opt callstack 28
  1797                           
  1798                           ;./functions.c: 25:     CCP1CON = 0;
  1799                           
  1800                           ; BSR set to: 15
  1801                           ;incstack = 0
  1802  006EE2  0E00               	movlw	0
  1803  006EE4  6EBD               	movwf	4029,c	;volatile
  1804                           
  1805                           ;./functions.c: 26:     PR2 = 200;
  1806  006EE6  0EC8               	movlw	200
  1807  006EE8  6EBB               	movwf	4027,c	;volatile
  1808                           
  1809                           ;./functions.c: 27:     CCPR1L = 200;
  1810  006EEA  0EC8               	movlw	200
  1811  006EEC  6EBE               	movwf	4030,c	;volatile
  1812                           
  1813                           ;./functions.c: 29:     TRISCbits.RC2 = 0;
  1814  006EEE  9494               	bcf	3988,2,c	;volatile
  1815                           
  1816                           ;./functions.c: 31:     CCPTMRS0 = 0;
  1817  006EF0  0E00               	movlw	0
  1818  006EF2  010F               	movlb	15	; () banked
  1819  006EF4  6F49               	movwf	73,b	;volatile
  1820                           
  1821                           ;./functions.c: 32:     CCP1CON = 0b00001100;
  1822  006EF6  0E0C               	movlw	12
  1823  006EF8  6EBD               	movwf	4029,c	;volatile
  1824                           
  1825                           ;./functions.c: 33:     T2CON = 0b011111010;
  1826  006EFA  0EFA               	movlw	250
  1827  006EFC  6EBA               	movwf	4026,c	;volatile
  1828                           
  1829                           ;./functions.c: 34:     TMR2 = 0;
  1830  006EFE  0E00               	movlw	0
  1831  006F00  6EBC               	movwf	4028,c	;volatile
  1832                           
  1833                           ; BSR set to: 15
  1834                           ;./functions.c: 35:     PIE1bits.TMR1IE = 0;
  1835  006F02  909D               	bcf	3997,0,c	;volatile
  1836                           
  1837                           ; BSR set to: 15
  1838                           ;./functions.c: 36:     T2CONbits.TMR2ON = 1;
  1839  006F04  84BA               	bsf	4026,2,c	;volatile
  1840                           
  1841                           ; BSR set to: 15
  1842  006F06  0012               	return		;funcret
  1843  006F08                     __end_of_setupPWMLeft:
  1844                           	opt callstack 0
  1845                           
  1846 ;; *************** function _setupADC *****************
  1847 ;; Defined at:
  1848 ;;		line 119 in file "./functions.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1862 ;;      Params:         0       0       0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0
  1865 ;;      Totals:         0       0       0       0       0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_pyCal
  1872 ;;		_navigate
  1873 ;;		_init
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text11
  1878  006EC0                     __ptext11:
  1879                           	opt callstack 0
  1880  006EC0                     _setupADC:
  1881                           	opt callstack 29
  1882                           
  1883                           ;./functions.c: 121:     ADCON2bits.ADCS = 0b100;
  1884                           
  1885                           ; BSR set to: 15
  1886                           ;incstack = 0
  1887  006EC0  50C0               	movf	4032,w,c	;volatile
  1888  006EC2  0BF8               	andlw	-8
  1889  006EC4  0904               	iorlw	4
  1890  006EC6  6EC0               	movwf	4032,c	;volatile
  1891                           
  1892                           ;./functions.c: 122:     ADCON1 = 0;
  1893  006EC8  0E00               	movlw	0
  1894  006ECA  6EC1               	movwf	4033,c	;volatile
  1895                           
  1896                           ;./functions.c: 123:     ADCON0bits.CHS = 0b01100;
  1897  006ECC  50C2               	movf	4034,w,c	;volatile
  1898  006ECE  0B83               	andlw	-125
  1899  006ED0  0930               	iorlw	48
  1900  006ED2  6EC2               	movwf	4034,c	;volatile
  1901                           
  1902                           ;./functions.c: 124:     ADCON2bits.ADFM = 0;
  1903  006ED4  9EC0               	bcf	4032,7,c	;volatile
  1904                           
  1905                           ;./functions.c: 125:     ADCON2bits.ACQT = 0b101;
  1906  006ED6  50C0               	movf	4032,w,c	;volatile
  1907  006ED8  0BC7               	andlw	-57
  1908  006EDA  0928               	iorlw	40
  1909  006EDC  6EC0               	movwf	4032,c	;volatile
  1910                           
  1911                           ;./functions.c: 126:     ADCON0bits.ADON = 1;
  1912  006EDE  80C2               	bsf	4034,0,c	;volatile
  1913  006EE0  0012               	return		;funcret
  1914  006EE2                     __end_of_setupADC:
  1915                           	opt callstack 0
  1916                           
  1917 ;; *************** function _readAllSensors *****************
  1918 ;; Defined at:
  1919 ;;		line 701 in file "./functions.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  a               2   10[COMRAM] unsigned int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1933 ;;      Params:         0       0       0       0       0       0       0
  1934 ;;      Locals:         2       0       0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0
  1936 ;;      Totals:         2       0       0       0       0       0       0
  1937 ;;Total ram usage:        2 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    2
  1940 ;; This function calls:
  1941 ;;		_aveSensor
  1942 ;; This function is called by:
  1943 ;;		_navigate
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text12
  1948  007000                     __ptext12:
  1949                           	opt callstack 0
  1950  007000                     _readAllSensors:
  1951                           	opt callstack 26
  1952                           
  1953                           ;./functions.c: 702:     for (unsigned a = 0; a < 5; a++){
  1954                           
  1955                           ;incstack = 0
  1956  007000  0E00               	movlw	0
  1957  007002  6E0C               	movwf	readAllSensors@a+1,c
  1958  007004  0E00               	movlw	0
  1959  007006  6E0B               	movwf	readAllSensors@a,c
  1960  007008                     l2697:
  1961                           
  1962                           ;./functions.c: 703:         sensorVals[a] = aveSensor(sensorChannels[a]);
  1963  007008  0ED2               	movlw	low _sensorVals
  1964  00700A  240B               	addwf	readAllSensors@a,w,c
  1965  00700C  6ED9               	movwf	fsr2l,c
  1966  00700E  0E00               	movlw	high _sensorVals
  1967  007010  200C               	addwfc	readAllSensors@a+1,w,c
  1968  007012  6EDA               	movwf	fsr2h,c
  1969  007014  0EC2               	movlw	low _sensorChannels
  1970  007016  240B               	addwf	readAllSensors@a,w,c
  1971  007018  6EE1               	movwf	fsr1l,c
  1972  00701A  0E00               	movlw	high _sensorChannels
  1973  00701C  200C               	addwfc	readAllSensors@a+1,w,c
  1974  00701E  6EE2               	movwf	fsr1h,c
  1975  007020  50E7               	movf	indf1,w,c
  1976  007022  EC3D  F038         	call	_aveSensor
  1977  007026  6EDF               	movwf	indf2,c
  1978                           
  1979                           ;./functions.c: 704:     }
  1980  007028  4A0B               	infsnz	readAllSensors@a,f,c
  1981  00702A  2A0C               	incf	readAllSensors@a+1,f,c
  1982  00702C  500C               	movf	readAllSensors@a+1,w,c
  1983  00702E  E105               	bnz	u1760
  1984  007030  0E05               	movlw	5
  1985  007032  5C0B               	subwf	readAllSensors@a,w,c
  1986  007034  B0D8               	btfsc	status,0,c
  1987  007036  0012               	return	
  1988  007038  D7E7               	goto	l2697
  1989  00703A                     u1760:
  1990  00703A  0012               	return		;funcret
  1991  00703C                     __end_of_readAllSensors:
  1992                           	opt callstack 0
  1993                           
  1994 ;; *************** function _displayRaceColor *****************
  1995 ;; Defined at:
  1996 ;;		line 681 in file "./functions.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2010 ;;      Params:         0       0       0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0
  2013 ;;      Totals:         0       0       0       0       0       0       0
  2014 ;;Total ram usage:        0 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_navigate
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text13
  2024  00703C                     __ptext13:
  2025                           	opt callstack 0
  2026  00703C                     _displayRaceColor:
  2027                           	opt callstack 28
  2028                           
  2029                           ;./functions.c: 682:     if (raceColor[0]){
  2030                           
  2031                           ;incstack = 0
  2032  00703C  0100               	movlb	0	; () banked
  2033  00703E  51B2               	movf	_raceColor& (0+255),w,b
  2034  007040  B4D8               	btfsc	status,2,c
  2035  007042  D003               	goto	l2673
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;./functions.c: 683:         PORTD = 0b10111111;
  2039  007044  0EBF               	movlw	191
  2040  007046  6E83               	movwf	3971,c	;volatile
  2041                           
  2042                           ;./functions.c: 684:     }
  2043  007048  0012               	return	
  2044  00704A                     l2673:
  2045                           
  2046                           ; BSR set to: 0
  2047  00704A  51B3               	movf	(_raceColor+1)& (0+255),w,b
  2048  00704C  B4D8               	btfsc	status,2,c
  2049  00704E  D003               	goto	l2677
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;./functions.c: 686:         PORTD = 0b10000010;
  2053  007050  0E82               	movlw	130
  2054  007052  6E83               	movwf	3971,c	;volatile
  2055                           
  2056                           ;./functions.c: 687:     }
  2057  007054  0012               	return	
  2058  007056                     l2677:
  2059                           
  2060                           ; BSR set to: 0
  2061  007056  51B4               	movf	(_raceColor+2)& (0+255),w,b
  2062  007058  B4D8               	btfsc	status,2,c
  2063  00705A  D003               	goto	l2681
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;./functions.c: 689:         PORTD = 0b10001000;
  2067  00705C  0E88               	movlw	136
  2068  00705E  6E83               	movwf	3971,c	;volatile
  2069                           
  2070                           ;./functions.c: 690:     }
  2071  007060  0012               	return	
  2072  007062                     l2681:
  2073                           
  2074                           ; BSR set to: 0
  2075  007062  51B5               	movf	(_raceColor+3)& (0+255),w,b
  2076  007064  B4D8               	btfsc	status,2,c
  2077  007066  D003               	goto	l2685
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;./functions.c: 692:         PORTD = 0b10000000;
  2081  007068  0E80               	movlw	128
  2082  00706A  6E83               	movwf	3971,c	;volatile
  2083                           
  2084                           ;./functions.c: 693:     }
  2085  00706C  0012               	return	
  2086  00706E                     l2685:
  2087                           
  2088                           ; BSR set to: 0
  2089  00706E  51B6               	movf	(_raceColor+4)& (0+255),w,b
  2090  007070  B4D8               	btfsc	status,2,c
  2091  007072  0012               	return	
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;./functions.c: 695:         PORTD = 0b11001000;
  2095  007074  0EC8               	movlw	200
  2096  007076  6E83               	movwf	3971,c	;volatile
  2097  007078  0012               	return	
  2098  00707A                     __end_of_displayRaceColor:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function _displayColorDetected *****************
  2102 ;; Defined at:
  2103 ;;		line 616 in file "./functions.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  sensor          1    wreg     unsigned char 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  sensor          1    2[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2117 ;;      Params:         0       0       0       0       0       0       0
  2118 ;;      Locals:         1       0       0       0       0       0       0
  2119 ;;      Temps:          2       0       0       0       0       0       0
  2120 ;;      Totals:         3       0       0       0       0       0       0
  2121 ;;Total ram usage:        3 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_navigate
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text14
  2131  0073AC                     __ptext14:
  2132                           	opt callstack 0
  2133  0073AC                     _displayColorDetected:
  2134                           	opt callstack 28
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;incstack = 0
  2138                           ;displayColorDetected@sensor stored from wreg
  2139  0073AC  6E03               	movwf	displayColorDetected@sensor,c
  2140                           
  2141                           ;./functions.c: 617:     switch (colorsDetected[sensor])
  2142  0073AE  D024               	goto	l2737
  2143  0073B0                     l355:
  2144                           
  2145                           ;./functions.c: 620:         PORTAbits.RA0 = 1;
  2146  0073B0  8080               	bsf	3968,0,c	;volatile
  2147                           
  2148                           ;./functions.c: 621:         PORTAbits.RA1 = 0;
  2149  0073B2  9280               	bcf	3968,1,c	;volatile
  2150                           
  2151                           ;./functions.c: 622:         PORTAbits.RA2 = 0;
  2152  0073B4  9480               	bcf	3968,2,c	;volatile
  2153                           
  2154                           ;./functions.c: 623:         PORTAbits.RA3 = 0;
  2155  0073B6  9680               	bcf	3968,3,c	;volatile
  2156                           
  2157                           ;./functions.c: 624:         PORTAbits.RA4 = 0;
  2158  0073B8  9880               	bcf	3968,4,c	;volatile
  2159                           
  2160                           ;./functions.c: 625:         break;
  2161  0073BA  0012               	return	
  2162  0073BC                     l357:
  2163                           
  2164                           ;./functions.c: 627:         PORTAbits.RA0 = 0;
  2165  0073BC  9080               	bcf	3968,0,c	;volatile
  2166                           
  2167                           ;./functions.c: 628:         PORTAbits.RA1 = 1;
  2168  0073BE  8280               	bsf	3968,1,c	;volatile
  2169                           
  2170                           ;./functions.c: 629:         PORTAbits.RA2 = 0;
  2171  0073C0  9480               	bcf	3968,2,c	;volatile
  2172                           
  2173                           ;./functions.c: 630:         PORTAbits.RA3 = 0;
  2174  0073C2  9680               	bcf	3968,3,c	;volatile
  2175                           
  2176                           ;./functions.c: 631:         PORTAbits.RA4 = 0;
  2177  0073C4  9880               	bcf	3968,4,c	;volatile
  2178                           
  2179                           ;./functions.c: 632:         break;
  2180  0073C6  0012               	return	
  2181  0073C8                     l358:
  2182                           
  2183                           ;./functions.c: 634:         PORTAbits.RA0 = 0;
  2184  0073C8  9080               	bcf	3968,0,c	;volatile
  2185                           
  2186                           ;./functions.c: 635:         PORTAbits.RA1 = 0;
  2187  0073CA  9280               	bcf	3968,1,c	;volatile
  2188                           
  2189                           ;./functions.c: 636:         PORTAbits.RA2 = 1;
  2190  0073CC  8480               	bsf	3968,2,c	;volatile
  2191                           
  2192                           ;./functions.c: 637:         PORTAbits.RA3 = 0;
  2193  0073CE  9680               	bcf	3968,3,c	;volatile
  2194                           
  2195                           ;./functions.c: 638:         PORTAbits.RA4 = 0;
  2196  0073D0  9880               	bcf	3968,4,c	;volatile
  2197                           
  2198                           ;./functions.c: 639:         break;
  2199  0073D2  0012               	return	
  2200  0073D4                     l359:
  2201                           
  2202                           ;./functions.c: 641:         PORTAbits.RA0 = 0;
  2203  0073D4  9080               	bcf	3968,0,c	;volatile
  2204                           
  2205                           ;./functions.c: 642:         PORTAbits.RA1 = 0;
  2206  0073D6  9280               	bcf	3968,1,c	;volatile
  2207                           
  2208                           ;./functions.c: 643:         PORTAbits.RA2 = 0;
  2209  0073D8  9480               	bcf	3968,2,c	;volatile
  2210                           
  2211                           ;./functions.c: 644:         PORTAbits.RA3 = 1;
  2212  0073DA  8680               	bsf	3968,3,c	;volatile
  2213                           
  2214                           ;./functions.c: 645:         PORTAbits.RA4 = 0;
  2215  0073DC  9880               	bcf	3968,4,c	;volatile
  2216                           
  2217                           ;./functions.c: 646:         break;
  2218  0073DE  0012               	return	
  2219  0073E0                     l360:
  2220                           
  2221                           ;./functions.c: 648:         PORTAbits.RA0 = 0;
  2222  0073E0  9080               	bcf	3968,0,c	;volatile
  2223                           
  2224                           ;./functions.c: 649:         PORTAbits.RA1 = 0;
  2225  0073E2  9280               	bcf	3968,1,c	;volatile
  2226                           
  2227                           ;./functions.c: 650:         PORTAbits.RA2 = 0;
  2228  0073E4  9480               	bcf	3968,2,c	;volatile
  2229                           
  2230                           ;./functions.c: 651:         PORTAbits.RA3 = 0;
  2231  0073E6  9680               	bcf	3968,3,c	;volatile
  2232                           
  2233                           ;./functions.c: 652:         PORTAbits.RA4 = 1;
  2234  0073E8  8880               	bsf	3968,4,c	;volatile
  2235                           
  2236                           ;./functions.c: 653:         break;
  2237  0073EA  0012               	return	
  2238  0073EC                     l361:
  2239                           
  2240                           ;./functions.c: 656:         PORTAbits.RA0 = 1;
  2241  0073EC  8080               	bsf	3968,0,c	;volatile
  2242                           
  2243                           ;./functions.c: 657:         PORTAbits.RA1 = 1;
  2244  0073EE  8280               	bsf	3968,1,c	;volatile
  2245                           
  2246                           ;./functions.c: 658:         PORTAbits.RA2 = 1;
  2247  0073F0  8480               	bsf	3968,2,c	;volatile
  2248                           
  2249                           ;./functions.c: 659:         PORTAbits.RA3 = 1;
  2250  0073F2  8680               	bsf	3968,3,c	;volatile
  2251                           
  2252                           ;./functions.c: 660:         PORTAbits.RA4 = 1;
  2253  0073F4  8880               	bsf	3968,4,c	;volatile
  2254                           
  2255                           ;./functions.c: 661:         break;
  2256  0073F6  0012               	return	
  2257  0073F8                     l2737:
  2258  0073F8  0EFA               	movlw	low _colorsDetected
  2259  0073FA  2403               	addwf	displayColorDetected@sensor,w,c
  2260  0073FC  6ED9               	movwf	fsr2l,c
  2261  0073FE  6ADA               	clrf	fsr2h,c
  2262  007400  0E00               	movlw	high _colorsDetected
  2263  007402  22DA               	addwfc	fsr2h,f,c
  2264  007404  50DF               	movf	indf2,w,c
  2265  007406  6E01               	movwf	??_displayColorDetected& (0+255),c
  2266  007408  6A02               	clrf	(??_displayColorDetected+1)& (0+255),c
  2267                           
  2268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2269                           ; Switch size 1, requested type "simple"
  2270                           ; Number of cases is 1, Range of values is 0 to 0
  2271                           ; switch strategies available:
  2272                           ; Name         Instructions Cycles
  2273                           ; simple_byte            4     3 (average)
  2274                           ;	Chosen strategy is simple_byte
  2275  00740A  5002               	movf	??_displayColorDetected+1,w,c
  2276  00740C  0A00               	xorlw	0	; case 0
  2277  00740E  A4D8               	btfss	status,2,c
  2278  007410  D7ED               	goto	l361
  2279                           
  2280                           ; Switch size 1, requested type "simple"
  2281                           ; Number of cases is 5, Range of values is 66 to 110
  2282                           ; switch strategies available:
  2283                           ; Name         Instructions Cycles
  2284                           ; simple_byte           16     9 (average)
  2285                           ;	Chosen strategy is simple_byte
  2286  007412  5001               	movf	??_displayColorDetected,w,c
  2287  007414  0A42               	xorlw	66	; case 66
  2288  007416  B4D8               	btfsc	status,2,c
  2289  007418  D7DD               	goto	l359
  2290  00741A  0A05               	xorlw	5	; case 71
  2291  00741C  B4D8               	btfsc	status,2,c
  2292  00741E  D7CE               	goto	l357
  2293  007420  0A15               	xorlw	21	; case 82
  2294  007422  B4D8               	btfsc	status,2,c
  2295  007424  D7D1               	goto	l358
  2296  007426  0A05               	xorlw	5	; case 87
  2297  007428  B4D8               	btfsc	status,2,c
  2298  00742A  D7C2               	goto	l355
  2299  00742C  0A39               	xorlw	57	; case 110
  2300  00742E  B4D8               	btfsc	status,2,c
  2301  007430  D7D7               	goto	l360
  2302  007432  D7DC               	goto	l361
  2303  007434                     __end_of_displayColorDetected:
  2304                           	opt callstack 0
  2305                           
  2306 ;; *************** function _classifyColors *****************
  2307 ;; Defined at:
  2308 ;;		line 591 in file "./functions.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  a               1   14[COMRAM] unsigned char 
  2313 ;;  sensorRanges   10    4[COMRAM] PTR unsigned char [5]
  2314 ;;		 -> RRranges(5), Rranges(5), Mranges(5), Lranges(5), 
  2315 ;;		 -> LLranges(5), 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2325 ;;      Params:         0       0       0       0       0       0       0
  2326 ;;      Locals:        11       0       0       0       0       0       0
  2327 ;;      Temps:          4       0       0       0       0       0       0
  2328 ;;      Totals:        15       0       0       0       0       0       0
  2329 ;;Total ram usage:       15 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_navigate
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text15
  2339  0075FA                     __ptext15:
  2340                           	opt callstack 0
  2341  0075FA                     _classifyColors:
  2342                           	opt callstack 28
  2343                           
  2344                           ;./functions.c: 592:     unsigned char* sensorRanges[] = {LLranges, Lranges, Mranges, Rr
      +                          anges, RRranges};
  2345                           
  2346                           ;incstack = 0
  2347  0075FA  EE20  F0A8         	lfsr	2,classifyColors@F6047
  2348  0075FE  EE10  F005         	lfsr	1,classifyColors@sensorRanges
  2349  007602  0E09               	movlw	9
  2350  007604                     u1771:
  2351  007604  CFDB FFE3          	movff	plusw2,plusw1
  2352  007608  06E8               	decf	wreg,f,c
  2353  00760A  E2FC               	bc	u1771
  2354                           
  2355                           ;./functions.c: 594:     for (unsigned char a = 0; a < 5; a++){
  2356  00760C  0E00               	movlw	0
  2357  00760E  6E0F               	movwf	classifyColors@a,c
  2358  007610                     l2711:
  2359                           
  2360                           ;./functions.c: 595:         if (sensorVals[a] < sensorRanges[a][0]){
  2361  007610  500F               	movf	classifyColors@a,w,c
  2362  007612  0D02               	mullw	2
  2363  007614  0E05               	movlw	low classifyColors@sensorRanges
  2364  007616  24F3               	addwf	prodl,w,c
  2365  007618  6ED9               	movwf	fsr2l,c
  2366  00761A  0E00               	movlw	high classifyColors@sensorRanges
  2367  00761C  20F4               	addwfc	prodh,w,c
  2368  00761E  6EDA               	movwf	fsr2h,c
  2369  007620  CFDE F001          	movff	postinc2,??_classifyColors
  2370  007624  CFDD F002          	movff	postdec2,??_classifyColors+1
  2371  007628  C001  FFD9         	movff	??_classifyColors,fsr2l
  2372  00762C  C002  FFDA         	movff	??_classifyColors+1,fsr2h
  2373  007630  0ED2               	movlw	low _sensorVals
  2374  007632  240F               	addwf	classifyColors@a,w,c
  2375  007634  6EE1               	movwf	fsr1l,c
  2376  007636  6AE2               	clrf	fsr1h,c
  2377  007638  0E00               	movlw	high _sensorVals
  2378  00763A  22E2               	addwfc	fsr1h,f,c
  2379  00763C  50DE               	movf	postinc2,w,c
  2380  00763E  5CE6               	subwf	postinc1,w,c
  2381  007640  B0D8               	btfsc	status,0,c
  2382  007642  D008               	goto	l2715
  2383                           
  2384                           ;./functions.c: 596:             colorsDetected[a] = 'W';
  2385  007644  0EFA               	movlw	low _colorsDetected
  2386  007646  240F               	addwf	classifyColors@a,w,c
  2387  007648  6ED9               	movwf	fsr2l,c
  2388  00764A  6ADA               	clrf	fsr2h,c
  2389  00764C  0E00               	movlw	high _colorsDetected
  2390  00764E  22DA               	addwfc	fsr2h,f,c
  2391  007650  0E57               	movlw	87
  2392  007652  D067               	goto	L1
  2393  007654                     l2715:
  2394  007654  500F               	movf	classifyColors@a,w,c
  2395  007656  0D02               	mullw	2
  2396  007658  0E05               	movlw	low classifyColors@sensorRanges
  2397  00765A  24F3               	addwf	prodl,w,c
  2398  00765C  6ED9               	movwf	fsr2l,c
  2399  00765E  0E00               	movlw	high classifyColors@sensorRanges
  2400  007660  20F4               	addwfc	prodh,w,c
  2401  007662  6EDA               	movwf	fsr2h,c
  2402  007664  EE10 F001          	lfsr	1,1
  2403  007668  50DE               	movf	postinc2,w,c
  2404  00766A  26E1               	addwf	fsr1l,f,c
  2405  00766C  50DD               	movf	postdec2,w,c
  2406  00766E  22E2               	addwfc	fsr1h,f,c
  2407  007670  0ED2               	movlw	low _sensorVals
  2408  007672  240F               	addwf	classifyColors@a,w,c
  2409  007674  6ED9               	movwf	fsr2l,c
  2410  007676  6ADA               	clrf	fsr2h,c
  2411  007678  0E00               	movlw	high _sensorVals
  2412  00767A  22DA               	addwfc	fsr2h,f,c
  2413  00767C  50E6               	movf	postinc1,w,c
  2414  00767E  5CDE               	subwf	postinc2,w,c
  2415  007680  B0D8               	btfsc	status,0,c
  2416  007682  D008               	goto	l2719
  2417                           
  2418                           ;./functions.c: 599:             colorsDetected[a] = 'G';
  2419  007684  0EFA               	movlw	low _colorsDetected
  2420  007686  240F               	addwf	classifyColors@a,w,c
  2421  007688  6ED9               	movwf	fsr2l,c
  2422  00768A  6ADA               	clrf	fsr2h,c
  2423  00768C  0E00               	movlw	high _colorsDetected
  2424  00768E  22DA               	addwfc	fsr2h,f,c
  2425  007690  0E47               	movlw	71
  2426  007692  D047               	goto	L1
  2427  007694                     l2719:
  2428  007694  500F               	movf	classifyColors@a,w,c
  2429  007696  0D02               	mullw	2
  2430  007698  0E05               	movlw	low classifyColors@sensorRanges
  2431  00769A  24F3               	addwf	prodl,w,c
  2432  00769C  6ED9               	movwf	fsr2l,c
  2433  00769E  0E00               	movlw	high classifyColors@sensorRanges
  2434  0076A0  20F4               	addwfc	prodh,w,c
  2435  0076A2  6EDA               	movwf	fsr2h,c
  2436  0076A4  EE10 F002          	lfsr	1,2
  2437  0076A8  50DE               	movf	postinc2,w,c
  2438  0076AA  26E1               	addwf	fsr1l,f,c
  2439  0076AC  50DD               	movf	postdec2,w,c
  2440  0076AE  22E2               	addwfc	fsr1h,f,c
  2441  0076B0  0ED2               	movlw	low _sensorVals
  2442  0076B2  240F               	addwf	classifyColors@a,w,c
  2443  0076B4  6ED9               	movwf	fsr2l,c
  2444  0076B6  6ADA               	clrf	fsr2h,c
  2445  0076B8  0E00               	movlw	high _sensorVals
  2446  0076BA  22DA               	addwfc	fsr2h,f,c
  2447  0076BC  50E6               	movf	postinc1,w,c
  2448  0076BE  5CDE               	subwf	postinc2,w,c
  2449  0076C0  B0D8               	btfsc	status,0,c
  2450  0076C2  D008               	goto	l2723
  2451                           
  2452                           ;./functions.c: 602:             colorsDetected[a] = 'R';
  2453  0076C4  0EFA               	movlw	low _colorsDetected
  2454  0076C6  240F               	addwf	classifyColors@a,w,c
  2455  0076C8  6ED9               	movwf	fsr2l,c
  2456  0076CA  6ADA               	clrf	fsr2h,c
  2457  0076CC  0E00               	movlw	high _colorsDetected
  2458  0076CE  22DA               	addwfc	fsr2h,f,c
  2459  0076D0  0E52               	movlw	82
  2460  0076D2  D027               	goto	L1
  2461  0076D4                     l2723:
  2462  0076D4  500F               	movf	classifyColors@a,w,c
  2463  0076D6  0D02               	mullw	2
  2464  0076D8  0E05               	movlw	low classifyColors@sensorRanges
  2465  0076DA  24F3               	addwf	prodl,w,c
  2466  0076DC  6ED9               	movwf	fsr2l,c
  2467  0076DE  0E00               	movlw	high classifyColors@sensorRanges
  2468  0076E0  20F4               	addwfc	prodh,w,c
  2469  0076E2  6EDA               	movwf	fsr2h,c
  2470  0076E4  EE10 F003          	lfsr	1,3
  2471  0076E8  50DE               	movf	postinc2,w,c
  2472  0076EA  26E1               	addwf	fsr1l,f,c
  2473  0076EC  50DD               	movf	postdec2,w,c
  2474  0076EE  22E2               	addwfc	fsr1h,f,c
  2475  0076F0  0ED2               	movlw	low _sensorVals
  2476  0076F2  240F               	addwf	classifyColors@a,w,c
  2477  0076F4  6ED9               	movwf	fsr2l,c
  2478  0076F6  6ADA               	clrf	fsr2h,c
  2479  0076F8  0E00               	movlw	high _sensorVals
  2480  0076FA  22DA               	addwfc	fsr2h,f,c
  2481  0076FC  50E6               	movf	postinc1,w,c
  2482  0076FE  5CDE               	subwf	postinc2,w,c
  2483  007700  B0D8               	btfsc	status,0,c
  2484  007702  D008               	goto	l2727
  2485                           
  2486                           ;./functions.c: 605:             colorsDetected[a] = 'B';
  2487  007704  0EFA               	movlw	low _colorsDetected
  2488  007706  240F               	addwf	classifyColors@a,w,c
  2489  007708  6ED9               	movwf	fsr2l,c
  2490  00770A  6ADA               	clrf	fsr2h,c
  2491  00770C  0E00               	movlw	high _colorsDetected
  2492  00770E  22DA               	addwfc	fsr2h,f,c
  2493  007710  0E42               	movlw	66
  2494  007712  D007               	goto	L1
  2495  007714                     l2727:
  2496                           
  2497                           ;./functions.c: 608:             colorsDetected[a] = 'n';
  2498  007714  0EFA               	movlw	low _colorsDetected
  2499  007716  240F               	addwf	classifyColors@a,w,c
  2500  007718  6ED9               	movwf	fsr2l,c
  2501  00771A  6ADA               	clrf	fsr2h,c
  2502  00771C  0E00               	movlw	high _colorsDetected
  2503  00771E  22DA               	addwfc	fsr2h,f,c
  2504  007720  0E6E               	movlw	110
  2505  007722                     L1:
  2506  007722  6EDF               	movwf	indf2,c
  2507                           
  2508                           ;./functions.c: 610:     }
  2509  007724  2A0F               	incf	classifyColors@a,f,c
  2510  007726  0E04               	movlw	4
  2511  007728  640F               	cpfsgt	classifyColors@a,c
  2512  00772A  D772               	goto	l2711
  2513  00772C  0012               	return	
  2514  00772E                     __end_of_classifyColors:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _capTouch *****************
  2518 ;; Defined at:
  2519 ;;		line 459 in file "./functions.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  a               1   80[COMRAM] unsigned char 
  2524 ;;  message        26   50[COMRAM] unsigned char [26]
  2525 ;;  change          2    0        int 
  2526 ;;  touch2          1   79[COMRAM] unsigned char 
  2527 ;;  touch1          1   78[COMRAM] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2537 ;;      Params:         0       0       0       0       0       0       0
  2538 ;;      Locals:        31       0       0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0
  2540 ;;      Totals:        31       0       0       0       0       0       0
  2541 ;;Total ram usage:       31 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    2
  2544 ;; This function calls:
  2545 ;;		_abs
  2546 ;;		_aveSensor
  2547 ;;		_msDelay
  2548 ;;		_trans
  2549 ;; This function is called by:
  2550 ;;		_RCE
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text16
  2555  007224                     __ptext16:
  2556                           	opt callstack 0
  2557  007224                     _capTouch:
  2558                           	opt callstack 27
  2559                           
  2560                           ;./functions.c: 461:     unsigned char message[] = "\nSanic waits for a touch\n";
  2561                           
  2562                           ;incstack = 0
  2563  007224  EE20  F080         	lfsr	2,capTouch@F6033
  2564  007228  EE10  F033         	lfsr	1,capTouch@message
  2565  00722C  0E19               	movlw	25
  2566  00722E                     u2341:
  2567  00722E  CFDB FFE3          	movff	plusw2,plusw1
  2568  007232  06E8               	decf	wreg,f,c
  2569  007234  E2FC               	bc	u2341
  2570                           
  2571                           ;./functions.c: 463:     for (unsigned char a = 0; a < 25; a++)
  2572  007236  0E00               	movlw	0
  2573  007238  6E51               	movwf	capTouch@a,c
  2574  00723A                     l3237:
  2575                           
  2576                           ;./functions.c: 464:     {;./functions.c: 465:         trans(message[a]);
  2577  00723A  0E33               	movlw	low capTouch@message
  2578  00723C  2451               	addwf	capTouch@a,w,c
  2579  00723E  6ED9               	movwf	fsr2l,c
  2580  007240  6ADA               	clrf	fsr2h,c
  2581  007242  0E00               	movlw	high capTouch@message
  2582  007244  22DA               	addwfc	fsr2h,f,c
  2583  007246  50DF               	movf	indf2,w,c
  2584  007248  EC35  F037         	call	_trans
  2585                           
  2586                           ;./functions.c: 466:     }
  2587  00724C  2A51               	incf	capTouch@a,f,c
  2588  00724E  0E18               	movlw	24
  2589  007250  6451               	cpfsgt	capTouch@a,c
  2590  007252  D7F3               	goto	l3237
  2591                           
  2592                           ;./functions.c: 469:     unsigned char touch1 = 0;
  2593  007254  0E00               	movlw	0
  2594  007256  6E4F               	movwf	capTouch@touch1,c
  2595                           
  2596                           ;./functions.c: 470:     unsigned char touch2 = 0;
  2597  007258  0E00               	movlw	0
  2598  00725A  6E50               	movwf	capTouch@touch2,c
  2599  00725C                     l3245:
  2600                           
  2601                           ;./functions.c: 473:         touch1 = aveSensor(15);
  2602  00725C  0E0F               	movlw	15
  2603  00725E  EC3D  F038         	call	_aveSensor
  2604  007262  6E4F               	movwf	capTouch@touch1,c
  2605                           
  2606                           ;./functions.c: 474:         msDelay(5);
  2607  007264  0E05               	movlw	5
  2608  007266  ECDF  F038         	call	_msDelay
  2609                           
  2610                           ;./functions.c: 475:         touch2 = aveSensor(15);
  2611  00726A  0E0F               	movlw	15
  2612  00726C  EC3D  F038         	call	_aveSensor
  2613  007270  6E50               	movwf	capTouch@touch2,c
  2614                           
  2615                           ;./functions.c: 476:         trans(touch1);
  2616  007272  504F               	movf	capTouch@touch1,w,c
  2617  007274  EC35  F037         	call	_trans
  2618                           
  2619                           ;./functions.c: 477:         trans(touch2);
  2620  007278  5050               	movf	capTouch@touch2,w,c
  2621  00727A  EC35  F037         	call	_trans
  2622                           
  2623                           ;./functions.c: 479:         if (abs(touch2 - touch1) > 0x0F){
  2624  00727E  504F               	movf	capTouch@touch1,w,c
  2625  007280  5C50               	subwf	capTouch@touch2,w,c
  2626  007282  6E01               	movwf	abs@a,c
  2627  007284  6A02               	clrf	abs@a+1,c
  2628  007286  A0D8               	btfss	status,0,c
  2629  007288  0602               	decf	abs@a+1,f,c
  2630  00728A  ECAF  F037         	call	_abs	;wreg free
  2631  00728E  BE02               	btfsc	?_abs+1,7,c
  2632  007290  D7E5               	goto	l3245
  2633  007292  5002               	movf	?_abs+1,w,c
  2634  007294  E105               	bnz	l301
  2635  007296  0E10               	movlw	16
  2636  007298  5C01               	subwf	?_abs,w,c
  2637  00729A  B0D8               	btfsc	status,0,c
  2638  00729C  0012               	return	
  2639  00729E  D7DE               	goto	l3245
  2640  0072A0                     l301:
  2641  0072A0  0012               	return		;funcret
  2642  0072A2                     __end_of_capTouch:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function _abs *****************
  2646 ;; Defined at:
  2647 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  a               2    0[COMRAM] int 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  2    0[COMRAM] int 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2661 ;;      Params:         2       0       0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0
  2663 ;;      Temps:          2       0       0       0       0       0       0
  2664 ;;      Totals:         4       0       0       0       0       0       0
  2665 ;;Total ram usage:        4 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_capTouch
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text17
  2675  006F5E                     __ptext17:
  2676                           	opt callstack 0
  2677  006F5E                     _abs:
  2678                           	opt callstack 28
  2679                           
  2680                           ;incstack = 0
  2681  006F5E  BE02               	btfsc	abs@a+1,7,c
  2682  006F60  D005               	goto	u1830
  2683  006F62  5002               	movf	abs@a+1,w,c
  2684  006F64  E110               	bnz	l1156
  2685  006F66  0401               	decf	abs@a,w,c
  2686  006F68  B0D8               	btfsc	status,0,c
  2687  006F6A  D00D               	goto	l1156
  2688  006F6C                     u1830:
  2689  006F6C  C001  F003         	movff	abs@a,??_abs
  2690  006F70  C002  F004         	movff	abs@a+1,??_abs+1
  2691  006F74  1E03               	comf	??_abs,f,c
  2692  006F76  1E04               	comf	??_abs+1,f,c
  2693  006F78  4A03               	infsnz	??_abs,f,c
  2694  006F7A  2A04               	incf	??_abs+1,f,c
  2695  006F7C  C003  F001         	movff	??_abs,?_abs
  2696  006F80  C004  F002         	movff	??_abs+1,?_abs+1
  2697  006F84  0012               	return	
  2698  006F86                     l1156:
  2699  006F86  C001  F001         	movff	abs@a,?_abs
  2700  006F8A  C002  F002         	movff	abs@a+1,?_abs+1
  2701  006F8E  0012               	return		;funcret
  2702  006F90                     __end_of_abs:
  2703                           	opt callstack 0
  2704                           
  2705 ;; *************** function _calibrate *****************
  2706 ;; Defined at:
  2707 ;;		line 137 in file "./functions.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  samples         1   60[COMRAM] unsigned char 
  2712 ;;  samples         1   59[COMRAM] unsigned char 
  2713 ;;  samples         1   58[COMRAM] unsigned char 
  2714 ;;  samples         1   57[COMRAM] unsigned char 
  2715 ;;  samples         1   56[COMRAM] unsigned char 
  2716 ;;  sensors         5   51[COMRAM] unsigned char [5]
  2717 ;;  temp            1   61[COMRAM] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2727 ;;      Params:         0       0       0       0       0       0       0
  2728 ;;      Locals:        11       0       0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0
  2730 ;;      Totals:        11       0       0       0       0       0       0
  2731 ;;Total ram usage:       11 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    3
  2734 ;; This function calls:
  2735 ;;		_aveSensor
  2736 ;;		_oneSecDelay
  2737 ;; This function is called by:
  2738 ;;		_RCE
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text18
  2743  0079F2                     __ptext18:
  2744                           	opt callstack 0
  2745  0079F2                     _calibrate:
  2746                           	opt callstack 26
  2747                           
  2748                           ;./functions.c: 139:     PORTA = 0;
  2749                           
  2750                           ;incstack = 0
  2751  0079F2  0E00               	movlw	0
  2752  0079F4  6E80               	movwf	3968,c	;volatile
  2753                           
  2754                           ;./functions.c: 140:     unsigned char sensors[5] = {12, 8, 9, 10, 13};
  2755  0079F6  EE20  F0CD         	lfsr	2,calibrate@F6006
  2756  0079FA  EE10  F034         	lfsr	1,calibrate@sensors
  2757  0079FE  0E04               	movlw	4
  2758  007A00                     u1841:
  2759  007A00  CFDB FFE3          	movff	plusw2,plusw1
  2760  007A04  06E8               	decf	wreg,f,c
  2761  007A06  E2FC               	bc	u1841
  2762                           
  2763                           ;./functions.c: 143:     PORTD = 0b11000001;
  2764  007A08  0EC1               	movlw	193
  2765  007A0A  6E83               	movwf	3971,c	;volatile
  2766                           
  2767                           ;./functions.c: 144:     oneSecDelay();
  2768  007A0C  EC4A  F037         	call	_oneSecDelay	;wreg free
  2769                           
  2770                           ;./functions.c: 145:     oneSecDelay();
  2771  007A10  EC4A  F037         	call	_oneSecDelay	;wreg free
  2772                           
  2773                           ;./functions.c: 146:     oneSecDelay();
  2774  007A14  EC4A  F037         	call	_oneSecDelay	;wreg free
  2775                           
  2776                           ;./functions.c: 147:     oneSecDelay();
  2777  007A18  EC4A  F037         	call	_oneSecDelay	;wreg free
  2778                           
  2779                           ;./functions.c: 148:     oneSecDelay();
  2780  007A1C  EC4A  F037         	call	_oneSecDelay	;wreg free
  2781                           
  2782                           ;./functions.c: 149:     oneSecDelay();
  2783  007A20  EC4A  F037         	call	_oneSecDelay	;wreg free
  2784                           
  2785                           ;./functions.c: 150:     for (unsigned char samples = 0; samples < 250; samples++)
  2786  007A24  0E00               	movlw	0
  2787  007A26  6E39               	movwf	calibrate@samples,c
  2788  007A28                     l2799:
  2789                           
  2790                           ;./functions.c: 151:     {;./functions.c: 152:         temp = aveSensor(12);
  2791  007A28  0E0C               	movlw	12
  2792  007A2A  EC3D  F038         	call	_aveSensor
  2793  007A2E  6E3E               	movwf	calibrate@temp,c
  2794                           
  2795                           ;./functions.c: 153:         if (temp >= LLranges[0])
  2796  007A30  505B               	movf	_LLranges,w,c
  2797  007A32  5C3E               	subwf	calibrate@temp,w,c
  2798  007A34  B0D8               	btfsc	status,0,c
  2799                           
  2800                           ;./functions.c: 154:         {;./functions.c: 155:             LLranges[0] = temp;
  2801  007A36  C03E  F05B         	movff	calibrate@temp,_LLranges
  2802                           
  2803                           ;./functions.c: 157:         temp = aveSensor(10);
  2804  007A3A  0E0A               	movlw	10
  2805  007A3C  EC3D  F038         	call	_aveSensor
  2806  007A40  6E3E               	movwf	calibrate@temp,c
  2807                           
  2808                           ;./functions.c: 158:         if (temp >= Lranges[0])
  2809  007A42  5056               	movf	_Lranges,w,c
  2810  007A44  5C3E               	subwf	calibrate@temp,w,c
  2811  007A46  B0D8               	btfsc	status,0,c
  2812                           
  2813                           ;./functions.c: 159:         {;./functions.c: 160:             Lranges[0] = temp;
  2814  007A48  C03E  F056         	movff	calibrate@temp,_Lranges
  2815                           
  2816                           ;./functions.c: 162:         temp = aveSensor(8);
  2817  007A4C  0E08               	movlw	8
  2818  007A4E  EC3D  F038         	call	_aveSensor
  2819  007A52  6E3E               	movwf	calibrate@temp,c
  2820                           
  2821                           ;./functions.c: 163:         if (temp >= LLranges[0])
  2822  007A54  505B               	movf	_LLranges,w,c
  2823  007A56  5C3E               	subwf	calibrate@temp,w,c
  2824  007A58  B0D8               	btfsc	status,0,c
  2825                           
  2826                           ;./functions.c: 164:         {;./functions.c: 165:             Mranges[0] = temp;
  2827  007A5A  C03E  F0E1         	movff	calibrate@temp,_Mranges
  2828                           
  2829                           ;./functions.c: 167:         temp = aveSensor(9);
  2830  007A5E  0E09               	movlw	9
  2831  007A60  EC3D  F038         	call	_aveSensor
  2832  007A64  6E3E               	movwf	calibrate@temp,c
  2833                           
  2834                           ;./functions.c: 168:         if (temp >= LLranges[0])
  2835  007A66  505B               	movf	_LLranges,w,c
  2836  007A68  5C3E               	subwf	calibrate@temp,w,c
  2837  007A6A  B0D8               	btfsc	status,0,c
  2838                           
  2839                           ;./functions.c: 169:         {;./functions.c: 170:             Rranges[0] = temp;
  2840  007A6C  C03E  F0DC         	movff	calibrate@temp,_Rranges
  2841                           
  2842                           ;./functions.c: 172:         temp = aveSensor(13);
  2843  007A70  0E0D               	movlw	13
  2844  007A72  EC3D  F038         	call	_aveSensor
  2845  007A76  6E3E               	movwf	calibrate@temp,c
  2846                           
  2847                           ;./functions.c: 173:         if (temp >= LLranges[0])
  2848  007A78  505B               	movf	_LLranges,w,c
  2849  007A7A  5C3E               	subwf	calibrate@temp,w,c
  2850  007A7C  B0D8               	btfsc	status,0,c
  2851                           
  2852                           ;./functions.c: 174:         {;./functions.c: 175:             RRranges[0] = temp;
  2853  007A7E  C03E  F0D7         	movff	calibrate@temp,_RRranges
  2854                           
  2855                           ;./functions.c: 177:     }
  2856  007A82  2A39               	incf	calibrate@samples,f,c
  2857  007A84  0EF9               	movlw	249
  2858  007A86  6439               	cpfsgt	calibrate@samples,c
  2859  007A88  D7CF               	goto	l2799
  2860                           
  2861                           ;./functions.c: 178:     PORTAbits.RA0 = 1;
  2862  007A8A  8080               	bsf	3968,0,c	;volatile
  2863                           
  2864                           ;./functions.c: 179:     PORTD = 0b10000010;
  2865  007A8C  0E82               	movlw	130
  2866  007A8E  6E83               	movwf	3971,c	;volatile
  2867                           
  2868                           ;./functions.c: 181:     oneSecDelay();
  2869  007A90  EC4A  F037         	call	_oneSecDelay	;wreg free
  2870                           
  2871                           ;./functions.c: 182:     oneSecDelay();
  2872  007A94  EC4A  F037         	call	_oneSecDelay	;wreg free
  2873                           
  2874                           ;./functions.c: 183:     oneSecDelay();
  2875  007A98  EC4A  F037         	call	_oneSecDelay	;wreg free
  2876                           
  2877                           ;./functions.c: 184:     oneSecDelay();
  2878  007A9C  EC4A  F037         	call	_oneSecDelay	;wreg free
  2879                           
  2880                           ;./functions.c: 185:     oneSecDelay();
  2881  007AA0  EC4A  F037         	call	_oneSecDelay	;wreg free
  2882                           
  2883                           ;./functions.c: 186:     oneSecDelay();
  2884  007AA4  EC4A  F037         	call	_oneSecDelay	;wreg free
  2885                           
  2886                           ;./functions.c: 187:     for (unsigned char samples = 0; samples < 250; samples++)
  2887  007AA8  0E00               	movlw	0
  2888  007AAA  6E3A               	movwf	calibrate@samples_1096,c
  2889  007AAC                     l2851:
  2890                           
  2891                           ;./functions.c: 188:     {;./functions.c: 189:         temp = aveSensor(12);
  2892  007AAC  0E0C               	movlw	12
  2893  007AAE  EC3D  F038         	call	_aveSensor
  2894  007AB2  6E3E               	movwf	calibrate@temp,c
  2895                           
  2896                           ;./functions.c: 190:         if (temp >= LLranges[1])
  2897  007AB4  505C               	movf	_LLranges+1,w,c
  2898  007AB6  5C3E               	subwf	calibrate@temp,w,c
  2899  007AB8  B0D8               	btfsc	status,0,c
  2900                           
  2901                           ;./functions.c: 191:         {;./functions.c: 192:             LLranges[1] = temp;
  2902  007ABA  C03E  F05C         	movff	calibrate@temp,_LLranges+1
  2903                           
  2904                           ;./functions.c: 194:         temp = aveSensor(10);
  2905  007ABE  0E0A               	movlw	10
  2906  007AC0  EC3D  F038         	call	_aveSensor
  2907  007AC4  6E3E               	movwf	calibrate@temp,c
  2908                           
  2909                           ;./functions.c: 195:         if (temp >= Lranges[1])
  2910  007AC6  5057               	movf	_Lranges+1,w,c
  2911  007AC8  5C3E               	subwf	calibrate@temp,w,c
  2912  007ACA  B0D8               	btfsc	status,0,c
  2913                           
  2914                           ;./functions.c: 196:         {;./functions.c: 197:             Lranges[1] = temp;
  2915  007ACC  C03E  F057         	movff	calibrate@temp,_Lranges+1
  2916                           
  2917                           ;./functions.c: 199:         temp = aveSensor(8);
  2918  007AD0  0E08               	movlw	8
  2919  007AD2  EC3D  F038         	call	_aveSensor
  2920  007AD6  6E3E               	movwf	calibrate@temp,c
  2921                           
  2922                           ;./functions.c: 200:         if (temp >= LLranges[1])
  2923  007AD8  505C               	movf	_LLranges+1,w,c
  2924  007ADA  5C3E               	subwf	calibrate@temp,w,c
  2925  007ADC  B0D8               	btfsc	status,0,c
  2926                           
  2927                           ;./functions.c: 201:         {;./functions.c: 202:             Mranges[1] = temp;
  2928  007ADE  C03E  F0E2         	movff	calibrate@temp,_Mranges+1
  2929                           
  2930                           ;./functions.c: 204:         temp = aveSensor(9);
  2931  007AE2  0E09               	movlw	9
  2932  007AE4  EC3D  F038         	call	_aveSensor
  2933  007AE8  6E3E               	movwf	calibrate@temp,c
  2934                           
  2935                           ;./functions.c: 205:         if (temp >= LLranges[1])
  2936  007AEA  505C               	movf	_LLranges+1,w,c
  2937  007AEC  5C3E               	subwf	calibrate@temp,w,c
  2938  007AEE  B0D8               	btfsc	status,0,c
  2939                           
  2940                           ;./functions.c: 206:         {;./functions.c: 207:             Rranges[1] = temp;
  2941  007AF0  C03E  F0DD         	movff	calibrate@temp,_Rranges+1
  2942                           
  2943                           ;./functions.c: 209:         temp = aveSensor(13);
  2944  007AF4  0E0D               	movlw	13
  2945  007AF6  EC3D  F038         	call	_aveSensor
  2946  007AFA  6E3E               	movwf	calibrate@temp,c
  2947                           
  2948                           ;./functions.c: 210:         if (temp >= LLranges[1])
  2949  007AFC  505C               	movf	_LLranges+1,w,c
  2950  007AFE  5C3E               	subwf	calibrate@temp,w,c
  2951  007B00  B0D8               	btfsc	status,0,c
  2952                           
  2953                           ;./functions.c: 211:         {;./functions.c: 212:             RRranges[1] = temp;
  2954  007B02  C03E  F0D8         	movff	calibrate@temp,_RRranges+1
  2955                           
  2956                           ;./functions.c: 214:     }
  2957  007B06  2A3A               	incf	calibrate@samples_1096,f,c
  2958  007B08  0EF9               	movlw	249
  2959  007B0A  643A               	cpfsgt	calibrate@samples_1096,c
  2960  007B0C  D7CF               	goto	l2851
  2961                           
  2962                           ;./functions.c: 215:     PORTAbits.RA1 = 1;
  2963  007B0E  8280               	bsf	3968,1,c	;volatile
  2964                           
  2965                           ;./functions.c: 216:     PORTD = 0b10001000;
  2966  007B10  0E88               	movlw	136
  2967  007B12  6E83               	movwf	3971,c	;volatile
  2968                           
  2969                           ;./functions.c: 218:     oneSecDelay();
  2970  007B14  EC4A  F037         	call	_oneSecDelay	;wreg free
  2971                           
  2972                           ;./functions.c: 219:     oneSecDelay();
  2973  007B18  EC4A  F037         	call	_oneSecDelay	;wreg free
  2974                           
  2975                           ;./functions.c: 220:     oneSecDelay();
  2976  007B1C  EC4A  F037         	call	_oneSecDelay	;wreg free
  2977                           
  2978                           ;./functions.c: 221:     oneSecDelay();
  2979  007B20  EC4A  F037         	call	_oneSecDelay	;wreg free
  2980                           
  2981                           ;./functions.c: 222:     oneSecDelay();
  2982  007B24  EC4A  F037         	call	_oneSecDelay	;wreg free
  2983                           
  2984                           ;./functions.c: 223:     oneSecDelay();
  2985  007B28  EC4A  F037         	call	_oneSecDelay	;wreg free
  2986                           
  2987                           ;./functions.c: 224:     for (unsigned char samples = 0; samples < 250; samples++)
  2988  007B2C  0E00               	movlw	0
  2989  007B2E  6E3B               	movwf	calibrate@samples_1097,c
  2990  007B30                     l2903:
  2991                           
  2992                           ;./functions.c: 225:     {;./functions.c: 226:         temp = aveSensor(12);
  2993  007B30  0E0C               	movlw	12
  2994  007B32  EC3D  F038         	call	_aveSensor
  2995  007B36  6E3E               	movwf	calibrate@temp,c
  2996                           
  2997                           ;./functions.c: 227:         if (temp >= LLranges[2])
  2998  007B38  505D               	movf	_LLranges+2,w,c
  2999  007B3A  5C3E               	subwf	calibrate@temp,w,c
  3000  007B3C  B0D8               	btfsc	status,0,c
  3001                           
  3002                           ;./functions.c: 228:         {;./functions.c: 229:             LLranges[2] = temp;
  3003  007B3E  C03E  F05D         	movff	calibrate@temp,_LLranges+2
  3004                           
  3005                           ;./functions.c: 231:         temp = aveSensor(10);
  3006  007B42  0E0A               	movlw	10
  3007  007B44  EC3D  F038         	call	_aveSensor
  3008  007B48  6E3E               	movwf	calibrate@temp,c
  3009                           
  3010                           ;./functions.c: 232:         if (temp >= Lranges[2])
  3011  007B4A  5058               	movf	_Lranges+2,w,c
  3012  007B4C  5C3E               	subwf	calibrate@temp,w,c
  3013  007B4E  B0D8               	btfsc	status,0,c
  3014                           
  3015                           ;./functions.c: 233:         {;./functions.c: 234:             Lranges[2] = temp;
  3016  007B50  C03E  F058         	movff	calibrate@temp,_Lranges+2
  3017                           
  3018                           ;./functions.c: 236:         temp = aveSensor(8);
  3019  007B54  0E08               	movlw	8
  3020  007B56  EC3D  F038         	call	_aveSensor
  3021  007B5A  6E3E               	movwf	calibrate@temp,c
  3022                           
  3023                           ;./functions.c: 237:         if (temp >= LLranges[2])
  3024  007B5C  505D               	movf	_LLranges+2,w,c
  3025  007B5E  5C3E               	subwf	calibrate@temp,w,c
  3026  007B60  B0D8               	btfsc	status,0,c
  3027                           
  3028                           ;./functions.c: 238:         {;./functions.c: 239:             Mranges[2] = temp;
  3029  007B62  C03E  F0E3         	movff	calibrate@temp,_Mranges+2
  3030                           
  3031                           ;./functions.c: 241:         temp = aveSensor(9);
  3032  007B66  0E09               	movlw	9
  3033  007B68  EC3D  F038         	call	_aveSensor
  3034  007B6C  6E3E               	movwf	calibrate@temp,c
  3035                           
  3036                           ;./functions.c: 242:         if (temp >= LLranges[2])
  3037  007B6E  505D               	movf	_LLranges+2,w,c
  3038  007B70  5C3E               	subwf	calibrate@temp,w,c
  3039  007B72  B0D8               	btfsc	status,0,c
  3040                           
  3041                           ;./functions.c: 243:         {;./functions.c: 244:             Rranges[2] = temp;
  3042  007B74  C03E  F0DE         	movff	calibrate@temp,_Rranges+2
  3043                           
  3044                           ;./functions.c: 246:         temp = aveSensor(13);
  3045  007B78  0E0D               	movlw	13
  3046  007B7A  EC3D  F038         	call	_aveSensor
  3047  007B7E  6E3E               	movwf	calibrate@temp,c
  3048                           
  3049                           ;./functions.c: 247:         if (temp >= LLranges[2])
  3050  007B80  505D               	movf	_LLranges+2,w,c
  3051  007B82  5C3E               	subwf	calibrate@temp,w,c
  3052  007B84  B0D8               	btfsc	status,0,c
  3053                           
  3054                           ;./functions.c: 248:         {;./functions.c: 249:             RRranges[2] = temp;
  3055  007B86  C03E  F0D9         	movff	calibrate@temp,_RRranges+2
  3056                           
  3057                           ;./functions.c: 251:     }
  3058  007B8A  2A3B               	incf	calibrate@samples_1097,f,c
  3059  007B8C  0EF9               	movlw	249
  3060  007B8E  643B               	cpfsgt	calibrate@samples_1097,c
  3061  007B90  D7CF               	goto	l2903
  3062                           
  3063                           ;./functions.c: 252:     PORTAbits.RA2 = 1;
  3064  007B92  8480               	bsf	3968,2,c	;volatile
  3065                           
  3066                           ;./functions.c: 253:     PORTD = 0b10000000;
  3067  007B94  0E80               	movlw	128
  3068  007B96  6E83               	movwf	3971,c	;volatile
  3069                           
  3070                           ;./functions.c: 255:     oneSecDelay();
  3071  007B98  EC4A  F037         	call	_oneSecDelay	;wreg free
  3072                           
  3073                           ;./functions.c: 256:     oneSecDelay();
  3074  007B9C  EC4A  F037         	call	_oneSecDelay	;wreg free
  3075                           
  3076                           ;./functions.c: 257:     oneSecDelay();
  3077  007BA0  EC4A  F037         	call	_oneSecDelay	;wreg free
  3078                           
  3079                           ;./functions.c: 258:     oneSecDelay();
  3080  007BA4  EC4A  F037         	call	_oneSecDelay	;wreg free
  3081                           
  3082                           ;./functions.c: 259:     oneSecDelay();
  3083  007BA8  EC4A  F037         	call	_oneSecDelay	;wreg free
  3084                           
  3085                           ;./functions.c: 260:     oneSecDelay();
  3086  007BAC  EC4A  F037         	call	_oneSecDelay	;wreg free
  3087                           
  3088                           ;./functions.c: 261:     for (unsigned char samples = 0; samples < 250; samples++)
  3089  007BB0  0E00               	movlw	0
  3090  007BB2  6E3C               	movwf	calibrate@samples_1098,c
  3091  007BB4                     l2955:
  3092                           
  3093                           ;./functions.c: 262:     {;./functions.c: 263:         temp = aveSensor(12);
  3094  007BB4  0E0C               	movlw	12
  3095  007BB6  EC3D  F038         	call	_aveSensor
  3096  007BBA  6E3E               	movwf	calibrate@temp,c
  3097                           
  3098                           ;./functions.c: 264:         if (temp >= LLranges[3])
  3099  007BBC  505E               	movf	_LLranges+3,w,c
  3100  007BBE  5C3E               	subwf	calibrate@temp,w,c
  3101  007BC0  B0D8               	btfsc	status,0,c
  3102                           
  3103                           ;./functions.c: 265:         {;./functions.c: 266:             LLranges[3] = temp;
  3104  007BC2  C03E  F05E         	movff	calibrate@temp,_LLranges+3
  3105                           
  3106                           ;./functions.c: 268:         temp = aveSensor(10);
  3107  007BC6  0E0A               	movlw	10
  3108  007BC8  EC3D  F038         	call	_aveSensor
  3109  007BCC  6E3E               	movwf	calibrate@temp,c
  3110                           
  3111                           ;./functions.c: 269:         if (temp >= Lranges[3])
  3112  007BCE  5059               	movf	_Lranges+3,w,c
  3113  007BD0  5C3E               	subwf	calibrate@temp,w,c
  3114  007BD2  B0D8               	btfsc	status,0,c
  3115                           
  3116                           ;./functions.c: 270:         {;./functions.c: 271:             Lranges[3] = temp;
  3117  007BD4  C03E  F059         	movff	calibrate@temp,_Lranges+3
  3118                           
  3119                           ;./functions.c: 273:         temp = aveSensor(8);
  3120  007BD8  0E08               	movlw	8
  3121  007BDA  EC3D  F038         	call	_aveSensor
  3122  007BDE  6E3E               	movwf	calibrate@temp,c
  3123                           
  3124                           ;./functions.c: 274:         if (temp >= LLranges[3])
  3125  007BE0  505E               	movf	_LLranges+3,w,c
  3126  007BE2  5C3E               	subwf	calibrate@temp,w,c
  3127  007BE4  B0D8               	btfsc	status,0,c
  3128                           
  3129                           ;./functions.c: 275:         {;./functions.c: 276:             Mranges[3] = temp;
  3130  007BE6  C03E  F0E4         	movff	calibrate@temp,_Mranges+3
  3131                           
  3132                           ;./functions.c: 278:         temp = aveSensor(9);
  3133  007BEA  0E09               	movlw	9
  3134  007BEC  EC3D  F038         	call	_aveSensor
  3135  007BF0  6E3E               	movwf	calibrate@temp,c
  3136                           
  3137                           ;./functions.c: 279:         if (temp >= LLranges[3])
  3138  007BF2  505E               	movf	_LLranges+3,w,c
  3139  007BF4  5C3E               	subwf	calibrate@temp,w,c
  3140  007BF6  B0D8               	btfsc	status,0,c
  3141                           
  3142                           ;./functions.c: 280:         {;./functions.c: 281:             Rranges[3] = temp;
  3143  007BF8  C03E  F0DF         	movff	calibrate@temp,_Rranges+3
  3144                           
  3145                           ;./functions.c: 283:         temp = aveSensor(13);
  3146  007BFC  0E0D               	movlw	13
  3147  007BFE  EC3D  F038         	call	_aveSensor
  3148  007C02  6E3E               	movwf	calibrate@temp,c
  3149                           
  3150                           ;./functions.c: 284:         if (temp >= LLranges[3])
  3151  007C04  505E               	movf	_LLranges+3,w,c
  3152  007C06  5C3E               	subwf	calibrate@temp,w,c
  3153  007C08  B0D8               	btfsc	status,0,c
  3154                           
  3155                           ;./functions.c: 285:         {;./functions.c: 286:             RRranges[3] = temp;
  3156  007C0A  C03E  F0DA         	movff	calibrate@temp,_RRranges+3
  3157                           
  3158                           ;./functions.c: 288:     }
  3159  007C0E  2A3C               	incf	calibrate@samples_1098,f,c
  3160  007C10  0EF9               	movlw	249
  3161  007C12  643C               	cpfsgt	calibrate@samples_1098,c
  3162  007C14  D7CF               	goto	l2955
  3163                           
  3164                           ;./functions.c: 289:     PORTAbits.RA3 = 1;
  3165  007C16  8680               	bsf	3968,3,c	;volatile
  3166                           
  3167                           ;./functions.c: 290:     PORTD = 0b11001000;
  3168  007C18  0EC8               	movlw	200
  3169  007C1A  6E83               	movwf	3971,c	;volatile
  3170                           
  3171                           ;./functions.c: 292:     oneSecDelay();
  3172  007C1C  EC4A  F037         	call	_oneSecDelay	;wreg free
  3173                           
  3174                           ;./functions.c: 293:     oneSecDelay();
  3175  007C20  EC4A  F037         	call	_oneSecDelay	;wreg free
  3176                           
  3177                           ;./functions.c: 294:     oneSecDelay();
  3178  007C24  EC4A  F037         	call	_oneSecDelay	;wreg free
  3179                           
  3180                           ;./functions.c: 295:     oneSecDelay();
  3181  007C28  EC4A  F037         	call	_oneSecDelay	;wreg free
  3182                           
  3183                           ;./functions.c: 296:     oneSecDelay();
  3184  007C2C  EC4A  F037         	call	_oneSecDelay	;wreg free
  3185                           
  3186                           ;./functions.c: 297:     oneSecDelay();
  3187  007C30  EC4A  F037         	call	_oneSecDelay	;wreg free
  3188                           
  3189                           ;./functions.c: 298:     for (unsigned char samples = 0; samples < 250; samples++)
  3190  007C34  0E00               	movlw	0
  3191  007C36  6E3D               	movwf	calibrate@samples_1099,c
  3192  007C38                     l3007:
  3193                           
  3194                           ;./functions.c: 299:     {;./functions.c: 300:         temp = aveSensor(12);
  3195  007C38  0E0C               	movlw	12
  3196  007C3A  EC3D  F038         	call	_aveSensor
  3197  007C3E  6E3E               	movwf	calibrate@temp,c
  3198                           
  3199                           ;./functions.c: 301:         if (temp >= LLranges[4])
  3200  007C40  505F               	movf	_LLranges+4,w,c
  3201  007C42  5C3E               	subwf	calibrate@temp,w,c
  3202  007C44  B0D8               	btfsc	status,0,c
  3203                           
  3204                           ;./functions.c: 302:         {;./functions.c: 303:             LLranges[4] = temp;
  3205  007C46  C03E  F05F         	movff	calibrate@temp,_LLranges+4
  3206                           
  3207                           ;./functions.c: 305:         temp = aveSensor(10);
  3208  007C4A  0E0A               	movlw	10
  3209  007C4C  EC3D  F038         	call	_aveSensor
  3210  007C50  6E3E               	movwf	calibrate@temp,c
  3211                           
  3212                           ;./functions.c: 306:         if (temp >= Lranges[4])
  3213  007C52  505A               	movf	_Lranges+4,w,c
  3214  007C54  5C3E               	subwf	calibrate@temp,w,c
  3215  007C56  B0D8               	btfsc	status,0,c
  3216                           
  3217                           ;./functions.c: 307:         {;./functions.c: 308:             Lranges[4] = temp;
  3218  007C58  C03E  F05A         	movff	calibrate@temp,_Lranges+4
  3219                           
  3220                           ;./functions.c: 310:         temp = aveSensor(8);
  3221  007C5C  0E08               	movlw	8
  3222  007C5E  EC3D  F038         	call	_aveSensor
  3223  007C62  6E3E               	movwf	calibrate@temp,c
  3224                           
  3225                           ;./functions.c: 311:         if (temp >= LLranges[4])
  3226  007C64  505F               	movf	_LLranges+4,w,c
  3227  007C66  5C3E               	subwf	calibrate@temp,w,c
  3228  007C68  B0D8               	btfsc	status,0,c
  3229                           
  3230                           ;./functions.c: 312:         {;./functions.c: 313:             Mranges[4] = temp;
  3231  007C6A  C03E  F0E5         	movff	calibrate@temp,_Mranges+4
  3232                           
  3233                           ;./functions.c: 315:         temp = aveSensor(9);
  3234  007C6E  0E09               	movlw	9
  3235  007C70  EC3D  F038         	call	_aveSensor
  3236  007C74  6E3E               	movwf	calibrate@temp,c
  3237                           
  3238                           ;./functions.c: 316:         if (temp >= LLranges[4])
  3239  007C76  505F               	movf	_LLranges+4,w,c
  3240  007C78  5C3E               	subwf	calibrate@temp,w,c
  3241  007C7A  B0D8               	btfsc	status,0,c
  3242                           
  3243                           ;./functions.c: 317:         {;./functions.c: 318:             Rranges[4] = temp;
  3244  007C7C  C03E  F0E0         	movff	calibrate@temp,_Rranges+4
  3245                           
  3246                           ;./functions.c: 320:         temp = aveSensor(13);
  3247  007C80  0E0D               	movlw	13
  3248  007C82  EC3D  F038         	call	_aveSensor
  3249  007C86  6E3E               	movwf	calibrate@temp,c
  3250                           
  3251                           ;./functions.c: 321:         if (temp >= LLranges[4])
  3252  007C88  505F               	movf	_LLranges+4,w,c
  3253  007C8A  5C3E               	subwf	calibrate@temp,w,c
  3254  007C8C  B0D8               	btfsc	status,0,c
  3255                           
  3256                           ;./functions.c: 322:         {;./functions.c: 323:             RRranges[4] = temp;
  3257  007C8E  C03E  F0DB         	movff	calibrate@temp,_RRranges+4
  3258                           
  3259                           ;./functions.c: 325:     }
  3260  007C92  2A3D               	incf	calibrate@samples_1099,f,c
  3261  007C94  0EF9               	movlw	249
  3262  007C96  643D               	cpfsgt	calibrate@samples_1099,c
  3263  007C98  D7CF               	goto	l3007
  3264                           
  3265                           ;./functions.c: 326:     PORTAbits.RA4 = 1;
  3266  007C9A  8880               	bsf	3968,4,c	;volatile
  3267                           
  3268                           ;./functions.c: 327:     oneSecDelay();
  3269  007C9C  EC4A  F037         	call	_oneSecDelay	;wreg free
  3270                           
  3271                           ;./functions.c: 328:     oneSecDelay();
  3272  007CA0  EC4A  F037         	call	_oneSecDelay	;wreg free
  3273                           
  3274                           ;./functions.c: 329:     oneSecDelay();
  3275  007CA4  EC4A  F037         	call	_oneSecDelay	;wreg free
  3276                           
  3277                           ;./functions.c: 331:     PORTA = 0;
  3278  007CA8  0E00               	movlw	0
  3279  007CAA  6E80               	movwf	3968,c	;volatile
  3280  007CAC  0012               	return		;funcret
  3281  007CAE                     __end_of_calibrate:
  3282                           	opt callstack 0
  3283                           
  3284 ;; *************** function _oneSecDelay *****************
  3285 ;; Defined at:
  3286 ;;		line 819 in file "./functions.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  a               1   50[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3300 ;;      Params:         0       0       0       0       0       0       0
  3301 ;;      Locals:         1       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0
  3303 ;;      Totals:         1       0       0       0       0       0       0
  3304 ;;Total ram usage:        1 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    2
  3307 ;; This function calls:
  3308 ;;		_msDelay
  3309 ;; This function is called by:
  3310 ;;		_calibrate
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text19
  3315  006E94                     __ptext19:
  3316                           	opt callstack 0
  3317  006E94                     _oneSecDelay:
  3318                           	opt callstack 26
  3319                           
  3320                           ;./functions.c: 821:     for (unsigned char a = 0; a < 15; a++)
  3321                           
  3322                           ;incstack = 0
  3323  006E94  0E00               	movlw	0
  3324  006E96  6E33               	movwf	oneSecDelay@a,c
  3325  006E98                     l2647:
  3326                           
  3327                           ;./functions.c: 822:     {;./functions.c: 823:         msDelay(63);
  3328  006E98  0E3F               	movlw	63
  3329  006E9A  ECDF  F038         	call	_msDelay
  3330                           
  3331                           ;./functions.c: 824:     }
  3332  006E9E  2A33               	incf	oneSecDelay@a,f,c
  3333  006EA0  0E0E               	movlw	14
  3334  006EA2  6433               	cpfsgt	oneSecDelay@a,c
  3335  006EA4  D7F9               	goto	l2647
  3336  006EA6  0012               	return	
  3337  006EA8                     __end_of_oneSecDelay:
  3338                           	opt callstack 0
  3339                           
  3340 ;; *************** function _msDelay *****************
  3341 ;; Defined at:
  3342 ;;		line 829 in file "./functions.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  delayInMs       1    wreg     unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  delayInMs       1   49[COMRAM] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3356 ;;      Params:         0       0       0       0       0       0       0
  3357 ;;      Locals:         1       0       0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0
  3359 ;;      Totals:         1       0       0       0       0       0       0
  3360 ;;Total ram usage:        1 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    1
  3363 ;; This function calls:
  3364 ;;		___flmul
  3365 ;;		___fltol
  3366 ;;		___xxtofl
  3367 ;; This function is called by:
  3368 ;;		_pyCal
  3369 ;;		_capTouch
  3370 ;;		_oneSecDelay
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text20
  3375  0071BE                     __ptext20:
  3376                           	opt callstack 0
  3377  0071BE                     _msDelay:
  3378                           	opt callstack 27
  3379                           
  3380                           ;incstack = 0
  3381                           ;msDelay@delayInMs stored from wreg
  3382  0071BE  6E32               	movwf	msDelay@delayInMs,c
  3383                           
  3384                           ;./functions.c: 829: void msDelay(unsigned char delayInMs);./functions.c: 830: {;./funct
      +                          ions.c: 831:     TMR6 = 0;
  3385  0071C0  0E00               	movlw	0
  3386  0071C2  010F               	movlb	15	; () banked
  3387  0071C4  6F4C               	movwf	76,b	;volatile
  3388                           
  3389                           ; BSR set to: 15
  3390                           ;./functions.c: 832:     PR6 = 3.90625 * delayInMs;
  3391  0071C6  0E00               	movlw	0
  3392  0071C8  6E13               	movwf	___flmul@a,c
  3393  0071CA  0E00               	movlw	0
  3394  0071CC  6E14               	movwf	___flmul@a+1,c
  3395  0071CE  0E7A               	movlw	122
  3396  0071D0  6E15               	movwf	___flmul@a+2,c
  3397  0071D2  0E40               	movlw	64
  3398  0071D4  6E16               	movwf	___flmul@a+3,c
  3399  0071D6  5032               	movf	msDelay@delayInMs,w,c
  3400  0071D8  6E01               	movwf	___xxtofl@val,c
  3401  0071DA  6A02               	clrf	___xxtofl@val+1,c
  3402  0071DC  6A03               	clrf	___xxtofl@val+2,c
  3403  0071DE  6A04               	clrf	___xxtofl@val+3,c
  3404  0071E0  0E01               	movlw	1
  3405  0071E2  EC97  F03B         	call	___xxtofl
  3406  0071E6  C001  F00F         	movff	?___xxtofl,___flmul@b
  3407  0071EA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3408  0071EE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3409  0071F2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3410  0071F6  EC57  F03E         	call	___flmul	;wreg free
  3411  0071FA  C00F  F028         	movff	?___flmul,___fltol@f1
  3412  0071FE  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3413  007202  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3414  007206  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3415  00720A  EC1A  F03A         	call	___fltol	;wreg free
  3416  00720E  5028               	movf	?___fltol,w,c
  3417  007210  010F               	movlb	15	; () banked
  3418  007212  6F4B               	movwf	75,b	;volatile
  3419                           
  3420                           ; BSR set to: 15
  3421                           ;./functions.c: 833:     T6CON = 0xFF;
  3422  007214  694A               	setf	74,b	;volatile
  3423  007216                     l431:
  3424  007216  A47E               	btfss	3966,2,c	;volatile
  3425  007218  D7FE               	goto	l431
  3426                           
  3427                           ;./functions.c: 836:     PIR5bits.TMR6IF = 0;
  3428  00721A  947E               	bcf	3966,2,c	;volatile
  3429                           
  3430                           ;./functions.c: 837:     T6CON = 0;
  3431  00721C  0E00               	movlw	0
  3432  00721E  010F               	movlb	15	; () banked
  3433  007220  6F4A               	movwf	74,b	;volatile
  3434                           
  3435                           ; BSR set to: 15
  3436  007222  0012               	return		;funcret
  3437  007224                     __end_of_msDelay:
  3438                           	opt callstack 0
  3439                           
  3440 ;; *************** function ___xxtofl *****************
  3441 ;; Defined at:
  3442 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  sign            1    wreg     unsigned char 
  3445 ;;  val             4    0[COMRAM] long 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  sign            1    8[COMRAM] unsigned char 
  3448 ;;  arg             4   10[COMRAM] unsigned long 
  3449 ;;  exp             1    9[COMRAM] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  4    0[COMRAM] unsigned char 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3459 ;;      Params:         4       0       0       0       0       0       0
  3460 ;;      Locals:         6       0       0       0       0       0       0
  3461 ;;      Temps:          4       0       0       0       0       0       0
  3462 ;;      Totals:        14       0       0       0       0       0       0
  3463 ;;Total ram usage:       14 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_msDelay
  3469 ;;		_timer6Setup
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text21
  3474  00772E                     __ptext21:
  3475                           	opt callstack 0
  3476  00772E                     ___xxtofl:
  3477                           	opt callstack 27
  3478                           
  3479                           ; BSR set to: 15
  3480                           ;incstack = 0
  3481                           ;___xxtofl@sign stored from wreg
  3482  00772E  6E09               	movwf	___xxtofl@sign,c
  3483  007730  5009               	movf	___xxtofl@sign,w,c
  3484  007732  A4D8               	btfss	status,2,c
  3485  007734  AE04               	btfss	___xxtofl@val+3,7,c
  3486  007736  D01A               	goto	l1136
  3487  007738  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3488  00773C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3489  007740  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3490  007744  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3491  007748  1E05               	comf	??___xxtofl,f,c
  3492  00774A  1E06               	comf	??___xxtofl+1,f,c
  3493  00774C  1E07               	comf	??___xxtofl+2,f,c
  3494  00774E  1E08               	comf	??___xxtofl+3,f,c
  3495  007750  2A05               	incf	??___xxtofl,f,c
  3496  007752  0E00               	movlw	0
  3497  007754  2206               	addwfc	??___xxtofl+1,f,c
  3498  007756  2207               	addwfc	??___xxtofl+2,f,c
  3499  007758  2208               	addwfc	??___xxtofl+3,f,c
  3500  00775A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3501  00775E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3502  007762  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3503  007766  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3504  00776A  D008               	goto	l2535
  3505  00776C                     l1136:
  3506  00776C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3507  007770  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3508  007774  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3509  007778  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3510  00777C                     l2535:
  3511  00777C  5001               	movf	___xxtofl@val,w,c
  3512  00777E  1002               	iorwf	___xxtofl@val+1,w,c
  3513  007780  1003               	iorwf	___xxtofl@val+2,w,c
  3514  007782  1004               	iorwf	___xxtofl@val+3,w,c
  3515  007784  A4D8               	btfss	status,2,c
  3516  007786  D009               	goto	l2541
  3517  007788  0E00               	movlw	0
  3518  00778A  6E01               	movwf	?___xxtofl,c
  3519  00778C  0E00               	movlw	0
  3520  00778E  6E02               	movwf	?___xxtofl+1,c
  3521  007790  0E00               	movlw	0
  3522  007792  6E03               	movwf	?___xxtofl+2,c
  3523  007794  0E00               	movlw	0
  3524  007796  6E04               	movwf	?___xxtofl+3,c
  3525  007798  0012               	return	
  3526  00779A                     l2541:
  3527  00779A  0E96               	movlw	150
  3528  00779C  6E0A               	movwf	___xxtofl@exp,c
  3529  00779E  D006               	goto	l2545
  3530  0077A0                     l2543:
  3531  0077A0  2A0A               	incf	___xxtofl@exp,f,c
  3532  0077A2  90D8               	bcf	status,0,c
  3533  0077A4  320E               	rrcf	___xxtofl@arg+3,f,c
  3534  0077A6  320D               	rrcf	___xxtofl@arg+2,f,c
  3535  0077A8  320C               	rrcf	___xxtofl@arg+1,f,c
  3536  0077AA  320B               	rrcf	___xxtofl@arg,f,c
  3537  0077AC                     l2545:
  3538  0077AC  0E00               	movlw	0
  3539  0077AE  140B               	andwf	___xxtofl@arg,w,c
  3540  0077B0  6E05               	movwf	??___xxtofl& (0+255),c
  3541  0077B2  0E00               	movlw	0
  3542  0077B4  140C               	andwf	___xxtofl@arg+1,w,c
  3543  0077B6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3544  0077B8  0E00               	movlw	0
  3545  0077BA  140D               	andwf	___xxtofl@arg+2,w,c
  3546  0077BC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3547  0077BE  0EFE               	movlw	254
  3548  0077C0  140E               	andwf	___xxtofl@arg+3,w,c
  3549  0077C2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3550  0077C4  5005               	movf	??___xxtofl,w,c
  3551  0077C6  1006               	iorwf	??___xxtofl+1,w,c
  3552  0077C8  1007               	iorwf	??___xxtofl+2,w,c
  3553  0077CA  1008               	iorwf	??___xxtofl+3,w,c
  3554  0077CC  B4D8               	btfsc	status,2,c
  3555  0077CE  D00D               	goto	l1143
  3556  0077D0  D7E7               	goto	l2543
  3557  0077D2                     l2547:
  3558  0077D2  2A0A               	incf	___xxtofl@exp,f,c
  3559  0077D4  0E01               	movlw	1
  3560  0077D6  260B               	addwf	___xxtofl@arg,f,c
  3561  0077D8  0E00               	movlw	0
  3562  0077DA  220C               	addwfc	___xxtofl@arg+1,f,c
  3563  0077DC  220D               	addwfc	___xxtofl@arg+2,f,c
  3564  0077DE  220E               	addwfc	___xxtofl@arg+3,f,c
  3565  0077E0  90D8               	bcf	status,0,c
  3566  0077E2  320E               	rrcf	___xxtofl@arg+3,f,c
  3567  0077E4  320D               	rrcf	___xxtofl@arg+2,f,c
  3568  0077E6  320C               	rrcf	___xxtofl@arg+1,f,c
  3569  0077E8  320B               	rrcf	___xxtofl@arg,f,c
  3570  0077EA                     l1143:
  3571  0077EA  0E00               	movlw	0
  3572  0077EC  140B               	andwf	___xxtofl@arg,w,c
  3573  0077EE  6E05               	movwf	??___xxtofl& (0+255),c
  3574  0077F0  0E00               	movlw	0
  3575  0077F2  140C               	andwf	___xxtofl@arg+1,w,c
  3576  0077F4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3577  0077F6  0E00               	movlw	0
  3578  0077F8  140D               	andwf	___xxtofl@arg+2,w,c
  3579  0077FA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3580  0077FC  0EFF               	movlw	255
  3581  0077FE  140E               	andwf	___xxtofl@arg+3,w,c
  3582  007800  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3583  007802  5005               	movf	??___xxtofl,w,c
  3584  007804  1006               	iorwf	??___xxtofl+1,w,c
  3585  007806  1007               	iorwf	??___xxtofl+2,w,c
  3586  007808  1008               	iorwf	??___xxtofl+3,w,c
  3587  00780A  B4D8               	btfsc	status,2,c
  3588  00780C  D007               	goto	l2555
  3589  00780E  D7E1               	goto	l2547
  3590  007810                     l2553:
  3591  007810  060A               	decf	___xxtofl@exp,f,c
  3592  007812  90D8               	bcf	status,0,c
  3593  007814  360B               	rlcf	___xxtofl@arg,f,c
  3594  007816  360C               	rlcf	___xxtofl@arg+1,f,c
  3595  007818  360D               	rlcf	___xxtofl@arg+2,f,c
  3596  00781A  360E               	rlcf	___xxtofl@arg+3,f,c
  3597  00781C                     l2555:
  3598  00781C  BE0D               	btfsc	___xxtofl@arg+2,7,c
  3599  00781E  D003               	goto	u1610
  3600  007820  0E02               	movlw	2
  3601  007822  600A               	cpfslt	___xxtofl@exp,c
  3602  007824  D7F5               	goto	l2553
  3603  007826                     u1610:
  3604  007826  A00A               	btfss	___xxtofl@exp,0,c
  3605  007828  9E0D               	bcf	___xxtofl@arg+2,7,c
  3606  00782A  90D8               	bcf	status,0,c
  3607  00782C  320A               	rrcf	___xxtofl@exp,f,c
  3608  00782E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3609  007832  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  3610  007834  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  3611  007836  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  3612  007838  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3613  00783C  6A07               	clrf	??___xxtofl+2,c
  3614  00783E  6A06               	clrf	??___xxtofl+1,c
  3615  007840  6A05               	clrf	??___xxtofl,c
  3616  007842  5005               	movf	??___xxtofl,w,c
  3617  007844  120B               	iorwf	___xxtofl@arg,f,c
  3618  007846  5006               	movf	??___xxtofl+1,w,c
  3619  007848  120C               	iorwf	___xxtofl@arg+1,f,c
  3620  00784A  5007               	movf	??___xxtofl+2,w,c
  3621  00784C  120D               	iorwf	___xxtofl@arg+2,f,c
  3622  00784E  5008               	movf	??___xxtofl+3,w,c
  3623  007850  120E               	iorwf	___xxtofl@arg+3,f,c
  3624  007852  5009               	movf	___xxtofl@sign,w,c
  3625  007854  A4D8               	btfss	status,2,c
  3626  007856  AE04               	btfss	___xxtofl@val+3,7,c
  3627  007858  D001               	goto	l2571
  3628  00785A  8E0E               	bsf	___xxtofl@arg+3,7,c
  3629  00785C                     l2571:
  3630  00785C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3631  007860  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3632  007864  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3633  007868  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3634  00786C  0012               	return		;funcret
  3635  00786E                     __end_of___xxtofl:
  3636                           	opt callstack 0
  3637                           
  3638 ;; *************** function ___fltol *****************
  3639 ;; Defined at:
  3640 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  f1              4   39[COMRAM] unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  exp1            1   48[COMRAM] unsigned char 
  3645 ;;  sign1           1   47[COMRAM] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  4   39[COMRAM] long 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3655 ;;      Params:         4       0       0       0       0       0       0
  3656 ;;      Locals:         2       0       0       0       0       0       0
  3657 ;;      Temps:          4       0       0       0       0       0       0
  3658 ;;      Totals:        10       0       0       0       0       0       0
  3659 ;;Total ram usage:       10 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_msDelay
  3665 ;;		_timer6Setup
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text22
  3670  007434                     __ptext22:
  3671                           	opt callstack 0
  3672  007434                     ___fltol:
  3673                           	opt callstack 27
  3674                           
  3675                           ;incstack = 0
  3676  007434  342A               	rlcf	___fltol@f1+2,w,c
  3677  007436  342B               	rlcf	___fltol@f1+3,w,c
  3678  007438  6E31               	movwf	___fltol@exp1,c
  3679  00743A  5031               	movf	___fltol@exp1,w,c
  3680  00743C  A4D8               	btfss	status,2,c
  3681  00743E  D009               	goto	l2491
  3682  007440                     u1480:
  3683  007440  0E00               	movlw	0
  3684  007442  6E28               	movwf	?___fltol,c
  3685  007444  0E00               	movlw	0
  3686  007446  6E29               	movwf	?___fltol+1,c
  3687  007448  0E00               	movlw	0
  3688  00744A  6E2A               	movwf	?___fltol+2,c
  3689  00744C  0E00               	movlw	0
  3690  00744E  6E2B               	movwf	?___fltol+3,c
  3691  007450  0012               	return	
  3692  007452                     l2491:
  3693  007452  C028  F02C         	movff	___fltol@f1,??___fltol
  3694  007456  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3695  00745A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3696  00745E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3697  007462  0E20               	movlw	32
  3698  007464  D005               	goto	u1490
  3699  007466                     u1495:
  3700  007466  90D8               	bcf	status,0,c
  3701  007468  322F               	rrcf	??___fltol+3,f,c
  3702  00746A  322E               	rrcf	??___fltol+2,f,c
  3703  00746C  322D               	rrcf	??___fltol+1,f,c
  3704  00746E  322C               	rrcf	??___fltol,f,c
  3705  007470                     u1490:
  3706  007470  2EE8               	decfsz	wreg,f,c
  3707  007472  D7F9               	goto	u1495
  3708  007474  502C               	movf	??___fltol,w,c
  3709  007476  6E30               	movwf	___fltol@sign1,c
  3710  007478  8E2A               	bsf	___fltol@f1+2,7,c
  3711  00747A  0EFF               	movlw	255
  3712  00747C  1628               	andwf	___fltol@f1,f,c
  3713  00747E  0EFF               	movlw	255
  3714  007480  1629               	andwf	___fltol@f1+1,f,c
  3715  007482  0EFF               	movlw	255
  3716  007484  162A               	andwf	___fltol@f1+2,f,c
  3717  007486  0E00               	movlw	0
  3718  007488  162B               	andwf	___fltol@f1+3,f,c
  3719  00748A  0E96               	movlw	150
  3720  00748C  5E31               	subwf	___fltol@exp1,f,c
  3721  00748E  AE31               	btfss	___fltol@exp1,7,c
  3722  007490  D00D               	goto	l2511
  3723  007492  5031               	movf	___fltol@exp1,w,c
  3724  007494  0A80               	xorlw	128
  3725  007496  0F97               	addlw	151
  3726  007498  A0D8               	btfss	status,0,c
  3727  00749A  D7D2               	goto	u1480
  3728  00749C                     l2507:
  3729  00749C  90D8               	bcf	status,0,c
  3730  00749E  322B               	rrcf	___fltol@f1+3,f,c
  3731  0074A0  322A               	rrcf	___fltol@f1+2,f,c
  3732  0074A2  3229               	rrcf	___fltol@f1+1,f,c
  3733  0074A4  3228               	rrcf	___fltol@f1,f,c
  3734  0074A6  3E31               	incfsz	___fltol@exp1,f,c
  3735  0074A8  D7F9               	goto	l2507
  3736  0074AA  D00D               	goto	u1530
  3737  0074AC                     l2511:
  3738  0074AC  0E1F               	movlw	31
  3739  0074AE  6431               	cpfsgt	___fltol@exp1,c
  3740  0074B0  D007               	goto	l2519
  3741  0074B2  D7C6               	goto	u1480
  3742  0074B4                     l2517:
  3743  0074B4  90D8               	bcf	status,0,c
  3744  0074B6  3628               	rlcf	___fltol@f1,f,c
  3745  0074B8  3629               	rlcf	___fltol@f1+1,f,c
  3746  0074BA  362A               	rlcf	___fltol@f1+2,f,c
  3747  0074BC  362B               	rlcf	___fltol@f1+3,f,c
  3748  0074BE  0631               	decf	___fltol@exp1,f,c
  3749  0074C0                     l2519:
  3750  0074C0  5031               	movf	___fltol@exp1,w,c
  3751  0074C2  A4D8               	btfss	status,2,c
  3752  0074C4  D7F7               	goto	l2517
  3753  0074C6                     u1530:
  3754  0074C6  5030               	movf	___fltol@sign1,w,c
  3755  0074C8  B4D8               	btfsc	status,2,c
  3756  0074CA  D008               	goto	l2525
  3757  0074CC  1E2B               	comf	___fltol@f1+3,f,c
  3758  0074CE  1E2A               	comf	___fltol@f1+2,f,c
  3759  0074D0  1E29               	comf	___fltol@f1+1,f,c
  3760  0074D2  6C28               	negf	___fltol@f1,c
  3761  0074D4  0E00               	movlw	0
  3762  0074D6  2229               	addwfc	___fltol@f1+1,f,c
  3763  0074D8  222A               	addwfc	___fltol@f1+2,f,c
  3764  0074DA  222B               	addwfc	___fltol@f1+3,f,c
  3765  0074DC                     l2525:
  3766  0074DC  C028  F028         	movff	___fltol@f1,?___fltol
  3767  0074E0  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3768  0074E4  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3769  0074E8  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3770  0074EC  0012               	return		;funcret
  3771  0074EE                     __end_of___fltol:
  3772                           	opt callstack 0
  3773                           
  3774 ;; *************** function ___flmul *****************
  3775 ;; Defined at:
  3776 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  b               4   14[COMRAM] long 
  3779 ;;  a               4   18[COMRAM] long 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  prod            4   33[COMRAM] struct .
  3782 ;;  grs             4   27[COMRAM] unsigned long 
  3783 ;;  temp            2   37[COMRAM] struct .
  3784 ;;  bexp            1   32[COMRAM] unsigned char 
  3785 ;;  aexp            1   31[COMRAM] unsigned char 
  3786 ;;  sign            1   26[COMRAM] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  4   14[COMRAM] unsigned char 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0, prodl, prodh
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3796 ;;      Params:         8       0       0       0       0       0       0
  3797 ;;      Locals:        13       0       0       0       0       0       0
  3798 ;;      Temps:          4       0       0       0       0       0       0
  3799 ;;      Totals:        25       0       0       0       0       0       0
  3800 ;;Total ram usage:       25 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_msDelay
  3806 ;;		_timer6Setup
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text23
  3811  007CAE                     __ptext23:
  3812                           	opt callstack 0
  3813  007CAE                     ___flmul:
  3814                           	opt callstack 27
  3815                           
  3816                           ;incstack = 0
  3817  007CAE  5012               	movf	___flmul@b+3,w,c
  3818  007CB0  0B80               	andlw	128
  3819  007CB2  6E1B               	movwf	___flmul@sign,c
  3820  007CB4  5012               	movf	___flmul@b+3,w,c
  3821  007CB6  2412               	addwf	___flmul@b+3,w,c
  3822  007CB8  6E21               	movwf	___flmul@bexp,c
  3823  007CBA  BE11               	btfsc	___flmul@b+2,7,c
  3824  007CBC  8021               	bsf	___flmul@bexp,0,c
  3825  007CBE  5021               	movf	___flmul@bexp,w,c
  3826  007CC0  B4D8               	btfsc	status,2,c
  3827  007CC2  D00D               	goto	l2369
  3828  007CC4  2821               	incf	___flmul@bexp,w,c
  3829  007CC6  A4D8               	btfss	status,2,c
  3830  007CC8  D008               	goto	l2367
  3831  007CCA  0E00               	movlw	0
  3832  007CCC  6E0F               	movwf	___flmul@b,c
  3833  007CCE  0E00               	movlw	0
  3834  007CD0  6E10               	movwf	___flmul@b+1,c
  3835  007CD2  0E00               	movlw	0
  3836  007CD4  6E11               	movwf	___flmul@b+2,c
  3837  007CD6  0E00               	movlw	0
  3838  007CD8  6E12               	movwf	___flmul@b+3,c
  3839  007CDA                     l2367:
  3840  007CDA  8E11               	bsf	___flmul@b+2,7,c
  3841  007CDC  D008               	goto	l2371
  3842  007CDE                     l2369:
  3843  007CDE  0E00               	movlw	0
  3844  007CE0  6E0F               	movwf	___flmul@b,c
  3845  007CE2  0E00               	movlw	0
  3846  007CE4  6E10               	movwf	___flmul@b+1,c
  3847  007CE6  0E00               	movlw	0
  3848  007CE8  6E11               	movwf	___flmul@b+2,c
  3849  007CEA  0E00               	movlw	0
  3850  007CEC  6E12               	movwf	___flmul@b+3,c
  3851  007CEE                     l2371:
  3852  007CEE  5016               	movf	___flmul@a+3,w,c
  3853  007CF0  0B80               	andlw	128
  3854  007CF2  1A1B               	xorwf	___flmul@sign,f,c
  3855  007CF4  5016               	movf	___flmul@a+3,w,c
  3856  007CF6  2416               	addwf	___flmul@a+3,w,c
  3857  007CF8  6E20               	movwf	___flmul@aexp,c
  3858  007CFA  BE15               	btfsc	___flmul@a+2,7,c
  3859  007CFC  8020               	bsf	___flmul@aexp,0,c
  3860  007CFE  5020               	movf	___flmul@aexp,w,c
  3861  007D00  B4D8               	btfsc	status,2,c
  3862  007D02  D00D               	goto	l2387
  3863  007D04  2820               	incf	___flmul@aexp,w,c
  3864  007D06  A4D8               	btfss	status,2,c
  3865  007D08  D008               	goto	l2385
  3866  007D0A  0E00               	movlw	0
  3867  007D0C  6E13               	movwf	___flmul@a,c
  3868  007D0E  0E00               	movlw	0
  3869  007D10  6E14               	movwf	___flmul@a+1,c
  3870  007D12  0E00               	movlw	0
  3871  007D14  6E15               	movwf	___flmul@a+2,c
  3872  007D16  0E00               	movlw	0
  3873  007D18  6E16               	movwf	___flmul@a+3,c
  3874  007D1A                     l2385:
  3875  007D1A  8E15               	bsf	___flmul@a+2,7,c
  3876  007D1C  D008               	goto	l1095
  3877  007D1E                     l2387:
  3878  007D1E  0E00               	movlw	0
  3879  007D20  6E13               	movwf	___flmul@a,c
  3880  007D22  0E00               	movlw	0
  3881  007D24  6E14               	movwf	___flmul@a+1,c
  3882  007D26  0E00               	movlw	0
  3883  007D28  6E15               	movwf	___flmul@a+2,c
  3884  007D2A  0E00               	movlw	0
  3885  007D2C  6E16               	movwf	___flmul@a+3,c
  3886  007D2E                     l1095:
  3887  007D2E  5020               	movf	___flmul@aexp,w,c
  3888  007D30  B4D8               	btfsc	status,2,c
  3889  007D32  D003               	goto	u1360
  3890  007D34  5021               	movf	___flmul@bexp,w,c
  3891  007D36  A4D8               	btfss	status,2,c
  3892  007D38  D009               	goto	l2395
  3893  007D3A                     u1360:
  3894  007D3A  0E00               	movlw	0
  3895  007D3C  6E0F               	movwf	?___flmul,c
  3896  007D3E  0E00               	movlw	0
  3897  007D40  6E10               	movwf	?___flmul+1,c
  3898  007D42  0E00               	movlw	0
  3899  007D44  6E11               	movwf	?___flmul+2,c
  3900  007D46  0E00               	movlw	0
  3901  007D48  6E12               	movwf	?___flmul+3,c
  3902  007D4A  0012               	return	
  3903  007D4C                     l2395:
  3904  007D4C  5015               	movf	___flmul@a+2,w,c
  3905  007D4E  020F               	mulwf	___flmul@b,c
  3906  007D50  CFF3 F026          	movff	prodl,___flmul@temp
  3907  007D54  CFF4 F027          	movff	prodh,___flmul@temp+1
  3908  007D58  5026               	movf	___flmul@temp,w,c
  3909  007D5A  6E1C               	movwf	___flmul@grs,c
  3910  007D5C  6A1D               	clrf	___flmul@grs+1,c
  3911  007D5E  6A1E               	clrf	___flmul@grs+2,c
  3912  007D60  6A1F               	clrf	___flmul@grs+3,c
  3913  007D62  5027               	movf	___flmul@temp+1,w,c
  3914  007D64  6E22               	movwf	___flmul@prod,c
  3915  007D66  6A23               	clrf	___flmul@prod+1,c
  3916  007D68  6A24               	clrf	___flmul@prod+2,c
  3917  007D6A  6A25               	clrf	___flmul@prod+3,c
  3918  007D6C  5014               	movf	___flmul@a+1,w,c
  3919  007D6E  0210               	mulwf	___flmul@b+1,c
  3920  007D70  CFF3 F026          	movff	prodl,___flmul@temp
  3921  007D74  CFF4 F027          	movff	prodh,___flmul@temp+1
  3922  007D78  5026               	movf	___flmul@temp,w,c
  3923  007D7A  261C               	addwf	___flmul@grs,f,c
  3924  007D7C  0E00               	movlw	0
  3925  007D7E  221D               	addwfc	___flmul@grs+1,f,c
  3926  007D80  221E               	addwfc	___flmul@grs+2,f,c
  3927  007D82  221F               	addwfc	___flmul@grs+3,f,c
  3928  007D84  5027               	movf	___flmul@temp+1,w,c
  3929  007D86  2622               	addwf	___flmul@prod,f,c
  3930  007D88  0E00               	movlw	0
  3931  007D8A  2223               	addwfc	___flmul@prod+1,f,c
  3932  007D8C  2224               	addwfc	___flmul@prod+2,f,c
  3933  007D8E  2225               	addwfc	___flmul@prod+3,f,c
  3934  007D90  5013               	movf	___flmul@a,w,c
  3935  007D92  0211               	mulwf	___flmul@b+2,c
  3936  007D94  CFF3 F026          	movff	prodl,___flmul@temp
  3937  007D98  CFF4 F027          	movff	prodh,___flmul@temp+1
  3938  007D9C  5026               	movf	___flmul@temp,w,c
  3939  007D9E  261C               	addwf	___flmul@grs,f,c
  3940  007DA0  0E00               	movlw	0
  3941  007DA2  221D               	addwfc	___flmul@grs+1,f,c
  3942  007DA4  221E               	addwfc	___flmul@grs+2,f,c
  3943  007DA6  221F               	addwfc	___flmul@grs+3,f,c
  3944  007DA8  5027               	movf	___flmul@temp+1,w,c
  3945  007DAA  2622               	addwf	___flmul@prod,f,c
  3946  007DAC  0E00               	movlw	0
  3947  007DAE  2223               	addwfc	___flmul@prod+1,f,c
  3948  007DB0  2224               	addwfc	___flmul@prod+2,f,c
  3949  007DB2  2225               	addwfc	___flmul@prod+3,f,c
  3950  007DB4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3951  007DB8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3952  007DBC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3953  007DC0  6A1C               	clrf	___flmul@grs,c
  3954  007DC2  5013               	movf	___flmul@a,w,c
  3955  007DC4  0210               	mulwf	___flmul@b+1,c
  3956  007DC6  CFF3 F026          	movff	prodl,___flmul@temp
  3957  007DCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3958  007DCE  5026               	movf	___flmul@temp,w,c
  3959  007DD0  261C               	addwf	___flmul@grs,f,c
  3960  007DD2  5027               	movf	___flmul@temp+1,w,c
  3961  007DD4  221D               	addwfc	___flmul@grs+1,f,c
  3962  007DD6  0E00               	movlw	0
  3963  007DD8  221E               	addwfc	___flmul@grs+2,f,c
  3964  007DDA  0E00               	movlw	0
  3965  007DDC  221F               	addwfc	___flmul@grs+3,f,c
  3966  007DDE  5014               	movf	___flmul@a+1,w,c
  3967  007DE0  020F               	mulwf	___flmul@b,c
  3968  007DE2  CFF3 F026          	movff	prodl,___flmul@temp
  3969  007DE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3970  007DEA  5026               	movf	___flmul@temp,w,c
  3971  007DEC  261C               	addwf	___flmul@grs,f,c
  3972  007DEE  5027               	movf	___flmul@temp+1,w,c
  3973  007DF0  221D               	addwfc	___flmul@grs+1,f,c
  3974  007DF2  0E00               	movlw	0
  3975  007DF4  221E               	addwfc	___flmul@grs+2,f,c
  3976  007DF6  0E00               	movlw	0
  3977  007DF8  221F               	addwfc	___flmul@grs+3,f,c
  3978  007DFA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3979  007DFE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3980  007E02  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3981  007E06  6A1C               	clrf	___flmul@grs,c
  3982  007E08  5013               	movf	___flmul@a,w,c
  3983  007E0A  020F               	mulwf	___flmul@b,c
  3984  007E0C  CFF3 F026          	movff	prodl,___flmul@temp
  3985  007E10  CFF4 F027          	movff	prodh,___flmul@temp+1
  3986  007E14  5026               	movf	___flmul@temp,w,c
  3987  007E16  261C               	addwf	___flmul@grs,f,c
  3988  007E18  5027               	movf	___flmul@temp+1,w,c
  3989  007E1A  221D               	addwfc	___flmul@grs+1,f,c
  3990  007E1C  0E00               	movlw	0
  3991  007E1E  221E               	addwfc	___flmul@grs+2,f,c
  3992  007E20  0E00               	movlw	0
  3993  007E22  221F               	addwfc	___flmul@grs+3,f,c
  3994  007E24  5015               	movf	___flmul@a+2,w,c
  3995  007E26  0210               	mulwf	___flmul@b+1,c
  3996  007E28  CFF3 F026          	movff	prodl,___flmul@temp
  3997  007E2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3998  007E30  5026               	movf	___flmul@temp,w,c
  3999  007E32  2622               	addwf	___flmul@prod,f,c
  4000  007E34  5027               	movf	___flmul@temp+1,w,c
  4001  007E36  2223               	addwfc	___flmul@prod+1,f,c
  4002  007E38  0E00               	movlw	0
  4003  007E3A  2224               	addwfc	___flmul@prod+2,f,c
  4004  007E3C  0E00               	movlw	0
  4005  007E3E  2225               	addwfc	___flmul@prod+3,f,c
  4006  007E40  5014               	movf	___flmul@a+1,w,c
  4007  007E42  0211               	mulwf	___flmul@b+2,c
  4008  007E44  CFF3 F026          	movff	prodl,___flmul@temp
  4009  007E48  CFF4 F027          	movff	prodh,___flmul@temp+1
  4010  007E4C  5026               	movf	___flmul@temp,w,c
  4011  007E4E  2622               	addwf	___flmul@prod,f,c
  4012  007E50  5027               	movf	___flmul@temp+1,w,c
  4013  007E52  2223               	addwfc	___flmul@prod+1,f,c
  4014  007E54  0E00               	movlw	0
  4015  007E56  2224               	addwfc	___flmul@prod+2,f,c
  4016  007E58  0E00               	movlw	0
  4017  007E5A  2225               	addwfc	___flmul@prod+3,f,c
  4018  007E5C  5015               	movf	___flmul@a+2,w,c
  4019  007E5E  0211               	mulwf	___flmul@b+2,c
  4020  007E60  CFF3 F026          	movff	prodl,___flmul@temp
  4021  007E64  CFF4 F027          	movff	prodh,___flmul@temp+1
  4022  007E68  5026               	movf	___flmul@temp,w,c
  4023  007E6A  6E17               	movwf	??___flmul& (0+255),c
  4024  007E6C  5027               	movf	___flmul@temp+1,w,c
  4025  007E6E  6E18               	movwf	(??___flmul+1)& (0+255),c
  4026  007E70  6A19               	clrf	(??___flmul+2)& (0+255),c
  4027  007E72  6A1A               	clrf	(??___flmul+3)& (0+255),c
  4028  007E74  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4029  007E78  C018  F019         	movff	??___flmul+1,??___flmul+2
  4030  007E7C  C017  F018         	movff	??___flmul,??___flmul+1
  4031  007E80  6A17               	clrf	??___flmul,c
  4032  007E82  5017               	movf	??___flmul,w,c
  4033  007E84  2622               	addwf	___flmul@prod,f,c
  4034  007E86  5018               	movf	??___flmul+1,w,c
  4035  007E88  2223               	addwfc	___flmul@prod+1,f,c
  4036  007E8A  5019               	movf	??___flmul+2,w,c
  4037  007E8C  2224               	addwfc	___flmul@prod+2,f,c
  4038  007E8E  501A               	movf	??___flmul+3,w,c
  4039  007E90  2225               	addwfc	___flmul@prod+3,f,c
  4040  007E92  C01C  F017         	movff	___flmul@grs,??___flmul
  4041  007E96  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4042  007E9A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4043  007E9E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4044  007EA2  0E19               	movlw	25
  4045  007EA4  D005               	goto	u1370
  4046  007EA6                     u1375:
  4047  007EA6  90D8               	bcf	status,0,c
  4048  007EA8  321A               	rrcf	??___flmul+3,f,c
  4049  007EAA  3219               	rrcf	??___flmul+2,f,c
  4050  007EAC  3218               	rrcf	??___flmul+1,f,c
  4051  007EAE  3217               	rrcf	??___flmul,f,c
  4052  007EB0                     u1370:
  4053  007EB0  2EE8               	decfsz	wreg,f,c
  4054  007EB2  D7F9               	goto	u1375
  4055  007EB4  5017               	movf	??___flmul,w,c
  4056  007EB6  2622               	addwf	___flmul@prod,f,c
  4057  007EB8  5018               	movf	??___flmul+1,w,c
  4058  007EBA  2223               	addwfc	___flmul@prod+1,f,c
  4059  007EBC  5019               	movf	??___flmul+2,w,c
  4060  007EBE  2224               	addwfc	___flmul@prod+2,f,c
  4061  007EC0  501A               	movf	??___flmul+3,w,c
  4062  007EC2  2225               	addwfc	___flmul@prod+3,f,c
  4063  007EC4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4064  007EC8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4065  007ECC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4066  007ED0  6A1C               	clrf	___flmul@grs,c
  4067  007ED2  5020               	movf	___flmul@aexp,w,c
  4068  007ED4  C021  F017         	movff	___flmul@bexp,??___flmul
  4069  007ED8  6A18               	clrf	(??___flmul+1)& (0+255),c
  4070  007EDA  2617               	addwf	??___flmul,f,c
  4071  007EDC  0E00               	movlw	0
  4072  007EDE  2218               	addwfc	??___flmul+1,f,c
  4073  007EE0  0E82               	movlw	130
  4074  007EE2  2417               	addwf	??___flmul,w,c
  4075  007EE4  6E26               	movwf	___flmul@temp,c
  4076  007EE6  0EFF               	movlw	255
  4077  007EE8  2018               	addwfc	??___flmul+1,w,c
  4078  007EEA  6E27               	movwf	___flmul@temp+1,c
  4079  007EEC  D00F               	goto	l2443
  4080  007EEE                     l2437:
  4081  007EEE  90D8               	bcf	status,0,c
  4082  007EF0  3622               	rlcf	___flmul@prod,f,c
  4083  007EF2  3623               	rlcf	___flmul@prod+1,f,c
  4084  007EF4  3624               	rlcf	___flmul@prod+2,f,c
  4085  007EF6  3625               	rlcf	___flmul@prod+3,f,c
  4086  007EF8  BE1F               	btfsc	___flmul@grs+3,7,c
  4087  007EFA  8022               	bsf	___flmul@prod,0,c
  4088  007EFC  90D8               	bcf	status,0,c
  4089  007EFE  361C               	rlcf	___flmul@grs,f,c
  4090  007F00  361D               	rlcf	___flmul@grs+1,f,c
  4091  007F02  361E               	rlcf	___flmul@grs+2,f,c
  4092  007F04  361F               	rlcf	___flmul@grs+3,f,c
  4093  007F06  0626               	decf	___flmul@temp,f,c
  4094  007F08  A0D8               	btfss	status,0,c
  4095  007F0A  0627               	decf	___flmul@temp+1,f,c
  4096  007F0C                     l2443:
  4097  007F0C  AE24               	btfss	___flmul@prod+2,7,c
  4098  007F0E  D7EF               	goto	l2437
  4099  007F10  0E00               	movlw	0
  4100  007F12  6E20               	movwf	___flmul@aexp,c
  4101  007F14  AE1F               	btfss	___flmul@grs+3,7,c
  4102  007F16  D017               	goto	l1104
  4103  007F18  0EFF               	movlw	255
  4104  007F1A  141C               	andwf	___flmul@grs,w,c
  4105  007F1C  6E17               	movwf	??___flmul& (0+255),c
  4106  007F1E  0EFF               	movlw	255
  4107  007F20  141D               	andwf	___flmul@grs+1,w,c
  4108  007F22  6E18               	movwf	(??___flmul+1)& (0+255),c
  4109  007F24  0EFF               	movlw	255
  4110  007F26  141E               	andwf	___flmul@grs+2,w,c
  4111  007F28  6E19               	movwf	(??___flmul+2)& (0+255),c
  4112  007F2A  0E7F               	movlw	127
  4113  007F2C  141F               	andwf	___flmul@grs+3,w,c
  4114  007F2E  6E1A               	movwf	(??___flmul+3)& (0+255),c
  4115  007F30  5017               	movf	??___flmul,w,c
  4116  007F32  1018               	iorwf	??___flmul+1,w,c
  4117  007F34  1019               	iorwf	??___flmul+2,w,c
  4118  007F36  101A               	iorwf	??___flmul+3,w,c
  4119  007F38  B4D8               	btfsc	status,2,c
  4120  007F3A  D003               	goto	l1105
  4121  007F3C                     u1410:
  4122  007F3C  0E01               	movlw	1
  4123  007F3E  6E20               	movwf	___flmul@aexp,c
  4124  007F40  D002               	goto	l1104
  4125  007F42                     l1105:
  4126  007F42  B022               	btfsc	___flmul@prod,0,c
  4127  007F44  D7FB               	goto	u1410
  4128  007F46                     l1104:
  4129  007F46  5020               	movf	___flmul@aexp,w,c
  4130  007F48  B4D8               	btfsc	status,2,c
  4131  007F4A  D01F               	goto	l2463
  4132  007F4C  0E01               	movlw	1
  4133  007F4E  2622               	addwf	___flmul@prod,f,c
  4134  007F50  0E00               	movlw	0
  4135  007F52  2223               	addwfc	___flmul@prod+1,f,c
  4136  007F54  2224               	addwfc	___flmul@prod+2,f,c
  4137  007F56  2225               	addwfc	___flmul@prod+3,f,c
  4138  007F58  A025               	btfss	___flmul@prod+3,0,c
  4139  007F5A  D017               	goto	l2463
  4140  007F5C  C022  F017         	movff	___flmul@prod,??___flmul
  4141  007F60  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4142  007F64  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4143  007F68  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4144  007F6C  341A               	rlcf	??___flmul+3,w,c
  4145  007F6E  321A               	rrcf	??___flmul+3,f,c
  4146  007F70  3219               	rrcf	??___flmul+2,f,c
  4147  007F72  3218               	rrcf	??___flmul+1,f,c
  4148  007F74  3217               	rrcf	??___flmul,f,c
  4149  007F76  C017  F022         	movff	??___flmul,___flmul@prod
  4150  007F7A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4151  007F7E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4152  007F82  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4153  007F86  4A26               	infsnz	___flmul@temp,f,c
  4154  007F88  2A27               	incf	___flmul@temp+1,f,c
  4155  007F8A                     l2463:
  4156  007F8A  BE27               	btfsc	___flmul@temp+1,7,c
  4157  007F8C  D00D               	goto	l2467
  4158  007F8E  5027               	movf	___flmul@temp+1,w,c
  4159  007F90  E103               	bnz	u1450
  4160  007F92  2826               	incf	___flmul@temp,w,c
  4161  007F94  A0D8               	btfss	status,0,c
  4162  007F96  D008               	goto	l2467
  4163  007F98                     u1450:
  4164  007F98  0E00               	movlw	0
  4165  007F9A  6E22               	movwf	___flmul@prod,c
  4166  007F9C  0E00               	movlw	0
  4167  007F9E  6E23               	movwf	___flmul@prod+1,c
  4168  007FA0  0E80               	movlw	128
  4169  007FA2  6E24               	movwf	___flmul@prod+2,c
  4170  007FA4  0E7F               	movlw	127
  4171  007FA6  D020               	goto	L2
  4172  007FA8                     l2467:
  4173  007FA8  BE27               	btfsc	___flmul@temp+1,7,c
  4174  007FAA  D005               	goto	u1460
  4175  007FAC  5027               	movf	___flmul@temp+1,w,c
  4176  007FAE  E10E               	bnz	l1112
  4177  007FB0  0426               	decf	___flmul@temp,w,c
  4178  007FB2  B0D8               	btfsc	status,0,c
  4179  007FB4  D00B               	goto	l1112
  4180  007FB6                     u1460:
  4181  007FB6  0E00               	movlw	0
  4182  007FB8  6E22               	movwf	___flmul@prod,c
  4183  007FBA  0E00               	movlw	0
  4184  007FBC  6E23               	movwf	___flmul@prod+1,c
  4185  007FBE  0E00               	movlw	0
  4186  007FC0  6E24               	movwf	___flmul@prod+2,c
  4187  007FC2  0E00               	movlw	0
  4188  007FC4  6E25               	movwf	___flmul@prod+3,c
  4189  007FC6  0E00               	movlw	0
  4190  007FC8  6E1B               	movwf	___flmul@sign,c
  4191  007FCA  D00F               	goto	l2479
  4192  007FCC                     l1112:
  4193  007FCC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4194  007FD0  0EFF               	movlw	255
  4195  007FD2  1622               	andwf	___flmul@prod,f,c
  4196  007FD4  0EFF               	movlw	255
  4197  007FD6  1623               	andwf	___flmul@prod+1,f,c
  4198  007FD8  0E7F               	movlw	127
  4199  007FDA  1624               	andwf	___flmul@prod+2,f,c
  4200  007FDC  0E00               	movlw	0
  4201  007FDE  1625               	andwf	___flmul@prod+3,f,c
  4202  007FE0  B021               	btfsc	___flmul@bexp,0,c
  4203  007FE2  8E24               	bsf	___flmul@prod+2,7,c
  4204  007FE4  90D8               	bcf	status,0,c
  4205  007FE6  3021               	rrcf	___flmul@bexp,w,c
  4206  007FE8                     L2:
  4207  007FE8  6E25               	movwf	___flmul@prod+3,c
  4208  007FEA                     l2479:
  4209  007FEA  501B               	movf	___flmul@sign,w,c
  4210  007FEC  1225               	iorwf	___flmul@prod+3,f,c
  4211  007FEE  C022  F00F         	movff	___flmul@prod,?___flmul
  4212  007FF2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4213  007FF6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4214  007FFA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4215  007FFE  0012               	return		;funcret
  4216  008000                     __end_of___flmul:
  4217                           	opt callstack 0
  4218                           
  4219 ;; *************** function _aveSensor *****************
  4220 ;; Defined at:
  4221 ;;		line 775 in file "./functions.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  s               1    wreg     unsigned char 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  s               1    5[COMRAM] unsigned char 
  4226 ;;  a               1    9[COMRAM] unsigned char 
  4227 ;;  measurements    2    6[COMRAM] unsigned int 
  4228 ;;  result          1    8[COMRAM] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      unsigned char 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4238 ;;      Params:         0       0       0       0       0       0       0
  4239 ;;      Locals:         5       0       0       0       0       0       0
  4240 ;;      Temps:          2       0       0       0       0       0       0
  4241 ;;      Totals:         7       0       0       0       0       0       0
  4242 ;;Total ram usage:        7 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    1
  4245 ;; This function calls:
  4246 ;;		_readADC
  4247 ;;		_setADCChannel
  4248 ;; This function is called by:
  4249 ;;		_calibrate
  4250 ;;		_pyCal
  4251 ;;		_capTouch
  4252 ;;		_readAllSensors
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text24
  4257  00707A                     __ptext24:
  4258                           	opt callstack 0
  4259  00707A                     _aveSensor:
  4260                           	opt callstack 27
  4261                           
  4262                           ;incstack = 0
  4263                           ;aveSensor@s stored from wreg
  4264  00707A  6E06               	movwf	aveSensor@s,c
  4265                           
  4266                           ;./functions.c: 775: unsigned char aveSensor(unsigned char s);./functions.c: 776: {;./fu
      +                          nctions.c: 777:     setADCChannel(s);
  4267  00707C  5006               	movf	aveSensor@s,w,c
  4268  00707E  EC51  F039         	call	_setADCChannel
  4269                           
  4270                           ;./functions.c: 778:     unsigned int measurements = 0;
  4271  007082  0E00               	movlw	0
  4272  007084  6E08               	movwf	aveSensor@measurements+1,c
  4273  007086  0E00               	movlw	0
  4274  007088  6E07               	movwf	aveSensor@measurements,c
  4275                           
  4276                           ;./functions.c: 780:     for (unsigned char a = 0; a < 4; a++)
  4277  00708A  0E00               	movlw	0
  4278  00708C  6E0A               	movwf	aveSensor@a,c
  4279  00708E                     l2585:
  4280                           
  4281                           ;./functions.c: 781:     {;./functions.c: 782:         measurements += readADC();
  4282  00708E  EC26  F037         	call	_readADC	;wreg free
  4283  007092  6E04               	movwf	??_aveSensor& (0+255),c
  4284  007094  5004               	movf	??_aveSensor,w,c
  4285  007096  2607               	addwf	aveSensor@measurements,f,c
  4286  007098  0E00               	movlw	0
  4287  00709A  2208               	addwfc	aveSensor@measurements+1,f,c
  4288                           
  4289                           ;./functions.c: 783:     }
  4290  00709C  2A0A               	incf	aveSensor@a,f,c
  4291  00709E  0E03               	movlw	3
  4292  0070A0  640A               	cpfsgt	aveSensor@a,c
  4293  0070A2  D7F5               	goto	l2585
  4294                           
  4295                           ;./functions.c: 785:     unsigned char result = measurements / 4;
  4296  0070A4  C007  F004         	movff	aveSensor@measurements,??_aveSensor
  4297  0070A8  C008  F005         	movff	aveSensor@measurements+1,??_aveSensor+1
  4298  0070AC  90D8               	bcf	status,0,c
  4299  0070AE  3205               	rrcf	??_aveSensor+1,f,c
  4300  0070B0  3204               	rrcf	??_aveSensor,f,c
  4301  0070B2  90D8               	bcf	status,0,c
  4302  0070B4  3205               	rrcf	??_aveSensor+1,f,c
  4303  0070B6  3204               	rrcf	??_aveSensor,f,c
  4304  0070B8  5004               	movf	??_aveSensor,w,c
  4305  0070BA  6E09               	movwf	aveSensor@result,c
  4306                           
  4307                           ;./functions.c: 787:     return result;
  4308  0070BC  5009               	movf	aveSensor@result,w,c
  4309  0070BE  0012               	return		;funcret
  4310  0070C0                     __end_of_aveSensor:
  4311                           	opt callstack 0
  4312                           
  4313 ;; *************** function _setADCChannel *****************
  4314 ;; Defined at:
  4315 ;;		line 724 in file "./functions.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  channel         1    wreg     unsigned char 
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  channel         1    2[COMRAM] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4329 ;;      Params:         0       0       0       0       0       0       0
  4330 ;;      Locals:         1       0       0       0       0       0       0
  4331 ;;      Temps:          2       0       0       0       0       0       0
  4332 ;;      Totals:         3       0       0       0       0       0       0
  4333 ;;Total ram usage:        3 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_aveSensor
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text25
  4343  0072A2                     __ptext25:
  4344                           	opt callstack 0
  4345  0072A2                     _setADCChannel:
  4346                           	opt callstack 27
  4347                           
  4348                           ;incstack = 0
  4349                           ;setADCChannel@channel stored from wreg
  4350  0072A2  6E03               	movwf	setADCChannel@channel,c
  4351                           
  4352                           ;./functions.c: 724: void setADCChannel(unsigned char channel);./functions.c: 725: {;./f
      +                          unctions.c: 726:     ADCON0bits.CHS = channel;
  4353  0072A4  C003  F001         	movff	setADCChannel@channel,??_setADCChannel
  4354  0072A8  4601               	rlncf	??_setADCChannel,f,c
  4355  0072AA  4601               	rlncf	??_setADCChannel,f,c
  4356  0072AC  50C2               	movf	4034,w,c	;volatile
  4357  0072AE  1801               	xorwf	??_setADCChannel,w,c
  4358  0072B0  0B83               	andlw	-125
  4359  0072B2  1801               	xorwf	??_setADCChannel,w,c
  4360  0072B4  6EC2               	movwf	4034,c	;volatile
  4361                           
  4362                           ;./functions.c: 728:     switch (channel)
  4363  0072B6  D01C               	goto	l2343
  4364  0072B8                     l392:
  4365                           
  4366                           ;./functions.c: 731:         TRISBbits.TRISB2 = 1;
  4367  0072B8  8493               	bsf	3987,2,c	;volatile
  4368                           
  4369                           ;./functions.c: 732:         ANSELBbits.ANSB2 = 1;
  4370  0072BA  010F               	movlb	15	; () banked
  4371  0072BC  8539               	bsf	57,2,b	;volatile
  4372                           
  4373                           ;./functions.c: 733:         break;
  4374  0072BE  0012               	return	
  4375  0072C0                     l394:
  4376                           
  4377                           ;./functions.c: 735:         TRISBbits.TRISB3 = 1;
  4378  0072C0  8693               	bsf	3987,3,c	;volatile
  4379                           
  4380                           ;./functions.c: 736:         ANSELBbits.ANSB3 = 1;
  4381  0072C2  010F               	movlb	15	; () banked
  4382  0072C4  8739               	bsf	57,3,b	;volatile
  4383                           
  4384                           ;./functions.c: 737:         break;
  4385  0072C6  0012               	return	
  4386  0072C8                     l395:
  4387                           
  4388                           ;./functions.c: 739:         TRISBbits.TRISB1 = 1;
  4389  0072C8  8293               	bsf	3987,1,c	;volatile
  4390                           
  4391                           ;./functions.c: 740:         ANSELBbits.ANSB1 = 1;
  4392  0072CA  010F               	movlb	15	; () banked
  4393  0072CC  8339               	bsf	57,1,b	;volatile
  4394                           
  4395                           ;./functions.c: 741:         break;
  4396  0072CE  0012               	return	
  4397  0072D0                     l396:
  4398                           
  4399                           ;./functions.c: 743:         TRISBbits.TRISB0 = 1;
  4400  0072D0  8093               	bsf	3987,0,c	;volatile
  4401                           
  4402                           ;./functions.c: 744:         ANSELBbits.ANSB0 = 1;
  4403  0072D2  010F               	movlb	15	; () banked
  4404  0072D4  8139               	bsf	57,0,b	;volatile
  4405                           
  4406                           ;./functions.c: 745:         break;
  4407  0072D6  0012               	return	
  4408  0072D8                     l397:
  4409                           
  4410                           ;./functions.c: 747:         TRISBbits.TRISB5 = 1;
  4411  0072D8  8A93               	bsf	3987,5,c	;volatile
  4412                           
  4413                           ;./functions.c: 748:         ANSELBbits.ANSB5 = 1;
  4414  0072DA  010F               	movlb	15	; () banked
  4415  0072DC  8B39               	bsf	57,5,b	;volatile
  4416                           
  4417                           ;./functions.c: 749:         break;
  4418  0072DE  0012               	return	
  4419  0072E0                     l398:
  4420                           
  4421                           ;./functions.c: 751:         TRISCbits.TRISC3 = 1;
  4422  0072E0  8694               	bsf	3988,3,c	;volatile
  4423                           
  4424                           ;./functions.c: 752:         ANSELCbits.ANSC3 = 1;
  4425  0072E2  010F               	movlb	15	; () banked
  4426  0072E4  873A               	bsf	58,3,b	;volatile
  4427                           
  4428                           ;./functions.c: 753:         break;
  4429  0072E6  0012               	return	
  4430  0072E8                     l399:
  4431                           
  4432                           ;./functions.c: 756:         TRISBbits.TRISB0 = 1;
  4433  0072E8  8093               	bsf	3987,0,c	;volatile
  4434                           
  4435                           ;./functions.c: 757:         ANSELBbits.ANSB0 = 1;
  4436  0072EA  010F               	movlb	15	; () banked
  4437  0072EC  8139               	bsf	57,0,b	;volatile
  4438                           
  4439                           ;./functions.c: 758:         break;
  4440  0072EE  0012               	return	
  4441  0072F0                     l2343:
  4442  0072F0  5003               	movf	setADCChannel@channel,w,c
  4443  0072F2  6E01               	movwf	??_setADCChannel& (0+255),c
  4444  0072F4  6A02               	clrf	(??_setADCChannel+1)& (0+255),c
  4445                           
  4446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4447                           ; Switch size 1, requested type "simple"
  4448                           ; Number of cases is 1, Range of values is 0 to 0
  4449                           ; switch strategies available:
  4450                           ; Name         Instructions Cycles
  4451                           ; simple_byte            4     3 (average)
  4452                           ;	Chosen strategy is simple_byte
  4453  0072F6  5002               	movf	??_setADCChannel+1,w,c
  4454  0072F8  0A00               	xorlw	0	; case 0
  4455  0072FA  A4D8               	btfss	status,2,c
  4456  0072FC  D7F5               	goto	l399
  4457                           
  4458                           ; Switch size 1, requested type "simple"
  4459                           ; Number of cases is 6, Range of values is 8 to 15
  4460                           ; switch strategies available:
  4461                           ; Name         Instructions Cycles
  4462                           ; simple_byte           19    10 (average)
  4463                           ;	Chosen strategy is simple_byte
  4464  0072FE  5001               	movf	??_setADCChannel,w,c
  4465  007300  0A08               	xorlw	8	; case 8
  4466  007302  B4D8               	btfsc	status,2,c
  4467  007304  D7D9               	goto	l392
  4468  007306  0A01               	xorlw	1	; case 9
  4469  007308  B4D8               	btfsc	status,2,c
  4470  00730A  D7DA               	goto	l394
  4471  00730C  0A03               	xorlw	3	; case 10
  4472  00730E  B4D8               	btfsc	status,2,c
  4473  007310  D7DB               	goto	l395
  4474  007312  0A06               	xorlw	6	; case 12
  4475  007314  B4D8               	btfsc	status,2,c
  4476  007316  D7DC               	goto	l396
  4477  007318  0A01               	xorlw	1	; case 13
  4478  00731A  B4D8               	btfsc	status,2,c
  4479  00731C  D7DD               	goto	l397
  4480  00731E  0A02               	xorlw	2	; case 15
  4481  007320  B4D8               	btfsc	status,2,c
  4482  007322  D7DE               	goto	l398
  4483  007324  D7E1               	goto	l399
  4484  007326                     __end_of_setADCChannel:
  4485                           	opt callstack 0
  4486                           
  4487 ;; *************** function _readADC *****************
  4488 ;; Defined at:
  4489 ;;		line 765 in file "./functions.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      unsigned char 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4503 ;;      Params:         0       0       0       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0
  4506 ;;      Totals:         0       0       0       0       0       0       0
  4507 ;;Total ram usage:        0 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_aveSensor
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text26
  4517  006E4C                     __ptext26:
  4518                           	opt callstack 0
  4519  006E4C                     _readADC:
  4520                           	opt callstack 27
  4521                           
  4522                           ;./functions.c: 767:     ADCON0bits.GO = 1;
  4523                           
  4524                           ; BSR set to: 15
  4525                           ;incstack = 0
  4526  006E4C  82C2               	bsf	4034,1,c	;volatile
  4527  006E4E                     l403:
  4528                           
  4529                           ;./functions.c: 769:     while (ADCON0bits.GO)
  4530  006E4E  B2C2               	btfsc	4034,1,c	;volatile
  4531  006E50  D7FE               	goto	l403
  4532                           
  4533                           ;./functions.c: 771:     return ADRESH;
  4534  006E52  50C4               	movf	4036,w,c	;volatile
  4535  006E54  0012               	return		;funcret
  4536  006E56                     __end_of_readADC:
  4537                           	opt callstack 0
  4538                           
  4539 ;; *************** function _PRC *****************
  4540 ;; Defined at:
  4541 ;;		line 335 in file "./functions.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  a               1   56[COMRAM] unsigned char 
  4546 ;;  a               1   55[COMRAM] unsigned char 
  4547 ;;  a               1   54[COMRAM] unsigned char 
  4548 ;;  a               1   53[COMRAM] unsigned char 
  4549 ;;  a               1   52[COMRAM] unsigned char 
  4550 ;;  a               1   51[COMRAM] unsigned char 
  4551 ;;  a               1   50[COMRAM] unsigned char 
  4552 ;;  a               1   49[COMRAM] unsigned char 
  4553 ;;  a               1   48[COMRAM] unsigned char 
  4554 ;;  message        32   11[COMRAM] unsigned char [32]
  4555 ;;  message2        5   43[COMRAM] unsigned char [5]
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4565 ;;      Params:         0       0       0       0       0       0       0
  4566 ;;      Locals:        46       0       0       0       0       0       0
  4567 ;;      Temps:          2       0       0       0       0       0       0
  4568 ;;      Totals:        48       0       0       0       0       0       0
  4569 ;;Total ram usage:       48 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    2
  4572 ;; This function calls:
  4573 ;;		_error
  4574 ;;		_trans
  4575 ;; This function is called by:
  4576 ;;		_RCE
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text27
  4581  00786E                     __ptext27:
  4582                           	opt callstack 0
  4583  00786E                     _PRC:
  4584                           	opt callstack 27
  4585                           
  4586                           ;./functions.c: 337:     PORTD = 0b11111001;
  4587                           
  4588                           ;incstack = 0
  4589  00786E  0EF9               	movlw	249
  4590  007870  6E83               	movwf	3971,c	;volatile
  4591  007872                     l3049:
  4592                           
  4593                           ;./functions.c: 339:     {;./functions.c: 340:         unsigned char message[] = "\nWhat
      +                           color should sanic race?\n";
  4594  007872  EE20  F060         	lfsr	2,PRC@F6015
  4595  007876  EE10  F00C         	lfsr	1,PRC@message
  4596  00787A  0E1F               	movlw	31
  4597  00787C                     u2151:
  4598  00787C  CFDB FFE3          	movff	plusw2,plusw1
  4599  007880  06E8               	decf	wreg,f,c
  4600  007882  E2FC               	bc	u2151
  4601                           
  4602                           ;./functions.c: 341:         unsigned char message2[] = "\nSet";
  4603  007884  EE20  F0C8         	lfsr	2,PRC@F6017
  4604  007888  EE10  F02C         	lfsr	1,PRC@message2
  4605  00788C  0E04               	movlw	4
  4606  00788E                     u2161:
  4607  00788E  CFDB FFE3          	movff	plusw2,plusw1
  4608  007892  06E8               	decf	wreg,f,c
  4609  007894  E2FC               	bc	u2161
  4610                           
  4611                           ;./functions.c: 343:         for (unsigned char a = 0; a < 31; a++)
  4612  007896  0E00               	movlw	0
  4613  007898  6E31               	movwf	PRC@a,c
  4614  00789A                     l3057:
  4615                           
  4616                           ;./functions.c: 344:         {;./functions.c: 345:             trans(message[a]);
  4617  00789A  0E0C               	movlw	low PRC@message
  4618  00789C  2431               	addwf	PRC@a,w,c
  4619  00789E  6ED9               	movwf	fsr2l,c
  4620  0078A0  6ADA               	clrf	fsr2h,c
  4621  0078A2  0E00               	movlw	high PRC@message
  4622  0078A4  22DA               	addwfc	fsr2h,f,c
  4623  0078A6  50DF               	movf	indf2,w,c
  4624  0078A8  EC35  F037         	call	_trans
  4625                           
  4626                           ;./functions.c: 346:         }
  4627  0078AC  2A31               	incf	PRC@a,f,c
  4628  0078AE  0E1E               	movlw	30
  4629  0078B0  6431               	cpfsgt	PRC@a,c
  4630  0078B2  D7F3               	goto	l3057
  4631  0078B4                     u2170:
  4632  0078B4  BA9E               	btfsc	3998,5,c	;volatile
  4633  0078B6  D088               	goto	l3173
  4634  0078B8  D7FD               	goto	u2170
  4635  0078BA                     l3063:
  4636                           
  4637                           ;./functions.c: 352:             for (unsigned char a = 0; a < 8; a++)
  4638  0078BA  0E00               	movlw	0
  4639  0078BC  6E32               	movwf	PRC@a_1113,c
  4640  0078BE                     l3069:
  4641                           
  4642                           ;./functions.c: 353:             {;./functions.c: 354:                 raceColor[a] = 0;
  4643  0078BE  0EB2               	movlw	low _raceColor
  4644  0078C0  2432               	addwf	PRC@a_1113,w,c
  4645  0078C2  6ED9               	movwf	fsr2l,c
  4646  0078C4  6ADA               	clrf	fsr2h,c
  4647  0078C6  0E00               	movlw	high _raceColor
  4648  0078C8  22DA               	addwfc	fsr2h,f,c
  4649  0078CA  0E00               	movlw	0
  4650  0078CC  6EDF               	movwf	indf2,c
  4651                           
  4652                           ;./functions.c: 355:             }
  4653  0078CE  2A32               	incf	PRC@a_1113,f,c
  4654  0078D0  0E07               	movlw	7
  4655  0078D2  6432               	cpfsgt	PRC@a_1113,c
  4656  0078D4  D7F4               	goto	l3069
  4657                           
  4658                           ;./functions.c: 356:             raceColor[3] = 1;
  4659  0078D6  0E01               	movlw	1
  4660  0078D8  0100               	movlb	0	; () banked
  4661  0078DA  6FB5               	movwf	(_raceColor+3)& (0+255),b
  4662                           
  4663                           ;./functions.c: 357:             for (unsigned char a = 0; a < 4; a++)
  4664  0078DC  0E00               	movlw	0
  4665  0078DE  6E33               	movwf	PRC@a_1114,c
  4666  0078E0                     l3081:
  4667                           
  4668                           ;./functions.c: 358:             {;./functions.c: 359:                 trans(message2[a]
      +                          );
  4669  0078E0  0E2C               	movlw	low PRC@message2
  4670  0078E2  2433               	addwf	PRC@a_1114,w,c
  4671  0078E4  6ED9               	movwf	fsr2l,c
  4672  0078E6  6ADA               	clrf	fsr2h,c
  4673  0078E8  0E00               	movlw	high PRC@message2
  4674  0078EA  22DA               	addwfc	fsr2h,f,c
  4675  0078EC  50DF               	movf	indf2,w,c
  4676  0078EE  EC35  F037         	call	_trans
  4677                           
  4678                           ;./functions.c: 360:             }
  4679  0078F2  2A33               	incf	PRC@a_1114,f,c
  4680  0078F4  0E03               	movlw	3
  4681  0078F6  6433               	cpfsgt	PRC@a_1114,c
  4682  0078F8  D7F3               	goto	l3081
  4683  0078FA  0012               	return	
  4684  0078FC                     l3089:
  4685                           
  4686                           ;./functions.c: 364:             for (unsigned char a = 0; a < 8; a++)
  4687  0078FC  0E00               	movlw	0
  4688  0078FE  6E34               	movwf	PRC@a_1115,c
  4689  007900                     l3095:
  4690                           
  4691                           ;./functions.c: 365:             {;./functions.c: 366:                 raceColor[a] = 0;
  4692  007900  0EB2               	movlw	low _raceColor
  4693  007902  2434               	addwf	PRC@a_1115,w,c
  4694  007904  6ED9               	movwf	fsr2l,c
  4695  007906  6ADA               	clrf	fsr2h,c
  4696  007908  0E00               	movlw	high _raceColor
  4697  00790A  22DA               	addwfc	fsr2h,f,c
  4698  00790C  0E00               	movlw	0
  4699  00790E  6EDF               	movwf	indf2,c
  4700                           
  4701                           ;./functions.c: 367:             }
  4702  007910  2A34               	incf	PRC@a_1115,f,c
  4703  007912  0E07               	movlw	7
  4704  007914  6434               	cpfsgt	PRC@a_1115,c
  4705  007916  D7F4               	goto	l3095
  4706                           
  4707                           ;./functions.c: 368:             raceColor[1] = 1;
  4708  007918  0E01               	movlw	1
  4709  00791A  0100               	movlb	0	; () banked
  4710  00791C  6FB3               	movwf	(_raceColor+1)& (0+255),b
  4711                           
  4712                           ;./functions.c: 369:             for (unsigned char a = 0; a < 4; a++)
  4713  00791E  0E00               	movlw	0
  4714  007920  6E35               	movwf	PRC@a_1116,c
  4715  007922                     l3107:
  4716                           
  4717                           ;./functions.c: 370:             {;./functions.c: 371:                 trans(message2[a]
      +                          );
  4718  007922  0E2C               	movlw	low PRC@message2
  4719  007924  2435               	addwf	PRC@a_1116,w,c
  4720  007926  6ED9               	movwf	fsr2l,c
  4721  007928  6ADA               	clrf	fsr2h,c
  4722  00792A  0E00               	movlw	high PRC@message2
  4723  00792C  22DA               	addwfc	fsr2h,f,c
  4724  00792E  50DF               	movf	indf2,w,c
  4725  007930  EC35  F037         	call	_trans
  4726                           
  4727                           ;./functions.c: 372:             }
  4728  007934  2A35               	incf	PRC@a_1116,f,c
  4729  007936  0E03               	movlw	3
  4730  007938  6435               	cpfsgt	PRC@a_1116,c
  4731  00793A  D7F3               	goto	l3107
  4732  00793C  0012               	return	
  4733  00793E                     l3115:
  4734                           
  4735                           ;./functions.c: 376:             for (unsigned char a = 0; a < 8; a++)
  4736  00793E  0E00               	movlw	0
  4737  007940  6E36               	movwf	PRC@a_1117,c
  4738  007942                     l3121:
  4739                           
  4740                           ;./functions.c: 377:             {;./functions.c: 378:                 raceColor[a] = 0;
  4741  007942  0EB2               	movlw	low _raceColor
  4742  007944  2436               	addwf	PRC@a_1117,w,c
  4743  007946  6ED9               	movwf	fsr2l,c
  4744  007948  6ADA               	clrf	fsr2h,c
  4745  00794A  0E00               	movlw	high _raceColor
  4746  00794C  22DA               	addwfc	fsr2h,f,c
  4747  00794E  0E00               	movlw	0
  4748  007950  6EDF               	movwf	indf2,c
  4749                           
  4750                           ;./functions.c: 379:             }
  4751  007952  2A36               	incf	PRC@a_1117,f,c
  4752  007954  0E07               	movlw	7
  4753  007956  6436               	cpfsgt	PRC@a_1117,c
  4754  007958  D7F4               	goto	l3121
  4755                           
  4756                           ;./functions.c: 380:             raceColor[2] = 1;
  4757  00795A  0E01               	movlw	1
  4758  00795C  0100               	movlb	0	; () banked
  4759  00795E  6FB4               	movwf	(_raceColor+2)& (0+255),b
  4760                           
  4761                           ;./functions.c: 381:             for (unsigned char a = 0; a < 4; a++)
  4762  007960  0E00               	movlw	0
  4763  007962  6E37               	movwf	PRC@a_1118,c
  4764  007964                     l3133:
  4765                           
  4766                           ;./functions.c: 382:             {;./functions.c: 383:                 trans(message2[a]
      +                          );
  4767  007964  0E2C               	movlw	low PRC@message2
  4768  007966  2437               	addwf	PRC@a_1118,w,c
  4769  007968  6ED9               	movwf	fsr2l,c
  4770  00796A  6ADA               	clrf	fsr2h,c
  4771  00796C  0E00               	movlw	high PRC@message2
  4772  00796E  22DA               	addwfc	fsr2h,f,c
  4773  007970  50DF               	movf	indf2,w,c
  4774  007972  EC35  F037         	call	_trans
  4775                           
  4776                           ;./functions.c: 384:             }
  4777  007976  2A37               	incf	PRC@a_1118,f,c
  4778  007978  0E03               	movlw	3
  4779  00797A  6437               	cpfsgt	PRC@a_1118,c
  4780  00797C  D7F3               	goto	l3133
  4781  00797E  0012               	return	
  4782  007980                     l3141:
  4783                           
  4784                           ;./functions.c: 388:             for (unsigned char a = 0; a < 8; a++)
  4785  007980  0E00               	movlw	0
  4786  007982  6E38               	movwf	PRC@a_1119,c
  4787  007984                     l3147:
  4788                           
  4789                           ;./functions.c: 389:             {;./functions.c: 390:                 raceColor[a] = 0;
  4790  007984  0EB2               	movlw	low _raceColor
  4791  007986  2438               	addwf	PRC@a_1119,w,c
  4792  007988  6ED9               	movwf	fsr2l,c
  4793  00798A  6ADA               	clrf	fsr2h,c
  4794  00798C  0E00               	movlw	high _raceColor
  4795  00798E  22DA               	addwfc	fsr2h,f,c
  4796  007990  0E00               	movlw	0
  4797  007992  6EDF               	movwf	indf2,c
  4798                           
  4799                           ;./functions.c: 391:             }
  4800  007994  2A38               	incf	PRC@a_1119,f,c
  4801  007996  0E07               	movlw	7
  4802  007998  6438               	cpfsgt	PRC@a_1119,c
  4803  00799A  D7F4               	goto	l3147
  4804                           
  4805                           ;./functions.c: 392:             raceColor[4] = 1;
  4806  00799C  0E01               	movlw	1
  4807  00799E  0100               	movlb	0	; () banked
  4808  0079A0  6FB6               	movwf	(_raceColor+4)& (0+255),b
  4809                           
  4810                           ;./functions.c: 393:             for (unsigned char a = 0; a < 4; a++)
  4811  0079A2  0E00               	movlw	0
  4812  0079A4  6E39               	movwf	PRC@a_1120,c
  4813  0079A6                     l3159:
  4814                           
  4815                           ;./functions.c: 394:             {;./functions.c: 395:                 trans(message2[a]
      +                          );
  4816  0079A6  0E2C               	movlw	low PRC@message2
  4817  0079A8  2439               	addwf	PRC@a_1120,w,c
  4818  0079AA  6ED9               	movwf	fsr2l,c
  4819  0079AC  6ADA               	clrf	fsr2h,c
  4820  0079AE  0E00               	movlw	high PRC@message2
  4821  0079B0  22DA               	addwfc	fsr2h,f,c
  4822  0079B2  50DF               	movf	indf2,w,c
  4823  0079B4  EC35  F037         	call	_trans
  4824                           
  4825                           ;./functions.c: 396:             }
  4826  0079B8  2A39               	incf	PRC@a_1120,f,c
  4827  0079BA  0E03               	movlw	3
  4828  0079BC  6439               	cpfsgt	PRC@a_1120,c
  4829  0079BE  D7F3               	goto	l3159
  4830  0079C0  0012               	return	
  4831  0079C2                     l3167:
  4832                           
  4833                           ;./functions.c: 401:             error();
  4834  0079C2  ECC8  F037         	call	_error	;wreg free
  4835                           
  4836                           ;./functions.c: 402:             continue;
  4837  0079C6  D755               	goto	l3049
  4838  0079C8                     l3173:
  4839  0079C8  50AE               	movf	4014,w,c	;volatile
  4840  0079CA  6E0A               	movwf	??_PRC& (0+255),c
  4841  0079CC  6A0B               	clrf	(??_PRC+1)& (0+255),c
  4842                           
  4843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4844                           ; Switch size 1, requested type "simple"
  4845                           ; Number of cases is 1, Range of values is 0 to 0
  4846                           ; switch strategies available:
  4847                           ; Name         Instructions Cycles
  4848                           ; simple_byte            4     3 (average)
  4849                           ;	Chosen strategy is simple_byte
  4850  0079CE  500B               	movf	??_PRC+1,w,c
  4851  0079D0  0A00               	xorlw	0	; case 0
  4852  0079D2  A4D8               	btfss	status,2,c
  4853  0079D4  D7F6               	goto	l3167
  4854                           
  4855                           ; Switch size 1, requested type "simple"
  4856                           ; Number of cases is 4, Range of values is 66 to 110
  4857                           ; switch strategies available:
  4858                           ; Name         Instructions Cycles
  4859                           ; simple_byte           13     7 (average)
  4860                           ;	Chosen strategy is simple_byte
  4861  0079D6  500A               	movf	??_PRC,w,c
  4862  0079D8  0A42               	xorlw	66	; case 66
  4863  0079DA  B4D8               	btfsc	status,2,c
  4864  0079DC  D76E               	goto	l3063
  4865  0079DE  0A05               	xorlw	5	; case 71
  4866  0079E0  B4D8               	btfsc	status,2,c
  4867  0079E2  D78C               	goto	l3089
  4868  0079E4  0A15               	xorlw	21	; case 82
  4869  0079E6  B4D8               	btfsc	status,2,c
  4870  0079E8  D7AA               	goto	l3115
  4871  0079EA  0A3C               	xorlw	60	; case 110
  4872  0079EC  B4D8               	btfsc	status,2,c
  4873  0079EE  D7C8               	goto	l3141
  4874  0079F0  D7E8               	goto	l3167
  4875  0079F2                     __end_of_PRC:
  4876                           	opt callstack 0
  4877                           
  4878 ;; *************** function _error *****************
  4879 ;; Defined at:
  4880 ;;		line 803 in file "./functions.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  a               1    8[COMRAM] unsigned char 
  4885 ;;  message         7    1[COMRAM] unsigned char [7]
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4895 ;;      Params:         0       0       0       0       0       0       0
  4896 ;;      Locals:         8       0       0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0
  4898 ;;      Totals:         8       0       0       0       0       0       0
  4899 ;;Total ram usage:        8 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    1
  4902 ;; This function calls:
  4903 ;;		_trans
  4904 ;; This function is called by:
  4905 ;;		_PRC
  4906 ;;		_RCE
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text28
  4911  006F90                     __ptext28:
  4912                           	opt callstack 0
  4913  006F90                     _error:
  4914                           	opt callstack 28
  4915                           
  4916                           ;./functions.c: 805:     unsigned char message[] = "ERROR\n";
  4917                           
  4918                           ;incstack = 0
  4919  006F90  EE20  F0BB         	lfsr	2,error@F6069
  4920  006F94  EE10  F002         	lfsr	1,error@message
  4921  006F98  0E06               	movlw	6
  4922  006F9A                     u1691:
  4923  006F9A  CFDB FFE3          	movff	plusw2,plusw1
  4924  006F9E  06E8               	decf	wreg,f,c
  4925  006FA0  E2FC               	bc	u1691
  4926                           
  4927                           ;./functions.c: 807:     for (unsigned char a = 0; a < 6; a++)
  4928  006FA2  0E00               	movlw	0
  4929  006FA4  6E09               	movwf	error@a,c
  4930  006FA6                     l2661:
  4931                           
  4932                           ;./functions.c: 808:     {;./functions.c: 809:         trans(message[a]);
  4933  006FA6  0E02               	movlw	low error@message
  4934  006FA8  2409               	addwf	error@a,w,c
  4935  006FAA  6ED9               	movwf	fsr2l,c
  4936  006FAC  6ADA               	clrf	fsr2h,c
  4937  006FAE  0E00               	movlw	high error@message
  4938  006FB0  22DA               	addwfc	fsr2h,f,c
  4939  006FB2  50DF               	movf	indf2,w,c
  4940  006FB4  EC35  F037         	call	_trans
  4941                           
  4942                           ;./functions.c: 810:     }
  4943  006FB8  2A09               	incf	error@a,f,c
  4944  006FBA  0E05               	movlw	5
  4945  006FBC  6409               	cpfsgt	error@a,c
  4946  006FBE  D7F3               	goto	l2661
  4947                           
  4948                           ;./functions.c: 812:     RCREG = 0;
  4949  006FC0  0E00               	movlw	0
  4950  006FC2  6EAE               	movwf	4014,c	;volatile
  4951  006FC4  0012               	return		;funcret
  4952  006FC6                     __end_of_error:
  4953                           	opt callstack 0
  4954                           
  4955 ;; *************** function _trans *****************
  4956 ;; Defined at:
  4957 ;;		line 708 in file "./functions.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  s               1    wreg     unsigned char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  s               1    0[COMRAM] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4971 ;;      Params:         0       0       0       0       0       0       0
  4972 ;;      Locals:         1       0       0       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0
  4974 ;;      Totals:         1       0       0       0       0       0       0
  4975 ;;Total ram usage:        1 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_PRC
  4981 ;;		_pyCal
  4982 ;;		_capTouch
  4983 ;;		_error
  4984 ;;		_RCE
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text29
  4989  006E6A                     __ptext29:
  4990                           	opt callstack 0
  4991  006E6A                     _trans:
  4992                           	opt callstack 29
  4993                           
  4994                           ;incstack = 0
  4995                           ;trans@s stored from wreg
  4996  006E6A  6E01               	movwf	trans@s,c
  4997  006E6C                     
  4998                           ;./functions.c: 710:     while (!PIR1bits.TX1IF)
  4999                           
  5000                           ;./functions.c: 711:         ;
  5001  006E6C  A89E               	btfss	3998,4,c	;volatile
  5002  006E6E  D7FE               	goto	l2597
  5003                           
  5004                           ;./functions.c: 712:     TXREG = s;
  5005  006E70  C001  FFAD         	movff	trans@s,4013	;volatile
  5006  006E74  0012               	return		;funcret
  5007  006E76                     __end_of_trans:
  5008                           	opt callstack 0
  5009  0000                     
  5010                           	psect	rparam
  5011  0000                     tosu	equ	0xFFF
  5012                           tosh	equ	0xFFE
  5013                           tosl	equ	0xFFD
  5014                           stkptr	equ	0xFFC
  5015                           pclatu	equ	0xFFB
  5016                           pclath	equ	0xFFA
  5017                           pcl	equ	0xFF9
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           prodh	equ	0xFF4
  5023                           prodl	equ	0xFF3
  5024                           indf0	equ	0xFEF
  5025                           postinc0	equ	0xFEE
  5026                           postdec0	equ	0xFED
  5027                           preinc0	equ	0xFEC
  5028                           plusw0	equ	0xFEB
  5029                           fsr0h	equ	0xFEA
  5030                           fsr0l	equ	0xFE9
  5031                           wreg	equ	0xFE8
  5032                           indf1	equ	0xFE7
  5033                           postinc1	equ	0xFE6
  5034                           postdec1	equ	0xFE5
  5035                           preinc1	equ	0xFE4
  5036                           plusw1	equ	0xFE3
  5037                           fsr1h	equ	0xFE2
  5038                           fsr1l	equ	0xFE1
  5039                           bsr	equ	0xFE0
  5040                           indf2	equ	0xFDF
  5041                           postinc2	equ	0xFDE
  5042                           postdec2	equ	0xFDD
  5043                           preinc2	equ	0xFDC
  5044                           plusw2	equ	0xFDB
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        146
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      95
    BANK0           160     20     159
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    classifyColors@sensorRanges	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(COMRAM[5]), 
		 -> LLranges(COMRAM[5]), 

    classifyColors@F6047	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(COMRAM[5]), 
		 -> LLranges(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_RCE
    _RCE->_capTouch
    _pyCal->_msDelay
    _navigate->_classifyColors
    _readAllSensors->_aveSensor
    _capTouch->_msDelay
    _calibrate->_oneSecDelay
    _oneSecDelay->_msDelay
    _msDelay->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _aveSensor->_setADCChannel
    _PRC->_error
    _error->_trans

Critical Paths under _main in BANK0

    _main->_RCE

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12615
                                _RCE
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupADC
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RCE                                                 22    22      0   12615
                                             81 COMRAM     2     2      0
                                              0 BANK0     20    20      0
                                _PRC
                          _calibrate
                           _capTouch
                              _error
                           _navigate
                              _pyCal
                              _trans
 ---------------------------------------------------------------------------------
 (2) _pyCal                                                2     2      0    3023
                                             50 COMRAM     2     2      0
                          _aveSensor
                            _msDelay
                           _setupADC
                              _trans
 ---------------------------------------------------------------------------------
 (2) _navigate                                             0     0      0     696
                     _classifyColors
               _displayColorDetected
                   _displayRaceColor
                     _readAllSensors
                           _setupADC
                       _setupPWMLeft
                      _setupPWMRight
                         _stopMotors
 ---------------------------------------------------------------------------------
 (3) _stopMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMRight                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMLeft                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readAllSensors                                       2     2      0     249
                                             10 COMRAM     2     2      0
                          _aveSensor
 ---------------------------------------------------------------------------------
 (3) _displayRaceColor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displayColorDetected                                 3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _classifyColors                                      15    15      0     425
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (2) _capTouch                                            31    31      0    3283
                                             50 COMRAM    31    31      0
                                _abs
                          _aveSensor
                            _msDelay
                              _trans
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calibrate                                           11    11      0    4335
                                             51 COMRAM    11    11      0
                          _aveSensor
                        _oneSecDelay
 ---------------------------------------------------------------------------------
 (3) _oneSecDelay                                          1     1      0    2819
                                             50 COMRAM     1     1      0
                            _msDelay
 ---------------------------------------------------------------------------------
 (3) _msDelay                                              1     1      0    2773
                                             49 COMRAM     1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _aveSensor                                            7     7      0     159
                                              3 COMRAM     7     7      0
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (4) _setADCChannel                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PRC                                                 48    48      0     865
                                              9 COMRAM    48    48      0
                              _error
                              _trans
 ---------------------------------------------------------------------------------
 (2) _error                                                8     8      0     114
                                              1 COMRAM     8     8      0
                              _trans
 ---------------------------------------------------------------------------------
 (2) _trans                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RCE
     _PRC
       _error
         _trans
       _trans
     _calibrate
       _aveSensor
         _readADC
         _setADCChannel
       _oneSecDelay
         _msDelay
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _capTouch
       _abs
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _trans
     _error
       _trans
     _navigate
       _classifyColors
       _displayColorDetected
       _displayRaceColor
       _readAllSensors
         _aveSensor
           _readADC
           _setADCChannel
       _setupADC
       _setupPWMLeft
       _setupPWMRight
       _stopMotors
     _pyCal
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _setupADC
       _trans
     _trans
   _init
     _clearPorts
     _setupADC
     _setupOSC
     _setupSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     14      9F       4       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     53      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FE       9        0.0%
DATA                 0      0      FE      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 26 12:37:18 2019

               _colorsDetected 00FA                  capTouch@F6033 0080                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                  __CFG_LVP$ON 000000                            l301 72A0                            l403 6E4E  
                          l431 7216                            l360 73E0                            l361 73EC  
                          l442 6E68                            l355 73B0                            l357 73BC  
                          l285 6FD2                            l358 73C8                            l359 73D4  
                          l463 7568                            l392 72B8                            l457 7556  
                          l394 72C0                            l395 72C8                            l396 72D0  
                          l397 72D8                            l398 72E0                            l399 72E8  
                 __CFG_CPB$OFF 000000                            _RCE 74EE                            _PR2 000FBB  
                          _PR4 000F52                   __CFG_CPD$OFF 000000                            _PR6 000F4B  
                          _PRC 786E                            _abs 6F5E                            _col 0054  
                          prod 000FF3                            wreg 000FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                ??_setupPWMRight 0001                           ?_RCE 0001  
                         ?_PRC 0001                           RCE@a 00F8                   ___fltol@exp1 0031  
                         PRC@a 0031                           l1112 7FCC                           l1104 7F46  
                         l1105 7F42                           ?_abs 0001                           l1143 77EA  
                         l1136 776C                           l1156 6F86                           l1095 7D2E  
                         l3007 7C38                           l3121 7942                           l3115 793E  
                         l3107 7922                           l3141 7980                           l3133 7964  
                         l3301 7550                           l3063 78BA                           l2343 72F0  
                         l2511 74AC                           l3081 78E0                           l3057 789A  
                         l3049 7872                           l3321 7598                           l3313 757E  
                         l3147 7984                           l2443 7F0C                           l2371 7CEE  
                         l2507 749C                           l3323 759E                           l3331 75DA  
                         l3315 7586                           l3069 78BE                           l3173 79C8  
                         l2437 7EEE                           l2525 74DC                           l2517 74B4  
                         l2541 779A                           l3245 725C                           l3237 723A  
                         l3325 75A4                           l3317 758C                           l3167 79C2  
                         l3159 79A6                           l3095 7900                           l2463 7F8A  
                         l2367 7CDA                           l2519 74C0                           l2543 77A0  
                         l2535 777C                           l2711 7610                           l3183 70C8  
                         l3319 7592                           l3089 78FC                           l2385 7D1A  
                         l2369 7CDE                           l2553 7810                           l2545 77AC  
                         l3193 70D2                           l3337 75E0                           l3329 75AA  
                         l2467 7FA8                           l2395 7D4C                           l2387 7D1E  
                         l2491 7452                           l2571 785C                           l2555 781C  
                         l2547 77D2                           l2723 76D4                           l2715 7654  
                         l3283 750A                           l2661 6FA6                           l3293 7534  
                         l2479 7FEA                           l2647 6E98                           l2903 7B30  
                         l2727 7714                           l2719 7694                           l2585 708E  
                         l2737 73F8                           l2681 7062                           l2673 704A  
                         l3297 7542                           l2851 7AAC                           l2597 6E6C  
                         l2685 706E                           l2677 7056                           l2697 7008  
                         l2955 7BB4                           l2799 7A28                           u1410 7F3C  
                         _LATA 000F89                           _LATB 000F8A                           u2151 787C  
                         _LATC 000F8B                           u1360 7D3A                           _LATD 000F8C  
                         _FSR0 000FE9                           u2161 788E                           _LATE 000F8D  
                         u2170 78B4                           u1450 7F98                           u1370 7EB0  
                         u1530 74C6                           u1610 7826                           u2330 6FFA  
                         u1460 7FB6                           u2341 722E                           u1375 7EA6  
                         u1480 7440                           u1490 7470                           u2371 74FC  
                         u1830 6F6C                           u1495 7466                           u1760 703A  
                         u1841 7A00                           u1691 6F9A                           u1771 7604  
                         _TMR2 000FBC                           _TMR4 000F53                           _TMR6 000F4C  
                         abs@a 0001                           _main 6E60                           _init 6EA8  
                         _size 0055                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                  __CFG_BORV$190 000000                           prodh 000FF4  
                         prodl 000FF3                           start 0000                  __CFG_IESO$OFF 000000  
        ?_displayColorDetected 0001                   ___param_bank 000000                 capTouch@touch1 004F  
               capTouch@touch2 0050                          ??_RCE 0052                          ??_PRC 000A  
                        ??_abs 0003                   _BAUDCON1bits 000FB8                  ___fltol@sign1 0030  
                        ?_main 0001                          ?_init 0001                __end_of___flmul 8000  
              __end_of___fltol 74EE                          _T2CON 000FBA                          _T4CON 000F51  
                        _T6CON 000F4A                          _RCREG 000FAE                          _PORTA 000F80  
                        _PORTB 000F81                          _PORTC 000F82                          _PORTD 000F83  
                        _PORTE 000F84                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                        _TXREG 000FAD         __size_of_setADCChannel 0084                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                   ?_oneSecDelay 0001                 __CFG_EBTR3$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
              __end_of_msDelay 7224                __end_of_readADC 6E56                 __CFG_EBTRB$OFF 000000  
                        _error 6F90                          _pyCal 70C0             __CFG_MCLRE$EXTMCLR 000000  
                        _trans 6E6A                          tablat 000FF5                          plusw1 000FE3  
                        plusw2 000FDB                          status 000FD8                 __CFG_HFOFST$ON 000000  
               __CFG_PBADEN$ON 000000                capTouch@message 0033                __initialization 710E  
                 __end_of_main 6E6A                   __end_of_init 6EC0                  calibrate@temp 003E  
                       ??_main 0054                         ??_init 0001                  __activetblptr 000002  
                       _ADCON1 000FC1                         ?_error 0001                         ?_pyCal 0001  
                       _ADRESH 000FC4                         _CCPR1L 000FBE                         _CCPR5L 000F55  
                       ?_trans 0001                         _ANSELA 000F38                         _ANSELB 000F39  
                       _ANSELC 000F3A                         _ANSELD 000F3B                         _ANSELE 000F3C  
             calibrate@samples 0039                 __CFG_WDTEN$OFF 000000               calibrate@sensors 0034  
                       _RCSTA1 000FAB                         _SPBRG1 000FAF               __end_of_capTouch 72A2  
             __end_of___xxtofl 786E                         _TXSTA1 000FAC         ??_displayColorDetected 0001  
                _setADCChannel 72A2                 __CFG_XINST$OFF 000000                 __CFG_STVREN$ON 000000  
                    ??___flmul 0017                      ??___fltol 002C               __end_of_navigate 7000  
              classifyColors@a 000F        __size_of_readAllSensors 003C                      ??_msDelay 0032  
                    ??_readADC 0001                         error@a 0009                         pyCal@a 0034  
                 __pdataCOMRAM 0054               __end_of_setupADC 6EE2               __end_of_setupOSC 6E60  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
           RCE@commandReceived 00F4                         trans@s 0001                   ?_setupSerial 0001  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   __accesstop 0060        __end_of__initialization 715A                 ?_setADCChannel 0001  
                ___rparam_used 000001                     ___fltol@f1 0028              ?_displayRaceColor 0001  
               __pcstackCOMRAM 0001                 calibrate@F6006 00CD             __size_of_calibrate 02BC  
                 __pidataBANK0 7326             ??_displayRaceColor 0001           setADCChannel@channel 0003  
                __end_of_error 6FC6                  __end_of_pyCal 710E                  __end_of_trans 6E76  
                    RCE@a_1260 00F9             __size_of_aveSensor 0046                        ??_error 0002  
                      ??_pyCal 0033           __size_of_oneSecDelay 0014                        ??_trans 0001  
                   __pbssBANK0 00FA                __CFG_PLLCFG$OFF 000000                      PRC@a_1120 0039  
                    PRC@a_1113 0032                      PRC@a_1114 0033                      PRC@a_1115 0034  
                    PRC@a_1116 0035                      PRC@a_1117 0036                      PRC@a_1118 0037  
                    PRC@a_1119 0038                     _clearPorts 7164             __CFG_CCP2MX$PORTC1 000000  
      __size_of_classifyColors 0134             __CFG_CCP3MX$PORTB5 000000                        _CCP1CON 000FBD  
                      _CCP5CON 000F54                      ?_capTouch 0001                      ?___xxtofl 0001  
                      _SPBRGH1 000FB0              __end_of_calibrate 7CAE     displayColorDetected@sensor 0003  
        __end_of_setupPWMRight 6F2E                ??_setADCChannel 0001                      ?_navigate 0001  
                  PRC@message2 002C              __end_of_aveSensor 70C0                __CFG_PWRTEN$OFF 000000  
                      _Lranges 0056                        __Hparam 0000                        _Mranges 00E1  
                      __Lparam 0000                      ?_setupADC 0001                        _Rranges 00DC  
            RCE@nCharsReceived 00F7                      ?_setupOSC 0001                        ___flmul 7CAE  
                      ___fltol 7434                   error@message 0002                        __pcinit 710E  
                      __ramtop 0600                        __ptext0 6E60                        __ptext1 6EA8  
                      __ptext2 6F2E                        __ptext3 6E56                        __ptext4 7164  
                      __ptext5 74EE                        __ptext6 70C0                        __ptext7 6FC6  
                      __ptext8 6E82                        __ptext9 6F08                 _readAllSensors 7000  
                      _msDelay 71BE                        _readADC 6E4C                   __size_of_RCE 010C  
                 __size_of_PRC 0184                     ??_capTouch 0033                      _T2CONbits 000FBA  
                 __size_of_abs 0032                     ??___xxtofl 0005                      _T4CONbits 000F51  
         end_of_initialization 715A           __size_of_setupSerial 0030                  __Lmediumconst 0000  
                   ??_navigate 0010                  ?_setupPWMLeft 0001                    ?_clearPorts 0001  
                   aveSensor@a 000A                     aveSensor@s 0006                     ??_setupADC 0001  
                 oneSecDelay@a 0033                     ??_setupOSC 0001                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     _sensorVals 00D2         __end_of_readAllSensors 703C  
                    _PORTAbits 000F80                      _PORTCbits 000F82                      _PORTEbits 000F84  
          classifyColors@F6047 00A8                  ___xxtofl@sign 0009                      _TRISBbits 000F93  
                    _TRISCbits 000F94                      _TRISEbits 000F96                    ___flmul@grs 001C  
        aveSensor@measurements 0007                 ??_setupPWMLeft 0001               msDelay@delayInMs 0032  
                   _stopMotors 6E82  __size_of_displayColorDetected 0088                 _classifyColors 75FA  
              ?_readAllSensors 0001                  __pidataCOMRAM 6E76            start_initialization 710E  
    __size_of_displayRaceColor 003E                    __end_of_RCE 75FA                    __end_of_PRC 79F2  
          __size_of_clearPorts 005A                    __end_of_abs 6F90                     error@F6069 00BB  
       __end_of_classifyColors 772E                 _sensorChannels 00C2                     RCE@message 00E6  
                  __pdataBANK0 0060                       RCE@F6083 009A                      ___flmul@a 0013  
                    ___flmul@b 000F                  ??_oneSecDelay 0033                  __pcstackBANK0 00E6  
            __size_of_capTouch 007E              __size_of___xxtofl 0140     classifyColors@sensorRanges 0005  
                     PRC@F6015 0060                       PRC@F6017 00C8                      _calibrate 79F2  
                  ?_stopMotors 0001                ?_classifyColors 0001              __size_of_navigate 003A  
                    _aveSensor 707A                       ?___flmul 000F                       ?___fltol 0028  
            __size_of_setupADC 0022              __size_of_setupOSC 000A               __CFG_PRICLKEN$ON 000000  
         __end_of_setupPWMLeft 6F08                       ?_msDelay 0001                      capTouch@a 0051  
                     ?_readADC 0001                     PRC@message 000C                      _raceColor 00B2  
                     _CCPTMRS0 000F49                       _CCPTMRS1 000F48          calibrate@samples_1096 003A  
        calibrate@samples_1097 003B          calibrate@samples_1098 003C          calibrate@samples_1099 003D  
               __size_of_error 0036                 __size_of_pyCal 004E                 __size_of_trans 000C  
          __end_of_oneSecDelay 6EA8                     ?_calibrate 0001          __end_of_setADCChannel 7326  
                     _PIE1bits 000F9D                       _PIE5bits 000F7D                   ??_clearPorts 0001  
                     _PIR1bits 000F9E                       _PIR5bits 000F7E               __CFG_WDTPS$32768 000000  
                   ?_aveSensor 0001         __size_of_setupPWMRight 0026                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0                readAllSensors@a 000B                       _LLranges 005B  
             _displayRaceColor 703C            __size_of_stopMotors 0012                  ??_setupSerial 0001  
           __end_of_clearPorts 71BE                      copy_data0 7122                      copy_data1 7142  
                     _RRranges 00D7                       __Hrparam 0000               ??_readAllSensors 000B  
                     __Lrparam 0000             __CFG_BOREN$SBORDIS 000000              __CFG_P2BMX$PORTD2 000000  
             __size_of___flmul 0352               __size_of___fltol 00BA                     _ANSELBbits 000F39  
                   _ANSELCbits 000F3A                       _capTouch 7224               __size_of_msDelay 0066  
             __size_of_readADC 000A                       ___xxtofl 772E   __end_of_displayColorDetected 7434  
                  _oneSecDelay 6E94                       __ptext10 6EE2                       __ptext11 6EC0  
                     __ptext20 71BE                       __ptext12 7000                       __ptext21 772E  
                     __ptext13 703C                       __ptext22 7434                       __ptext14 73AC  
                     __ptext23 7CAE                       __ptext15 75FA                       __ptext24 707A  
                     __ptext16 7224                       __ptext25 72A2                       __ptext17 6F5E  
                     __ptext26 6E4C                       __ptext18 79F2                       __ptext27 786E  
                     __ptext19 6E94                       __ptext28 6F90                       __ptext29 6E6A  
                _setupPWMRight 6F08                    ??_calibrate 0034                  __size_of_main 000A  
                __size_of_init 0018                       _navigate 6FC6            __end_of_setupSerial 6F5E  
                     _setupADC 6EC0                       _setupOSC 6E56                    ??_aveSensor 0004  
        __size_of_setupPWMLeft 0026                     _INTCONbits 000FF2               ??_classifyColors 0001  
               ?_setupPWMRight 0001                   _setupPWMLeft 6EE2                   ??_stopMotors 0001  
                   _OSCCONbits 000FD3                aveSensor@result 0009              __CFG_T3CMX$PORTC0 000000  
           __end_of_stopMotors 6E94                    _setupSerial 6F2E              __CFG_FOSC$INTIO67 000000  
     __end_of_displayRaceColor 707A           _displayColorDetected 73AC  
