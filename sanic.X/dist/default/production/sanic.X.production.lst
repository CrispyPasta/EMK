

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 25 23:59:07 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42  0000                     
    43                           ; Version 2.05
    44                           ; Generated 20/12/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F45K22 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  006F31                     __pidataCOMRAM:
    80                           	opt callstack 0
    81                           
    82                           ;initializer for _col
    83  006F31  42                 	db	66
    84                           
    85                           ;initializer for _size
    86  006F32  05                 	db	5
    87                           
    88                           ;initializer for _LLranges
    89  006F33  8C                 	db	140
    90  006F34  A8                 	db	168
    91  006F35  B9                 	db	185
    92  006F36  B9                 	db	185
    93  006F37  FF                 	db	255
    94                           
    95                           	psect	idataBANK0
    96  0072D3                     __pidataBANK0:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for PRC@F6010
   100  0072D3  0A                 	db	10
   101  0072D4  57                 	db	87
   102  0072D5  68                 	db	104
   103  0072D6  61                 	db	97
   104  0072D7  74                 	db	116
   105  0072D8  20                 	db	32
   106  0072D9  63                 	db	99
   107  0072DA  6F                 	db	111
   108  0072DB  6C                 	db	108
   109  0072DC  6F                 	db	111
   110  0072DD  72                 	db	114
   111  0072DE  20                 	db	32
   112  0072DF  73                 	db	115
   113  0072E0  68                 	db	104
   114  0072E1  6F                 	db	111
   115  0072E2  75                 	db	117
   116  0072E3  6C                 	db	108
   117  0072E4  64                 	db	100
   118  0072E5  20                 	db	32
   119  0072E6  73                 	db	115
   120  0072E7  61                 	db	97
   121  0072E8  6E                 	db	110
   122  0072E9  69                 	db	105
   123  0072EA  63                 	db	99
   124  0072EB  20                 	db	32
   125  0072EC  72                 	db	114
   126  0072ED  61                 	db	97
   127  0072EE  63                 	db	99
   128  0072EF  65                 	db	101
   129  0072F0  3F                 	db	63
   130  0072F1  0A                 	db	10
   131  0072F2  00                 	db	0
   132                           
   133                           ;initializer for RCE@F6068
   134  0072F3  0A                 	db	10
   135  0072F4  53                 	db	83
   136  0072F5  61                 	db	97
   137  0072F6  6E                 	db	110
   138  0072F7  69                 	db	105
   139  0072F8  63                 	db	99
   140  0072F9  20                 	db	32
   141  0072FA  72                 	db	114
   142  0072FB  61                 	db	97
   143  0072FC  63                 	db	99
   144  0072FD  65                 	db	101
   145  0072FE  73                 	db	115
   146  0072FF  20                 	db	32
   147  007300  00                 	db	0
   148                           
   149                           ;initializer for classifyColors@F6032
   150  007301  57                 	db	low _LLranges
   151  007302  00                 	db	high _LLranges
   152  007303  CC                 	db	low _Lranges
   153  007304  00                 	db	high _Lranges
   154  007305  C7                 	db	low _Mranges
   155  007306  00                 	db	high _Mranges
   156  007307  C2                 	db	low _Rranges
   157  007308  00                 	db	high _Rranges
   158  007309  BD                 	db	low _RRranges
   159  00730A  00                 	db	high _RRranges
   160                           
   161                           ;initializer for _raceColor
   162  00730B  30                 	db	48
   163  00730C  30                 	db	48
   164  00730D  30                 	db	48
   165  00730E  30                 	db	48
   166  00730F  31                 	db	49
   167  007310  30                 	db	48
   168  007311  30                 	db	48
   169  007312  30                 	db	48
   170  007313  00                 	db	0
   171                           
   172                           ;initializer for error@F6054
   173  007314  45                 	db	69
   174  007315  52                 	db	82
   175  007316  52                 	db	82
   176  007317  4F                 	db	79
   177  007318  52                 	db	82
   178  007319  0A                 	db	10
   179  00731A  00                 	db	0
   180                           
   181                           ;initializer for _sensorChannels
   182  00731B  0C                 	db	12
   183  00731C  0A                 	db	10
   184  00731D  08                 	db	8
   185  00731E  09                 	db	9
   186  00731F  0D                 	db	13
   187  007320  0F                 	db	15
   188                           
   189                           ;initializer for PRC@F6012
   190  007321  0A                 	db	10
   191  007322  53                 	db	83
   192  007323  65                 	db	101
   193  007324  74                 	db	116
   194  007325  00                 	db	0
   195                           
   196                           ;initializer for calibrate@F6001
   197  007326  0C                 	db	12
   198  007327  08                 	db	8
   199  007328  09                 	db	9
   200  007329  0A                 	db	10
   201  00732A  0D                 	db	13
   202                           
   203                           ;initializer for _sensorVals
   204  00732B  78                 	db	120
   205  00732C  AA                 	db	170
   206  00732D  AA                 	db	170
   207  00732E  BE                 	db	190
   208  00732F  FA                 	db	250
   209                           
   210                           ;initializer for _RRranges
   211  007330  8C                 	db	140
   212  007331  B9                 	db	185
   213  007332  C3                 	db	195
   214  007333  C3                 	db	195
   215  007334  FF                 	db	255
   216                           
   217                           ;initializer for _Rranges
   218  007335  8C                 	db	140
   219  007336  AA                 	db	170
   220  007337  AF                 	db	175
   221  007338  D2                 	db	210
   222  007339  FF                 	db	255
   223                           
   224                           ;initializer for _Mranges
   225  00733A  82                 	db	130
   226  00733B  A5                 	db	165
   227  00733C  AF                 	db	175
   228  00733D  BC                 	db	188
   229  00733E  FF                 	db	255
   230                           
   231                           ;initializer for _Lranges
   232  00733F  82                 	db	130
   233  007340  B2                 	db	178
   234  007341  B4                 	db	180
   235  007342  BC                 	db	188
   236  007343  FF                 	db	255
   237  0000                     _T6CON	set	3914
   238  0000                     _PR6	set	3915
   239  0000                     _TMR6	set	3916
   240  0000                     _ANSELCbits	set	3898
   241  0000                     _ANSELBbits	set	3897
   242  0000                     _ANSELE	set	3900
   243  0000                     _ANSELD	set	3899
   244  0000                     _ANSELC	set	3898
   245  0000                     _ANSELB	set	3897
   246  0000                     _ANSELA	set	3896
   247  0000                     _T4CONbits	set	3921
   248  0000                     _TMR4	set	3923
   249  0000                     _T4CON	set	3921
   250  0000                     _CCPTMRS1	set	3912
   251  0000                     _CCPR5L	set	3925
   252  0000                     _PR4	set	3922
   253  0000                     _CCP5CON	set	3924
   254  0000                     _CCPTMRS0	set	3913
   255  0000                     _FSR0	set	4073
   256  0000                     _INTCONbits	set	4082
   257  0000                     _PIR5bits	set	3966
   258  0000                     _ADRESH	set	4036
   259  0000                     _TRISBbits	set	3987
   260  0000                     _TXREG	set	4013
   261  0000                     _PORTEbits	set	3972
   262  0000                     _PORTCbits	set	3970
   263  0000                     _RCREG	set	4014
   264  0000                     _PORTAbits	set	3968
   265  0000                     _ADCON0bits	set	4034
   266  0000                     _ADCON1	set	4033
   267  0000                     _ADCON2bits	set	4032
   268  0000                     _BAUDCON1bits	set	4024
   269  0000                     _SPBRGH1	set	4016
   270  0000                     _SPBRG1	set	4015
   271  0000                     _RCSTA1	set	4011
   272  0000                     _TXSTA1	set	4012
   273  0000                     _PIR1bits	set	3998
   274  0000                     _OSCCONbits	set	4051
   275  0000                     _TRISE	set	3990
   276  0000                     _LATE	set	3981
   277  0000                     _PORTE	set	3972
   278  0000                     _TRISD	set	3989
   279  0000                     _LATD	set	3980
   280  0000                     _PORTD	set	3971
   281  0000                     _TRISC	set	3988
   282  0000                     _LATC	set	3979
   283  0000                     _PORTC	set	3970
   284  0000                     _TRISB	set	3987
   285  0000                     _LATB	set	3978
   286  0000                     _PORTB	set	3969
   287  0000                     _TRISA	set	3986
   288  0000                     _LATA	set	3977
   289  0000                     _PORTA	set	3968
   290  0000                     _PIE5bits	set	3965
   291  0000                     _TRISEbits	set	3990
   292  0000                     _T2CONbits	set	4026
   293  0000                     _PIE1bits	set	3997
   294  0000                     _TMR2	set	4028
   295  0000                     _T2CON	set	4026
   296  0000                     _TRISCbits	set	3988
   297  0000                     _CCPR1L	set	4030
   298  0000                     _PR2	set	4027
   299  0000                     _CCP1CON	set	4029
   300                           
   301                           ; #config settings
   302  0000                     
   303                           	psect	cinit
   304  0071BC                     __pcinit:
   305                           	opt callstack 0
   306  0071BC                     start_initialization:
   307                           	opt callstack 0
   308  0071BC                     __initialization:
   309                           	opt callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK0 (113 bytes)
   312                           ; load TBLPTR registers with __pidataBANK0
   313  0071BC  0ED3               	movlw	low __pidataBANK0
   314  0071BE  6EF6               	movwf	tblptrl,c
   315  0071C0  0E72               	movlw	high __pidataBANK0
   316  0071C2  6EF7               	movwf	tblptrh,c
   317  0071C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   318  0071C6  6EF8               	movwf	tblptru,c
   319  0071C8  EE00  F060         	lfsr	0,__pdataBANK0
   320  0071CC  EE10 F071          	lfsr	1,113
   321  0071D0                     copy_data0:
   322  0071D0  0009               	tblrd		*+
   323  0071D2  CFF5 FFEE          	movff	tablat,postinc0
   324  0071D6  50E5               	movf	postdec1,w,c
   325  0071D8  50E1               	movf	fsr1l,w,c
   326  0071DA  E1FA               	bnz	copy_data0
   327                           
   328                           ; Initialize objects allocated to COMRAM (7 bytes)
   329                           ; load TBLPTR registers with __pidataCOMRAM
   330  0071DC  0E31               	movlw	low __pidataCOMRAM
   331  0071DE  6EF6               	movwf	tblptrl,c
   332  0071E0  0E6F               	movlw	high __pidataCOMRAM
   333  0071E2  6EF7               	movwf	tblptrh,c
   334  0071E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   335  0071E6  6EF8               	movwf	tblptru,c
   336  0071E8  EE00  F055         	lfsr	0,__pdataCOMRAM
   337  0071EC  EE10 F007          	lfsr	1,7
   338  0071F0                     copy_data1:
   339  0071F0  0009               	tblrd		*+
   340  0071F2  CFF5 FFEE          	movff	tablat,postinc0
   341  0071F6  50E5               	movf	postdec1,w,c
   342  0071F8  50E1               	movf	fsr1l,w,c
   343  0071FA  E1FA               	bnz	copy_data1
   344                           
   345                           ; Clear objects allocated to BANK0 (5 bytes)
   346  0071FC  0100               	movlb	0
   347  0071FE  6BD5               	clrf	(__pbssBANK0+4)& (0+255),b
   348  007200  6BD4               	clrf	(__pbssBANK0+3)& (0+255),b
   349  007202  6BD3               	clrf	(__pbssBANK0+2)& (0+255),b
   350  007204  6BD2               	clrf	(__pbssBANK0+1)& (0+255),b
   351  007206  6BD1               	clrf	__pbssBANK0& (0+255),b
   352  007208                     end_of_initialization:
   353                           	opt callstack 0
   354  007208                     __end_of__initialization:
   355                           	opt callstack 0
   356  007208  0E00               	movlw	low (__Lmediumconst shr (0+16))
   357  00720A  6EF8               	movwf	tblptru,c
   358  00720C  0100               	movlb	0
   359  00720E  EFA6  F037         	goto	_main	;jump to C main() function
   360                           
   361                           	psect	dataCOMRAM
   362  000055                     __pdataCOMRAM:
   363                           	opt callstack 0
   364  000055                     _col:
   365                           	opt callstack 0
   366  000055                     	ds	1
   367  000056                     _size:
   368                           	opt callstack 0
   369  000056                     	ds	1
   370  000057                     _LLranges:
   371                           	opt callstack 0
   372  000057                     	ds	5
   373                           
   374                           	psect	bssBANK0
   375  0000D1                     __pbssBANK0:
   376                           	opt callstack 0
   377  0000D1                     _colorsDetected:
   378                           	opt callstack 0
   379  0000D1                     	ds	5
   380                           
   381                           	psect	dataBANK0
   382  000060                     __pdataBANK0:
   383                           	opt callstack 0
   384  000060                     PRC@F6010:
   385                           	opt callstack 0
   386  000060                     	ds	32
   387  000080                     RCE@F6068:
   388                           	opt callstack 0
   389  000080                     	ds	14
   390  00008E                     classifyColors@F6032:
   391                           	opt callstack 0
   392  00008E                     	ds	10
   393  000098                     _raceColor:
   394                           	opt callstack 0
   395  000098                     	ds	9
   396  0000A1                     error@F6054:
   397                           	opt callstack 0
   398  0000A1                     	ds	7
   399  0000A8                     _sensorChannels:
   400                           	opt callstack 0
   401  0000A8                     	ds	6
   402  0000AE                     PRC@F6012:
   403                           	opt callstack 0
   404  0000AE                     	ds	5
   405  0000B3                     calibrate@F6001:
   406                           	opt callstack 0
   407  0000B3                     	ds	5
   408  0000B8                     _sensorVals:
   409                           	opt callstack 0
   410  0000B8                     	ds	5
   411  0000BD                     _RRranges:
   412                           	opt callstack 0
   413  0000BD                     	ds	5
   414  0000C2                     _Rranges:
   415                           	opt callstack 0
   416  0000C2                     	ds	5
   417  0000C7                     _Mranges:
   418                           	opt callstack 0
   419  0000C7                     	ds	5
   420  0000CC                     _Lranges:
   421                           	opt callstack 0
   422  0000CC                     	ds	5
   423                           
   424                           	psect	cstackCOMRAM
   425  000001                     __pcstackCOMRAM:
   426                           	opt callstack 0
   427  000001                     ??_classifyColors:
   428  000001                     ??_displayColorDetected:
   429  000001                     ??_setADCChannel:
   430  000001                     ?___xxtofl:
   431                           	opt callstack 0
   432  000001                     trans@s:
   433                           	opt callstack 0
   434  000001                     ___xxtofl@val:
   435                           	opt callstack 0
   436                           
   437                           ; 4 bytes @ 0x0
   438  000001                     	ds	1
   439  000002                     error@message:
   440                           	opt callstack 0
   441                           
   442                           ; 7 bytes @ 0x1
   443  000002                     	ds	1
   444  000003                     displayColorDetected@sensor:
   445                           	opt callstack 0
   446  000003                     setADCChannel@channel:
   447                           	opt callstack 0
   448                           
   449                           ; 1 bytes @ 0x2
   450  000003                     	ds	1
   451  000004                     ??_aveSensor:
   452                           
   453                           ; 1 bytes @ 0x3
   454  000004                     	ds	1
   455  000005                     ??___xxtofl:
   456  000005                     classifyColors@sensorRanges:
   457                           	opt callstack 0
   458                           
   459                           ; 10 bytes @ 0x4
   460  000005                     	ds	1
   461  000006                     aveSensor@s:
   462                           	opt callstack 0
   463                           
   464                           ; 1 bytes @ 0x5
   465  000006                     	ds	1
   466  000007                     aveSensor@measurements:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x6
   470  000007                     	ds	2
   471  000009                     aveSensor@result:
   472                           	opt callstack 0
   473  000009                     error@a:
   474                           	opt callstack 0
   475  000009                     ___xxtofl@sign:
   476                           	opt callstack 0
   477                           
   478                           ; 1 bytes @ 0x8
   479  000009                     	ds	1
   480  00000A                     ??_PRC:
   481  00000A                     aveSensor@a:
   482                           	opt callstack 0
   483  00000A                     ___xxtofl@exp:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0x9
   487  00000A                     	ds	1
   488  00000B                     readAllSensors@a:
   489                           	opt callstack 0
   490  00000B                     ___xxtofl@arg:
   491                           	opt callstack 0
   492                           
   493                           ; 4 bytes @ 0xA
   494  00000B                     	ds	1
   495  00000C                     PRC@message:
   496                           	opt callstack 0
   497                           
   498                           ; 32 bytes @ 0xB
   499  00000C                     	ds	3
   500  00000F                     ?___flmul:
   501                           	opt callstack 0
   502  00000F                     classifyColors@a:
   503                           	opt callstack 0
   504  00000F                     ___flmul@b:
   505                           	opt callstack 0
   506                           
   507                           ; 4 bytes @ 0xE
   508  00000F                     	ds	1
   509  000010                     
   510                           ; 1 bytes @ 0xF
   511  000010                     	ds	3
   512  000013                     ___flmul@a:
   513                           	opt callstack 0
   514                           
   515                           ; 4 bytes @ 0x12
   516  000013                     	ds	4
   517  000017                     ??___flmul:
   518                           
   519                           ; 1 bytes @ 0x16
   520  000017                     	ds	4
   521  00001B                     ___flmul@sign:
   522                           	opt callstack 0
   523                           
   524                           ; 1 bytes @ 0x1A
   525  00001B                     	ds	1
   526  00001C                     ___flmul@grs:
   527                           	opt callstack 0
   528                           
   529                           ; 4 bytes @ 0x1B
   530  00001C                     	ds	4
   531  000020                     ___flmul@aexp:
   532                           	opt callstack 0
   533                           
   534                           ; 1 bytes @ 0x1F
   535  000020                     	ds	1
   536  000021                     ___flmul@bexp:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x20
   540  000021                     	ds	1
   541  000022                     ___flmul@prod:
   542                           	opt callstack 0
   543                           
   544                           ; 4 bytes @ 0x21
   545  000022                     	ds	4
   546  000026                     ___flmul@temp:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x25
   550  000026                     	ds	2
   551  000028                     ?___fltol:
   552                           	opt callstack 0
   553  000028                     ___fltol@f1:
   554                           	opt callstack 0
   555                           
   556                           ; 4 bytes @ 0x27
   557  000028                     	ds	4
   558  00002C                     ??___fltol:
   559  00002C                     PRC@message2:
   560                           	opt callstack 0
   561                           
   562                           ; 5 bytes @ 0x2B
   563  00002C                     	ds	4
   564  000030                     ___fltol@sign1:
   565                           	opt callstack 0
   566                           
   567                           ; 1 bytes @ 0x2F
   568  000030                     	ds	1
   569  000031                     PRC@a:
   570                           	opt callstack 0
   571  000031                     ___fltol@exp1:
   572                           	opt callstack 0
   573                           
   574                           ; 1 bytes @ 0x30
   575  000031                     	ds	1
   576  000032                     PRC@a_1108:
   577                           	opt callstack 0
   578  000032                     msDelay@delayInMs:
   579                           	opt callstack 0
   580                           
   581                           ; 1 bytes @ 0x31
   582  000032                     	ds	1
   583  000033                     PRC@a_1109:
   584                           	opt callstack 0
   585  000033                     oneSecDelay@a:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x32
   589  000033                     	ds	1
   590  000034                     PRC@a_1110:
   591                           	opt callstack 0
   592  000034                     pyCal@a:
   593                           	opt callstack 0
   594  000034                     calibrate@sensors:
   595                           	opt callstack 0
   596                           
   597                           ; 5 bytes @ 0x33
   598  000034                     	ds	1
   599  000035                     PRC@a_1111:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x34
   603  000035                     	ds	1
   604  000036                     PRC@a_1112:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0x35
   608  000036                     	ds	1
   609  000037                     PRC@a_1113:
   610                           	opt callstack 0
   611                           
   612                           ; 1 bytes @ 0x36
   613  000037                     	ds	1
   614  000038                     PRC@a_1114:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0x37
   618  000038                     	ds	1
   619  000039                     calibrate@samples:
   620                           	opt callstack 0
   621  000039                     PRC@a_1115:
   622                           	opt callstack 0
   623                           
   624                           ; 1 bytes @ 0x38
   625  000039                     	ds	1
   626  00003A                     calibrate@samples_1091:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0x39
   630  00003A                     	ds	1
   631  00003B                     calibrate@samples_1092:
   632                           	opt callstack 0
   633                           
   634                           ; 1 bytes @ 0x3A
   635  00003B                     	ds	1
   636  00003C                     calibrate@samples_1093:
   637                           	opt callstack 0
   638                           
   639                           ; 1 bytes @ 0x3B
   640  00003C                     	ds	1
   641  00003D                     calibrate@samples_1094:
   642                           	opt callstack 0
   643                           
   644                           ; 1 bytes @ 0x3C
   645  00003D                     	ds	1
   646  00003E                     calibrate@temp:
   647                           	opt callstack 0
   648                           
   649                           ; 1 bytes @ 0x3D
   650  00003E                     	ds	1
   651  00003F                     ??_RCE:
   652                           
   653                           ; 1 bytes @ 0x3E
   654  00003F                     	ds	2
   655  000041                     RCE@message:
   656                           	opt callstack 0
   657                           
   658                           ; 14 bytes @ 0x40
   659  000041                     	ds	14
   660  00004F                     RCE@commandReceived:
   661                           	opt callstack 0
   662                           
   663                           ; 3 bytes @ 0x4E
   664  00004F                     	ds	3
   665  000052                     RCE@nCharsReceived:
   666                           	opt callstack 0
   667                           
   668                           ; 1 bytes @ 0x51
   669  000052                     	ds	1
   670  000053                     RCE@a:
   671                           	opt callstack 0
   672                           
   673                           ; 1 bytes @ 0x52
   674  000053                     	ds	1
   675  000054                     RCE@a_1244:
   676                           	opt callstack 0
   677                           
   678                           ; 1 bytes @ 0x53
   679  000054                     	ds	1
   680  000055                     
   681                           ; 1 bytes @ 0x54
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 78 in file "sanic.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   701 ;;      Params:         0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels required when called:    5
   707 ;; This function calls:
   708 ;;		_RCE
   709 ;;		_init
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text0
   716  006F4C                     __ptext0:
   717                           	opt callstack 0
   718  006F4C                     _main:
   719                           	opt callstack 26
   720                           
   721                           ;sanic.c: 95:     init();
   722                           
   723                           ;incstack = 0
   724  006F4C  ECC4  F037         	call	_init	;wreg free
   725                           
   726                           ;sanic.c: 96:     RCE();
   727  006F50  EC85  F03A         	call	_RCE	;wreg free
   728  006F54                     l419:
   729  006F54  D7FF               	goto	l419
   730  006F56                     __end_of_main:
   731                           	opt callstack 0
   732                           
   733 ;; *************** function _init *****************
   734 ;; Defined at:
   735 ;;		line 107 in file "sanic.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   749 ;;      Params:         0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    1
   756 ;; This function calls:
   757 ;;		_clearPorts
   758 ;;		_setupADC
   759 ;;		_setupOSC
   760 ;;		_setupSerial
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text1
   767  006F88                     __ptext1:
   768                           	opt callstack 0
   769  006F88                     _init:
   770                           	opt callstack 29
   771                           
   772                           ;sanic.c: 108:     raceColor[3] = 1;
   773                           
   774                           ;incstack = 0
   775  006F88  0E01               	movlw	1
   776  006F8A  0100               	movlb	0	; () banked
   777  006F8C  6F9B               	movwf	(_raceColor+3)& (0+255),b
   778                           
   779                           ; BSR set to: 0
   780                           ;sanic.c: 109:     setupOSC();
   781  006F8E  ECA1  F037         	call	_setupOSC	;wreg free
   782                           
   783                           ;sanic.c: 110:     clearPorts();
   784  006F92  EC09  F039         	call	_clearPorts	;wreg free
   785                           
   786                           ;sanic.c: 111:     setupSerial();
   787  006F96  EC07  F038         	call	_setupSerial	;wreg free
   788                           
   789                           ;sanic.c: 112:     setupADC();
   790  006F9A  ECD0  F037         	call	_setupADC	;wreg free
   791  006F9E  0012               	return		;funcret
   792  006FA0                     __end_of_init:
   793                           	opt callstack 0
   794                           
   795 ;; *************** function _setupSerial *****************
   796 ;; Defined at:
   797 ;;		line 96 in file "./functions.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         0       0       0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_init
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text2
   825  00700E                     __ptext2:
   826                           	opt callstack 0
   827  00700E                     _setupSerial:
   828                           	opt callstack 29
   829                           
   830                           ;./functions.c: 98:     PIE1bits.RC1IE = 0;
   831                           
   832                           ;incstack = 0
   833  00700E  9A9D               	bcf	3997,5,c	;volatile
   834                           
   835                           ;./functions.c: 99:     PIE1bits.TX1IE = 0;
   836  007010  989D               	bcf	3997,4,c	;volatile
   837                           
   838                           ;./functions.c: 100:     PIR1bits.RCIF = 0;
   839  007012  9A9E               	bcf	3998,5,c	;volatile
   840                           
   841                           ;./functions.c: 102:     FSR0 = 0;
   842  007014  0E00               	movlw	0
   843  007016  6EEA               	movwf	fsr0h,c	;volatile
   844  007018  0E00               	movlw	0
   845  00701A  6EE9               	movwf	fsr0l,c	;volatile
   846                           
   847                           ;./functions.c: 103:     TXSTA1 = 0b00100100;
   848  00701C  0E24               	movlw	36
   849  00701E  6EAC               	movwf	4012,c	;volatile
   850                           
   851                           ;./functions.c: 104:     RCSTA1 = 0b10010000;
   852  007020  0E90               	movlw	144
   853  007022  6EAB               	movwf	4011,c	;volatile
   854                           
   855                           ;./functions.c: 106:     SPBRG1 = 25;
   856  007024  0E19               	movlw	25
   857  007026  6EAF               	movwf	4015,c	;volatile
   858                           
   859                           ;./functions.c: 107:     SPBRGH1 = 0;
   860  007028  0E00               	movlw	0
   861  00702A  6EB0               	movwf	4016,c	;volatile
   862                           
   863                           ;./functions.c: 108:     BAUDCON1bits.BRG16 = 0;
   864  00702C  96B8               	bcf	4024,3,c	;volatile
   865                           
   866                           ;./functions.c: 109:     TRISCbits.RC6 = 1;
   867  00702E  8C94               	bsf	3988,6,c	;volatile
   868                           
   869                           ;./functions.c: 110:     TRISCbits.RC7 = 1;
   870  007030  8E94               	bsf	3988,7,c	;volatile
   871                           
   872                           ;./functions.c: 112:     PORTC = 0;
   873  007032  0E00               	movlw	0
   874  007034  6E82               	movwf	3970,c	;volatile
   875                           
   876                           ;./functions.c: 113:     ANSELC = 0;
   877  007036  0E00               	movlw	0
   878  007038  010F               	movlb	15	; () banked
   879  00703A  6F3A               	movwf	58,b	;volatile
   880                           
   881                           ; BSR set to: 15
   882  00703C  0012               	return		;funcret
   883  00703E                     __end_of_setupSerial:
   884                           	opt callstack 0
   885                           
   886 ;; *************** function _setupOSC *****************
   887 ;; Defined at:
   888 ;;		line 90 in file "./functions.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   902 ;;      Params:         0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_init
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916  006F42                     __ptext3:
   917                           	opt callstack 0
   918  006F42                     _setupOSC:
   919                           	opt callstack 29
   920                           
   921                           ;./functions.c: 92:     OSCCONbits.IRCF = 0b101;
   922                           
   923                           ; BSR set to: 15
   924                           ;incstack = 0
   925  006F42  50D3               	movf	4051,w,c	;volatile
   926  006F44  0B8F               	andlw	-113
   927  006F46  0950               	iorlw	80
   928  006F48  6ED3               	movwf	4051,c	;volatile
   929  006F4A  0012               	return		;funcret
   930  006F4C                     __end_of_setupOSC:
   931                           	opt callstack 0
   932                           
   933 ;; *************** function _clearPorts *****************
   934 ;; Defined at:
   935 ;;		line 59 in file "./functions.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   949 ;;      Params:         0       0       0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_init
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text4
   963  007212                     __ptext4:
   964                           	opt callstack 0
   965  007212                     _clearPorts:
   966                           	opt callstack 29
   967                           
   968                           ;./functions.c: 61:     PORTA = 0;
   969                           
   970                           ;incstack = 0
   971  007212  0E00               	movlw	0
   972  007214  6E80               	movwf	3968,c	;volatile
   973                           
   974                           ;./functions.c: 62:     LATA = 0;
   975  007216  0E00               	movlw	0
   976  007218  6E89               	movwf	3977,c	;volatile
   977                           
   978                           ;./functions.c: 63:     TRISA = 0;
   979  00721A  0E00               	movlw	0
   980  00721C  6E92               	movwf	3986,c	;volatile
   981                           
   982                           ;./functions.c: 64:     ANSELA = 0;
   983  00721E  0E00               	movlw	0
   984  007220  010F               	movlb	15	; () banked
   985  007222  6F38               	movwf	56,b	;volatile
   986                           
   987                           ;./functions.c: 66:     PORTB = 0;
   988  007224  0E00               	movlw	0
   989  007226  6E81               	movwf	3969,c	;volatile
   990                           
   991                           ;./functions.c: 67:     LATB = 0;
   992  007228  0E00               	movlw	0
   993  00722A  6E8A               	movwf	3978,c	;volatile
   994                           
   995                           ;./functions.c: 68:     TRISB = 0;
   996  00722C  0E00               	movlw	0
   997  00722E  6E93               	movwf	3987,c	;volatile
   998                           
   999                           ;./functions.c: 69:     ANSELB = 0;
  1000  007230  0E00               	movlw	0
  1001  007232  6F39               	movwf	57,b	;volatile
  1002                           
  1003                           ;./functions.c: 71:     PORTC = 0;
  1004  007234  0E00               	movlw	0
  1005  007236  6E82               	movwf	3970,c	;volatile
  1006                           
  1007                           ;./functions.c: 72:     LATC = 0;
  1008  007238  0E00               	movlw	0
  1009  00723A  6E8B               	movwf	3979,c	;volatile
  1010                           
  1011                           ;./functions.c: 73:     TRISC = 0;
  1012  00723C  0E00               	movlw	0
  1013  00723E  6E94               	movwf	3988,c	;volatile
  1014                           
  1015                           ;./functions.c: 74:     ANSELC = 0;
  1016  007240  0E00               	movlw	0
  1017  007242  6F3A               	movwf	58,b	;volatile
  1018                           
  1019                           ;./functions.c: 76:     PORTD = 0;
  1020  007244  0E00               	movlw	0
  1021  007246  6E83               	movwf	3971,c	;volatile
  1022                           
  1023                           ;./functions.c: 77:     LATD = 0;
  1024  007248  0E00               	movlw	0
  1025  00724A  6E8C               	movwf	3980,c	;volatile
  1026                           
  1027                           ;./functions.c: 78:     TRISD = 0;
  1028  00724C  0E00               	movlw	0
  1029  00724E  6E95               	movwf	3989,c	;volatile
  1030                           
  1031                           ;./functions.c: 79:     ANSELD = 0;
  1032  007250  0E00               	movlw	0
  1033  007252  6F3B               	movwf	59,b	;volatile
  1034                           
  1035                           ;./functions.c: 81:     PORTE = 0;
  1036  007254  0E00               	movlw	0
  1037  007256  6E84               	movwf	3972,c	;volatile
  1038                           
  1039                           ;./functions.c: 82:     LATE = 0;
  1040  007258  0E00               	movlw	0
  1041  00725A  6E8D               	movwf	3981,c	;volatile
  1042                           
  1043                           ;./functions.c: 83:     TRISE = 0;
  1044  00725C  0E00               	movlw	0
  1045  00725E  6E96               	movwf	3990,c	;volatile
  1046                           
  1047                           ;./functions.c: 84:     ANSELE = 0;
  1048  007260  0E00               	movlw	0
  1049  007262  6F3C               	movwf	60,b	;volatile
  1050                           
  1051                           ;./functions.c: 85:     raceColor[3] = 1;
  1052  007264  0E01               	movlw	1
  1053  007266  0100               	movlb	0	; () banked
  1054  007268  6F9B               	movwf	(_raceColor+3)& (0+255),b
  1055                           
  1056                           ; BSR set to: 0
  1057  00726A  0012               	return		;funcret
  1058  00726C                     __end_of_clearPorts:
  1059                           	opt callstack 0
  1060                           
  1061 ;; *************** function _RCE *****************
  1062 ;; Defined at:
  1063 ;;		line 115 in file "sanic.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  a               1   83[COMRAM] unsigned char 
  1068 ;;  a               1   82[COMRAM] unsigned char 
  1069 ;;  message        14   64[COMRAM] unsigned char [14]
  1070 ;;  commandRecei    3   78[COMRAM] unsigned char [3]
  1071 ;;  nCharsReceiv    1   81[COMRAM] unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1081 ;;      Params:         0       0       0       0       0       0       0
  1082 ;;      Locals:        20       0       0       0       0       0       0
  1083 ;;      Temps:          2       0       0       0       0       0       0
  1084 ;;      Totals:        22       0       0       0       0       0       0
  1085 ;;Total ram usage:       22 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    4
  1088 ;; This function calls:
  1089 ;;		_PRC
  1090 ;;		_calibrate
  1091 ;;		_error
  1092 ;;		_navigate
  1093 ;;		_pyCal
  1094 ;;		_trans
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text5
  1101  00750A                     __ptext5:
  1102                           	opt callstack 0
  1103  00750A                     _RCE:
  1104                           	opt callstack 26
  1105                           
  1106                           ;sanic.c: 117:         PORTD = 0b10100100;
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;incstack = 0
  1110                           ;sanic.c: 116:     while(1){
  1111  00750A  0EA4               	movlw	164
  1112  00750C  6E83               	movwf	3971,c	;volatile
  1113                           
  1114                           ;sanic.c: 119:         unsigned char message[] = "\nSanic races ";
  1115  00750E  EE20  F080         	lfsr	2,RCE@F6068
  1116  007512  EE10  F041         	lfsr	1,RCE@message
  1117  007516  0E0D               	movlw	13
  1118  007518                     u2291:
  1119  007518  CFDB FFE3          	movff	plusw2,plusw1
  1120  00751C  06E8               	decf	wreg,f,c
  1121  00751E  E2FC               	bc	u2291
  1122                           
  1123                           ;sanic.c: 121:         for (unsigned char a = 0; a < 13; a++)
  1124  007520  0E00               	movlw	0
  1125  007522  6E53               	movwf	RCE@a,c
  1126  007524                     l3069:
  1127                           
  1128                           ;sanic.c: 122:         {;sanic.c: 123:             trans(message[a]);
  1129  007524  0E41               	movlw	low RCE@message
  1130  007526  2453               	addwf	RCE@a,w,c
  1131  007528  6ED9               	movwf	fsr2l,c
  1132  00752A  6ADA               	clrf	fsr2h,c
  1133  00752C  0E00               	movlw	high RCE@message
  1134  00752E  22DA               	addwfc	fsr2h,f,c
  1135  007530  50DF               	movf	indf2,w,c
  1136  007532  ECAB  F037         	call	_trans
  1137                           
  1138                           ;sanic.c: 124:         }
  1139  007536  2A53               	incf	RCE@a,f,c
  1140  007538  0E0C               	movlw	12
  1141  00753A  6453               	cpfsgt	RCE@a,c
  1142  00753C  D7F3               	goto	l3069
  1143                           
  1144                           ;sanic.c: 126:         if (raceColor[3] == 1){
  1145  00753E  0100               	movlb	0	; () banked
  1146  007540  059B               	decf	(_raceColor+3)& (0+255),w,b
  1147  007542  A4D8               	btfss	status,2,c
  1148  007544  D004               	goto	l3079
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;sanic.c: 127:             trans('B');
  1152  007546  0E42               	movlw	66
  1153  007548  ECAB  F037         	call	_trans
  1154                           
  1155                           ;sanic.c: 128:         }
  1156  00754C  D011               	goto	l434
  1157  00754E                     l3079:
  1158                           
  1159                           ; BSR set to: 0
  1160  00754E  059A               	decf	(_raceColor+2)& (0+255),w,b
  1161  007550  A4D8               	btfss	status,2,c
  1162  007552  D004               	goto	l3083
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;sanic.c: 130:             trans('R');
  1166  007554  0E52               	movlw	82
  1167  007556  ECAB  F037         	call	_trans
  1168                           
  1169                           ;sanic.c: 131:         }
  1170  00755A  D00A               	goto	l434
  1171  00755C                     l3083:
  1172                           
  1173                           ; BSR set to: 0
  1174  00755C  0599               	decf	(_raceColor+1)& (0+255),w,b
  1175  00755E  A4D8               	btfss	status,2,c
  1176  007560  D004               	goto	l3087
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;sanic.c: 133:             trans('G');
  1180  007562  0E47               	movlw	71
  1181  007564  ECAB  F037         	call	_trans
  1182                           
  1183                           ;sanic.c: 134:         }
  1184  007568  D003               	goto	l434
  1185  00756A                     l3087:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;sanic.c: 136:             trans('n');
  1189  00756A  0E6E               	movlw	110
  1190  00756C  ECAB  F037         	call	_trans
  1191  007570                     l434:
  1192                           
  1193                           ;sanic.c: 138:         trans('\n');
  1194  007570  0E0A               	movlw	10
  1195  007572  ECAB  F037         	call	_trans
  1196                           
  1197                           ;sanic.c: 141:         INTCONbits.GIE = 0;
  1198  007576  9EF2               	bcf	4082,7,c	;volatile
  1199                           
  1200                           ;sanic.c: 142:         INTCONbits.PEIE = 0;
  1201  007578  9CF2               	bcf	4082,6,c	;volatile
  1202                           
  1203                           ;sanic.c: 143:         unsigned char nCharsReceived = 0;
  1204  00757A  0E00               	movlw	0
  1205  00757C  6E52               	movwf	RCE@nCharsReceived,c
  1206                           
  1207                           ;sanic.c: 144:         unsigned char commandReceived[3];;sanic.c: 146:         while(nCh
      +                          arsReceived < 3){
  1208  00757E  D00B               	goto	l3099
  1209  007580                     l440:
  1210                           
  1211                           ;sanic.c: 147:             if (PIR1bits.RC1IF){
  1212  007580  AA9E               	btfss	3998,5,c	;volatile
  1213  007582  D009               	goto	l3099
  1214                           
  1215                           ;sanic.c: 148:                 commandReceived[nCharsReceived] = RCREG;
  1216  007584  0E4F               	movlw	low RCE@commandReceived
  1217  007586  2452               	addwf	RCE@nCharsReceived,w,c
  1218  007588  6ED9               	movwf	fsr2l,c
  1219  00758A  6ADA               	clrf	fsr2h,c
  1220  00758C  0E00               	movlw	high RCE@commandReceived
  1221  00758E  22DA               	addwfc	fsr2h,f,c
  1222  007590  CFAE FFDF          	movff	4014,indf2	;volatile
  1223                           
  1224                           ;sanic.c: 149:                 nCharsReceived++;
  1225  007594  2A52               	incf	RCE@nCharsReceived,f,c
  1226  007596                     l3099:
  1227                           
  1228                           ;sanic.c: 146:         while(nCharsReceived < 3){
  1229  007596  0E02               	movlw	2
  1230  007598  6452               	cpfsgt	RCE@nCharsReceived,c
  1231  00759A  D7F2               	goto	l440
  1232  00759C  D00F               	goto	l3113
  1233  00759E                     l3101:
  1234                           
  1235                           ;sanic.c: 160:             PRC();
  1236  00759E  EC3E  F03C         	call	_PRC	;wreg free
  1237                           
  1238                           ;sanic.c: 161:             break;
  1239  0075A2  D023               	goto	l3115
  1240  0075A4                     l3103:
  1241                           
  1242                           ;sanic.c: 163:             navigate();
  1243  0075A4  EC3A  F038         	call	_navigate	;wreg free
  1244                           
  1245                           ;sanic.c: 164:             break;
  1246  0075A8  D020               	goto	l3115
  1247  0075AA                     l3105:
  1248                           
  1249                           ;sanic.c: 166:             pyCal();
  1250  0075AA  ECB7  F038         	call	_pyCal	;wreg free
  1251                           
  1252                           ;sanic.c: 167:             break;
  1253  0075AE  D01D               	goto	l3115
  1254  0075B0                     l3107:
  1255                           
  1256                           ;sanic.c: 169:             calibrate();
  1257  0075B0  EC00  F03D         	call	_calibrate	;wreg free
  1258                           
  1259                           ;sanic.c: 170:             break;
  1260  0075B4  D01A               	goto	l3115
  1261  0075B6                     l3109:
  1262                           
  1263                           ;sanic.c: 173:             error();
  1264  0075B6  EC1F  F038         	call	_error	;wreg free
  1265                           
  1266                           ;sanic.c: 174:             break;
  1267  0075BA  D017               	goto	l3115
  1268  0075BC                     l3113:
  1269  0075BC  504F               	movf	RCE@commandReceived,w,c
  1270  0075BE  6E3F               	movwf	??_RCE& (0+255),c
  1271  0075C0  6A40               	clrf	(??_RCE+1)& (0+255),c
  1272                           
  1273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1274                           ; Switch size 1, requested type "simple"
  1275                           ; Number of cases is 1, Range of values is 0 to 0
  1276                           ; switch strategies available:
  1277                           ; Name         Instructions Cycles
  1278                           ; simple_byte            4     3 (average)
  1279                           ;	Chosen strategy is simple_byte
  1280  0075C2  5040               	movf	??_RCE+1,w,c
  1281  0075C4  0A00               	xorlw	0	; case 0
  1282  0075C6  A4D8               	btfss	status,2,c
  1283  0075C8  D7F6               	goto	l3109
  1284                           
  1285                           ; Switch size 1, requested type "simple"
  1286                           ; Number of cases is 5, Range of values is 67 to 82
  1287                           ; switch strategies available:
  1288                           ; Name         Instructions Cycles
  1289                           ; simple_byte           16     9 (average)
  1290                           ;	Chosen strategy is simple_byte
  1291  0075CA  503F               	movf	??_RCE,w,c
  1292  0075CC  0A43               	xorlw	67	; case 67
  1293  0075CE  B4D8               	btfsc	status,2,c
  1294  0075D0  D7EF               	goto	l3107
  1295  0075D2  0A0D               	xorlw	13	; case 78
  1296  0075D4  B4D8               	btfsc	status,2,c
  1297  0075D6  D7E6               	goto	l3103
  1298  0075D8  0A1E               	xorlw	30	; case 80
  1299  0075DA  B4D8               	btfsc	status,2,c
  1300  0075DC  D7E0               	goto	l3101
  1301  0075DE  0A01               	xorlw	1	; case 81
  1302  0075E0  B4D8               	btfsc	status,2,c
  1303  0075E2  D7E3               	goto	l3105
  1304  0075E4  0A03               	xorlw	3	; case 82
  1305  0075E6  A4D8               	btfss	status,2,c
  1306  0075E8  D7E6               	goto	l3109
  1307  0075EA                     l3115:
  1308                           
  1309                           ;sanic.c: 177:         for (unsigned char a = 0; a < 3; a++){
  1310  0075EA  0E00               	movlw	0
  1311  0075EC  6E54               	movwf	RCE@a_1244,c
  1312  0075EE                     l3121:
  1313                           
  1314                           ;sanic.c: 178:             commandReceived[a] = 0;
  1315  0075EE  0E4F               	movlw	low RCE@commandReceived
  1316  0075F0  2454               	addwf	RCE@a_1244,w,c
  1317  0075F2  6ED9               	movwf	fsr2l,c
  1318  0075F4  6ADA               	clrf	fsr2h,c
  1319  0075F6  0E00               	movlw	high RCE@commandReceived
  1320  0075F8  22DA               	addwfc	fsr2h,f,c
  1321  0075FA  0E00               	movlw	0
  1322  0075FC  6EDF               	movwf	indf2,c
  1323                           
  1324                           ;sanic.c: 179:         }
  1325  0075FE  2A54               	incf	RCE@a_1244,f,c
  1326  007600  0E02               	movlw	2
  1327  007602  6454               	cpfsgt	RCE@a_1244,c
  1328  007604  D7F4               	goto	l3121
  1329  007606  D781               	goto	_RCE
  1330  007608                     __end_of_RCE:
  1331                           	opt callstack 0
  1332                           
  1333 ;; *************** function _pyCal *****************
  1334 ;; Defined at:
  1335 ;;		line 404 in file "./functions.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  a               1   51[COMRAM] unsigned char 
  1340 ;;  done            1    0        unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1350 ;;      Params:         0       0       0       0       0       0       0
  1351 ;;      Locals:         2       0       0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0
  1353 ;;      Totals:         2       0       0       0       0       0       0
  1354 ;;Total ram usage:        2 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    2
  1357 ;; This function calls:
  1358 ;;		_aveSensor
  1359 ;;		_msDelay
  1360 ;;		_setupADC
  1361 ;;		_trans
  1362 ;; This function is called by:
  1363 ;;		_RCE
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text6
  1368  00716E                     __ptext6:
  1369                           	opt callstack 0
  1370  00716E                     _pyCal:
  1371                           	opt callstack 27
  1372                           
  1373                           ;./functions.c: 406:     setupADC();
  1374                           
  1375                           ;incstack = 0
  1376  00716E  ECD0  F037         	call	_setupADC	;wreg free
  1377                           
  1378                           ;./functions.c: 407:     PORTD = 0b00001100;
  1379  007172  0E0C               	movlw	12
  1380  007174  6E83               	movwf	3971,c	;volatile
  1381  007176                     
  1382                           ;./functions.c: 410:     {;./functions.c: 411:         msDelay(9);
  1383  007176  0E09               	movlw	9
  1384  007178  EC36  F039         	call	_msDelay
  1385                           
  1386                           ;./functions.c: 412:         for (unsigned char a = 0; a < 5; a++)
  1387  00717C  0E00               	movlw	0
  1388  00717E  6E34               	movwf	pyCal@a,c
  1389  007180                     l3013:
  1390                           
  1391                           ;./functions.c: 413:         {;./functions.c: 414:             trans(aveSensor(sensorCha
      +                          nnels[a]));
  1392  007180  0EA8               	movlw	low _sensorChannels
  1393  007182  2434               	addwf	pyCal@a,w,c
  1394  007184  6ED9               	movwf	fsr2l,c
  1395  007186  6ADA               	clrf	fsr2h,c
  1396  007188  0E00               	movlw	high _sensorChannels
  1397  00718A  22DA               	addwfc	fsr2h,f,c
  1398  00718C  50DF               	movf	indf2,w,c
  1399  00718E  EC94  F038         	call	_aveSensor
  1400  007192  ECAB  F037         	call	_trans
  1401                           
  1402                           ;./functions.c: 415:         }
  1403  007196  2A34               	incf	pyCal@a,f,c
  1404  007198  0E04               	movlw	4
  1405  00719A  6434               	cpfsgt	pyCal@a,c
  1406  00719C  D7F1               	goto	l3013
  1407                           
  1408                           ;./functions.c: 416:         trans('\n');
  1409  00719E  0E0A               	movlw	10
  1410  0071A0  ECAB  F037         	call	_trans
  1411                           
  1412                           ;./functions.c: 418:         if (PIR1bits.RC1IF)
  1413  0071A4  AA9E               	btfss	3998,5,c	;volatile
  1414  0071A6  D7E7               	goto	l3003
  1415                           
  1416                           ;./functions.c: 419:         {;./functions.c: 420:             PIR1bits.RC1IF = 0;
  1417  0071A8  9A9E               	bcf	3998,5,c	;volatile
  1418                           
  1419                           ;./functions.c: 421:             if (RCREG == 'S' || RCREG == 's')
  1420  0071AA  0E53               	movlw	83
  1421  0071AC  18AE               	xorwf	4014,w,c	;volatile
  1422  0071AE  B4D8               	btfsc	status,2,c
  1423  0071B0  0012               	return	
  1424  0071B2  0E73               	movlw	115
  1425  0071B4  18AE               	xorwf	4014,w,c	;volatile
  1426  0071B6  B4D8               	btfsc	status,2,c
  1427  0071B8  0012               	return	
  1428  0071BA  D7DD               	goto	l3003
  1429  0071BC                     __end_of_pyCal:
  1430                           	opt callstack 0
  1431                           
  1432 ;; *************** function _navigate *****************
  1433 ;; Defined at:
  1434 ;;		line 429 in file "./functions.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1448 ;;      Params:         0       0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0
  1451 ;;      Totals:         0       0       0       0       0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    3
  1455 ;; This function calls:
  1456 ;;		_classifyColors
  1457 ;;		_displayColorDetected
  1458 ;;		_displayRaceColor
  1459 ;;		_readAllSensors
  1460 ;;		_setupADC
  1461 ;;		_setupPWMLeft
  1462 ;;		_setupPWMRight
  1463 ;;		_stopMotors
  1464 ;; This function is called by:
  1465 ;;		_RCE
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text7
  1470  007074                     __ptext7:
  1471                           	opt callstack 0
  1472  007074                     _navigate:
  1473                           	opt callstack 26
  1474                           
  1475                           ;./functions.c: 430:     displayRaceColor();
  1476                           
  1477                           ;incstack = 0
  1478  007074  EC75  F038         	call	_displayRaceColor	;wreg free
  1479                           
  1480                           ;./functions.c: 431:     setupPWMLeft();
  1481  007078  ECE1  F037         	call	_setupPWMLeft	;wreg free
  1482                           
  1483                           ;./functions.c: 432:     setupPWMRight();
  1484  00707C  ECF4  F037         	call	_setupPWMRight	;wreg free
  1485  007080                     l283:
  1486                           
  1487                           ;./functions.c: 434:         setupADC();
  1488  007080  ECD0  F037         	call	_setupADC	;wreg free
  1489                           
  1490                           ;./functions.c: 435:         readAllSensors();
  1491  007084  EC57  F038         	call	_readAllSensors	;wreg free
  1492                           
  1493                           ;./functions.c: 436:         classifyColors();
  1494  007088  EC04  F03B         	call	_classifyColors	;wreg free
  1495                           
  1496                           ;./functions.c: 437:         displayColorDetected(2);
  1497  00708C  0E02               	movlw	2
  1498  00708E  ECE4  F039         	call	_displayColorDetected
  1499                           
  1500                           ;./functions.c: 441:         if (PIR1bits.RC1IF)
  1501  007092  AA9E               	btfss	3998,5,c	;volatile
  1502  007094  D7F5               	goto	l283
  1503                           
  1504                           ;./functions.c: 442:         {;./functions.c: 443:             PIR1bits.RC1IF = 0;
  1505  007096  9A9E               	bcf	3998,5,c	;volatile
  1506                           
  1507                           ;./functions.c: 444:             if (RCREG == 'S' || RCREG == 's')
  1508  007098  0E53               	movlw	83
  1509  00709A  18AE               	xorwf	4014,w,c	;volatile
  1510  00709C  B4D8               	btfsc	status,2,c
  1511  00709E  D004               	goto	u2280
  1512  0070A0  0E73               	movlw	115
  1513  0070A2  18AE               	xorwf	4014,w,c	;volatile
  1514  0070A4  A4D8               	btfss	status,2,c
  1515  0070A6  D7EC               	goto	l283
  1516  0070A8                     u2280:
  1517                           
  1518                           ;./functions.c: 445:             {;./functions.c: 446:                 stopMotors();
  1519  0070A8  ECB1  F037         	call	_stopMotors	;wreg free
  1520  0070AC  0012               	return		;funcret
  1521  0070AE                     __end_of_navigate:
  1522                           	opt callstack 0
  1523                           
  1524 ;; *************** function _stopMotors *****************
  1525 ;; Defined at:
  1526 ;;		line 599 in file "./functions.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1540 ;;      Params:         0       0       0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_navigate
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text8
  1554  006F62                     __ptext8:
  1555                           	opt callstack 0
  1556  006F62                     _stopMotors:
  1557                           	opt callstack 28
  1558                           
  1559                           ;./functions.c: 600:     PORTCbits.RC0 = 0;
  1560                           
  1561                           ;incstack = 0
  1562  006F62  9082               	bcf	3970,0,c	;volatile
  1563                           
  1564                           ;./functions.c: 601:     PORTCbits.RC1 = 0;
  1565  006F64  9282               	bcf	3970,1,c	;volatile
  1566                           
  1567                           ;./functions.c: 602:     TRISCbits.TRISC2 = 1;
  1568  006F66  8494               	bsf	3988,2,c	;volatile
  1569                           
  1570                           ;./functions.c: 603:     PORTEbits.RE0 = 0;
  1571  006F68  9084               	bcf	3972,0,c	;volatile
  1572                           
  1573                           ;./functions.c: 604:     PORTEbits.RE1 = 0;
  1574  006F6A  9284               	bcf	3972,1,c	;volatile
  1575                           
  1576                           ;./functions.c: 605:     TRISEbits.TRISE2 = 1;
  1577  006F6C  8496               	bsf	3990,2,c	;volatile
  1578                           
  1579                           ;./functions.c: 606:     PORTA = 0;
  1580  006F6E  0E00               	movlw	0
  1581  006F70  6E80               	movwf	3968,c	;volatile
  1582  006F72  0012               	return		;funcret
  1583  006F74                     __end_of_stopMotors:
  1584                           	opt callstack 0
  1585                           
  1586 ;; *************** function _setupPWMRight *****************
  1587 ;; Defined at:
  1588 ;;		line 40 in file "./functions.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1602 ;;      Params:         0       0       0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0
  1605 ;;      Totals:         0       0       0       0       0       0       0
  1606 ;;Total ram usage:        0 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_navigate
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text9
  1616  006FE8                     __ptext9:
  1617                           	opt callstack 0
  1618  006FE8                     _setupPWMRight:
  1619                           	opt callstack 28
  1620                           
  1621                           ;./functions.c: 42:     CCP5CON = 0;
  1622                           
  1623                           ;incstack = 0
  1624  006FE8  0E00               	movlw	0
  1625  006FEA  010F               	movlb	15	; () banked
  1626  006FEC  6F54               	movwf	84,b	;volatile
  1627                           
  1628                           ;./functions.c: 43:     PR4 = 200;
  1629  006FEE  0EC8               	movlw	200
  1630  006FF0  6F52               	movwf	82,b	;volatile
  1631                           
  1632                           ;./functions.c: 44:     CCPR5L = 200;
  1633  006FF2  0EC8               	movlw	200
  1634  006FF4  6F55               	movwf	85,b	;volatile
  1635                           
  1636                           ; BSR set to: 15
  1637                           ;./functions.c: 46:     TRISEbits.RE2 = 0;
  1638  006FF6  9496               	bcf	3990,2,c	;volatile
  1639                           
  1640                           ;./functions.c: 48:     CCPTMRS1 = 0b00000100;
  1641  006FF8  0E04               	movlw	4
  1642  006FFA  6F48               	movwf	72,b	;volatile
  1643                           
  1644                           ;./functions.c: 49:     CCP5CON = 0b00001100;
  1645  006FFC  0E0C               	movlw	12
  1646  006FFE  6F54               	movwf	84,b	;volatile
  1647                           
  1648                           ;./functions.c: 50:     T4CON = 0b011111010;
  1649  007000  0EFA               	movlw	250
  1650  007002  6F51               	movwf	81,b	;volatile
  1651                           
  1652                           ;./functions.c: 51:     TMR4 = 0;
  1653  007004  0E00               	movlw	0
  1654  007006  6F53               	movwf	83,b	;volatile
  1655                           
  1656                           ; BSR set to: 15
  1657                           ;./functions.c: 52:     PIE5bits.TMR4IE = 0;
  1658  007008  907D               	bcf	3965,0,c	;volatile
  1659                           
  1660                           ; BSR set to: 15
  1661                           ;./functions.c: 53:     T4CONbits.TMR4ON = 1;
  1662  00700A  8551               	bsf	81,2,b	;volatile
  1663                           
  1664                           ; BSR set to: 15
  1665  00700C  0012               	return		;funcret
  1666  00700E                     __end_of_setupPWMRight:
  1667                           	opt callstack 0
  1668                           
  1669 ;; *************** function _setupPWMLeft *****************
  1670 ;; Defined at:
  1671 ;;		line 23 in file "./functions.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1685 ;;      Params:         0       0       0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_navigate
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text10
  1699  006FC2                     __ptext10:
  1700                           	opt callstack 0
  1701  006FC2                     _setupPWMLeft:
  1702                           	opt callstack 28
  1703                           
  1704                           ;./functions.c: 25:     CCP1CON = 0;
  1705                           
  1706                           ; BSR set to: 15
  1707                           ;incstack = 0
  1708  006FC2  0E00               	movlw	0
  1709  006FC4  6EBD               	movwf	4029,c	;volatile
  1710                           
  1711                           ;./functions.c: 26:     PR2 = 200;
  1712  006FC6  0EC8               	movlw	200
  1713  006FC8  6EBB               	movwf	4027,c	;volatile
  1714                           
  1715                           ;./functions.c: 27:     CCPR1L = 200;
  1716  006FCA  0EC8               	movlw	200
  1717  006FCC  6EBE               	movwf	4030,c	;volatile
  1718                           
  1719                           ;./functions.c: 29:     TRISCbits.RC2 = 0;
  1720  006FCE  9494               	bcf	3988,2,c	;volatile
  1721                           
  1722                           ;./functions.c: 31:     CCPTMRS0 = 0;
  1723  006FD0  0E00               	movlw	0
  1724  006FD2  010F               	movlb	15	; () banked
  1725  006FD4  6F49               	movwf	73,b	;volatile
  1726                           
  1727                           ;./functions.c: 32:     CCP1CON = 0b00001100;
  1728  006FD6  0E0C               	movlw	12
  1729  006FD8  6EBD               	movwf	4029,c	;volatile
  1730                           
  1731                           ;./functions.c: 33:     T2CON = 0b011111010;
  1732  006FDA  0EFA               	movlw	250
  1733  006FDC  6EBA               	movwf	4026,c	;volatile
  1734                           
  1735                           ;./functions.c: 34:     TMR2 = 0;
  1736  006FDE  0E00               	movlw	0
  1737  006FE0  6EBC               	movwf	4028,c	;volatile
  1738                           
  1739                           ; BSR set to: 15
  1740                           ;./functions.c: 35:     PIE1bits.TMR1IE = 0;
  1741  006FE2  909D               	bcf	3997,0,c	;volatile
  1742                           
  1743                           ; BSR set to: 15
  1744                           ;./functions.c: 36:     T2CONbits.TMR2ON = 1;
  1745  006FE4  84BA               	bsf	4026,2,c	;volatile
  1746                           
  1747                           ; BSR set to: 15
  1748  006FE6  0012               	return		;funcret
  1749  006FE8                     __end_of_setupPWMLeft:
  1750                           	opt callstack 0
  1751                           
  1752 ;; *************** function _setupADC *****************
  1753 ;; Defined at:
  1754 ;;		line 119 in file "./functions.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1768 ;;      Params:         0       0       0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_pyCal
  1778 ;;		_navigate
  1779 ;;		_init
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text11
  1784  006FA0                     __ptext11:
  1785                           	opt callstack 0
  1786  006FA0                     _setupADC:
  1787                           	opt callstack 29
  1788                           
  1789                           ;./functions.c: 121:     ADCON2bits.ADCS = 0b100;
  1790                           
  1791                           ; BSR set to: 15
  1792                           ;incstack = 0
  1793  006FA0  50C0               	movf	4032,w,c	;volatile
  1794  006FA2  0BF8               	andlw	-8
  1795  006FA4  0904               	iorlw	4
  1796  006FA6  6EC0               	movwf	4032,c	;volatile
  1797                           
  1798                           ;./functions.c: 122:     ADCON1 = 0;
  1799  006FA8  0E00               	movlw	0
  1800  006FAA  6EC1               	movwf	4033,c	;volatile
  1801                           
  1802                           ;./functions.c: 123:     ADCON0bits.CHS = 0b01100;
  1803  006FAC  50C2               	movf	4034,w,c	;volatile
  1804  006FAE  0B83               	andlw	-125
  1805  006FB0  0930               	iorlw	48
  1806  006FB2  6EC2               	movwf	4034,c	;volatile
  1807                           
  1808                           ;./functions.c: 124:     ADCON2bits.ADFM = 0;
  1809  006FB4  9EC0               	bcf	4032,7,c	;volatile
  1810                           
  1811                           ;./functions.c: 125:     ADCON2bits.ACQT = 0b101;
  1812  006FB6  50C0               	movf	4032,w,c	;volatile
  1813  006FB8  0BC7               	andlw	-57
  1814  006FBA  0928               	iorlw	40
  1815  006FBC  6EC0               	movwf	4032,c	;volatile
  1816                           
  1817                           ;./functions.c: 126:     ADCON0bits.ADON = 1;
  1818  006FBE  80C2               	bsf	4034,0,c	;volatile
  1819  006FC0  0012               	return		;funcret
  1820  006FC2                     __end_of_setupADC:
  1821                           	opt callstack 0
  1822                           
  1823 ;; *************** function _readAllSensors *****************
  1824 ;; Defined at:
  1825 ;;		line 631 in file "./functions.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  a               2   10[COMRAM] unsigned int 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1839 ;;      Params:         0       0       0       0       0       0       0
  1840 ;;      Locals:         2       0       0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0
  1842 ;;      Totals:         2       0       0       0       0       0       0
  1843 ;;Total ram usage:        2 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		_aveSensor
  1848 ;; This function is called by:
  1849 ;;		_navigate
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text12
  1854  0070AE                     __ptext12:
  1855                           	opt callstack 0
  1856  0070AE                     _readAllSensors:
  1857                           	opt callstack 26
  1858                           
  1859                           ;./functions.c: 632:     for (unsigned a = 0; a < 5; a++){
  1860                           
  1861                           ;incstack = 0
  1862  0070AE  0E00               	movlw	0
  1863  0070B0  6E0C               	movwf	readAllSensors@a+1,c
  1864  0070B2  0E00               	movlw	0
  1865  0070B4  6E0B               	movwf	readAllSensors@a,c
  1866  0070B6                     l2565:
  1867                           
  1868                           ;./functions.c: 633:         sensorVals[a] = aveSensor(sensorChannels[a]);
  1869  0070B6  0EB8               	movlw	low _sensorVals
  1870  0070B8  240B               	addwf	readAllSensors@a,w,c
  1871  0070BA  6ED9               	movwf	fsr2l,c
  1872  0070BC  0E00               	movlw	high _sensorVals
  1873  0070BE  200C               	addwfc	readAllSensors@a+1,w,c
  1874  0070C0  6EDA               	movwf	fsr2h,c
  1875  0070C2  0EA8               	movlw	low _sensorChannels
  1876  0070C4  240B               	addwf	readAllSensors@a,w,c
  1877  0070C6  6EE1               	movwf	fsr1l,c
  1878  0070C8  0E00               	movlw	high _sensorChannels
  1879  0070CA  200C               	addwfc	readAllSensors@a+1,w,c
  1880  0070CC  6EE2               	movwf	fsr1h,c
  1881  0070CE  50E7               	movf	indf1,w,c
  1882  0070D0  EC94  F038         	call	_aveSensor
  1883  0070D4  6EDF               	movwf	indf2,c
  1884                           
  1885                           ;./functions.c: 634:     }
  1886  0070D6  4A0B               	infsnz	readAllSensors@a,f,c
  1887  0070D8  2A0C               	incf	readAllSensors@a+1,f,c
  1888  0070DA  500C               	movf	readAllSensors@a+1,w,c
  1889  0070DC  E105               	bnz	u1720
  1890  0070DE  0E05               	movlw	5
  1891  0070E0  5C0B               	subwf	readAllSensors@a,w,c
  1892  0070E2  B0D8               	btfsc	status,0,c
  1893  0070E4  0012               	return	
  1894  0070E6  D7E7               	goto	l2565
  1895  0070E8                     u1720:
  1896  0070E8  0012               	return		;funcret
  1897  0070EA                     __end_of_readAllSensors:
  1898                           	opt callstack 0
  1899                           
  1900 ;; *************** function _displayRaceColor *****************
  1901 ;; Defined at:
  1902 ;;		line 611 in file "./functions.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         0       0       0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_navigate
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text13
  1930  0070EA                     __ptext13:
  1931                           	opt callstack 0
  1932  0070EA                     _displayRaceColor:
  1933                           	opt callstack 28
  1934                           
  1935                           ;./functions.c: 612:     if (raceColor[0]){
  1936                           
  1937                           ;incstack = 0
  1938  0070EA  0100               	movlb	0	; () banked
  1939  0070EC  5198               	movf	_raceColor& (0+255),w,b
  1940  0070EE  B4D8               	btfsc	status,2,c
  1941  0070F0  D003               	goto	l2541
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;./functions.c: 613:         PORTD = 0b10111111;
  1945  0070F2  0EBF               	movlw	191
  1946  0070F4  6E83               	movwf	3971,c	;volatile
  1947                           
  1948                           ;./functions.c: 614:     }
  1949  0070F6  0012               	return	
  1950  0070F8                     l2541:
  1951                           
  1952                           ; BSR set to: 0
  1953  0070F8  5199               	movf	(_raceColor+1)& (0+255),w,b
  1954  0070FA  B4D8               	btfsc	status,2,c
  1955  0070FC  D003               	goto	l2545
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;./functions.c: 616:         PORTD = 0b10000010;
  1959  0070FE  0E82               	movlw	130
  1960  007100  6E83               	movwf	3971,c	;volatile
  1961                           
  1962                           ;./functions.c: 617:     }
  1963  007102  0012               	return	
  1964  007104                     l2545:
  1965                           
  1966                           ; BSR set to: 0
  1967  007104  519A               	movf	(_raceColor+2)& (0+255),w,b
  1968  007106  B4D8               	btfsc	status,2,c
  1969  007108  D003               	goto	l2549
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;./functions.c: 619:         PORTD = 0b10001000;
  1973  00710A  0E88               	movlw	136
  1974  00710C  6E83               	movwf	3971,c	;volatile
  1975                           
  1976                           ;./functions.c: 620:     }
  1977  00710E  0012               	return	
  1978  007110                     l2549:
  1979                           
  1980                           ; BSR set to: 0
  1981  007110  519B               	movf	(_raceColor+3)& (0+255),w,b
  1982  007112  B4D8               	btfsc	status,2,c
  1983  007114  D003               	goto	l2553
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;./functions.c: 622:         PORTD = 0b10000000;
  1987  007116  0E80               	movlw	128
  1988  007118  6E83               	movwf	3971,c	;volatile
  1989                           
  1990                           ;./functions.c: 623:     }
  1991  00711A  0012               	return	
  1992  00711C                     l2553:
  1993                           
  1994                           ; BSR set to: 0
  1995  00711C  519C               	movf	(_raceColor+4)& (0+255),w,b
  1996  00711E  B4D8               	btfsc	status,2,c
  1997  007120  0012               	return	
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;./functions.c: 625:         PORTD = 0b11001000;
  2001  007122  0EC8               	movlw	200
  2002  007124  6E83               	movwf	3971,c	;volatile
  2003  007126  0012               	return	
  2004  007128                     __end_of_displayRaceColor:
  2005                           	opt callstack 0
  2006                           
  2007 ;; *************** function _displayColorDetected *****************
  2008 ;; Defined at:
  2009 ;;		line 546 in file "./functions.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  sensor          1    wreg     unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  sensor          1    2[COMRAM] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2023 ;;      Params:         0       0       0       0       0       0       0
  2024 ;;      Locals:         1       0       0       0       0       0       0
  2025 ;;      Temps:          2       0       0       0       0       0       0
  2026 ;;      Totals:         3       0       0       0       0       0       0
  2027 ;;Total ram usage:        3 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_navigate
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text14
  2037  0073C8                     __ptext14:
  2038                           	opt callstack 0
  2039  0073C8                     _displayColorDetected:
  2040                           	opt callstack 28
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;incstack = 0
  2044                           ;displayColorDetected@sensor stored from wreg
  2045  0073C8  6E03               	movwf	displayColorDetected@sensor,c
  2046                           
  2047                           ;./functions.c: 547:     switch (colorsDetected[sensor])
  2048  0073CA  D024               	goto	l2605
  2049  0073CC                     l332:
  2050                           
  2051                           ;./functions.c: 550:         PORTAbits.RA0 = 1;
  2052  0073CC  8080               	bsf	3968,0,c	;volatile
  2053                           
  2054                           ;./functions.c: 551:         PORTAbits.RA1 = 0;
  2055  0073CE  9280               	bcf	3968,1,c	;volatile
  2056                           
  2057                           ;./functions.c: 552:         PORTAbits.RA2 = 0;
  2058  0073D0  9480               	bcf	3968,2,c	;volatile
  2059                           
  2060                           ;./functions.c: 553:         PORTAbits.RA3 = 0;
  2061  0073D2  9680               	bcf	3968,3,c	;volatile
  2062                           
  2063                           ;./functions.c: 554:         PORTAbits.RA4 = 0;
  2064  0073D4  9880               	bcf	3968,4,c	;volatile
  2065                           
  2066                           ;./functions.c: 555:         break;
  2067  0073D6  0012               	return	
  2068  0073D8                     l334:
  2069                           
  2070                           ;./functions.c: 557:         PORTAbits.RA0 = 0;
  2071  0073D8  9080               	bcf	3968,0,c	;volatile
  2072                           
  2073                           ;./functions.c: 558:         PORTAbits.RA1 = 1;
  2074  0073DA  8280               	bsf	3968,1,c	;volatile
  2075                           
  2076                           ;./functions.c: 559:         PORTAbits.RA2 = 0;
  2077  0073DC  9480               	bcf	3968,2,c	;volatile
  2078                           
  2079                           ;./functions.c: 560:         PORTAbits.RA3 = 0;
  2080  0073DE  9680               	bcf	3968,3,c	;volatile
  2081                           
  2082                           ;./functions.c: 561:         PORTAbits.RA4 = 0;
  2083  0073E0  9880               	bcf	3968,4,c	;volatile
  2084                           
  2085                           ;./functions.c: 562:         break;
  2086  0073E2  0012               	return	
  2087  0073E4                     l335:
  2088                           
  2089                           ;./functions.c: 564:         PORTAbits.RA0 = 0;
  2090  0073E4  9080               	bcf	3968,0,c	;volatile
  2091                           
  2092                           ;./functions.c: 565:         PORTAbits.RA1 = 0;
  2093  0073E6  9280               	bcf	3968,1,c	;volatile
  2094                           
  2095                           ;./functions.c: 566:         PORTAbits.RA2 = 1;
  2096  0073E8  8480               	bsf	3968,2,c	;volatile
  2097                           
  2098                           ;./functions.c: 567:         PORTAbits.RA3 = 0;
  2099  0073EA  9680               	bcf	3968,3,c	;volatile
  2100                           
  2101                           ;./functions.c: 568:         PORTAbits.RA4 = 0;
  2102  0073EC  9880               	bcf	3968,4,c	;volatile
  2103                           
  2104                           ;./functions.c: 569:         break;
  2105  0073EE  0012               	return	
  2106  0073F0                     l336:
  2107                           
  2108                           ;./functions.c: 571:         PORTAbits.RA0 = 0;
  2109  0073F0  9080               	bcf	3968,0,c	;volatile
  2110                           
  2111                           ;./functions.c: 572:         PORTAbits.RA1 = 0;
  2112  0073F2  9280               	bcf	3968,1,c	;volatile
  2113                           
  2114                           ;./functions.c: 573:         PORTAbits.RA2 = 0;
  2115  0073F4  9480               	bcf	3968,2,c	;volatile
  2116                           
  2117                           ;./functions.c: 574:         PORTAbits.RA3 = 1;
  2118  0073F6  8680               	bsf	3968,3,c	;volatile
  2119                           
  2120                           ;./functions.c: 575:         PORTAbits.RA4 = 0;
  2121  0073F8  9880               	bcf	3968,4,c	;volatile
  2122                           
  2123                           ;./functions.c: 576:         break;
  2124  0073FA  0012               	return	
  2125  0073FC                     l337:
  2126                           
  2127                           ;./functions.c: 578:         PORTAbits.RA0 = 0;
  2128  0073FC  9080               	bcf	3968,0,c	;volatile
  2129                           
  2130                           ;./functions.c: 579:         PORTAbits.RA1 = 0;
  2131  0073FE  9280               	bcf	3968,1,c	;volatile
  2132                           
  2133                           ;./functions.c: 580:         PORTAbits.RA2 = 0;
  2134  007400  9480               	bcf	3968,2,c	;volatile
  2135                           
  2136                           ;./functions.c: 581:         PORTAbits.RA3 = 0;
  2137  007402  9680               	bcf	3968,3,c	;volatile
  2138                           
  2139                           ;./functions.c: 582:         PORTAbits.RA4 = 1;
  2140  007404  8880               	bsf	3968,4,c	;volatile
  2141                           
  2142                           ;./functions.c: 583:         break;
  2143  007406  0012               	return	
  2144  007408                     l338:
  2145                           
  2146                           ;./functions.c: 586:         PORTAbits.RA0 = 1;
  2147  007408  8080               	bsf	3968,0,c	;volatile
  2148                           
  2149                           ;./functions.c: 587:         PORTAbits.RA1 = 1;
  2150  00740A  8280               	bsf	3968,1,c	;volatile
  2151                           
  2152                           ;./functions.c: 588:         PORTAbits.RA2 = 1;
  2153  00740C  8480               	bsf	3968,2,c	;volatile
  2154                           
  2155                           ;./functions.c: 589:         PORTAbits.RA3 = 1;
  2156  00740E  8680               	bsf	3968,3,c	;volatile
  2157                           
  2158                           ;./functions.c: 590:         PORTAbits.RA4 = 1;
  2159  007410  8880               	bsf	3968,4,c	;volatile
  2160                           
  2161                           ;./functions.c: 591:         break;
  2162  007412  0012               	return	
  2163  007414                     l2605:
  2164  007414  0ED1               	movlw	low _colorsDetected
  2165  007416  2403               	addwf	displayColorDetected@sensor,w,c
  2166  007418  6ED9               	movwf	fsr2l,c
  2167  00741A  6ADA               	clrf	fsr2h,c
  2168  00741C  0E00               	movlw	high _colorsDetected
  2169  00741E  22DA               	addwfc	fsr2h,f,c
  2170  007420  50DF               	movf	indf2,w,c
  2171  007422  6E01               	movwf	??_displayColorDetected& (0+255),c
  2172  007424  6A02               	clrf	(??_displayColorDetected+1)& (0+255),c
  2173                           
  2174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2175                           ; Switch size 1, requested type "simple"
  2176                           ; Number of cases is 1, Range of values is 0 to 0
  2177                           ; switch strategies available:
  2178                           ; Name         Instructions Cycles
  2179                           ; simple_byte            4     3 (average)
  2180                           ;	Chosen strategy is simple_byte
  2181  007426  5002               	movf	??_displayColorDetected+1,w,c
  2182  007428  0A00               	xorlw	0	; case 0
  2183  00742A  A4D8               	btfss	status,2,c
  2184  00742C  D7ED               	goto	l338
  2185                           
  2186                           ; Switch size 1, requested type "simple"
  2187                           ; Number of cases is 5, Range of values is 66 to 110
  2188                           ; switch strategies available:
  2189                           ; Name         Instructions Cycles
  2190                           ; simple_byte           16     9 (average)
  2191                           ;	Chosen strategy is simple_byte
  2192  00742E  5001               	movf	??_displayColorDetected,w,c
  2193  007430  0A42               	xorlw	66	; case 66
  2194  007432  B4D8               	btfsc	status,2,c
  2195  007434  D7DD               	goto	l336
  2196  007436  0A05               	xorlw	5	; case 71
  2197  007438  B4D8               	btfsc	status,2,c
  2198  00743A  D7CE               	goto	l334
  2199  00743C  0A15               	xorlw	21	; case 82
  2200  00743E  B4D8               	btfsc	status,2,c
  2201  007440  D7D1               	goto	l335
  2202  007442  0A05               	xorlw	5	; case 87
  2203  007444  B4D8               	btfsc	status,2,c
  2204  007446  D7C2               	goto	l332
  2205  007448  0A39               	xorlw	57	; case 110
  2206  00744A  B4D8               	btfsc	status,2,c
  2207  00744C  D7D7               	goto	l337
  2208  00744E  D7DC               	goto	l338
  2209  007450                     __end_of_displayColorDetected:
  2210                           	opt callstack 0
  2211                           
  2212 ;; *************** function _classifyColors *****************
  2213 ;; Defined at:
  2214 ;;		line 521 in file "./functions.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  a               1   14[COMRAM] unsigned char 
  2219 ;;  sensorRanges   10    4[COMRAM] PTR unsigned char [5]
  2220 ;;		 -> RRranges(5), Rranges(5), Mranges(5), Lranges(5), 
  2221 ;;		 -> LLranges(5), 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         0       0       0       0       0       0       0
  2232 ;;      Locals:        11       0       0       0       0       0       0
  2233 ;;      Temps:          4       0       0       0       0       0       0
  2234 ;;      Totals:        15       0       0       0       0       0       0
  2235 ;;Total ram usage:       15 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_navigate
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text15
  2245  007608                     __ptext15:
  2246                           	opt callstack 0
  2247  007608                     _classifyColors:
  2248                           	opt callstack 28
  2249                           
  2250                           ;./functions.c: 522:     unsigned char* sensorRanges[] = {LLranges, Lranges, Mranges, Rr
      +                          anges, RRranges};
  2251                           
  2252                           ;incstack = 0
  2253  007608  EE20  F08E         	lfsr	2,classifyColors@F6032
  2254  00760C  EE10  F005         	lfsr	1,classifyColors@sensorRanges
  2255  007610  0E09               	movlw	9
  2256  007612                     u1731:
  2257  007612  CFDB FFE3          	movff	plusw2,plusw1
  2258  007616  06E8               	decf	wreg,f,c
  2259  007618  E2FC               	bc	u1731
  2260                           
  2261                           ;./functions.c: 524:     for (unsigned char a = 0; a < 5; a++){
  2262  00761A  0E00               	movlw	0
  2263  00761C  6E0F               	movwf	classifyColors@a,c
  2264  00761E                     l2579:
  2265                           
  2266                           ;./functions.c: 525:         if (sensorVals[a] < sensorRanges[a][0]){
  2267  00761E  500F               	movf	classifyColors@a,w,c
  2268  007620  0D02               	mullw	2
  2269  007622  0E05               	movlw	low classifyColors@sensorRanges
  2270  007624  24F3               	addwf	prodl,w,c
  2271  007626  6ED9               	movwf	fsr2l,c
  2272  007628  0E00               	movlw	high classifyColors@sensorRanges
  2273  00762A  20F4               	addwfc	prodh,w,c
  2274  00762C  6EDA               	movwf	fsr2h,c
  2275  00762E  CFDE F001          	movff	postinc2,??_classifyColors
  2276  007632  CFDD F002          	movff	postdec2,??_classifyColors+1
  2277  007636  C001  FFD9         	movff	??_classifyColors,fsr2l
  2278  00763A  C002  FFDA         	movff	??_classifyColors+1,fsr2h
  2279  00763E  0EB8               	movlw	low _sensorVals
  2280  007640  240F               	addwf	classifyColors@a,w,c
  2281  007642  6EE1               	movwf	fsr1l,c
  2282  007644  6AE2               	clrf	fsr1h,c
  2283  007646  0E00               	movlw	high _sensorVals
  2284  007648  22E2               	addwfc	fsr1h,f,c
  2285  00764A  50DE               	movf	postinc2,w,c
  2286  00764C  5CE6               	subwf	postinc1,w,c
  2287  00764E  B0D8               	btfsc	status,0,c
  2288  007650  D008               	goto	l2583
  2289                           
  2290                           ;./functions.c: 526:             colorsDetected[a] = 'W';
  2291  007652  0ED1               	movlw	low _colorsDetected
  2292  007654  240F               	addwf	classifyColors@a,w,c
  2293  007656  6ED9               	movwf	fsr2l,c
  2294  007658  6ADA               	clrf	fsr2h,c
  2295  00765A  0E00               	movlw	high _colorsDetected
  2296  00765C  22DA               	addwfc	fsr2h,f,c
  2297  00765E  0E57               	movlw	87
  2298  007660  D067               	goto	L1
  2299  007662                     l2583:
  2300  007662  500F               	movf	classifyColors@a,w,c
  2301  007664  0D02               	mullw	2
  2302  007666  0E05               	movlw	low classifyColors@sensorRanges
  2303  007668  24F3               	addwf	prodl,w,c
  2304  00766A  6ED9               	movwf	fsr2l,c
  2305  00766C  0E00               	movlw	high classifyColors@sensorRanges
  2306  00766E  20F4               	addwfc	prodh,w,c
  2307  007670  6EDA               	movwf	fsr2h,c
  2308  007672  EE10 F001          	lfsr	1,1
  2309  007676  50DE               	movf	postinc2,w,c
  2310  007678  26E1               	addwf	fsr1l,f,c
  2311  00767A  50DD               	movf	postdec2,w,c
  2312  00767C  22E2               	addwfc	fsr1h,f,c
  2313  00767E  0EB8               	movlw	low _sensorVals
  2314  007680  240F               	addwf	classifyColors@a,w,c
  2315  007682  6ED9               	movwf	fsr2l,c
  2316  007684  6ADA               	clrf	fsr2h,c
  2317  007686  0E00               	movlw	high _sensorVals
  2318  007688  22DA               	addwfc	fsr2h,f,c
  2319  00768A  50E6               	movf	postinc1,w,c
  2320  00768C  5CDE               	subwf	postinc2,w,c
  2321  00768E  B0D8               	btfsc	status,0,c
  2322  007690  D008               	goto	l2587
  2323                           
  2324                           ;./functions.c: 529:             colorsDetected[a] = 'G';
  2325  007692  0ED1               	movlw	low _colorsDetected
  2326  007694  240F               	addwf	classifyColors@a,w,c
  2327  007696  6ED9               	movwf	fsr2l,c
  2328  007698  6ADA               	clrf	fsr2h,c
  2329  00769A  0E00               	movlw	high _colorsDetected
  2330  00769C  22DA               	addwfc	fsr2h,f,c
  2331  00769E  0E47               	movlw	71
  2332  0076A0  D047               	goto	L1
  2333  0076A2                     l2587:
  2334  0076A2  500F               	movf	classifyColors@a,w,c
  2335  0076A4  0D02               	mullw	2
  2336  0076A6  0E05               	movlw	low classifyColors@sensorRanges
  2337  0076A8  24F3               	addwf	prodl,w,c
  2338  0076AA  6ED9               	movwf	fsr2l,c
  2339  0076AC  0E00               	movlw	high classifyColors@sensorRanges
  2340  0076AE  20F4               	addwfc	prodh,w,c
  2341  0076B0  6EDA               	movwf	fsr2h,c
  2342  0076B2  EE10 F002          	lfsr	1,2
  2343  0076B6  50DE               	movf	postinc2,w,c
  2344  0076B8  26E1               	addwf	fsr1l,f,c
  2345  0076BA  50DD               	movf	postdec2,w,c
  2346  0076BC  22E2               	addwfc	fsr1h,f,c
  2347  0076BE  0EB8               	movlw	low _sensorVals
  2348  0076C0  240F               	addwf	classifyColors@a,w,c
  2349  0076C2  6ED9               	movwf	fsr2l,c
  2350  0076C4  6ADA               	clrf	fsr2h,c
  2351  0076C6  0E00               	movlw	high _sensorVals
  2352  0076C8  22DA               	addwfc	fsr2h,f,c
  2353  0076CA  50E6               	movf	postinc1,w,c
  2354  0076CC  5CDE               	subwf	postinc2,w,c
  2355  0076CE  B0D8               	btfsc	status,0,c
  2356  0076D0  D008               	goto	l2591
  2357                           
  2358                           ;./functions.c: 532:             colorsDetected[a] = 'R';
  2359  0076D2  0ED1               	movlw	low _colorsDetected
  2360  0076D4  240F               	addwf	classifyColors@a,w,c
  2361  0076D6  6ED9               	movwf	fsr2l,c
  2362  0076D8  6ADA               	clrf	fsr2h,c
  2363  0076DA  0E00               	movlw	high _colorsDetected
  2364  0076DC  22DA               	addwfc	fsr2h,f,c
  2365  0076DE  0E52               	movlw	82
  2366  0076E0  D027               	goto	L1
  2367  0076E2                     l2591:
  2368  0076E2  500F               	movf	classifyColors@a,w,c
  2369  0076E4  0D02               	mullw	2
  2370  0076E6  0E05               	movlw	low classifyColors@sensorRanges
  2371  0076E8  24F3               	addwf	prodl,w,c
  2372  0076EA  6ED9               	movwf	fsr2l,c
  2373  0076EC  0E00               	movlw	high classifyColors@sensorRanges
  2374  0076EE  20F4               	addwfc	prodh,w,c
  2375  0076F0  6EDA               	movwf	fsr2h,c
  2376  0076F2  EE10 F003          	lfsr	1,3
  2377  0076F6  50DE               	movf	postinc2,w,c
  2378  0076F8  26E1               	addwf	fsr1l,f,c
  2379  0076FA  50DD               	movf	postdec2,w,c
  2380  0076FC  22E2               	addwfc	fsr1h,f,c
  2381  0076FE  0EB8               	movlw	low _sensorVals
  2382  007700  240F               	addwf	classifyColors@a,w,c
  2383  007702  6ED9               	movwf	fsr2l,c
  2384  007704  6ADA               	clrf	fsr2h,c
  2385  007706  0E00               	movlw	high _sensorVals
  2386  007708  22DA               	addwfc	fsr2h,f,c
  2387  00770A  50E6               	movf	postinc1,w,c
  2388  00770C  5CDE               	subwf	postinc2,w,c
  2389  00770E  B0D8               	btfsc	status,0,c
  2390  007710  D008               	goto	l2595
  2391                           
  2392                           ;./functions.c: 535:             colorsDetected[a] = 'B';
  2393  007712  0ED1               	movlw	low _colorsDetected
  2394  007714  240F               	addwf	classifyColors@a,w,c
  2395  007716  6ED9               	movwf	fsr2l,c
  2396  007718  6ADA               	clrf	fsr2h,c
  2397  00771A  0E00               	movlw	high _colorsDetected
  2398  00771C  22DA               	addwfc	fsr2h,f,c
  2399  00771E  0E42               	movlw	66
  2400  007720  D007               	goto	L1
  2401  007722                     l2595:
  2402                           
  2403                           ;./functions.c: 538:             colorsDetected[a] = 'n';
  2404  007722  0ED1               	movlw	low _colorsDetected
  2405  007724  240F               	addwf	classifyColors@a,w,c
  2406  007726  6ED9               	movwf	fsr2l,c
  2407  007728  6ADA               	clrf	fsr2h,c
  2408  00772A  0E00               	movlw	high _colorsDetected
  2409  00772C  22DA               	addwfc	fsr2h,f,c
  2410  00772E  0E6E               	movlw	110
  2411  007730                     L1:
  2412  007730  6EDF               	movwf	indf2,c
  2413                           
  2414                           ;./functions.c: 540:     }
  2415  007732  2A0F               	incf	classifyColors@a,f,c
  2416  007734  0E04               	movlw	4
  2417  007736  640F               	cpfsgt	classifyColors@a,c
  2418  007738  D772               	goto	l2579
  2419  00773A  0012               	return	
  2420  00773C                     __end_of_classifyColors:
  2421                           	opt callstack 0
  2422                           
  2423 ;; *************** function _calibrate *****************
  2424 ;; Defined at:
  2425 ;;		line 137 in file "./functions.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  samples         1   60[COMRAM] unsigned char 
  2430 ;;  samples         1   59[COMRAM] unsigned char 
  2431 ;;  samples         1   58[COMRAM] unsigned char 
  2432 ;;  samples         1   57[COMRAM] unsigned char 
  2433 ;;  samples         1   56[COMRAM] unsigned char 
  2434 ;;  sensors         5   51[COMRAM] unsigned char [5]
  2435 ;;  temp            1   61[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2445 ;;      Params:         0       0       0       0       0       0       0
  2446 ;;      Locals:        11       0       0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0
  2448 ;;      Totals:        11       0       0       0       0       0       0
  2449 ;;Total ram usage:       11 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    3
  2452 ;; This function calls:
  2453 ;;		_aveSensor
  2454 ;;		_oneSecDelay
  2455 ;; This function is called by:
  2456 ;;		_RCE
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text16
  2461  007A00                     __ptext16:
  2462                           	opt callstack 0
  2463  007A00                     _calibrate:
  2464                           	opt callstack 26
  2465                           
  2466                           ;./functions.c: 139:     PORTA = 0;
  2467                           
  2468                           ;incstack = 0
  2469  007A00  0E00               	movlw	0
  2470  007A02  6E80               	movwf	3968,c	;volatile
  2471                           
  2472                           ;./functions.c: 140:     unsigned char sensors[5] = {12, 8, 9, 10, 13};
  2473  007A04  EE20  F0B3         	lfsr	2,calibrate@F6001
  2474  007A08  EE10  F034         	lfsr	1,calibrate@sensors
  2475  007A0C  0E04               	movlw	4
  2476  007A0E                     u1791:
  2477  007A0E  CFDB FFE3          	movff	plusw2,plusw1
  2478  007A12  06E8               	decf	wreg,f,c
  2479  007A14  E2FC               	bc	u1791
  2480                           
  2481                           ;./functions.c: 143:     PORTD = 0b11000001;
  2482  007A16  0EC1               	movlw	193
  2483  007A18  6E83               	movwf	3971,c	;volatile
  2484                           
  2485                           ;./functions.c: 144:     for (unsigned char samples = 0; samples < 250; samples++)
  2486  007A1A  0E00               	movlw	0
  2487  007A1C  6E39               	movwf	calibrate@samples,c
  2488  007A1E                     l2651:
  2489                           
  2490                           ;./functions.c: 145:     {;./functions.c: 146:         temp = aveSensor(12);
  2491  007A1E  0E0C               	movlw	12
  2492  007A20  EC94  F038         	call	_aveSensor
  2493  007A24  6E3E               	movwf	calibrate@temp,c
  2494                           
  2495                           ;./functions.c: 147:         if (temp >= LLranges[0])
  2496  007A26  5057               	movf	_LLranges,w,c
  2497  007A28  5C3E               	subwf	calibrate@temp,w,c
  2498  007A2A  B0D8               	btfsc	status,0,c
  2499                           
  2500                           ;./functions.c: 148:         {;./functions.c: 149:             LLranges[0] = temp;
  2501  007A2C  C03E  F057         	movff	calibrate@temp,_LLranges
  2502                           
  2503                           ;./functions.c: 151:         temp = aveSensor(10);
  2504  007A30  0E0A               	movlw	10
  2505  007A32  EC94  F038         	call	_aveSensor
  2506  007A36  6E3E               	movwf	calibrate@temp,c
  2507                           
  2508                           ;./functions.c: 152:         if (temp >= Lranges[0])
  2509  007A38  0100               	movlb	0	; () banked
  2510  007A3A  51CC               	movf	_Lranges& (0+255),w,b
  2511  007A3C  5C3E               	subwf	calibrate@temp,w,c
  2512  007A3E  B0D8               	btfsc	status,0,c
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;./functions.c: 153:         {;./functions.c: 154:             Lranges[0] = temp;
  2516  007A40  C03E  F0CC         	movff	calibrate@temp,_Lranges
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;./functions.c: 156:         temp = aveSensor(8);
  2520  007A44  0E08               	movlw	8
  2521  007A46  EC94  F038         	call	_aveSensor
  2522  007A4A  6E3E               	movwf	calibrate@temp,c
  2523                           
  2524                           ;./functions.c: 157:         if (temp >= LLranges[0])
  2525  007A4C  5057               	movf	_LLranges,w,c
  2526  007A4E  5C3E               	subwf	calibrate@temp,w,c
  2527  007A50  B0D8               	btfsc	status,0,c
  2528                           
  2529                           ;./functions.c: 158:         {;./functions.c: 159:             Mranges[0] = temp;
  2530  007A52  C03E  F0C7         	movff	calibrate@temp,_Mranges
  2531                           
  2532                           ;./functions.c: 161:         temp = aveSensor(9);
  2533  007A56  0E09               	movlw	9
  2534  007A58  EC94  F038         	call	_aveSensor
  2535  007A5C  6E3E               	movwf	calibrate@temp,c
  2536                           
  2537                           ;./functions.c: 162:         if (temp >= LLranges[0])
  2538  007A5E  5057               	movf	_LLranges,w,c
  2539  007A60  5C3E               	subwf	calibrate@temp,w,c
  2540  007A62  B0D8               	btfsc	status,0,c
  2541                           
  2542                           ;./functions.c: 163:         {;./functions.c: 164:             Rranges[0] = temp;
  2543  007A64  C03E  F0C2         	movff	calibrate@temp,_Rranges
  2544                           
  2545                           ;./functions.c: 166:         temp = aveSensor(13);
  2546  007A68  0E0D               	movlw	13
  2547  007A6A  EC94  F038         	call	_aveSensor
  2548  007A6E  6E3E               	movwf	calibrate@temp,c
  2549                           
  2550                           ;./functions.c: 167:         if (temp >= LLranges[0])
  2551  007A70  5057               	movf	_LLranges,w,c
  2552  007A72  5C3E               	subwf	calibrate@temp,w,c
  2553  007A74  B0D8               	btfsc	status,0,c
  2554                           
  2555                           ;./functions.c: 168:         {;./functions.c: 169:             RRranges[0] = temp;
  2556  007A76  C03E  F0BD         	movff	calibrate@temp,_RRranges
  2557                           
  2558                           ;./functions.c: 171:     }
  2559  007A7A  2A39               	incf	calibrate@samples,f,c
  2560  007A7C  0EF9               	movlw	249
  2561  007A7E  6439               	cpfsgt	calibrate@samples,c
  2562  007A80  D7CE               	goto	l2651
  2563                           
  2564                           ;./functions.c: 172:     PORTAbits.RA0 = 1;
  2565  007A82  8080               	bsf	3968,0,c	;volatile
  2566                           
  2567                           ;./functions.c: 173:     oneSecDelay();
  2568  007A84  ECBA  F037         	call	_oneSecDelay	;wreg free
  2569                           
  2570                           ;./functions.c: 174:     oneSecDelay();
  2571  007A88  ECBA  F037         	call	_oneSecDelay	;wreg free
  2572                           
  2573                           ;./functions.c: 175:     oneSecDelay();
  2574  007A8C  ECBA  F037         	call	_oneSecDelay	;wreg free
  2575                           
  2576                           ;./functions.c: 176:     oneSecDelay();
  2577  007A90  ECBA  F037         	call	_oneSecDelay	;wreg free
  2578                           
  2579                           ;./functions.c: 177:     oneSecDelay();
  2580  007A94  ECBA  F037         	call	_oneSecDelay	;wreg free
  2581                           
  2582                           ;./functions.c: 178:     oneSecDelay();
  2583  007A98  ECBA  F037         	call	_oneSecDelay	;wreg free
  2584                           
  2585                           ;./functions.c: 180:     PORTD = 0b10000010;
  2586  007A9C  0E82               	movlw	130
  2587  007A9E  6E83               	movwf	3971,c	;volatile
  2588                           
  2589                           ;./functions.c: 181:     for (unsigned char samples = 0; samples < 250; samples++)
  2590  007AA0  0E00               	movlw	0
  2591  007AA2  6E3A               	movwf	calibrate@samples_1091,c
  2592  007AA4                     l2695:
  2593                           
  2594                           ;./functions.c: 182:     {;./functions.c: 183:         temp = aveSensor(12);
  2595  007AA4  0E0C               	movlw	12
  2596  007AA6  EC94  F038         	call	_aveSensor
  2597  007AAA  6E3E               	movwf	calibrate@temp,c
  2598                           
  2599                           ;./functions.c: 184:         if (temp >= LLranges[1])
  2600  007AAC  5058               	movf	_LLranges+1,w,c
  2601  007AAE  5C3E               	subwf	calibrate@temp,w,c
  2602  007AB0  B0D8               	btfsc	status,0,c
  2603                           
  2604                           ;./functions.c: 185:         {;./functions.c: 186:             LLranges[1] = temp;
  2605  007AB2  C03E  F058         	movff	calibrate@temp,_LLranges+1
  2606                           
  2607                           ;./functions.c: 188:         temp = aveSensor(10);
  2608  007AB6  0E0A               	movlw	10
  2609  007AB8  EC94  F038         	call	_aveSensor
  2610  007ABC  6E3E               	movwf	calibrate@temp,c
  2611                           
  2612                           ;./functions.c: 189:         if (temp >= Lranges[1])
  2613  007ABE  0100               	movlb	0	; () banked
  2614  007AC0  51CD               	movf	(_Lranges+1)& (0+255),w,b
  2615  007AC2  5C3E               	subwf	calibrate@temp,w,c
  2616  007AC4  B0D8               	btfsc	status,0,c
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;./functions.c: 190:         {;./functions.c: 191:             Lranges[1] = temp;
  2620  007AC6  C03E  F0CD         	movff	calibrate@temp,_Lranges+1
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;./functions.c: 193:         temp = aveSensor(8);
  2624  007ACA  0E08               	movlw	8
  2625  007ACC  EC94  F038         	call	_aveSensor
  2626  007AD0  6E3E               	movwf	calibrate@temp,c
  2627                           
  2628                           ;./functions.c: 194:         if (temp >= LLranges[1])
  2629  007AD2  5058               	movf	_LLranges+1,w,c
  2630  007AD4  5C3E               	subwf	calibrate@temp,w,c
  2631  007AD6  B0D8               	btfsc	status,0,c
  2632                           
  2633                           ;./functions.c: 195:         {;./functions.c: 196:             Mranges[1] = temp;
  2634  007AD8  C03E  F0C8         	movff	calibrate@temp,_Mranges+1
  2635                           
  2636                           ;./functions.c: 198:         temp = aveSensor(9);
  2637  007ADC  0E09               	movlw	9
  2638  007ADE  EC94  F038         	call	_aveSensor
  2639  007AE2  6E3E               	movwf	calibrate@temp,c
  2640                           
  2641                           ;./functions.c: 199:         if (temp >= LLranges[1])
  2642  007AE4  5058               	movf	_LLranges+1,w,c
  2643  007AE6  5C3E               	subwf	calibrate@temp,w,c
  2644  007AE8  B0D8               	btfsc	status,0,c
  2645                           
  2646                           ;./functions.c: 200:         {;./functions.c: 201:             Rranges[1] = temp;
  2647  007AEA  C03E  F0C3         	movff	calibrate@temp,_Rranges+1
  2648                           
  2649                           ;./functions.c: 203:         temp = aveSensor(13);
  2650  007AEE  0E0D               	movlw	13
  2651  007AF0  EC94  F038         	call	_aveSensor
  2652  007AF4  6E3E               	movwf	calibrate@temp,c
  2653                           
  2654                           ;./functions.c: 204:         if (temp >= LLranges[1])
  2655  007AF6  5058               	movf	_LLranges+1,w,c
  2656  007AF8  5C3E               	subwf	calibrate@temp,w,c
  2657  007AFA  B0D8               	btfsc	status,0,c
  2658                           
  2659                           ;./functions.c: 205:         {;./functions.c: 206:             RRranges[1] = temp;
  2660  007AFC  C03E  F0BE         	movff	calibrate@temp,_RRranges+1
  2661                           
  2662                           ;./functions.c: 208:     }
  2663  007B00  2A3A               	incf	calibrate@samples_1091,f,c
  2664  007B02  0EF9               	movlw	249
  2665  007B04  643A               	cpfsgt	calibrate@samples_1091,c
  2666  007B06  D7CE               	goto	l2695
  2667                           
  2668                           ;./functions.c: 209:     PORTAbits.RA1 = 1;
  2669  007B08  8280               	bsf	3968,1,c	;volatile
  2670                           
  2671                           ;./functions.c: 210:     oneSecDelay();
  2672  007B0A  ECBA  F037         	call	_oneSecDelay	;wreg free
  2673                           
  2674                           ;./functions.c: 211:     oneSecDelay();
  2675  007B0E  ECBA  F037         	call	_oneSecDelay	;wreg free
  2676                           
  2677                           ;./functions.c: 212:     oneSecDelay();
  2678  007B12  ECBA  F037         	call	_oneSecDelay	;wreg free
  2679                           
  2680                           ;./functions.c: 213:     oneSecDelay();
  2681  007B16  ECBA  F037         	call	_oneSecDelay	;wreg free
  2682                           
  2683                           ;./functions.c: 214:     oneSecDelay();
  2684  007B1A  ECBA  F037         	call	_oneSecDelay	;wreg free
  2685                           
  2686                           ;./functions.c: 215:     oneSecDelay();
  2687  007B1E  ECBA  F037         	call	_oneSecDelay	;wreg free
  2688                           
  2689                           ;./functions.c: 217:     PORTD = 0b10001000;
  2690  007B22  0E88               	movlw	136
  2691  007B24  6E83               	movwf	3971,c	;volatile
  2692                           
  2693                           ;./functions.c: 218:     for (unsigned char samples = 0; samples < 250; samples++)
  2694  007B26  0E00               	movlw	0
  2695  007B28  6E3B               	movwf	calibrate@samples_1092,c
  2696  007B2A                     l2739:
  2697                           
  2698                           ;./functions.c: 219:     {;./functions.c: 220:         temp = aveSensor(12);
  2699  007B2A  0E0C               	movlw	12
  2700  007B2C  EC94  F038         	call	_aveSensor
  2701  007B30  6E3E               	movwf	calibrate@temp,c
  2702                           
  2703                           ;./functions.c: 221:         if (temp >= LLranges[2])
  2704  007B32  5059               	movf	_LLranges+2,w,c
  2705  007B34  5C3E               	subwf	calibrate@temp,w,c
  2706  007B36  B0D8               	btfsc	status,0,c
  2707                           
  2708                           ;./functions.c: 222:         {;./functions.c: 223:             LLranges[2] = temp;
  2709  007B38  C03E  F059         	movff	calibrate@temp,_LLranges+2
  2710                           
  2711                           ;./functions.c: 225:         temp = aveSensor(10);
  2712  007B3C  0E0A               	movlw	10
  2713  007B3E  EC94  F038         	call	_aveSensor
  2714  007B42  6E3E               	movwf	calibrate@temp,c
  2715                           
  2716                           ;./functions.c: 226:         if (temp >= Lranges[2])
  2717  007B44  0100               	movlb	0	; () banked
  2718  007B46  51CE               	movf	(_Lranges+2)& (0+255),w,b
  2719  007B48  5C3E               	subwf	calibrate@temp,w,c
  2720  007B4A  B0D8               	btfsc	status,0,c
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;./functions.c: 227:         {;./functions.c: 228:             Lranges[2] = temp;
  2724  007B4C  C03E  F0CE         	movff	calibrate@temp,_Lranges+2
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;./functions.c: 230:         temp = aveSensor(8);
  2728  007B50  0E08               	movlw	8
  2729  007B52  EC94  F038         	call	_aveSensor
  2730  007B56  6E3E               	movwf	calibrate@temp,c
  2731                           
  2732                           ;./functions.c: 231:         if (temp >= LLranges[2])
  2733  007B58  5059               	movf	_LLranges+2,w,c
  2734  007B5A  5C3E               	subwf	calibrate@temp,w,c
  2735  007B5C  B0D8               	btfsc	status,0,c
  2736                           
  2737                           ;./functions.c: 232:         {;./functions.c: 233:             Mranges[2] = temp;
  2738  007B5E  C03E  F0C9         	movff	calibrate@temp,_Mranges+2
  2739                           
  2740                           ;./functions.c: 235:         temp = aveSensor(9);
  2741  007B62  0E09               	movlw	9
  2742  007B64  EC94  F038         	call	_aveSensor
  2743  007B68  6E3E               	movwf	calibrate@temp,c
  2744                           
  2745                           ;./functions.c: 236:         if (temp >= LLranges[2])
  2746  007B6A  5059               	movf	_LLranges+2,w,c
  2747  007B6C  5C3E               	subwf	calibrate@temp,w,c
  2748  007B6E  B0D8               	btfsc	status,0,c
  2749                           
  2750                           ;./functions.c: 237:         {;./functions.c: 238:             Rranges[2] = temp;
  2751  007B70  C03E  F0C4         	movff	calibrate@temp,_Rranges+2
  2752                           
  2753                           ;./functions.c: 240:         temp = aveSensor(13);
  2754  007B74  0E0D               	movlw	13
  2755  007B76  EC94  F038         	call	_aveSensor
  2756  007B7A  6E3E               	movwf	calibrate@temp,c
  2757                           
  2758                           ;./functions.c: 241:         if (temp >= LLranges[2])
  2759  007B7C  5059               	movf	_LLranges+2,w,c
  2760  007B7E  5C3E               	subwf	calibrate@temp,w,c
  2761  007B80  B0D8               	btfsc	status,0,c
  2762                           
  2763                           ;./functions.c: 242:         {;./functions.c: 243:             RRranges[2] = temp;
  2764  007B82  C03E  F0BF         	movff	calibrate@temp,_RRranges+2
  2765                           
  2766                           ;./functions.c: 245:     }
  2767  007B86  2A3B               	incf	calibrate@samples_1092,f,c
  2768  007B88  0EF9               	movlw	249
  2769  007B8A  643B               	cpfsgt	calibrate@samples_1092,c
  2770  007B8C  D7CE               	goto	l2739
  2771                           
  2772                           ;./functions.c: 246:     PORTAbits.RA2 = 1;
  2773  007B8E  8480               	bsf	3968,2,c	;volatile
  2774                           
  2775                           ;./functions.c: 247:     oneSecDelay();
  2776  007B90  ECBA  F037         	call	_oneSecDelay	;wreg free
  2777                           
  2778                           ;./functions.c: 248:     oneSecDelay();
  2779  007B94  ECBA  F037         	call	_oneSecDelay	;wreg free
  2780                           
  2781                           ;./functions.c: 249:     oneSecDelay();
  2782  007B98  ECBA  F037         	call	_oneSecDelay	;wreg free
  2783                           
  2784                           ;./functions.c: 250:     oneSecDelay();
  2785  007B9C  ECBA  F037         	call	_oneSecDelay	;wreg free
  2786                           
  2787                           ;./functions.c: 251:     oneSecDelay();
  2788  007BA0  ECBA  F037         	call	_oneSecDelay	;wreg free
  2789                           
  2790                           ;./functions.c: 252:     oneSecDelay();
  2791  007BA4  ECBA  F037         	call	_oneSecDelay	;wreg free
  2792                           
  2793                           ;./functions.c: 254:     PORTD = 0b10000000;
  2794  007BA8  0E80               	movlw	128
  2795  007BAA  6E83               	movwf	3971,c	;volatile
  2796                           
  2797                           ;./functions.c: 255:     for (unsigned char samples = 0; samples < 250; samples++)
  2798  007BAC  0E00               	movlw	0
  2799  007BAE  6E3C               	movwf	calibrate@samples_1093,c
  2800  007BB0                     l2783:
  2801                           
  2802                           ;./functions.c: 256:     {;./functions.c: 257:         temp = aveSensor(12);
  2803  007BB0  0E0C               	movlw	12
  2804  007BB2  EC94  F038         	call	_aveSensor
  2805  007BB6  6E3E               	movwf	calibrate@temp,c
  2806                           
  2807                           ;./functions.c: 258:         if (temp >= LLranges[3])
  2808  007BB8  505A               	movf	_LLranges+3,w,c
  2809  007BBA  5C3E               	subwf	calibrate@temp,w,c
  2810  007BBC  B0D8               	btfsc	status,0,c
  2811                           
  2812                           ;./functions.c: 259:         {;./functions.c: 260:             LLranges[3] = temp;
  2813  007BBE  C03E  F05A         	movff	calibrate@temp,_LLranges+3
  2814                           
  2815                           ;./functions.c: 262:         temp = aveSensor(10);
  2816  007BC2  0E0A               	movlw	10
  2817  007BC4  EC94  F038         	call	_aveSensor
  2818  007BC8  6E3E               	movwf	calibrate@temp,c
  2819                           
  2820                           ;./functions.c: 263:         if (temp >= Lranges[3])
  2821  007BCA  0100               	movlb	0	; () banked
  2822  007BCC  51CF               	movf	(_Lranges+3)& (0+255),w,b
  2823  007BCE  5C3E               	subwf	calibrate@temp,w,c
  2824  007BD0  B0D8               	btfsc	status,0,c
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;./functions.c: 264:         {;./functions.c: 265:             Lranges[3] = temp;
  2828  007BD2  C03E  F0CF         	movff	calibrate@temp,_Lranges+3
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;./functions.c: 267:         temp = aveSensor(8);
  2832  007BD6  0E08               	movlw	8
  2833  007BD8  EC94  F038         	call	_aveSensor
  2834  007BDC  6E3E               	movwf	calibrate@temp,c
  2835                           
  2836                           ;./functions.c: 268:         if (temp >= LLranges[3])
  2837  007BDE  505A               	movf	_LLranges+3,w,c
  2838  007BE0  5C3E               	subwf	calibrate@temp,w,c
  2839  007BE2  B0D8               	btfsc	status,0,c
  2840                           
  2841                           ;./functions.c: 269:         {;./functions.c: 270:             Mranges[3] = temp;
  2842  007BE4  C03E  F0CA         	movff	calibrate@temp,_Mranges+3
  2843                           
  2844                           ;./functions.c: 272:         temp = aveSensor(9);
  2845  007BE8  0E09               	movlw	9
  2846  007BEA  EC94  F038         	call	_aveSensor
  2847  007BEE  6E3E               	movwf	calibrate@temp,c
  2848                           
  2849                           ;./functions.c: 273:         if (temp >= LLranges[3])
  2850  007BF0  505A               	movf	_LLranges+3,w,c
  2851  007BF2  5C3E               	subwf	calibrate@temp,w,c
  2852  007BF4  B0D8               	btfsc	status,0,c
  2853                           
  2854                           ;./functions.c: 274:         {;./functions.c: 275:             Rranges[3] = temp;
  2855  007BF6  C03E  F0C5         	movff	calibrate@temp,_Rranges+3
  2856                           
  2857                           ;./functions.c: 277:         temp = aveSensor(13);
  2858  007BFA  0E0D               	movlw	13
  2859  007BFC  EC94  F038         	call	_aveSensor
  2860  007C00  6E3E               	movwf	calibrate@temp,c
  2861                           
  2862                           ;./functions.c: 278:         if (temp >= LLranges[3])
  2863  007C02  505A               	movf	_LLranges+3,w,c
  2864  007C04  5C3E               	subwf	calibrate@temp,w,c
  2865  007C06  B0D8               	btfsc	status,0,c
  2866                           
  2867                           ;./functions.c: 279:         {;./functions.c: 280:             RRranges[3] = temp;
  2868  007C08  C03E  F0C0         	movff	calibrate@temp,_RRranges+3
  2869                           
  2870                           ;./functions.c: 282:     }
  2871  007C0C  2A3C               	incf	calibrate@samples_1093,f,c
  2872  007C0E  0EF9               	movlw	249
  2873  007C10  643C               	cpfsgt	calibrate@samples_1093,c
  2874  007C12  D7CE               	goto	l2783
  2875                           
  2876                           ;./functions.c: 283:     PORTAbits.RA3 = 1;
  2877  007C14  8680               	bsf	3968,3,c	;volatile
  2878                           
  2879                           ;./functions.c: 284:     oneSecDelay();
  2880  007C16  ECBA  F037         	call	_oneSecDelay	;wreg free
  2881                           
  2882                           ;./functions.c: 285:     oneSecDelay();
  2883  007C1A  ECBA  F037         	call	_oneSecDelay	;wreg free
  2884                           
  2885                           ;./functions.c: 286:     oneSecDelay();
  2886  007C1E  ECBA  F037         	call	_oneSecDelay	;wreg free
  2887                           
  2888                           ;./functions.c: 287:     oneSecDelay();
  2889  007C22  ECBA  F037         	call	_oneSecDelay	;wreg free
  2890                           
  2891                           ;./functions.c: 288:     oneSecDelay();
  2892  007C26  ECBA  F037         	call	_oneSecDelay	;wreg free
  2893                           
  2894                           ;./functions.c: 289:     oneSecDelay();
  2895  007C2A  ECBA  F037         	call	_oneSecDelay	;wreg free
  2896                           
  2897                           ;./functions.c: 291:     PORTD = 0b11001000;
  2898  007C2E  0EC8               	movlw	200
  2899  007C30  6E83               	movwf	3971,c	;volatile
  2900                           
  2901                           ;./functions.c: 292:     for (unsigned char samples = 0; samples < 250; samples++)
  2902  007C32  0E00               	movlw	0
  2903  007C34  6E3D               	movwf	calibrate@samples_1094,c
  2904  007C36                     l2827:
  2905                           
  2906                           ;./functions.c: 293:     {;./functions.c: 294:         temp = aveSensor(12);
  2907  007C36  0E0C               	movlw	12
  2908  007C38  EC94  F038         	call	_aveSensor
  2909  007C3C  6E3E               	movwf	calibrate@temp,c
  2910                           
  2911                           ;./functions.c: 295:         if (temp >= LLranges[4])
  2912  007C3E  505B               	movf	_LLranges+4,w,c
  2913  007C40  5C3E               	subwf	calibrate@temp,w,c
  2914  007C42  B0D8               	btfsc	status,0,c
  2915                           
  2916                           ;./functions.c: 296:         {;./functions.c: 297:             LLranges[4] = temp;
  2917  007C44  C03E  F05B         	movff	calibrate@temp,_LLranges+4
  2918                           
  2919                           ;./functions.c: 299:         temp = aveSensor(10);
  2920  007C48  0E0A               	movlw	10
  2921  007C4A  EC94  F038         	call	_aveSensor
  2922  007C4E  6E3E               	movwf	calibrate@temp,c
  2923                           
  2924                           ;./functions.c: 300:         if (temp >= Lranges[4])
  2925  007C50  0100               	movlb	0	; () banked
  2926  007C52  51D0               	movf	(_Lranges+4)& (0+255),w,b
  2927  007C54  5C3E               	subwf	calibrate@temp,w,c
  2928  007C56  B0D8               	btfsc	status,0,c
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;./functions.c: 301:         {;./functions.c: 302:             Lranges[4] = temp;
  2932  007C58  C03E  F0D0         	movff	calibrate@temp,_Lranges+4
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;./functions.c: 304:         temp = aveSensor(8);
  2936  007C5C  0E08               	movlw	8
  2937  007C5E  EC94  F038         	call	_aveSensor
  2938  007C62  6E3E               	movwf	calibrate@temp,c
  2939                           
  2940                           ;./functions.c: 305:         if (temp >= LLranges[4])
  2941  007C64  505B               	movf	_LLranges+4,w,c
  2942  007C66  5C3E               	subwf	calibrate@temp,w,c
  2943  007C68  B0D8               	btfsc	status,0,c
  2944                           
  2945                           ;./functions.c: 306:         {;./functions.c: 307:             Mranges[4] = temp;
  2946  007C6A  C03E  F0CB         	movff	calibrate@temp,_Mranges+4
  2947                           
  2948                           ;./functions.c: 309:         temp = aveSensor(9);
  2949  007C6E  0E09               	movlw	9
  2950  007C70  EC94  F038         	call	_aveSensor
  2951  007C74  6E3E               	movwf	calibrate@temp,c
  2952                           
  2953                           ;./functions.c: 310:         if (temp >= LLranges[4])
  2954  007C76  505B               	movf	_LLranges+4,w,c
  2955  007C78  5C3E               	subwf	calibrate@temp,w,c
  2956  007C7A  B0D8               	btfsc	status,0,c
  2957                           
  2958                           ;./functions.c: 311:         {;./functions.c: 312:             Rranges[4] = temp;
  2959  007C7C  C03E  F0C6         	movff	calibrate@temp,_Rranges+4
  2960                           
  2961                           ;./functions.c: 314:         temp = aveSensor(13);
  2962  007C80  0E0D               	movlw	13
  2963  007C82  EC94  F038         	call	_aveSensor
  2964  007C86  6E3E               	movwf	calibrate@temp,c
  2965                           
  2966                           ;./functions.c: 315:         if (temp >= LLranges[4])
  2967  007C88  505B               	movf	_LLranges+4,w,c
  2968  007C8A  5C3E               	subwf	calibrate@temp,w,c
  2969  007C8C  B0D8               	btfsc	status,0,c
  2970                           
  2971                           ;./functions.c: 316:         {;./functions.c: 317:             RRranges[4] = temp;
  2972  007C8E  C03E  F0C1         	movff	calibrate@temp,_RRranges+4
  2973                           
  2974                           ;./functions.c: 319:     }
  2975  007C92  2A3D               	incf	calibrate@samples_1094,f,c
  2976  007C94  0EF9               	movlw	249
  2977  007C96  643D               	cpfsgt	calibrate@samples_1094,c
  2978  007C98  D7CE               	goto	l2827
  2979                           
  2980                           ;./functions.c: 320:     PORTAbits.RA4 = 1;
  2981  007C9A  8880               	bsf	3968,4,c	;volatile
  2982                           
  2983                           ;./functions.c: 321:     oneSecDelay();
  2984  007C9C  ECBA  F037         	call	_oneSecDelay	;wreg free
  2985                           
  2986                           ;./functions.c: 322:     oneSecDelay();
  2987  007CA0  ECBA  F037         	call	_oneSecDelay	;wreg free
  2988                           
  2989                           ;./functions.c: 323:     oneSecDelay();
  2990  007CA4  ECBA  F037         	call	_oneSecDelay	;wreg free
  2991                           
  2992                           ;./functions.c: 325:     PORTA = 0;
  2993  007CA8  0E00               	movlw	0
  2994  007CAA  6E80               	movwf	3968,c	;volatile
  2995  007CAC  0012               	return		;funcret
  2996  007CAE                     __end_of_calibrate:
  2997                           	opt callstack 0
  2998                           
  2999 ;; *************** function _oneSecDelay *****************
  3000 ;; Defined at:
  3001 ;;		line 749 in file "./functions.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  a               1   50[COMRAM] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3015 ;;      Params:         0       0       0       0       0       0       0
  3016 ;;      Locals:         1       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0
  3018 ;;      Totals:         1       0       0       0       0       0       0
  3019 ;;Total ram usage:        1 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    2
  3022 ;; This function calls:
  3023 ;;		_msDelay
  3024 ;; This function is called by:
  3025 ;;		_calibrate
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text17
  3030  006F74                     __ptext17:
  3031                           	opt callstack 0
  3032  006F74                     _oneSecDelay:
  3033                           	opt callstack 26
  3034                           
  3035                           ;./functions.c: 751:     for (unsigned char a = 0; a < 15; a++)
  3036                           
  3037                           ;incstack = 0
  3038  006F74  0E00               	movlw	0
  3039  006F76  6E33               	movwf	oneSecDelay@a,c
  3040  006F78                     l2515:
  3041                           
  3042                           ;./functions.c: 752:     {;./functions.c: 753:         msDelay(63);
  3043  006F78  0E3F               	movlw	63
  3044  006F7A  EC36  F039         	call	_msDelay
  3045                           
  3046                           ;./functions.c: 754:     }
  3047  006F7E  2A33               	incf	oneSecDelay@a,f,c
  3048  006F80  0E0E               	movlw	14
  3049  006F82  6433               	cpfsgt	oneSecDelay@a,c
  3050  006F84  D7F9               	goto	l2515
  3051  006F86  0012               	return	
  3052  006F88                     __end_of_oneSecDelay:
  3053                           	opt callstack 0
  3054                           
  3055 ;; *************** function _msDelay *****************
  3056 ;; Defined at:
  3057 ;;		line 759 in file "./functions.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  delayInMs       1    wreg     unsigned char 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  delayInMs       1   49[COMRAM] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3071 ;;      Params:         0       0       0       0       0       0       0
  3072 ;;      Locals:         1       0       0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0
  3074 ;;      Totals:         1       0       0       0       0       0       0
  3075 ;;Total ram usage:        1 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    1
  3078 ;; This function calls:
  3079 ;;		___flmul
  3080 ;;		___fltol
  3081 ;;		___xxtofl
  3082 ;; This function is called by:
  3083 ;;		_pyCal
  3084 ;;		_oneSecDelay
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text18
  3089  00726C                     __ptext18:
  3090                           	opt callstack 0
  3091  00726C                     _msDelay:
  3092                           	opt callstack 27
  3093                           
  3094                           ;incstack = 0
  3095                           ;msDelay@delayInMs stored from wreg
  3096  00726C  6E32               	movwf	msDelay@delayInMs,c
  3097                           
  3098                           ;./functions.c: 759: void msDelay(unsigned char delayInMs);./functions.c: 760: {;./funct
      +                          ions.c: 761:     TMR6 = 0;
  3099  00726E  0E00               	movlw	0
  3100  007270  010F               	movlb	15	; () banked
  3101  007272  6F4C               	movwf	76,b	;volatile
  3102                           
  3103                           ; BSR set to: 15
  3104                           ;./functions.c: 762:     PR6 = 3.90625 * delayInMs;
  3105  007274  0E00               	movlw	0
  3106  007276  6E13               	movwf	___flmul@a,c
  3107  007278  0E00               	movlw	0
  3108  00727A  6E14               	movwf	___flmul@a+1,c
  3109  00727C  0E7A               	movlw	122
  3110  00727E  6E15               	movwf	___flmul@a+2,c
  3111  007280  0E40               	movlw	64
  3112  007282  6E16               	movwf	___flmul@a+3,c
  3113  007284  5032               	movf	msDelay@delayInMs,w,c
  3114  007286  6E01               	movwf	___xxtofl@val,c
  3115  007288  6A02               	clrf	___xxtofl@val+1,c
  3116  00728A  6A03               	clrf	___xxtofl@val+2,c
  3117  00728C  6A04               	clrf	___xxtofl@val+3,c
  3118  00728E  0E01               	movlw	1
  3119  007290  EC9E  F03B         	call	___xxtofl
  3120  007294  C001  F00F         	movff	?___xxtofl,___flmul@b
  3121  007298  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3122  00729C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3123  0072A0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3124  0072A4  EC57  F03E         	call	___flmul	;wreg free
  3125  0072A8  C00F  F028         	movff	?___flmul,___fltol@f1
  3126  0072AC  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3127  0072B0  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3128  0072B4  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3129  0072B8  EC28  F03A         	call	___fltol	;wreg free
  3130  0072BC  5028               	movf	?___fltol,w,c
  3131  0072BE  010F               	movlb	15	; () banked
  3132  0072C0  6F4B               	movwf	75,b	;volatile
  3133                           
  3134                           ; BSR set to: 15
  3135                           ;./functions.c: 763:     T6CON = 0xFF;
  3136  0072C2  694A               	setf	74,b	;volatile
  3137  0072C4                     l408:
  3138  0072C4  A47E               	btfss	3966,2,c	;volatile
  3139  0072C6  D7FE               	goto	l408
  3140                           
  3141                           ;./functions.c: 766:     PIR5bits.TMR6IF = 0;
  3142  0072C8  947E               	bcf	3966,2,c	;volatile
  3143                           
  3144                           ;./functions.c: 767:     T6CON = 0;
  3145  0072CA  0E00               	movlw	0
  3146  0072CC  010F               	movlb	15	; () banked
  3147  0072CE  6F4A               	movwf	74,b	;volatile
  3148                           
  3149                           ; BSR set to: 15
  3150  0072D0  0012               	return		;funcret
  3151  0072D2                     __end_of_msDelay:
  3152                           	opt callstack 0
  3153                           
  3154 ;; *************** function ___xxtofl *****************
  3155 ;; Defined at:
  3156 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  sign            1    wreg     unsigned char 
  3159 ;;  val             4    0[COMRAM] long 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  sign            1    8[COMRAM] unsigned char 
  3162 ;;  arg             4   10[COMRAM] unsigned long 
  3163 ;;  exp             1    9[COMRAM] unsigned char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  4    0[COMRAM] unsigned char 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3173 ;;      Params:         4       0       0       0       0       0       0
  3174 ;;      Locals:         6       0       0       0       0       0       0
  3175 ;;      Temps:          4       0       0       0       0       0       0
  3176 ;;      Totals:        14       0       0       0       0       0       0
  3177 ;;Total ram usage:       14 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_msDelay
  3183 ;;		_timer6Setup
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text19
  3188  00773C                     __ptext19:
  3189                           	opt callstack 0
  3190  00773C                     ___xxtofl:
  3191                           	opt callstack 27
  3192                           
  3193                           ; BSR set to: 15
  3194                           ;incstack = 0
  3195                           ;___xxtofl@sign stored from wreg
  3196  00773C  6E09               	movwf	___xxtofl@sign,c
  3197  00773E  5009               	movf	___xxtofl@sign,w,c
  3198  007740  A4D8               	btfss	status,2,c
  3199  007742  AE04               	btfss	___xxtofl@val+3,7,c
  3200  007744  D01A               	goto	l1113
  3201  007746  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3202  00774A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3203  00774E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3204  007752  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3205  007756  1E05               	comf	??___xxtofl,f,c
  3206  007758  1E06               	comf	??___xxtofl+1,f,c
  3207  00775A  1E07               	comf	??___xxtofl+2,f,c
  3208  00775C  1E08               	comf	??___xxtofl+3,f,c
  3209  00775E  2A05               	incf	??___xxtofl,f,c
  3210  007760  0E00               	movlw	0
  3211  007762  2206               	addwfc	??___xxtofl+1,f,c
  3212  007764  2207               	addwfc	??___xxtofl+2,f,c
  3213  007766  2208               	addwfc	??___xxtofl+3,f,c
  3214  007768  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3215  00776C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3216  007770  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3217  007774  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3218  007778  D008               	goto	l2403
  3219  00777A                     l1113:
  3220  00777A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3221  00777E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3222  007782  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3223  007786  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3224  00778A                     l2403:
  3225  00778A  5001               	movf	___xxtofl@val,w,c
  3226  00778C  1002               	iorwf	___xxtofl@val+1,w,c
  3227  00778E  1003               	iorwf	___xxtofl@val+2,w,c
  3228  007790  1004               	iorwf	___xxtofl@val+3,w,c
  3229  007792  A4D8               	btfss	status,2,c
  3230  007794  D009               	goto	l2409
  3231  007796  0E00               	movlw	0
  3232  007798  6E01               	movwf	?___xxtofl,c
  3233  00779A  0E00               	movlw	0
  3234  00779C  6E02               	movwf	?___xxtofl+1,c
  3235  00779E  0E00               	movlw	0
  3236  0077A0  6E03               	movwf	?___xxtofl+2,c
  3237  0077A2  0E00               	movlw	0
  3238  0077A4  6E04               	movwf	?___xxtofl+3,c
  3239  0077A6  0012               	return	
  3240  0077A8                     l2409:
  3241  0077A8  0E96               	movlw	150
  3242  0077AA  6E0A               	movwf	___xxtofl@exp,c
  3243  0077AC  D006               	goto	l2413
  3244  0077AE                     l2411:
  3245  0077AE  2A0A               	incf	___xxtofl@exp,f,c
  3246  0077B0  90D8               	bcf	status,0,c
  3247  0077B2  320E               	rrcf	___xxtofl@arg+3,f,c
  3248  0077B4  320D               	rrcf	___xxtofl@arg+2,f,c
  3249  0077B6  320C               	rrcf	___xxtofl@arg+1,f,c
  3250  0077B8  320B               	rrcf	___xxtofl@arg,f,c
  3251  0077BA                     l2413:
  3252  0077BA  0E00               	movlw	0
  3253  0077BC  140B               	andwf	___xxtofl@arg,w,c
  3254  0077BE  6E05               	movwf	??___xxtofl& (0+255),c
  3255  0077C0  0E00               	movlw	0
  3256  0077C2  140C               	andwf	___xxtofl@arg+1,w,c
  3257  0077C4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3258  0077C6  0E00               	movlw	0
  3259  0077C8  140D               	andwf	___xxtofl@arg+2,w,c
  3260  0077CA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3261  0077CC  0EFE               	movlw	254
  3262  0077CE  140E               	andwf	___xxtofl@arg+3,w,c
  3263  0077D0  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3264  0077D2  5005               	movf	??___xxtofl,w,c
  3265  0077D4  1006               	iorwf	??___xxtofl+1,w,c
  3266  0077D6  1007               	iorwf	??___xxtofl+2,w,c
  3267  0077D8  1008               	iorwf	??___xxtofl+3,w,c
  3268  0077DA  B4D8               	btfsc	status,2,c
  3269  0077DC  D00D               	goto	l1120
  3270  0077DE  D7E7               	goto	l2411
  3271  0077E0                     l2415:
  3272  0077E0  2A0A               	incf	___xxtofl@exp,f,c
  3273  0077E2  0E01               	movlw	1
  3274  0077E4  260B               	addwf	___xxtofl@arg,f,c
  3275  0077E6  0E00               	movlw	0
  3276  0077E8  220C               	addwfc	___xxtofl@arg+1,f,c
  3277  0077EA  220D               	addwfc	___xxtofl@arg+2,f,c
  3278  0077EC  220E               	addwfc	___xxtofl@arg+3,f,c
  3279  0077EE  90D8               	bcf	status,0,c
  3280  0077F0  320E               	rrcf	___xxtofl@arg+3,f,c
  3281  0077F2  320D               	rrcf	___xxtofl@arg+2,f,c
  3282  0077F4  320C               	rrcf	___xxtofl@arg+1,f,c
  3283  0077F6  320B               	rrcf	___xxtofl@arg,f,c
  3284  0077F8                     l1120:
  3285  0077F8  0E00               	movlw	0
  3286  0077FA  140B               	andwf	___xxtofl@arg,w,c
  3287  0077FC  6E05               	movwf	??___xxtofl& (0+255),c
  3288  0077FE  0E00               	movlw	0
  3289  007800  140C               	andwf	___xxtofl@arg+1,w,c
  3290  007802  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3291  007804  0E00               	movlw	0
  3292  007806  140D               	andwf	___xxtofl@arg+2,w,c
  3293  007808  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3294  00780A  0EFF               	movlw	255
  3295  00780C  140E               	andwf	___xxtofl@arg+3,w,c
  3296  00780E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3297  007810  5005               	movf	??___xxtofl,w,c
  3298  007812  1006               	iorwf	??___xxtofl+1,w,c
  3299  007814  1007               	iorwf	??___xxtofl+2,w,c
  3300  007816  1008               	iorwf	??___xxtofl+3,w,c
  3301  007818  B4D8               	btfsc	status,2,c
  3302  00781A  D007               	goto	l2423
  3303  00781C  D7E1               	goto	l2415
  3304  00781E                     l2421:
  3305  00781E  060A               	decf	___xxtofl@exp,f,c
  3306  007820  90D8               	bcf	status,0,c
  3307  007822  360B               	rlcf	___xxtofl@arg,f,c
  3308  007824  360C               	rlcf	___xxtofl@arg+1,f,c
  3309  007826  360D               	rlcf	___xxtofl@arg+2,f,c
  3310  007828  360E               	rlcf	___xxtofl@arg+3,f,c
  3311  00782A                     l2423:
  3312  00782A  BE0D               	btfsc	___xxtofl@arg+2,7,c
  3313  00782C  D003               	goto	u1570
  3314  00782E  0E02               	movlw	2
  3315  007830  600A               	cpfslt	___xxtofl@exp,c
  3316  007832  D7F5               	goto	l2421
  3317  007834                     u1570:
  3318  007834  A00A               	btfss	___xxtofl@exp,0,c
  3319  007836  9E0D               	bcf	___xxtofl@arg+2,7,c
  3320  007838  90D8               	bcf	status,0,c
  3321  00783A  320A               	rrcf	___xxtofl@exp,f,c
  3322  00783C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3323  007840  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  3324  007842  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  3325  007844  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  3326  007846  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3327  00784A  6A07               	clrf	??___xxtofl+2,c
  3328  00784C  6A06               	clrf	??___xxtofl+1,c
  3329  00784E  6A05               	clrf	??___xxtofl,c
  3330  007850  5005               	movf	??___xxtofl,w,c
  3331  007852  120B               	iorwf	___xxtofl@arg,f,c
  3332  007854  5006               	movf	??___xxtofl+1,w,c
  3333  007856  120C               	iorwf	___xxtofl@arg+1,f,c
  3334  007858  5007               	movf	??___xxtofl+2,w,c
  3335  00785A  120D               	iorwf	___xxtofl@arg+2,f,c
  3336  00785C  5008               	movf	??___xxtofl+3,w,c
  3337  00785E  120E               	iorwf	___xxtofl@arg+3,f,c
  3338  007860  5009               	movf	___xxtofl@sign,w,c
  3339  007862  A4D8               	btfss	status,2,c
  3340  007864  AE04               	btfss	___xxtofl@val+3,7,c
  3341  007866  D001               	goto	l2439
  3342  007868  8E0E               	bsf	___xxtofl@arg+3,7,c
  3343  00786A                     l2439:
  3344  00786A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3345  00786E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3346  007872  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3347  007876  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3348  00787A  0012               	return		;funcret
  3349  00787C                     __end_of___xxtofl:
  3350                           	opt callstack 0
  3351                           
  3352 ;; *************** function ___fltol *****************
  3353 ;; Defined at:
  3354 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  f1              4   39[COMRAM] unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  exp1            1   48[COMRAM] unsigned char 
  3359 ;;  sign1           1   47[COMRAM] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  4   39[COMRAM] long 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3369 ;;      Params:         4       0       0       0       0       0       0
  3370 ;;      Locals:         2       0       0       0       0       0       0
  3371 ;;      Temps:          4       0       0       0       0       0       0
  3372 ;;      Totals:        10       0       0       0       0       0       0
  3373 ;;Total ram usage:       10 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_msDelay
  3379 ;;		_timer6Setup
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text20
  3384  007450                     __ptext20:
  3385                           	opt callstack 0
  3386  007450                     ___fltol:
  3387                           	opt callstack 27
  3388                           
  3389                           ;incstack = 0
  3390  007450  342A               	rlcf	___fltol@f1+2,w,c
  3391  007452  342B               	rlcf	___fltol@f1+3,w,c
  3392  007454  6E31               	movwf	___fltol@exp1,c
  3393  007456  5031               	movf	___fltol@exp1,w,c
  3394  007458  A4D8               	btfss	status,2,c
  3395  00745A  D009               	goto	l2359
  3396  00745C                     u1440:
  3397  00745C  0E00               	movlw	0
  3398  00745E  6E28               	movwf	?___fltol,c
  3399  007460  0E00               	movlw	0
  3400  007462  6E29               	movwf	?___fltol+1,c
  3401  007464  0E00               	movlw	0
  3402  007466  6E2A               	movwf	?___fltol+2,c
  3403  007468  0E00               	movlw	0
  3404  00746A  6E2B               	movwf	?___fltol+3,c
  3405  00746C  0012               	return	
  3406  00746E                     l2359:
  3407  00746E  C028  F02C         	movff	___fltol@f1,??___fltol
  3408  007472  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3409  007476  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3410  00747A  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3411  00747E  0E20               	movlw	32
  3412  007480  D005               	goto	u1450
  3413  007482                     u1455:
  3414  007482  90D8               	bcf	status,0,c
  3415  007484  322F               	rrcf	??___fltol+3,f,c
  3416  007486  322E               	rrcf	??___fltol+2,f,c
  3417  007488  322D               	rrcf	??___fltol+1,f,c
  3418  00748A  322C               	rrcf	??___fltol,f,c
  3419  00748C                     u1450:
  3420  00748C  2EE8               	decfsz	wreg,f,c
  3421  00748E  D7F9               	goto	u1455
  3422  007490  502C               	movf	??___fltol,w,c
  3423  007492  6E30               	movwf	___fltol@sign1,c
  3424  007494  8E2A               	bsf	___fltol@f1+2,7,c
  3425  007496  0EFF               	movlw	255
  3426  007498  1628               	andwf	___fltol@f1,f,c
  3427  00749A  0EFF               	movlw	255
  3428  00749C  1629               	andwf	___fltol@f1+1,f,c
  3429  00749E  0EFF               	movlw	255
  3430  0074A0  162A               	andwf	___fltol@f1+2,f,c
  3431  0074A2  0E00               	movlw	0
  3432  0074A4  162B               	andwf	___fltol@f1+3,f,c
  3433  0074A6  0E96               	movlw	150
  3434  0074A8  5E31               	subwf	___fltol@exp1,f,c
  3435  0074AA  AE31               	btfss	___fltol@exp1,7,c
  3436  0074AC  D00D               	goto	l2379
  3437  0074AE  5031               	movf	___fltol@exp1,w,c
  3438  0074B0  0A80               	xorlw	128
  3439  0074B2  0F97               	addlw	151
  3440  0074B4  A0D8               	btfss	status,0,c
  3441  0074B6  D7D2               	goto	u1440
  3442  0074B8                     l2375:
  3443  0074B8  90D8               	bcf	status,0,c
  3444  0074BA  322B               	rrcf	___fltol@f1+3,f,c
  3445  0074BC  322A               	rrcf	___fltol@f1+2,f,c
  3446  0074BE  3229               	rrcf	___fltol@f1+1,f,c
  3447  0074C0  3228               	rrcf	___fltol@f1,f,c
  3448  0074C2  3E31               	incfsz	___fltol@exp1,f,c
  3449  0074C4  D7F9               	goto	l2375
  3450  0074C6  D00D               	goto	u1490
  3451  0074C8                     l2379:
  3452  0074C8  0E1F               	movlw	31
  3453  0074CA  6431               	cpfsgt	___fltol@exp1,c
  3454  0074CC  D007               	goto	l2387
  3455  0074CE  D7C6               	goto	u1440
  3456  0074D0                     l2385:
  3457  0074D0  90D8               	bcf	status,0,c
  3458  0074D2  3628               	rlcf	___fltol@f1,f,c
  3459  0074D4  3629               	rlcf	___fltol@f1+1,f,c
  3460  0074D6  362A               	rlcf	___fltol@f1+2,f,c
  3461  0074D8  362B               	rlcf	___fltol@f1+3,f,c
  3462  0074DA  0631               	decf	___fltol@exp1,f,c
  3463  0074DC                     l2387:
  3464  0074DC  5031               	movf	___fltol@exp1,w,c
  3465  0074DE  A4D8               	btfss	status,2,c
  3466  0074E0  D7F7               	goto	l2385
  3467  0074E2                     u1490:
  3468  0074E2  5030               	movf	___fltol@sign1,w,c
  3469  0074E4  B4D8               	btfsc	status,2,c
  3470  0074E6  D008               	goto	l2393
  3471  0074E8  1E2B               	comf	___fltol@f1+3,f,c
  3472  0074EA  1E2A               	comf	___fltol@f1+2,f,c
  3473  0074EC  1E29               	comf	___fltol@f1+1,f,c
  3474  0074EE  6C28               	negf	___fltol@f1,c
  3475  0074F0  0E00               	movlw	0
  3476  0074F2  2229               	addwfc	___fltol@f1+1,f,c
  3477  0074F4  222A               	addwfc	___fltol@f1+2,f,c
  3478  0074F6  222B               	addwfc	___fltol@f1+3,f,c
  3479  0074F8                     l2393:
  3480  0074F8  C028  F028         	movff	___fltol@f1,?___fltol
  3481  0074FC  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3482  007500  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3483  007504  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3484  007508  0012               	return		;funcret
  3485  00750A                     __end_of___fltol:
  3486                           	opt callstack 0
  3487                           
  3488 ;; *************** function ___flmul *****************
  3489 ;; Defined at:
  3490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  b               4   14[COMRAM] long 
  3493 ;;  a               4   18[COMRAM] long 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  prod            4   33[COMRAM] struct .
  3496 ;;  grs             4   27[COMRAM] unsigned long 
  3497 ;;  temp            2   37[COMRAM] struct .
  3498 ;;  bexp            1   32[COMRAM] unsigned char 
  3499 ;;  aexp            1   31[COMRAM] unsigned char 
  3500 ;;  sign            1   26[COMRAM] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  4   14[COMRAM] unsigned char 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0, prodl, prodh
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3510 ;;      Params:         8       0       0       0       0       0       0
  3511 ;;      Locals:        13       0       0       0       0       0       0
  3512 ;;      Temps:          4       0       0       0       0       0       0
  3513 ;;      Totals:        25       0       0       0       0       0       0
  3514 ;;Total ram usage:       25 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_msDelay
  3520 ;;		_timer6Setup
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text21
  3525  007CAE                     __ptext21:
  3526                           	opt callstack 0
  3527  007CAE                     ___flmul:
  3528                           	opt callstack 27
  3529                           
  3530                           ;incstack = 0
  3531  007CAE  5012               	movf	___flmul@b+3,w,c
  3532  007CB0  0B80               	andlw	128
  3533  007CB2  6E1B               	movwf	___flmul@sign,c
  3534  007CB4  5012               	movf	___flmul@b+3,w,c
  3535  007CB6  2412               	addwf	___flmul@b+3,w,c
  3536  007CB8  6E21               	movwf	___flmul@bexp,c
  3537  007CBA  BE11               	btfsc	___flmul@b+2,7,c
  3538  007CBC  8021               	bsf	___flmul@bexp,0,c
  3539  007CBE  5021               	movf	___flmul@bexp,w,c
  3540  007CC0  B4D8               	btfsc	status,2,c
  3541  007CC2  D00D               	goto	l2237
  3542  007CC4  2821               	incf	___flmul@bexp,w,c
  3543  007CC6  A4D8               	btfss	status,2,c
  3544  007CC8  D008               	goto	l2235
  3545  007CCA  0E00               	movlw	0
  3546  007CCC  6E0F               	movwf	___flmul@b,c
  3547  007CCE  0E00               	movlw	0
  3548  007CD0  6E10               	movwf	___flmul@b+1,c
  3549  007CD2  0E00               	movlw	0
  3550  007CD4  6E11               	movwf	___flmul@b+2,c
  3551  007CD6  0E00               	movlw	0
  3552  007CD8  6E12               	movwf	___flmul@b+3,c
  3553  007CDA                     l2235:
  3554  007CDA  8E11               	bsf	___flmul@b+2,7,c
  3555  007CDC  D008               	goto	l2239
  3556  007CDE                     l2237:
  3557  007CDE  0E00               	movlw	0
  3558  007CE0  6E0F               	movwf	___flmul@b,c
  3559  007CE2  0E00               	movlw	0
  3560  007CE4  6E10               	movwf	___flmul@b+1,c
  3561  007CE6  0E00               	movlw	0
  3562  007CE8  6E11               	movwf	___flmul@b+2,c
  3563  007CEA  0E00               	movlw	0
  3564  007CEC  6E12               	movwf	___flmul@b+3,c
  3565  007CEE                     l2239:
  3566  007CEE  5016               	movf	___flmul@a+3,w,c
  3567  007CF0  0B80               	andlw	128
  3568  007CF2  1A1B               	xorwf	___flmul@sign,f,c
  3569  007CF4  5016               	movf	___flmul@a+3,w,c
  3570  007CF6  2416               	addwf	___flmul@a+3,w,c
  3571  007CF8  6E20               	movwf	___flmul@aexp,c
  3572  007CFA  BE15               	btfsc	___flmul@a+2,7,c
  3573  007CFC  8020               	bsf	___flmul@aexp,0,c
  3574  007CFE  5020               	movf	___flmul@aexp,w,c
  3575  007D00  B4D8               	btfsc	status,2,c
  3576  007D02  D00D               	goto	l2255
  3577  007D04  2820               	incf	___flmul@aexp,w,c
  3578  007D06  A4D8               	btfss	status,2,c
  3579  007D08  D008               	goto	l2253
  3580  007D0A  0E00               	movlw	0
  3581  007D0C  6E13               	movwf	___flmul@a,c
  3582  007D0E  0E00               	movlw	0
  3583  007D10  6E14               	movwf	___flmul@a+1,c
  3584  007D12  0E00               	movlw	0
  3585  007D14  6E15               	movwf	___flmul@a+2,c
  3586  007D16  0E00               	movlw	0
  3587  007D18  6E16               	movwf	___flmul@a+3,c
  3588  007D1A                     l2253:
  3589  007D1A  8E15               	bsf	___flmul@a+2,7,c
  3590  007D1C  D008               	goto	l1072
  3591  007D1E                     l2255:
  3592  007D1E  0E00               	movlw	0
  3593  007D20  6E13               	movwf	___flmul@a,c
  3594  007D22  0E00               	movlw	0
  3595  007D24  6E14               	movwf	___flmul@a+1,c
  3596  007D26  0E00               	movlw	0
  3597  007D28  6E15               	movwf	___flmul@a+2,c
  3598  007D2A  0E00               	movlw	0
  3599  007D2C  6E16               	movwf	___flmul@a+3,c
  3600  007D2E                     l1072:
  3601  007D2E  5020               	movf	___flmul@aexp,w,c
  3602  007D30  B4D8               	btfsc	status,2,c
  3603  007D32  D003               	goto	u1320
  3604  007D34  5021               	movf	___flmul@bexp,w,c
  3605  007D36  A4D8               	btfss	status,2,c
  3606  007D38  D009               	goto	l2263
  3607  007D3A                     u1320:
  3608  007D3A  0E00               	movlw	0
  3609  007D3C  6E0F               	movwf	?___flmul,c
  3610  007D3E  0E00               	movlw	0
  3611  007D40  6E10               	movwf	?___flmul+1,c
  3612  007D42  0E00               	movlw	0
  3613  007D44  6E11               	movwf	?___flmul+2,c
  3614  007D46  0E00               	movlw	0
  3615  007D48  6E12               	movwf	?___flmul+3,c
  3616  007D4A  0012               	return	
  3617  007D4C                     l2263:
  3618  007D4C  5015               	movf	___flmul@a+2,w,c
  3619  007D4E  020F               	mulwf	___flmul@b,c
  3620  007D50  CFF3 F026          	movff	prodl,___flmul@temp
  3621  007D54  CFF4 F027          	movff	prodh,___flmul@temp+1
  3622  007D58  5026               	movf	___flmul@temp,w,c
  3623  007D5A  6E1C               	movwf	___flmul@grs,c
  3624  007D5C  6A1D               	clrf	___flmul@grs+1,c
  3625  007D5E  6A1E               	clrf	___flmul@grs+2,c
  3626  007D60  6A1F               	clrf	___flmul@grs+3,c
  3627  007D62  5027               	movf	___flmul@temp+1,w,c
  3628  007D64  6E22               	movwf	___flmul@prod,c
  3629  007D66  6A23               	clrf	___flmul@prod+1,c
  3630  007D68  6A24               	clrf	___flmul@prod+2,c
  3631  007D6A  6A25               	clrf	___flmul@prod+3,c
  3632  007D6C  5014               	movf	___flmul@a+1,w,c
  3633  007D6E  0210               	mulwf	___flmul@b+1,c
  3634  007D70  CFF3 F026          	movff	prodl,___flmul@temp
  3635  007D74  CFF4 F027          	movff	prodh,___flmul@temp+1
  3636  007D78  5026               	movf	___flmul@temp,w,c
  3637  007D7A  261C               	addwf	___flmul@grs,f,c
  3638  007D7C  0E00               	movlw	0
  3639  007D7E  221D               	addwfc	___flmul@grs+1,f,c
  3640  007D80  221E               	addwfc	___flmul@grs+2,f,c
  3641  007D82  221F               	addwfc	___flmul@grs+3,f,c
  3642  007D84  5027               	movf	___flmul@temp+1,w,c
  3643  007D86  2622               	addwf	___flmul@prod,f,c
  3644  007D88  0E00               	movlw	0
  3645  007D8A  2223               	addwfc	___flmul@prod+1,f,c
  3646  007D8C  2224               	addwfc	___flmul@prod+2,f,c
  3647  007D8E  2225               	addwfc	___flmul@prod+3,f,c
  3648  007D90  5013               	movf	___flmul@a,w,c
  3649  007D92  0211               	mulwf	___flmul@b+2,c
  3650  007D94  CFF3 F026          	movff	prodl,___flmul@temp
  3651  007D98  CFF4 F027          	movff	prodh,___flmul@temp+1
  3652  007D9C  5026               	movf	___flmul@temp,w,c
  3653  007D9E  261C               	addwf	___flmul@grs,f,c
  3654  007DA0  0E00               	movlw	0
  3655  007DA2  221D               	addwfc	___flmul@grs+1,f,c
  3656  007DA4  221E               	addwfc	___flmul@grs+2,f,c
  3657  007DA6  221F               	addwfc	___flmul@grs+3,f,c
  3658  007DA8  5027               	movf	___flmul@temp+1,w,c
  3659  007DAA  2622               	addwf	___flmul@prod,f,c
  3660  007DAC  0E00               	movlw	0
  3661  007DAE  2223               	addwfc	___flmul@prod+1,f,c
  3662  007DB0  2224               	addwfc	___flmul@prod+2,f,c
  3663  007DB2  2225               	addwfc	___flmul@prod+3,f,c
  3664  007DB4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3665  007DB8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3666  007DBC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3667  007DC0  6A1C               	clrf	___flmul@grs,c
  3668  007DC2  5013               	movf	___flmul@a,w,c
  3669  007DC4  0210               	mulwf	___flmul@b+1,c
  3670  007DC6  CFF3 F026          	movff	prodl,___flmul@temp
  3671  007DCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3672  007DCE  5026               	movf	___flmul@temp,w,c
  3673  007DD0  261C               	addwf	___flmul@grs,f,c
  3674  007DD2  5027               	movf	___flmul@temp+1,w,c
  3675  007DD4  221D               	addwfc	___flmul@grs+1,f,c
  3676  007DD6  0E00               	movlw	0
  3677  007DD8  221E               	addwfc	___flmul@grs+2,f,c
  3678  007DDA  0E00               	movlw	0
  3679  007DDC  221F               	addwfc	___flmul@grs+3,f,c
  3680  007DDE  5014               	movf	___flmul@a+1,w,c
  3681  007DE0  020F               	mulwf	___flmul@b,c
  3682  007DE2  CFF3 F026          	movff	prodl,___flmul@temp
  3683  007DE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3684  007DEA  5026               	movf	___flmul@temp,w,c
  3685  007DEC  261C               	addwf	___flmul@grs,f,c
  3686  007DEE  5027               	movf	___flmul@temp+1,w,c
  3687  007DF0  221D               	addwfc	___flmul@grs+1,f,c
  3688  007DF2  0E00               	movlw	0
  3689  007DF4  221E               	addwfc	___flmul@grs+2,f,c
  3690  007DF6  0E00               	movlw	0
  3691  007DF8  221F               	addwfc	___flmul@grs+3,f,c
  3692  007DFA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3693  007DFE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3694  007E02  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3695  007E06  6A1C               	clrf	___flmul@grs,c
  3696  007E08  5013               	movf	___flmul@a,w,c
  3697  007E0A  020F               	mulwf	___flmul@b,c
  3698  007E0C  CFF3 F026          	movff	prodl,___flmul@temp
  3699  007E10  CFF4 F027          	movff	prodh,___flmul@temp+1
  3700  007E14  5026               	movf	___flmul@temp,w,c
  3701  007E16  261C               	addwf	___flmul@grs,f,c
  3702  007E18  5027               	movf	___flmul@temp+1,w,c
  3703  007E1A  221D               	addwfc	___flmul@grs+1,f,c
  3704  007E1C  0E00               	movlw	0
  3705  007E1E  221E               	addwfc	___flmul@grs+2,f,c
  3706  007E20  0E00               	movlw	0
  3707  007E22  221F               	addwfc	___flmul@grs+3,f,c
  3708  007E24  5015               	movf	___flmul@a+2,w,c
  3709  007E26  0210               	mulwf	___flmul@b+1,c
  3710  007E28  CFF3 F026          	movff	prodl,___flmul@temp
  3711  007E2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3712  007E30  5026               	movf	___flmul@temp,w,c
  3713  007E32  2622               	addwf	___flmul@prod,f,c
  3714  007E34  5027               	movf	___flmul@temp+1,w,c
  3715  007E36  2223               	addwfc	___flmul@prod+1,f,c
  3716  007E38  0E00               	movlw	0
  3717  007E3A  2224               	addwfc	___flmul@prod+2,f,c
  3718  007E3C  0E00               	movlw	0
  3719  007E3E  2225               	addwfc	___flmul@prod+3,f,c
  3720  007E40  5014               	movf	___flmul@a+1,w,c
  3721  007E42  0211               	mulwf	___flmul@b+2,c
  3722  007E44  CFF3 F026          	movff	prodl,___flmul@temp
  3723  007E48  CFF4 F027          	movff	prodh,___flmul@temp+1
  3724  007E4C  5026               	movf	___flmul@temp,w,c
  3725  007E4E  2622               	addwf	___flmul@prod,f,c
  3726  007E50  5027               	movf	___flmul@temp+1,w,c
  3727  007E52  2223               	addwfc	___flmul@prod+1,f,c
  3728  007E54  0E00               	movlw	0
  3729  007E56  2224               	addwfc	___flmul@prod+2,f,c
  3730  007E58  0E00               	movlw	0
  3731  007E5A  2225               	addwfc	___flmul@prod+3,f,c
  3732  007E5C  5015               	movf	___flmul@a+2,w,c
  3733  007E5E  0211               	mulwf	___flmul@b+2,c
  3734  007E60  CFF3 F026          	movff	prodl,___flmul@temp
  3735  007E64  CFF4 F027          	movff	prodh,___flmul@temp+1
  3736  007E68  5026               	movf	___flmul@temp,w,c
  3737  007E6A  6E17               	movwf	??___flmul& (0+255),c
  3738  007E6C  5027               	movf	___flmul@temp+1,w,c
  3739  007E6E  6E18               	movwf	(??___flmul+1)& (0+255),c
  3740  007E70  6A19               	clrf	(??___flmul+2)& (0+255),c
  3741  007E72  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3742  007E74  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3743  007E78  C018  F019         	movff	??___flmul+1,??___flmul+2
  3744  007E7C  C017  F018         	movff	??___flmul,??___flmul+1
  3745  007E80  6A17               	clrf	??___flmul,c
  3746  007E82  5017               	movf	??___flmul,w,c
  3747  007E84  2622               	addwf	___flmul@prod,f,c
  3748  007E86  5018               	movf	??___flmul+1,w,c
  3749  007E88  2223               	addwfc	___flmul@prod+1,f,c
  3750  007E8A  5019               	movf	??___flmul+2,w,c
  3751  007E8C  2224               	addwfc	___flmul@prod+2,f,c
  3752  007E8E  501A               	movf	??___flmul+3,w,c
  3753  007E90  2225               	addwfc	___flmul@prod+3,f,c
  3754  007E92  C01C  F017         	movff	___flmul@grs,??___flmul
  3755  007E96  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3756  007E9A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3757  007E9E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3758  007EA2  0E19               	movlw	25
  3759  007EA4  D005               	goto	u1330
  3760  007EA6                     u1335:
  3761  007EA6  90D8               	bcf	status,0,c
  3762  007EA8  321A               	rrcf	??___flmul+3,f,c
  3763  007EAA  3219               	rrcf	??___flmul+2,f,c
  3764  007EAC  3218               	rrcf	??___flmul+1,f,c
  3765  007EAE  3217               	rrcf	??___flmul,f,c
  3766  007EB0                     u1330:
  3767  007EB0  2EE8               	decfsz	wreg,f,c
  3768  007EB2  D7F9               	goto	u1335
  3769  007EB4  5017               	movf	??___flmul,w,c
  3770  007EB6  2622               	addwf	___flmul@prod,f,c
  3771  007EB8  5018               	movf	??___flmul+1,w,c
  3772  007EBA  2223               	addwfc	___flmul@prod+1,f,c
  3773  007EBC  5019               	movf	??___flmul+2,w,c
  3774  007EBE  2224               	addwfc	___flmul@prod+2,f,c
  3775  007EC0  501A               	movf	??___flmul+3,w,c
  3776  007EC2  2225               	addwfc	___flmul@prod+3,f,c
  3777  007EC4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3778  007EC8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3779  007ECC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3780  007ED0  6A1C               	clrf	___flmul@grs,c
  3781  007ED2  5020               	movf	___flmul@aexp,w,c
  3782  007ED4  C021  F017         	movff	___flmul@bexp,??___flmul
  3783  007ED8  6A18               	clrf	(??___flmul+1)& (0+255),c
  3784  007EDA  2617               	addwf	??___flmul,f,c
  3785  007EDC  0E00               	movlw	0
  3786  007EDE  2218               	addwfc	??___flmul+1,f,c
  3787  007EE0  0E82               	movlw	130
  3788  007EE2  2417               	addwf	??___flmul,w,c
  3789  007EE4  6E26               	movwf	___flmul@temp,c
  3790  007EE6  0EFF               	movlw	255
  3791  007EE8  2018               	addwfc	??___flmul+1,w,c
  3792  007EEA  6E27               	movwf	___flmul@temp+1,c
  3793  007EEC  D00F               	goto	l2311
  3794  007EEE                     l2305:
  3795  007EEE  90D8               	bcf	status,0,c
  3796  007EF0  3622               	rlcf	___flmul@prod,f,c
  3797  007EF2  3623               	rlcf	___flmul@prod+1,f,c
  3798  007EF4  3624               	rlcf	___flmul@prod+2,f,c
  3799  007EF6  3625               	rlcf	___flmul@prod+3,f,c
  3800  007EF8  BE1F               	btfsc	___flmul@grs+3,7,c
  3801  007EFA  8022               	bsf	___flmul@prod,0,c
  3802  007EFC  90D8               	bcf	status,0,c
  3803  007EFE  361C               	rlcf	___flmul@grs,f,c
  3804  007F00  361D               	rlcf	___flmul@grs+1,f,c
  3805  007F02  361E               	rlcf	___flmul@grs+2,f,c
  3806  007F04  361F               	rlcf	___flmul@grs+3,f,c
  3807  007F06  0626               	decf	___flmul@temp,f,c
  3808  007F08  A0D8               	btfss	status,0,c
  3809  007F0A  0627               	decf	___flmul@temp+1,f,c
  3810  007F0C                     l2311:
  3811  007F0C  AE24               	btfss	___flmul@prod+2,7,c
  3812  007F0E  D7EF               	goto	l2305
  3813  007F10  0E00               	movlw	0
  3814  007F12  6E20               	movwf	___flmul@aexp,c
  3815  007F14  AE1F               	btfss	___flmul@grs+3,7,c
  3816  007F16  D017               	goto	l1081
  3817  007F18  0EFF               	movlw	255
  3818  007F1A  141C               	andwf	___flmul@grs,w,c
  3819  007F1C  6E17               	movwf	??___flmul& (0+255),c
  3820  007F1E  0EFF               	movlw	255
  3821  007F20  141D               	andwf	___flmul@grs+1,w,c
  3822  007F22  6E18               	movwf	(??___flmul+1)& (0+255),c
  3823  007F24  0EFF               	movlw	255
  3824  007F26  141E               	andwf	___flmul@grs+2,w,c
  3825  007F28  6E19               	movwf	(??___flmul+2)& (0+255),c
  3826  007F2A  0E7F               	movlw	127
  3827  007F2C  141F               	andwf	___flmul@grs+3,w,c
  3828  007F2E  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3829  007F30  5017               	movf	??___flmul,w,c
  3830  007F32  1018               	iorwf	??___flmul+1,w,c
  3831  007F34  1019               	iorwf	??___flmul+2,w,c
  3832  007F36  101A               	iorwf	??___flmul+3,w,c
  3833  007F38  B4D8               	btfsc	status,2,c
  3834  007F3A  D003               	goto	l1082
  3835  007F3C                     u1370:
  3836  007F3C  0E01               	movlw	1
  3837  007F3E  6E20               	movwf	___flmul@aexp,c
  3838  007F40  D002               	goto	l1081
  3839  007F42                     l1082:
  3840  007F42  B022               	btfsc	___flmul@prod,0,c
  3841  007F44  D7FB               	goto	u1370
  3842  007F46                     l1081:
  3843  007F46  5020               	movf	___flmul@aexp,w,c
  3844  007F48  B4D8               	btfsc	status,2,c
  3845  007F4A  D01F               	goto	l2331
  3846  007F4C  0E01               	movlw	1
  3847  007F4E  2622               	addwf	___flmul@prod,f,c
  3848  007F50  0E00               	movlw	0
  3849  007F52  2223               	addwfc	___flmul@prod+1,f,c
  3850  007F54  2224               	addwfc	___flmul@prod+2,f,c
  3851  007F56  2225               	addwfc	___flmul@prod+3,f,c
  3852  007F58  A025               	btfss	___flmul@prod+3,0,c
  3853  007F5A  D017               	goto	l2331
  3854  007F5C  C022  F017         	movff	___flmul@prod,??___flmul
  3855  007F60  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3856  007F64  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3857  007F68  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3858  007F6C  341A               	rlcf	??___flmul+3,w,c
  3859  007F6E  321A               	rrcf	??___flmul+3,f,c
  3860  007F70  3219               	rrcf	??___flmul+2,f,c
  3861  007F72  3218               	rrcf	??___flmul+1,f,c
  3862  007F74  3217               	rrcf	??___flmul,f,c
  3863  007F76  C017  F022         	movff	??___flmul,___flmul@prod
  3864  007F7A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3865  007F7E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3866  007F82  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3867  007F86  4A26               	infsnz	___flmul@temp,f,c
  3868  007F88  2A27               	incf	___flmul@temp+1,f,c
  3869  007F8A                     l2331:
  3870  007F8A  BE27               	btfsc	___flmul@temp+1,7,c
  3871  007F8C  D00D               	goto	l2335
  3872  007F8E  5027               	movf	___flmul@temp+1,w,c
  3873  007F90  E103               	bnz	u1410
  3874  007F92  2826               	incf	___flmul@temp,w,c
  3875  007F94  A0D8               	btfss	status,0,c
  3876  007F96  D008               	goto	l2335
  3877  007F98                     u1410:
  3878  007F98  0E00               	movlw	0
  3879  007F9A  6E22               	movwf	___flmul@prod,c
  3880  007F9C  0E00               	movlw	0
  3881  007F9E  6E23               	movwf	___flmul@prod+1,c
  3882  007FA0  0E80               	movlw	128
  3883  007FA2  6E24               	movwf	___flmul@prod+2,c
  3884  007FA4  0E7F               	movlw	127
  3885  007FA6  D020               	goto	L2
  3886  007FA8                     l2335:
  3887  007FA8  BE27               	btfsc	___flmul@temp+1,7,c
  3888  007FAA  D005               	goto	u1420
  3889  007FAC  5027               	movf	___flmul@temp+1,w,c
  3890  007FAE  E10E               	bnz	l1089
  3891  007FB0  0426               	decf	___flmul@temp,w,c
  3892  007FB2  B0D8               	btfsc	status,0,c
  3893  007FB4  D00B               	goto	l1089
  3894  007FB6                     u1420:
  3895  007FB6  0E00               	movlw	0
  3896  007FB8  6E22               	movwf	___flmul@prod,c
  3897  007FBA  0E00               	movlw	0
  3898  007FBC  6E23               	movwf	___flmul@prod+1,c
  3899  007FBE  0E00               	movlw	0
  3900  007FC0  6E24               	movwf	___flmul@prod+2,c
  3901  007FC2  0E00               	movlw	0
  3902  007FC4  6E25               	movwf	___flmul@prod+3,c
  3903  007FC6  0E00               	movlw	0
  3904  007FC8  6E1B               	movwf	___flmul@sign,c
  3905  007FCA  D00F               	goto	l2347
  3906  007FCC                     l1089:
  3907  007FCC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3908  007FD0  0EFF               	movlw	255
  3909  007FD2  1622               	andwf	___flmul@prod,f,c
  3910  007FD4  0EFF               	movlw	255
  3911  007FD6  1623               	andwf	___flmul@prod+1,f,c
  3912  007FD8  0E7F               	movlw	127
  3913  007FDA  1624               	andwf	___flmul@prod+2,f,c
  3914  007FDC  0E00               	movlw	0
  3915  007FDE  1625               	andwf	___flmul@prod+3,f,c
  3916  007FE0  B021               	btfsc	___flmul@bexp,0,c
  3917  007FE2  8E24               	bsf	___flmul@prod+2,7,c
  3918  007FE4  90D8               	bcf	status,0,c
  3919  007FE6  3021               	rrcf	___flmul@bexp,w,c
  3920  007FE8                     L2:
  3921  007FE8  6E25               	movwf	___flmul@prod+3,c
  3922  007FEA                     l2347:
  3923  007FEA  501B               	movf	___flmul@sign,w,c
  3924  007FEC  1225               	iorwf	___flmul@prod+3,f,c
  3925  007FEE  C022  F00F         	movff	___flmul@prod,?___flmul
  3926  007FF2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3927  007FF6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3928  007FFA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3929  007FFE  0012               	return		;funcret
  3930  008000                     __end_of___flmul:
  3931                           	opt callstack 0
  3932                           
  3933 ;; *************** function _aveSensor *****************
  3934 ;; Defined at:
  3935 ;;		line 705 in file "./functions.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  s               1    wreg     unsigned char 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  s               1    5[COMRAM] unsigned char 
  3940 ;;  a               1    9[COMRAM] unsigned char 
  3941 ;;  measurements    2    6[COMRAM] unsigned int 
  3942 ;;  result          1    8[COMRAM] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      unsigned char 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3952 ;;      Params:         0       0       0       0       0       0       0
  3953 ;;      Locals:         5       0       0       0       0       0       0
  3954 ;;      Temps:          2       0       0       0       0       0       0
  3955 ;;      Totals:         7       0       0       0       0       0       0
  3956 ;;Total ram usage:        7 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    1
  3959 ;; This function calls:
  3960 ;;		_readADC
  3961 ;;		_setADCChannel
  3962 ;; This function is called by:
  3963 ;;		_calibrate
  3964 ;;		_pyCal
  3965 ;;		_readAllSensors
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text22
  3970  007128                     __ptext22:
  3971                           	opt callstack 0
  3972  007128                     _aveSensor:
  3973                           	opt callstack 27
  3974                           
  3975                           ;incstack = 0
  3976                           ;aveSensor@s stored from wreg
  3977  007128  6E06               	movwf	aveSensor@s,c
  3978                           
  3979                           ;./functions.c: 705: unsigned char aveSensor(unsigned char s);./functions.c: 706: {;./fu
      +                          nctions.c: 707:     setADCChannel(s);
  3980  00712A  5006               	movf	aveSensor@s,w,c
  3981  00712C  ECA2  F039         	call	_setADCChannel
  3982                           
  3983                           ;./functions.c: 708:     unsigned int measurements = 0;
  3984  007130  0E00               	movlw	0
  3985  007132  6E08               	movwf	aveSensor@measurements+1,c
  3986  007134  0E00               	movlw	0
  3987  007136  6E07               	movwf	aveSensor@measurements,c
  3988                           
  3989                           ;./functions.c: 710:     for (unsigned char a = 0; a < 4; a++)
  3990  007138  0E00               	movlw	0
  3991  00713A  6E0A               	movwf	aveSensor@a,c
  3992  00713C                     l2453:
  3993                           
  3994                           ;./functions.c: 711:     {;./functions.c: 712:         measurements += readADC();
  3995  00713C  EC9C  F037         	call	_readADC	;wreg free
  3996  007140  6E04               	movwf	??_aveSensor& (0+255),c
  3997  007142  5004               	movf	??_aveSensor,w,c
  3998  007144  2607               	addwf	aveSensor@measurements,f,c
  3999  007146  0E00               	movlw	0
  4000  007148  2208               	addwfc	aveSensor@measurements+1,f,c
  4001                           
  4002                           ;./functions.c: 713:     }
  4003  00714A  2A0A               	incf	aveSensor@a,f,c
  4004  00714C  0E03               	movlw	3
  4005  00714E  640A               	cpfsgt	aveSensor@a,c
  4006  007150  D7F5               	goto	l2453
  4007                           
  4008                           ;./functions.c: 715:     unsigned char result = measurements / 4;
  4009  007152  C007  F004         	movff	aveSensor@measurements,??_aveSensor
  4010  007156  C008  F005         	movff	aveSensor@measurements+1,??_aveSensor+1
  4011  00715A  90D8               	bcf	status,0,c
  4012  00715C  3205               	rrcf	??_aveSensor+1,f,c
  4013  00715E  3204               	rrcf	??_aveSensor,f,c
  4014  007160  90D8               	bcf	status,0,c
  4015  007162  3205               	rrcf	??_aveSensor+1,f,c
  4016  007164  3204               	rrcf	??_aveSensor,f,c
  4017  007166  5004               	movf	??_aveSensor,w,c
  4018  007168  6E09               	movwf	aveSensor@result,c
  4019                           
  4020                           ;./functions.c: 717:     return result;
  4021  00716A  5009               	movf	aveSensor@result,w,c
  4022  00716C  0012               	return		;funcret
  4023  00716E                     __end_of_aveSensor:
  4024                           	opt callstack 0
  4025                           
  4026 ;; *************** function _setADCChannel *****************
  4027 ;; Defined at:
  4028 ;;		line 654 in file "./functions.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  channel         1    wreg     unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  channel         1    2[COMRAM] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4042 ;;      Params:         0       0       0       0       0       0       0
  4043 ;;      Locals:         1       0       0       0       0       0       0
  4044 ;;      Temps:          2       0       0       0       0       0       0
  4045 ;;      Totals:         3       0       0       0       0       0       0
  4046 ;;Total ram usage:        3 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_aveSensor
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text23
  4056  007344                     __ptext23:
  4057                           	opt callstack 0
  4058  007344                     _setADCChannel:
  4059                           	opt callstack 27
  4060                           
  4061                           ;incstack = 0
  4062                           ;setADCChannel@channel stored from wreg
  4063  007344  6E03               	movwf	setADCChannel@channel,c
  4064                           
  4065                           ;./functions.c: 654: void setADCChannel(unsigned char channel);./functions.c: 655: {;./f
      +                          unctions.c: 656:     ADCON0bits.CHS = channel;
  4066  007346  C003  F001         	movff	setADCChannel@channel,??_setADCChannel
  4067  00734A  4601               	rlncf	??_setADCChannel,f,c
  4068  00734C  4601               	rlncf	??_setADCChannel,f,c
  4069  00734E  50C2               	movf	4034,w,c	;volatile
  4070  007350  1801               	xorwf	??_setADCChannel,w,c
  4071  007352  0B83               	andlw	-125
  4072  007354  1801               	xorwf	??_setADCChannel,w,c
  4073  007356  6EC2               	movwf	4034,c	;volatile
  4074                           
  4075                           ;./functions.c: 658:     switch (channel)
  4076  007358  D01C               	goto	l2211
  4077  00735A                     l369:
  4078                           
  4079                           ;./functions.c: 661:         TRISBbits.TRISB2 = 1;
  4080  00735A  8493               	bsf	3987,2,c	;volatile
  4081                           
  4082                           ;./functions.c: 662:         ANSELBbits.ANSB2 = 1;
  4083  00735C  010F               	movlb	15	; () banked
  4084  00735E  8539               	bsf	57,2,b	;volatile
  4085                           
  4086                           ;./functions.c: 663:         break;
  4087  007360  0012               	return	
  4088  007362                     l371:
  4089                           
  4090                           ;./functions.c: 665:         TRISBbits.TRISB3 = 1;
  4091  007362  8693               	bsf	3987,3,c	;volatile
  4092                           
  4093                           ;./functions.c: 666:         ANSELBbits.ANSB3 = 1;
  4094  007364  010F               	movlb	15	; () banked
  4095  007366  8739               	bsf	57,3,b	;volatile
  4096                           
  4097                           ;./functions.c: 667:         break;
  4098  007368  0012               	return	
  4099  00736A                     l372:
  4100                           
  4101                           ;./functions.c: 669:         TRISBbits.TRISB1 = 1;
  4102  00736A  8293               	bsf	3987,1,c	;volatile
  4103                           
  4104                           ;./functions.c: 670:         ANSELBbits.ANSB1 = 1;
  4105  00736C  010F               	movlb	15	; () banked
  4106  00736E  8339               	bsf	57,1,b	;volatile
  4107                           
  4108                           ;./functions.c: 671:         break;
  4109  007370  0012               	return	
  4110  007372                     l373:
  4111                           
  4112                           ;./functions.c: 673:         TRISBbits.TRISB0 = 1;
  4113  007372  8093               	bsf	3987,0,c	;volatile
  4114                           
  4115                           ;./functions.c: 674:         ANSELBbits.ANSB0 = 1;
  4116  007374  010F               	movlb	15	; () banked
  4117  007376  8139               	bsf	57,0,b	;volatile
  4118                           
  4119                           ;./functions.c: 675:         break;
  4120  007378  0012               	return	
  4121  00737A                     l374:
  4122                           
  4123                           ;./functions.c: 677:         TRISBbits.TRISB5 = 1;
  4124  00737A  8A93               	bsf	3987,5,c	;volatile
  4125                           
  4126                           ;./functions.c: 678:         ANSELBbits.ANSB5 = 1;
  4127  00737C  010F               	movlb	15	; () banked
  4128  00737E  8B39               	bsf	57,5,b	;volatile
  4129                           
  4130                           ;./functions.c: 679:         break;
  4131  007380  0012               	return	
  4132  007382                     l375:
  4133                           
  4134                           ;./functions.c: 681:         TRISCbits.TRISC3 = 1;
  4135  007382  8694               	bsf	3988,3,c	;volatile
  4136                           
  4137                           ;./functions.c: 682:         ANSELCbits.ANSC3 = 1;
  4138  007384  010F               	movlb	15	; () banked
  4139  007386  873A               	bsf	58,3,b	;volatile
  4140                           
  4141                           ;./functions.c: 683:         break;
  4142  007388  0012               	return	
  4143  00738A                     l376:
  4144                           
  4145                           ;./functions.c: 686:         TRISBbits.TRISB0 = 1;
  4146  00738A  8093               	bsf	3987,0,c	;volatile
  4147                           
  4148                           ;./functions.c: 687:         ANSELBbits.ANSB0 = 1;
  4149  00738C  010F               	movlb	15	; () banked
  4150  00738E  8139               	bsf	57,0,b	;volatile
  4151                           
  4152                           ;./functions.c: 688:         break;
  4153  007390  0012               	return	
  4154  007392                     l2211:
  4155  007392  5003               	movf	setADCChannel@channel,w,c
  4156  007394  6E01               	movwf	??_setADCChannel& (0+255),c
  4157  007396  6A02               	clrf	(??_setADCChannel+1)& (0+255),c
  4158                           
  4159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4160                           ; Switch size 1, requested type "simple"
  4161                           ; Number of cases is 1, Range of values is 0 to 0
  4162                           ; switch strategies available:
  4163                           ; Name         Instructions Cycles
  4164                           ; simple_byte            4     3 (average)
  4165                           ;	Chosen strategy is simple_byte
  4166  007398  5002               	movf	??_setADCChannel+1,w,c
  4167  00739A  0A00               	xorlw	0	; case 0
  4168  00739C  A4D8               	btfss	status,2,c
  4169  00739E  D7F5               	goto	l376
  4170                           
  4171                           ; Switch size 1, requested type "simple"
  4172                           ; Number of cases is 6, Range of values is 8 to 15
  4173                           ; switch strategies available:
  4174                           ; Name         Instructions Cycles
  4175                           ; simple_byte           19    10 (average)
  4176                           ;	Chosen strategy is simple_byte
  4177  0073A0  5001               	movf	??_setADCChannel,w,c
  4178  0073A2  0A08               	xorlw	8	; case 8
  4179  0073A4  B4D8               	btfsc	status,2,c
  4180  0073A6  D7D9               	goto	l369
  4181  0073A8  0A01               	xorlw	1	; case 9
  4182  0073AA  B4D8               	btfsc	status,2,c
  4183  0073AC  D7DA               	goto	l371
  4184  0073AE  0A03               	xorlw	3	; case 10
  4185  0073B0  B4D8               	btfsc	status,2,c
  4186  0073B2  D7DB               	goto	l372
  4187  0073B4  0A06               	xorlw	6	; case 12
  4188  0073B6  B4D8               	btfsc	status,2,c
  4189  0073B8  D7DC               	goto	l373
  4190  0073BA  0A01               	xorlw	1	; case 13
  4191  0073BC  B4D8               	btfsc	status,2,c
  4192  0073BE  D7DD               	goto	l374
  4193  0073C0  0A02               	xorlw	2	; case 15
  4194  0073C2  B4D8               	btfsc	status,2,c
  4195  0073C4  D7DE               	goto	l375
  4196  0073C6  D7E1               	goto	l376
  4197  0073C8                     __end_of_setADCChannel:
  4198                           	opt callstack 0
  4199                           
  4200 ;; *************** function _readADC *****************
  4201 ;; Defined at:
  4202 ;;		line 695 in file "./functions.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      unsigned char 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4216 ;;      Params:         0       0       0       0       0       0       0
  4217 ;;      Locals:         0       0       0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0
  4219 ;;      Totals:         0       0       0       0       0       0       0
  4220 ;;Total ram usage:        0 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_aveSensor
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text24
  4230  006F38                     __ptext24:
  4231                           	opt callstack 0
  4232  006F38                     _readADC:
  4233                           	opt callstack 27
  4234                           
  4235                           ;./functions.c: 697:     ADCON0bits.GO = 1;
  4236                           
  4237                           ; BSR set to: 15
  4238                           ;incstack = 0
  4239  006F38  82C2               	bsf	4034,1,c	;volatile
  4240  006F3A                     l380:
  4241                           
  4242                           ;./functions.c: 699:     while (ADCON0bits.GO)
  4243  006F3A  B2C2               	btfsc	4034,1,c	;volatile
  4244  006F3C  D7FE               	goto	l380
  4245                           
  4246                           ;./functions.c: 701:     return ADRESH;
  4247  006F3E  50C4               	movf	4036,w,c	;volatile
  4248  006F40  0012               	return		;funcret
  4249  006F42                     __end_of_readADC:
  4250                           	opt callstack 0
  4251                           
  4252 ;; *************** function _PRC *****************
  4253 ;; Defined at:
  4254 ;;		line 329 in file "./functions.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  a               1   56[COMRAM] unsigned char 
  4259 ;;  a               1   55[COMRAM] unsigned char 
  4260 ;;  a               1   54[COMRAM] unsigned char 
  4261 ;;  a               1   53[COMRAM] unsigned char 
  4262 ;;  a               1   52[COMRAM] unsigned char 
  4263 ;;  a               1   51[COMRAM] unsigned char 
  4264 ;;  a               1   50[COMRAM] unsigned char 
  4265 ;;  a               1   49[COMRAM] unsigned char 
  4266 ;;  a               1   48[COMRAM] unsigned char 
  4267 ;;  message        32   11[COMRAM] unsigned char [32]
  4268 ;;  message2        5   43[COMRAM] unsigned char [5]
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4278 ;;      Params:         0       0       0       0       0       0       0
  4279 ;;      Locals:        46       0       0       0       0       0       0
  4280 ;;      Temps:          2       0       0       0       0       0       0
  4281 ;;      Totals:        48       0       0       0       0       0       0
  4282 ;;Total ram usage:       48 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:    2
  4285 ;; This function calls:
  4286 ;;		_error
  4287 ;;		_trans
  4288 ;; This function is called by:
  4289 ;;		_RCE
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text25
  4294  00787C                     __ptext25:
  4295                           	opt callstack 0
  4296  00787C                     _PRC:
  4297                           	opt callstack 27
  4298                           
  4299                           ;./functions.c: 331:     PORTD = 0b11111001;
  4300                           
  4301                           ;incstack = 0
  4302  00787C  0EF9               	movlw	249
  4303  00787E  6E83               	movwf	3971,c	;volatile
  4304  007880                     l2869:
  4305                           
  4306                           ;./functions.c: 333:     {;./functions.c: 334:         unsigned char message[] = "\nWhat
      +                           color should sanic race?\n";
  4307  007880  EE20  F060         	lfsr	2,PRC@F6010
  4308  007884  EE10  F00C         	lfsr	1,PRC@message
  4309  007888  0E1F               	movlw	31
  4310  00788A                     u2101:
  4311  00788A  CFDB FFE3          	movff	plusw2,plusw1
  4312  00788E  06E8               	decf	wreg,f,c
  4313  007890  E2FC               	bc	u2101
  4314                           
  4315                           ;./functions.c: 335:         unsigned char message2[] = "\nSet";
  4316  007892  EE20  F0AE         	lfsr	2,PRC@F6012
  4317  007896  EE10  F02C         	lfsr	1,PRC@message2
  4318  00789A  0E04               	movlw	4
  4319  00789C                     u2111:
  4320  00789C  CFDB FFE3          	movff	plusw2,plusw1
  4321  0078A0  06E8               	decf	wreg,f,c
  4322  0078A2  E2FC               	bc	u2111
  4323                           
  4324                           ;./functions.c: 337:         for (unsigned char a = 0; a < 31; a++)
  4325  0078A4  0E00               	movlw	0
  4326  0078A6  6E31               	movwf	PRC@a,c
  4327  0078A8                     l2877:
  4328                           
  4329                           ;./functions.c: 338:         {;./functions.c: 339:             trans(message[a]);
  4330  0078A8  0E0C               	movlw	low PRC@message
  4331  0078AA  2431               	addwf	PRC@a,w,c
  4332  0078AC  6ED9               	movwf	fsr2l,c
  4333  0078AE  6ADA               	clrf	fsr2h,c
  4334  0078B0  0E00               	movlw	high PRC@message
  4335  0078B2  22DA               	addwfc	fsr2h,f,c
  4336  0078B4  50DF               	movf	indf2,w,c
  4337  0078B6  ECAB  F037         	call	_trans
  4338                           
  4339                           ;./functions.c: 340:         }
  4340  0078BA  2A31               	incf	PRC@a,f,c
  4341  0078BC  0E1E               	movlw	30
  4342  0078BE  6431               	cpfsgt	PRC@a,c
  4343  0078C0  D7F3               	goto	l2877
  4344  0078C2                     u2120:
  4345  0078C2  BA9E               	btfsc	3998,5,c	;volatile
  4346  0078C4  D088               	goto	l2993
  4347  0078C6  D7FD               	goto	u2120
  4348  0078C8                     l2883:
  4349                           
  4350                           ;./functions.c: 346:             for (unsigned char a = 0; a < 8; a++)
  4351  0078C8  0E00               	movlw	0
  4352  0078CA  6E32               	movwf	PRC@a_1108,c
  4353  0078CC                     l2889:
  4354                           
  4355                           ;./functions.c: 347:             {;./functions.c: 348:                 raceColor[a] = 0;
  4356  0078CC  0E98               	movlw	low _raceColor
  4357  0078CE  2432               	addwf	PRC@a_1108,w,c
  4358  0078D0  6ED9               	movwf	fsr2l,c
  4359  0078D2  6ADA               	clrf	fsr2h,c
  4360  0078D4  0E00               	movlw	high _raceColor
  4361  0078D6  22DA               	addwfc	fsr2h,f,c
  4362  0078D8  0E00               	movlw	0
  4363  0078DA  6EDF               	movwf	indf2,c
  4364                           
  4365                           ;./functions.c: 349:             }
  4366  0078DC  2A32               	incf	PRC@a_1108,f,c
  4367  0078DE  0E07               	movlw	7
  4368  0078E0  6432               	cpfsgt	PRC@a_1108,c
  4369  0078E2  D7F4               	goto	l2889
  4370                           
  4371                           ;./functions.c: 350:             raceColor[3] = 1;
  4372  0078E4  0E01               	movlw	1
  4373  0078E6  0100               	movlb	0	; () banked
  4374  0078E8  6F9B               	movwf	(_raceColor+3)& (0+255),b
  4375                           
  4376                           ;./functions.c: 351:             for (unsigned char a = 0; a < 4; a++)
  4377  0078EA  0E00               	movlw	0
  4378  0078EC  6E33               	movwf	PRC@a_1109,c
  4379  0078EE                     l2901:
  4380                           
  4381                           ;./functions.c: 352:             {;./functions.c: 353:                 trans(message2[a]
      +                          );
  4382  0078EE  0E2C               	movlw	low PRC@message2
  4383  0078F0  2433               	addwf	PRC@a_1109,w,c
  4384  0078F2  6ED9               	movwf	fsr2l,c
  4385  0078F4  6ADA               	clrf	fsr2h,c
  4386  0078F6  0E00               	movlw	high PRC@message2
  4387  0078F8  22DA               	addwfc	fsr2h,f,c
  4388  0078FA  50DF               	movf	indf2,w,c
  4389  0078FC  ECAB  F037         	call	_trans
  4390                           
  4391                           ;./functions.c: 354:             }
  4392  007900  2A33               	incf	PRC@a_1109,f,c
  4393  007902  0E03               	movlw	3
  4394  007904  6433               	cpfsgt	PRC@a_1109,c
  4395  007906  D7F3               	goto	l2901
  4396  007908  0012               	return	
  4397  00790A                     l2909:
  4398                           
  4399                           ;./functions.c: 358:             for (unsigned char a = 0; a < 8; a++)
  4400  00790A  0E00               	movlw	0
  4401  00790C  6E34               	movwf	PRC@a_1110,c
  4402  00790E                     l2915:
  4403                           
  4404                           ;./functions.c: 359:             {;./functions.c: 360:                 raceColor[a] = 0;
  4405  00790E  0E98               	movlw	low _raceColor
  4406  007910  2434               	addwf	PRC@a_1110,w,c
  4407  007912  6ED9               	movwf	fsr2l,c
  4408  007914  6ADA               	clrf	fsr2h,c
  4409  007916  0E00               	movlw	high _raceColor
  4410  007918  22DA               	addwfc	fsr2h,f,c
  4411  00791A  0E00               	movlw	0
  4412  00791C  6EDF               	movwf	indf2,c
  4413                           
  4414                           ;./functions.c: 361:             }
  4415  00791E  2A34               	incf	PRC@a_1110,f,c
  4416  007920  0E07               	movlw	7
  4417  007922  6434               	cpfsgt	PRC@a_1110,c
  4418  007924  D7F4               	goto	l2915
  4419                           
  4420                           ;./functions.c: 362:             raceColor[1] = 1;
  4421  007926  0E01               	movlw	1
  4422  007928  0100               	movlb	0	; () banked
  4423  00792A  6F99               	movwf	(_raceColor+1)& (0+255),b
  4424                           
  4425                           ;./functions.c: 363:             for (unsigned char a = 0; a < 4; a++)
  4426  00792C  0E00               	movlw	0
  4427  00792E  6E35               	movwf	PRC@a_1111,c
  4428  007930                     l2927:
  4429                           
  4430                           ;./functions.c: 364:             {;./functions.c: 365:                 trans(message2[a]
      +                          );
  4431  007930  0E2C               	movlw	low PRC@message2
  4432  007932  2435               	addwf	PRC@a_1111,w,c
  4433  007934  6ED9               	movwf	fsr2l,c
  4434  007936  6ADA               	clrf	fsr2h,c
  4435  007938  0E00               	movlw	high PRC@message2
  4436  00793A  22DA               	addwfc	fsr2h,f,c
  4437  00793C  50DF               	movf	indf2,w,c
  4438  00793E  ECAB  F037         	call	_trans
  4439                           
  4440                           ;./functions.c: 366:             }
  4441  007942  2A35               	incf	PRC@a_1111,f,c
  4442  007944  0E03               	movlw	3
  4443  007946  6435               	cpfsgt	PRC@a_1111,c
  4444  007948  D7F3               	goto	l2927
  4445  00794A  0012               	return	
  4446  00794C                     l2935:
  4447                           
  4448                           ;./functions.c: 370:             for (unsigned char a = 0; a < 8; a++)
  4449  00794C  0E00               	movlw	0
  4450  00794E  6E36               	movwf	PRC@a_1112,c
  4451  007950                     l2941:
  4452                           
  4453                           ;./functions.c: 371:             {;./functions.c: 372:                 raceColor[a] = 0;
  4454  007950  0E98               	movlw	low _raceColor
  4455  007952  2436               	addwf	PRC@a_1112,w,c
  4456  007954  6ED9               	movwf	fsr2l,c
  4457  007956  6ADA               	clrf	fsr2h,c
  4458  007958  0E00               	movlw	high _raceColor
  4459  00795A  22DA               	addwfc	fsr2h,f,c
  4460  00795C  0E00               	movlw	0
  4461  00795E  6EDF               	movwf	indf2,c
  4462                           
  4463                           ;./functions.c: 373:             }
  4464  007960  2A36               	incf	PRC@a_1112,f,c
  4465  007962  0E07               	movlw	7
  4466  007964  6436               	cpfsgt	PRC@a_1112,c
  4467  007966  D7F4               	goto	l2941
  4468                           
  4469                           ;./functions.c: 374:             raceColor[2] = 1;
  4470  007968  0E01               	movlw	1
  4471  00796A  0100               	movlb	0	; () banked
  4472  00796C  6F9A               	movwf	(_raceColor+2)& (0+255),b
  4473                           
  4474                           ;./functions.c: 375:             for (unsigned char a = 0; a < 4; a++)
  4475  00796E  0E00               	movlw	0
  4476  007970  6E37               	movwf	PRC@a_1113,c
  4477  007972                     l2953:
  4478                           
  4479                           ;./functions.c: 376:             {;./functions.c: 377:                 trans(message2[a]
      +                          );
  4480  007972  0E2C               	movlw	low PRC@message2
  4481  007974  2437               	addwf	PRC@a_1113,w,c
  4482  007976  6ED9               	movwf	fsr2l,c
  4483  007978  6ADA               	clrf	fsr2h,c
  4484  00797A  0E00               	movlw	high PRC@message2
  4485  00797C  22DA               	addwfc	fsr2h,f,c
  4486  00797E  50DF               	movf	indf2,w,c
  4487  007980  ECAB  F037         	call	_trans
  4488                           
  4489                           ;./functions.c: 378:             }
  4490  007984  2A37               	incf	PRC@a_1113,f,c
  4491  007986  0E03               	movlw	3
  4492  007988  6437               	cpfsgt	PRC@a_1113,c
  4493  00798A  D7F3               	goto	l2953
  4494  00798C  0012               	return	
  4495  00798E                     l2961:
  4496                           
  4497                           ;./functions.c: 382:             for (unsigned char a = 0; a < 8; a++)
  4498  00798E  0E00               	movlw	0
  4499  007990  6E38               	movwf	PRC@a_1114,c
  4500  007992                     l2967:
  4501                           
  4502                           ;./functions.c: 383:             {;./functions.c: 384:                 raceColor[a] = 0;
  4503  007992  0E98               	movlw	low _raceColor
  4504  007994  2438               	addwf	PRC@a_1114,w,c
  4505  007996  6ED9               	movwf	fsr2l,c
  4506  007998  6ADA               	clrf	fsr2h,c
  4507  00799A  0E00               	movlw	high _raceColor
  4508  00799C  22DA               	addwfc	fsr2h,f,c
  4509  00799E  0E00               	movlw	0
  4510  0079A0  6EDF               	movwf	indf2,c
  4511                           
  4512                           ;./functions.c: 385:             }
  4513  0079A2  2A38               	incf	PRC@a_1114,f,c
  4514  0079A4  0E07               	movlw	7
  4515  0079A6  6438               	cpfsgt	PRC@a_1114,c
  4516  0079A8  D7F4               	goto	l2967
  4517                           
  4518                           ;./functions.c: 386:             raceColor[4] = 1;
  4519  0079AA  0E01               	movlw	1
  4520  0079AC  0100               	movlb	0	; () banked
  4521  0079AE  6F9C               	movwf	(_raceColor+4)& (0+255),b
  4522                           
  4523                           ;./functions.c: 387:             for (unsigned char a = 0; a < 4; a++)
  4524  0079B0  0E00               	movlw	0
  4525  0079B2  6E39               	movwf	PRC@a_1115,c
  4526  0079B4                     l2979:
  4527                           
  4528                           ;./functions.c: 388:             {;./functions.c: 389:                 trans(message2[a]
      +                          );
  4529  0079B4  0E2C               	movlw	low PRC@message2
  4530  0079B6  2439               	addwf	PRC@a_1115,w,c
  4531  0079B8  6ED9               	movwf	fsr2l,c
  4532  0079BA  6ADA               	clrf	fsr2h,c
  4533  0079BC  0E00               	movlw	high PRC@message2
  4534  0079BE  22DA               	addwfc	fsr2h,f,c
  4535  0079C0  50DF               	movf	indf2,w,c
  4536  0079C2  ECAB  F037         	call	_trans
  4537                           
  4538                           ;./functions.c: 390:             }
  4539  0079C6  2A39               	incf	PRC@a_1115,f,c
  4540  0079C8  0E03               	movlw	3
  4541  0079CA  6439               	cpfsgt	PRC@a_1115,c
  4542  0079CC  D7F3               	goto	l2979
  4543  0079CE  0012               	return	
  4544  0079D0                     l2987:
  4545                           
  4546                           ;./functions.c: 395:             error();
  4547  0079D0  EC1F  F038         	call	_error	;wreg free
  4548                           
  4549                           ;./functions.c: 396:             continue;
  4550  0079D4  D755               	goto	l2869
  4551  0079D6                     l2993:
  4552  0079D6  50AE               	movf	4014,w,c	;volatile
  4553  0079D8  6E0A               	movwf	??_PRC& (0+255),c
  4554  0079DA  6A0B               	clrf	(??_PRC+1)& (0+255),c
  4555                           
  4556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4557                           ; Switch size 1, requested type "simple"
  4558                           ; Number of cases is 1, Range of values is 0 to 0
  4559                           ; switch strategies available:
  4560                           ; Name         Instructions Cycles
  4561                           ; simple_byte            4     3 (average)
  4562                           ;	Chosen strategy is simple_byte
  4563  0079DC  500B               	movf	??_PRC+1,w,c
  4564  0079DE  0A00               	xorlw	0	; case 0
  4565  0079E0  A4D8               	btfss	status,2,c
  4566  0079E2  D7F6               	goto	l2987
  4567                           
  4568                           ; Switch size 1, requested type "simple"
  4569                           ; Number of cases is 4, Range of values is 66 to 110
  4570                           ; switch strategies available:
  4571                           ; Name         Instructions Cycles
  4572                           ; simple_byte           13     7 (average)
  4573                           ;	Chosen strategy is simple_byte
  4574  0079E4  500A               	movf	??_PRC,w,c
  4575  0079E6  0A42               	xorlw	66	; case 66
  4576  0079E8  B4D8               	btfsc	status,2,c
  4577  0079EA  D76E               	goto	l2883
  4578  0079EC  0A05               	xorlw	5	; case 71
  4579  0079EE  B4D8               	btfsc	status,2,c
  4580  0079F0  D78C               	goto	l2909
  4581  0079F2  0A15               	xorlw	21	; case 82
  4582  0079F4  B4D8               	btfsc	status,2,c
  4583  0079F6  D7AA               	goto	l2935
  4584  0079F8  0A3C               	xorlw	60	; case 110
  4585  0079FA  B4D8               	btfsc	status,2,c
  4586  0079FC  D7C8               	goto	l2961
  4587  0079FE  D7E8               	goto	l2987
  4588  007A00                     __end_of_PRC:
  4589                           	opt callstack 0
  4590                           
  4591 ;; *************** function _error *****************
  4592 ;; Defined at:
  4593 ;;		line 733 in file "./functions.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  a               1    8[COMRAM] unsigned char 
  4598 ;;  message         7    1[COMRAM] unsigned char [7]
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4608 ;;      Params:         0       0       0       0       0       0       0
  4609 ;;      Locals:         8       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0
  4611 ;;      Totals:         8       0       0       0       0       0       0
  4612 ;;Total ram usage:        8 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    1
  4615 ;; This function calls:
  4616 ;;		_trans
  4617 ;; This function is called by:
  4618 ;;		_PRC
  4619 ;;		_RCE
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text26
  4624  00703E                     __ptext26:
  4625                           	opt callstack 0
  4626  00703E                     _error:
  4627                           	opt callstack 28
  4628                           
  4629                           ;./functions.c: 735:     unsigned char message[] = "ERROR\n";
  4630                           
  4631                           ;incstack = 0
  4632  00703E  EE20  F0A1         	lfsr	2,error@F6054
  4633  007042  EE10  F002         	lfsr	1,error@message
  4634  007046  0E06               	movlw	6
  4635  007048                     u1651:
  4636  007048  CFDB FFE3          	movff	plusw2,plusw1
  4637  00704C  06E8               	decf	wreg,f,c
  4638  00704E  E2FC               	bc	u1651
  4639                           
  4640                           ;./functions.c: 737:     for (unsigned char a = 0; a < 6; a++)
  4641  007050  0E00               	movlw	0
  4642  007052  6E09               	movwf	error@a,c
  4643  007054                     l2529:
  4644                           
  4645                           ;./functions.c: 738:     {;./functions.c: 739:         trans(message[a]);
  4646  007054  0E02               	movlw	low error@message
  4647  007056  2409               	addwf	error@a,w,c
  4648  007058  6ED9               	movwf	fsr2l,c
  4649  00705A  6ADA               	clrf	fsr2h,c
  4650  00705C  0E00               	movlw	high error@message
  4651  00705E  22DA               	addwfc	fsr2h,f,c
  4652  007060  50DF               	movf	indf2,w,c
  4653  007062  ECAB  F037         	call	_trans
  4654                           
  4655                           ;./functions.c: 740:     }
  4656  007066  2A09               	incf	error@a,f,c
  4657  007068  0E05               	movlw	5
  4658  00706A  6409               	cpfsgt	error@a,c
  4659  00706C  D7F3               	goto	l2529
  4660                           
  4661                           ;./functions.c: 742:     RCREG = 0;
  4662  00706E  0E00               	movlw	0
  4663  007070  6EAE               	movwf	4014,c	;volatile
  4664  007072  0012               	return		;funcret
  4665  007074                     __end_of_error:
  4666                           	opt callstack 0
  4667                           
  4668 ;; *************** function _trans *****************
  4669 ;; Defined at:
  4670 ;;		line 638 in file "./functions.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  s               1    wreg     unsigned char 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  s               1    0[COMRAM] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4684 ;;      Params:         0       0       0       0       0       0       0
  4685 ;;      Locals:         1       0       0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0
  4687 ;;      Totals:         1       0       0       0       0       0       0
  4688 ;;Total ram usage:        1 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_PRC
  4694 ;;		_pyCal
  4695 ;;		_error
  4696 ;;		_RCE
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text27
  4701  006F56                     __ptext27:
  4702                           	opt callstack 0
  4703  006F56                     _trans:
  4704                           	opt callstack 29
  4705                           
  4706                           ;incstack = 0
  4707                           ;trans@s stored from wreg
  4708  006F56  6E01               	movwf	trans@s,c
  4709  006F58                     
  4710                           ;./functions.c: 640:     while (!PIR1bits.TX1IF)
  4711                           
  4712                           ;./functions.c: 641:         ;
  4713  006F58  A89E               	btfss	3998,4,c	;volatile
  4714  006F5A  D7FE               	goto	l2465
  4715                           
  4716                           ;./functions.c: 642:     TXREG = s;
  4717  006F5C  C001  FFAD         	movff	trans@s,4013	;volatile
  4718  006F60  0012               	return		;funcret
  4719  006F62                     __end_of_trans:
  4720                           	opt callstack 0
  4721  0000                     
  4722                           	psect	rparam
  4723  0000                     tosu	equ	0xFFF
  4724                           tosh	equ	0xFFE
  4725                           tosl	equ	0xFFD
  4726                           stkptr	equ	0xFFC
  4727                           pclatu	equ	0xFFB
  4728                           pclath	equ	0xFFA
  4729                           pcl	equ	0xFF9
  4730                           tblptru	equ	0xFF8
  4731                           tblptrh	equ	0xFF7
  4732                           tblptrl	equ	0xFF6
  4733                           tablat	equ	0xFF5
  4734                           prodh	equ	0xFF4
  4735                           prodl	equ	0xFF3
  4736                           indf0	equ	0xFEF
  4737                           postinc0	equ	0xFEE
  4738                           postdec0	equ	0xFED
  4739                           preinc0	equ	0xFEC
  4740                           plusw0	equ	0xFEB
  4741                           fsr0h	equ	0xFEA
  4742                           fsr0l	equ	0xFE9
  4743                           wreg	equ	0xFE8
  4744                           indf1	equ	0xFE7
  4745                           postinc1	equ	0xFE6
  4746                           postdec1	equ	0xFE5
  4747                           preinc1	equ	0xFE4
  4748                           plusw1	equ	0xFE3
  4749                           fsr1h	equ	0xFE2
  4750                           fsr1l	equ	0xFE1
  4751                           bsr	equ	0xFE0
  4752                           indf2	equ	0xFDF
  4753                           postinc2	equ	0xFDE
  4754                           postdec2	equ	0xFDD
  4755                           preinc2	equ	0xFDC
  4756                           plusw2	equ	0xFDB
  4757                           fsr2h	equ	0xFDA
  4758                           fsr2l	equ	0xFD9
  4759                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        120
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     84      91
    BANK0           160      0     118
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    classifyColors@sensorRanges	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 

    classifyColors@F6032	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_RCE
    _RCE->_calibrate
    _pyCal->_msDelay
    _navigate->_classifyColors
    _readAllSensors->_aveSensor
    _calibrate->_oneSecDelay
    _oneSecDelay->_msDelay
    _msDelay->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _aveSensor->_setADCChannel
    _PRC->_error
    _error->_trans

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9332
                                _RCE
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupADC
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RCE                                                 22    22      0    9332
                                             62 COMRAM    22    22      0
                                _PRC
                          _calibrate
                              _error
                           _navigate
                              _pyCal
                              _trans
 ---------------------------------------------------------------------------------
 (2) _pyCal                                                2     2      0    3023
                                             50 COMRAM     2     2      0
                          _aveSensor
                            _msDelay
                           _setupADC
                              _trans
 ---------------------------------------------------------------------------------
 (2) _navigate                                             0     0      0     696
                     _classifyColors
               _displayColorDetected
                   _displayRaceColor
                     _readAllSensors
                           _setupADC
                       _setupPWMLeft
                      _setupPWMRight
                         _stopMotors
 ---------------------------------------------------------------------------------
 (3) _stopMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMRight                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setupPWMLeft                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readAllSensors                                       2     2      0     249
                                             10 COMRAM     2     2      0
                          _aveSensor
 ---------------------------------------------------------------------------------
 (3) _displayRaceColor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displayColorDetected                                 3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _classifyColors                                      15    15      0     425
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (2) _calibrate                                           11    11      0    4335
                                             51 COMRAM    11    11      0
                          _aveSensor
                        _oneSecDelay
 ---------------------------------------------------------------------------------
 (3) _oneSecDelay                                          1     1      0    2819
                                             50 COMRAM     1     1      0
                            _msDelay
 ---------------------------------------------------------------------------------
 (3) _msDelay                                              1     1      0    2773
                                             49 COMRAM     1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _aveSensor                                            7     7      0     159
                                              3 COMRAM     7     7      0
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (4) _setADCChannel                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PRC                                                 48    48      0     865
                                              9 COMRAM    48    48      0
                              _error
                              _trans
 ---------------------------------------------------------------------------------
 (2) _error                                                8     8      0     114
                                              1 COMRAM     8     8      0
                              _trans
 ---------------------------------------------------------------------------------
 (2) _trans                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RCE
     _PRC
       _error
         _trans
       _trans
     _calibrate
       _aveSensor
         _readADC
         _setADCChannel
       _oneSecDelay
         _msDelay
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _error
       _trans
     _navigate
       _classifyColors
       _displayColorDetected
       _displayRaceColor
       _readAllSensors
         _aveSensor
           _readADC
           _setADCChannel
       _setupADC
       _setupPWMLeft
       _setupPWMRight
       _stopMotors
     _pyCal
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _setupADC
       _trans
     _trans
   _init
     _clearPorts
     _setupADC
     _setupOSC
     _setupSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      76       4       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     54      5B       1       95.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D1       9        0.0%
DATA                 0      0      D1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 25 23:59:07 2019

               _colorsDetected 00D1                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_LVP$ON 000000  
                          l332 73CC                            l334 73D8                            l335 73E4  
                          l408 72C4                            l336 73F0                            l440 7580  
                          l337 73FC                            l338 7408                            l434 7570  
                          l371 7362                            l283 7080                            l419 6F54  
                          l380 6F3A                            l372 736A                            l373 7372  
                          l374 737A                            l375 7382                            l376 738A  
                          l369 735A                   __CFG_CPB$OFF 000000                            _RCE 750A  
                          _PR2 000FBB                            _PR4 000F52                   __CFG_CPD$OFF 000000  
                          _PR6 000F4B                            _PRC 787C                            _col 0055  
                          prod 000FF3                            wreg 000FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                ??_setupPWMRight 0001                           ?_RCE 0001  
                         ?_PRC 0001                           RCE@a 0053                   ___fltol@exp1 0031  
                         PRC@a 0031                           l1120 77F8                           l1113 777A  
                         l1072 7D2E                           l1081 7F46                           l1082 7F42  
                         l2211 7392                           l3003 7176                           l3013 7180  
                         l3101 759E                           l2311 7F0C                           l3103 75A4  
                         l1089 7FCC                           l2305 7EEE                           l3121 75EE  
                         l3105 75AA                           l3113 75BC                           l2331 7F8A  
                         l2235 7CDA                           l2411 77AE                           l2403 778A  
                         l3107 75B0                           l3115 75EA                           l2253 7D1A  
                         l2237 7CDE                           l2421 781E                           l2413 77BA  
                         l3109 75B6                           l2335 7FA8                           l2263 7D4C  
                         l2255 7D1E                           l2239 7CEE                           l2423 782A  
                         l2415 77E0                           l2409 77A8                           l2347 7FEA  
                         l2515 6F78                           l3083 755C                           l2453 713C  
                         l2605 7414                           l2541 70F8                           l3069 7524  
                         l2375 74B8                           l2359 746E                           l2439 786A  
                         l3087 756A                           l3079 754E                           l2465 6F58  
                         l2529 7054                           l2393 74F8                           l2385 74D0  
                         l2553 711C                           l2545 7104                           l2387 74DC  
                         l2379 74C8                           l2651 7A1E                           l3099 7596  
                         l2901 78EE                           l2549 7110                           l2565 70B6  
                         l2591 76E2                           l2583 7662                           l2915 790E  
                         l2827 7C36                           l2739 7B2A                           l2595 7722  
                         l2587 76A2                           l2579 761E                           l2941 7950  
                         l2909 790A                           l2935 794C                           l2927 7930  
                         l2783 7BB0                           l2695 7AA4                           l2961 798E  
                         l2953 7972                           l2883 78C8                           l2877 78A8  
                         l2869 7880                           l2967 7992                           l2889 78CC  
                         l2993 79D6                           l2987 79D0                           l2979 79B4  
                         u2101 788A                           u2111 789C                           u2120 78C2  
                         u1320 7D3A                           u1410 7F98                           u1330 7EB0  
                         u1420 7FB6                           _LATA 000F89                           _LATB 000F8A  
                         u1335 7EA6                           _LATC 000F8B                           u1440 745C  
                         _LATD 000F8C                           _FSR0 000FE9                           _LATE 000F8D  
                         u1370 7F3C                           u1450 748C                           u1455 7482  
                         u1720 70E8                           u2280 70A8                           u1490 74E2  
                         u1570 7834                           u1651 7048                           u1731 7612  
                         u2291 7518                           u1791 7A0E                           _TMR2 000FBC  
                         _TMR4 000F53                           _TMR6 000F4C                           _main 6F4C  
                         _init 6F88                           _size 0056                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                  __CFG_BORV$190 000000  
                         prodh 000FF4                           prodl 000FF3                           start 0000  
                __CFG_IESO$OFF 000000          ?_displayColorDetected 0001                   ___param_bank 000000  
                        ??_RCE 003F                          ??_PRC 000A                   _BAUDCON1bits 000FB8  
                ___fltol@sign1 0030                          ?_main 0001                          ?_init 0001  
              __end_of___flmul 8000                __end_of___fltol 750A                          _T2CON 000FBA  
                        _T4CON 000F51                          _T6CON 000F4A                          _RCREG 000FAE  
                        _PORTA 000F80                          _PORTB 000F81                          _PORTC 000F82  
                        _PORTD 000F83                          _PORTE 000F84                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                          _TXREG 000FAD         __size_of_setADCChannel 0084  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                   ?_oneSecDelay 0001  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                __end_of_msDelay 72D2                __end_of_readADC 6F42  
               __CFG_EBTRB$OFF 000000                          _error 703E                          _pyCal 716E  
           __CFG_MCLRE$EXTMCLR 000000                          _trans 6F56                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
               __CFG_HFOFST$ON 000000                 __CFG_PBADEN$ON 000000                __initialization 71BC  
                 __end_of_main 6F56                   __end_of_init 6FA0                  calibrate@temp 003E  
                       ??_main 0055                         ??_init 0001                  __activetblptr 000002  
                       _ADCON1 000FC1                         ?_error 0001                         ?_pyCal 0001  
                       _ADRESH 000FC4                         _CCPR1L 000FBE                         _CCPR5L 000F55  
                       ?_trans 0001                         _ANSELA 000F38                         _ANSELB 000F39  
                       _ANSELC 000F3A                         _ANSELD 000F3B                         _ANSELE 000F3C  
             calibrate@samples 0039                 __CFG_WDTEN$OFF 000000               calibrate@sensors 0034  
                       _RCSTA1 000FAB                         _SPBRG1 000FAF               __end_of___xxtofl 787C  
                       _TXSTA1 000FAC         ??_displayColorDetected 0001                  _setADCChannel 7344  
               __CFG_XINST$OFF 000000                 __CFG_STVREN$ON 000000                      ??___flmul 0017  
                    ??___fltol 002C               __end_of_navigate 70AE                classifyColors@a 000F  
      __size_of_readAllSensors 003C                      ??_msDelay 0032                      ??_readADC 0001  
                       error@a 0009                         pyCal@a 0034                   __pdataCOMRAM 0055  
             __end_of_setupADC 6FC2               __end_of_setupOSC 6F4C                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             RCE@commandReceived 004F  
                       trans@s 0001                   ?_setupSerial 0001                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 7208                 ?_setADCChannel 0001                  ___rparam_used 000001  
                   ___fltol@f1 0028              ?_displayRaceColor 0001                 __pcstackCOMRAM 0001  
               calibrate@F6001 00B3             __size_of_calibrate 02AE                   __pidataBANK0 72D3  
           ??_displayRaceColor 0001           setADCChannel@channel 0003                  __end_of_error 7074  
                __end_of_pyCal 71BC                  __end_of_trans 6F62                      RCE@a_1244 0054  
           __size_of_aveSensor 0046                        ??_error 0002                        ??_pyCal 0033  
         __size_of_oneSecDelay 0014                        ??_trans 0001                     __pbssBANK0 00D1  
              __CFG_PLLCFG$OFF 000000                      PRC@a_1110 0034                      PRC@a_1111 0035  
                    PRC@a_1112 0036                      PRC@a_1113 0037                      PRC@a_1114 0038  
                    PRC@a_1115 0039                      PRC@a_1108 0032                      PRC@a_1109 0033  
                   _clearPorts 7212             __CFG_CCP2MX$PORTC1 000000        __size_of_classifyColors 0134  
           __CFG_CCP3MX$PORTB5 000000                        _CCP1CON 000FBD                        _CCP5CON 000F54  
                    ?___xxtofl 0001                        _SPBRGH1 000FB0              __end_of_calibrate 7CAE  
   displayColorDetected@sensor 0003          __end_of_setupPWMRight 700E                ??_setADCChannel 0001  
                    ?_navigate 0001                    PRC@message2 002C              __end_of_aveSensor 716E  
              __CFG_PWRTEN$OFF 000000                        _Lranges 00CC                        __Hparam 0000  
                      _Mranges 00C7                        __Lparam 0000                      ?_setupADC 0001  
                      _Rranges 00C2              RCE@nCharsReceived 0052                      ?_setupOSC 0001  
                      ___flmul 7CAE                        ___fltol 7450                   error@message 0002  
                      __pcinit 71BC                        __ramtop 0600                        __ptext0 6F4C  
                      __ptext1 6F88                        __ptext2 700E                        __ptext3 6F42  
                      __ptext4 7212                        __ptext5 750A                        __ptext6 716E  
                      __ptext7 7074                        __ptext8 6F62                        __ptext9 6FE8  
               _readAllSensors 70AE                        _msDelay 726C                        _readADC 6F38  
                 __size_of_RCE 00FE                   __size_of_PRC 0184                      _T2CONbits 000FBA  
                   ??___xxtofl 0005                      _T4CONbits 000F51           end_of_initialization 7208  
         __size_of_setupSerial 0030                  __Lmediumconst 0000                     ??_navigate 0010  
                ?_setupPWMLeft 0001                    ?_clearPorts 0001                     aveSensor@a 000A  
                   aveSensor@s 0006                     ??_setupADC 0001                   oneSecDelay@a 0033  
                   ??_setupOSC 0001                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   _sensorVals 00B8         __end_of_readAllSensors 70EA                      _PORTAbits 000F80  
                    _PORTCbits 000F82                      _PORTEbits 000F84            classifyColors@F6032 008E  
                ___xxtofl@sign 0009                      _TRISBbits 000F93                      _TRISCbits 000F94  
                    _TRISEbits 000F96                    ___flmul@grs 001C          aveSensor@measurements 0007  
               ??_setupPWMLeft 0001               msDelay@delayInMs 0032                     _stopMotors 6F62  
__size_of_displayColorDetected 0088                 _classifyColors 7608                ?_readAllSensors 0001  
                __pidataCOMRAM 6F31            start_initialization 71BC      __size_of_displayRaceColor 003E  
                  __end_of_RCE 7608                    __end_of_PRC 7A00            __size_of_clearPorts 005A  
                   error@F6054 00A1         __end_of_classifyColors 773C                 _sensorChannels 00A8  
                   RCE@message 0041                    __pdataBANK0 0060                       RCE@F6068 0080  
                    ___flmul@a 0013                      ___flmul@b 000F                  ??_oneSecDelay 0033  
            __size_of___xxtofl 0140     classifyColors@sensorRanges 0005                       PRC@F6010 0060  
                     PRC@F6012 00AE                      _calibrate 7A00                    ?_stopMotors 0001  
              ?_classifyColors 0001              __size_of_navigate 003A                      _aveSensor 7128  
                     ?___flmul 000F                       ?___fltol 0028              __size_of_setupADC 0022  
            __size_of_setupOSC 000A               __CFG_PRICLKEN$ON 000000           __end_of_setupPWMLeft 6FE8  
                     ?_msDelay 0001                       ?_readADC 0001                     PRC@message 000C  
                    _raceColor 0098                       _CCPTMRS0 000F49                       _CCPTMRS1 000F48  
        calibrate@samples_1091 003A          calibrate@samples_1092 003B          calibrate@samples_1093 003C  
        calibrate@samples_1094 003D                 __size_of_error 0036                 __size_of_pyCal 004E  
               __size_of_trans 000C            __end_of_oneSecDelay 6F88                     ?_calibrate 0001  
        __end_of_setADCChannel 73C8                       _PIE1bits 000F9D                       _PIE5bits 000F7D  
                 ??_clearPorts 0001                       _PIR1bits 000F9E                       _PIR5bits 000F7E  
             __CFG_WDTPS$32768 000000                     ?_aveSensor 0001         __size_of_setupPWMRight 0026  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0                readAllSensors@a 000B  
                     _LLranges 0057               _displayRaceColor 70EA            __size_of_stopMotors 0012  
                ??_setupSerial 0001             __end_of_clearPorts 726C                      copy_data0 71D0  
                    copy_data1 71F0                       _RRranges 00BD                       __Hrparam 0000  
             ??_readAllSensors 000B                       __Lrparam 0000             __CFG_BOREN$SBORDIS 000000  
            __CFG_P2BMX$PORTD2 000000               __size_of___flmul 0352               __size_of___fltol 00BA  
                   _ANSELBbits 000F39                     _ANSELCbits 000F3A               __size_of_msDelay 0066  
             __size_of_readADC 000A                       ___xxtofl 773C   __end_of_displayColorDetected 7450  
                  _oneSecDelay 6F74                       __ptext10 6FC2                       __ptext11 6FA0  
                     __ptext20 7450                       __ptext12 70AE                       __ptext21 7CAE  
                     __ptext13 70EA                       __ptext22 7128                       __ptext14 73C8  
                     __ptext23 7344                       __ptext15 7608                       __ptext24 6F38  
                     __ptext16 7A00                       __ptext25 787C                       __ptext17 6F74  
                     __ptext26 703E                       __ptext18 726C                       __ptext27 6F56  
                     __ptext19 773C                  _setupPWMRight 6FE8                    ??_calibrate 0034  
                __size_of_main 000A                  __size_of_init 0018                       _navigate 7074  
          __end_of_setupSerial 703E                       _setupADC 6FA0                       _setupOSC 6F42  
                  ??_aveSensor 0004          __size_of_setupPWMLeft 0026                     _INTCONbits 000FF2  
             ??_classifyColors 0001                 ?_setupPWMRight 0001                   _setupPWMLeft 6FC2  
                 ??_stopMotors 0001                     _OSCCONbits 000FD3                aveSensor@result 0009  
            __CFG_T3CMX$PORTC0 000000             __end_of_stopMotors 6F74                    _setupSerial 700E  
            __CFG_FOSC$INTIO67 000000       __end_of_displayRaceColor 7128           _displayColorDetected 73C8  
