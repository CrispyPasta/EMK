

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 25 20:53:00 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F45K22 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  006FB9                     __pidataCOMRAM:
    78                           	opt callstack 0
    79                           
    80                           ;initializer for _col
    81  006FB9  42                 	db	66
    82                           
    83                           ;initializer for _size
    84  006FBA  05                 	db	5
    85                           
    86                           ;initializer for _LLranges
    87  006FBB  8C                 	db	140
    88  006FBC  A8                 	db	168
    89  006FBD  B9                 	db	185
    90  006FBE  B9                 	db	185
    91  006FBF  FF                 	db	255
    92                           
    93                           	psect	idataBANK0
    94  007303                     __pidataBANK0:
    95                           	opt callstack 0
    96                           
    97                           ;initializer for PRC@F6009
    98  007303  0A                 	db	10
    99  007304  57                 	db	87
   100  007305  68                 	db	104
   101  007306  61                 	db	97
   102  007307  74                 	db	116
   103  007308  20                 	db	32
   104  007309  63                 	db	99
   105  00730A  6F                 	db	111
   106  00730B  6C                 	db	108
   107  00730C  6F                 	db	111
   108  00730D  72                 	db	114
   109  00730E  20                 	db	32
   110  00730F  73                 	db	115
   111  007310  68                 	db	104
   112  007311  6F                 	db	111
   113  007312  75                 	db	117
   114  007313  6C                 	db	108
   115  007314  64                 	db	100
   116  007315  20                 	db	32
   117  007316  73                 	db	115
   118  007317  61                 	db	97
   119  007318  6E                 	db	110
   120  007319  69                 	db	105
   121  00731A  63                 	db	99
   122  00731B  20                 	db	32
   123  00731C  72                 	db	114
   124  00731D  61                 	db	97
   125  00731E  63                 	db	99
   126  00731F  65                 	db	101
   127  007320  3F                 	db	63
   128  007321  0A                 	db	10
   129  007322  00                 	db	0
   130                           
   131                           ;initializer for RCE@F6064
   132  007323  0A                 	db	10
   133  007324  53                 	db	83
   134  007325  61                 	db	97
   135  007326  6E                 	db	110
   136  007327  69                 	db	105
   137  007328  63                 	db	99
   138  007329  20                 	db	32
   139  00732A  72                 	db	114
   140  00732B  61                 	db	97
   141  00732C  63                 	db	99
   142  00732D  65                 	db	101
   143  00732E  73                 	db	115
   144  00732F  20                 	db	32
   145  007330  00                 	db	0
   146                           
   147                           ;initializer for classifyColors@F6028
   148  007331  57                 	db	low _LLranges
   149  007332  00                 	db	high _LLranges
   150  007333  CC                 	db	low _Lranges
   151  007334  00                 	db	high _Lranges
   152  007335  C7                 	db	low _Mranges
   153  007336  00                 	db	high _Mranges
   154  007337  C2                 	db	low _Rranges
   155  007338  00                 	db	high _Rranges
   156  007339  BD                 	db	low _RRranges
   157  00733A  00                 	db	high _RRranges
   158                           
   159                           ;initializer for _raceColor
   160  00733B  30                 	db	48
   161  00733C  30                 	db	48
   162  00733D  30                 	db	48
   163  00733E  30                 	db	48
   164  00733F  31                 	db	49
   165  007340  30                 	db	48
   166  007341  30                 	db	48
   167  007342  30                 	db	48
   168  007343  00                 	db	0
   169                           
   170                           ;initializer for error@F6050
   171  007344  45                 	db	69
   172  007345  52                 	db	82
   173  007346  52                 	db	82
   174  007347  4F                 	db	79
   175  007348  52                 	db	82
   176  007349  0A                 	db	10
   177  00734A  00                 	db	0
   178                           
   179                           ;initializer for _sensorChannels
   180  00734B  0C                 	db	12
   181  00734C  0A                 	db	10
   182  00734D  08                 	db	8
   183  00734E  09                 	db	9
   184  00734F  0D                 	db	13
   185  007350  0F                 	db	15
   186                           
   187                           ;initializer for PRC@F6011
   188  007351  0A                 	db	10
   189  007352  53                 	db	83
   190  007353  65                 	db	101
   191  007354  74                 	db	116
   192  007355  00                 	db	0
   193                           
   194                           ;initializer for calibrate@F6000
   195  007356  0C                 	db	12
   196  007357  08                 	db	8
   197  007358  09                 	db	9
   198  007359  0A                 	db	10
   199  00735A  0D                 	db	13
   200                           
   201                           ;initializer for _sensorVals
   202  00735B  78                 	db	120
   203  00735C  AA                 	db	170
   204  00735D  AA                 	db	170
   205  00735E  BE                 	db	190
   206  00735F  FA                 	db	250
   207                           
   208                           ;initializer for _RRranges
   209  007360  8C                 	db	140
   210  007361  B9                 	db	185
   211  007362  C3                 	db	195
   212  007363  C3                 	db	195
   213  007364  FF                 	db	255
   214                           
   215                           ;initializer for _Rranges
   216  007365  8C                 	db	140
   217  007366  AA                 	db	170
   218  007367  AF                 	db	175
   219  007368  D2                 	db	210
   220  007369  FF                 	db	255
   221                           
   222                           ;initializer for _Mranges
   223  00736A  82                 	db	130
   224  00736B  A5                 	db	165
   225  00736C  AF                 	db	175
   226  00736D  BC                 	db	188
   227  00736E  FF                 	db	255
   228                           
   229                           ;initializer for _Lranges
   230  00736F  82                 	db	130
   231  007370  B2                 	db	178
   232  007371  B4                 	db	180
   233  007372  BC                 	db	188
   234  007373  FF                 	db	255
   235  0000                     _T6CON	set	3914
   236  0000                     _PR6	set	3915
   237  0000                     _TMR6	set	3916
   238  0000                     _ANSELCbits	set	3898
   239  0000                     _ANSELBbits	set	3897
   240  0000                     _ANSELE	set	3900
   241  0000                     _ANSELD	set	3899
   242  0000                     _ANSELC	set	3898
   243  0000                     _ANSELB	set	3897
   244  0000                     _ANSELA	set	3896
   245  0000                     _T4CONbits	set	3921
   246  0000                     _CCPTMRS1	set	3912
   247  0000                     _CCPR5L	set	3925
   248  0000                     _PR4	set	3922
   249  0000                     _CCP5CON	set	3924
   250  0000                     _CCPTMRS0	set	3913
   251  0000                     _FSR0	set	4073
   252  0000                     _PIR5bits	set	3966
   253  0000                     _ADRESH	set	4036
   254  0000                     _TRISBbits	set	3987
   255  0000                     _TXREG	set	4013
   256  0000                     _PORTEbits	set	3972
   257  0000                     _PORTCbits	set	3970
   258  0000                     _RCREG	set	4014
   259  0000                     _PORTAbits	set	3968
   260  0000                     _ADCON0bits	set	4034
   261  0000                     _ADCON1	set	4033
   262  0000                     _ADCON2bits	set	4032
   263  0000                     _BAUDCON1bits	set	4024
   264  0000                     _SPBRGH1	set	4016
   265  0000                     _SPBRG1	set	4015
   266  0000                     _RCSTA1	set	4011
   267  0000                     _TXSTA1	set	4012
   268  0000                     _PIR1bits	set	3998
   269  0000                     _OSCCONbits	set	4051
   270  0000                     _TRISE	set	3990
   271  0000                     _LATE	set	3981
   272  0000                     _PORTE	set	3972
   273  0000                     _TRISD	set	3989
   274  0000                     _LATD	set	3980
   275  0000                     _PORTD	set	3971
   276  0000                     _TRISC	set	3988
   277  0000                     _LATC	set	3979
   278  0000                     _PORTC	set	3970
   279  0000                     _TRISB	set	3987
   280  0000                     _LATB	set	3978
   281  0000                     _PORTB	set	3969
   282  0000                     _TRISA	set	3986
   283  0000                     _LATA	set	3977
   284  0000                     _PORTA	set	3968
   285  0000                     _PIE5bits	set	3965
   286  0000                     _TRISEbits	set	3990
   287  0000                     _T2CONbits	set	4026
   288  0000                     _INTCONbits	set	4082
   289  0000                     _PIE1bits	set	3997
   290  0000                     _TMR2	set	4028
   291  0000                     _T2CON	set	4026
   292  0000                     _TRISCbits	set	3988
   293  0000                     _CCPR1L	set	4030
   294  0000                     _PR2	set	4027
   295  0000                     _CCP1CON	set	4029
   296                           
   297                           ; #config settings
   298  0000                     
   299                           	psect	cinit
   300  0071EC                     __pcinit:
   301                           	opt callstack 0
   302  0071EC                     start_initialization:
   303                           	opt callstack 0
   304  0071EC                     __initialization:
   305                           	opt callstack 0
   306                           
   307                           ; Initialize objects allocated to BANK0 (113 bytes)
   308                           ; load TBLPTR registers with __pidataBANK0
   309  0071EC  0E03               	movlw	low __pidataBANK0
   310  0071EE  6EF6               	movwf	tblptrl,c
   311  0071F0  0E73               	movlw	high __pidataBANK0
   312  0071F2  6EF7               	movwf	tblptrh,c
   313  0071F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   314  0071F6  6EF8               	movwf	tblptru,c
   315  0071F8  EE00  F060         	lfsr	0,__pdataBANK0
   316  0071FC  EE10 F071          	lfsr	1,113
   317  007200                     copy_data0:
   318  007200  0009               	tblrd		*+
   319  007202  CFF5 FFEE          	movff	tablat,postinc0
   320  007206  50E5               	movf	postdec1,w,c
   321  007208  50E1               	movf	fsr1l,w,c
   322  00720A  E1FA               	bnz	copy_data0
   323                           
   324                           ; Initialize objects allocated to COMRAM (7 bytes)
   325                           ; load TBLPTR registers with __pidataCOMRAM
   326  00720C  0EB9               	movlw	low __pidataCOMRAM
   327  00720E  6EF6               	movwf	tblptrl,c
   328  007210  0E6F               	movlw	high __pidataCOMRAM
   329  007212  6EF7               	movwf	tblptrh,c
   330  007214  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   331  007216  6EF8               	movwf	tblptru,c
   332  007218  EE00  F055         	lfsr	0,__pdataCOMRAM
   333  00721C  EE10 F007          	lfsr	1,7
   334  007220                     copy_data1:
   335  007220  0009               	tblrd		*+
   336  007222  CFF5 FFEE          	movff	tablat,postinc0
   337  007226  50E5               	movf	postdec1,w,c
   338  007228  50E1               	movf	fsr1l,w,c
   339  00722A  E1FA               	bnz	copy_data1
   340                           
   341                           ; Clear objects allocated to BANK0 (5 bytes)
   342  00722C  0100               	movlb	0
   343  00722E  6BD5               	clrf	(__pbssBANK0+4)& (0+255),b
   344  007230  6BD4               	clrf	(__pbssBANK0+3)& (0+255),b
   345  007232  6BD3               	clrf	(__pbssBANK0+2)& (0+255),b
   346  007234  6BD2               	clrf	(__pbssBANK0+1)& (0+255),b
   347  007236  6BD1               	clrf	__pbssBANK0& (0+255),b
   348  007238                     end_of_initialization:
   349                           	opt callstack 0
   350  007238                     __end_of__initialization:
   351                           	opt callstack 0
   352  007238  0E00               	movlw	low (__Lmediumconst shr (0+16))
   353  00723A  6EF8               	movwf	tblptru,c
   354  00723C  0100               	movlb	0
   355  00723E  EFEA  F037         	goto	_main	;jump to C main() function
   356                           
   357                           	psect	dataCOMRAM
   358  000055                     __pdataCOMRAM:
   359                           	opt callstack 0
   360  000055                     _col:
   361                           	opt callstack 0
   362  000055                     	ds	1
   363  000056                     _size:
   364                           	opt callstack 0
   365  000056                     	ds	1
   366  000057                     _LLranges:
   367                           	opt callstack 0
   368  000057                     	ds	5
   369                           
   370                           	psect	bssBANK0
   371  0000D1                     __pbssBANK0:
   372                           	opt callstack 0
   373  0000D1                     _colorsDetected:
   374                           	opt callstack 0
   375  0000D1                     	ds	5
   376                           
   377                           	psect	dataBANK0
   378  000060                     __pdataBANK0:
   379                           	opt callstack 0
   380  000060                     PRC@F6009:
   381                           	opt callstack 0
   382  000060                     	ds	32
   383  000080                     RCE@F6064:
   384                           	opt callstack 0
   385  000080                     	ds	14
   386  00008E                     classifyColors@F6028:
   387                           	opt callstack 0
   388  00008E                     	ds	10
   389  000098                     _raceColor:
   390                           	opt callstack 0
   391  000098                     	ds	9
   392  0000A1                     error@F6050:
   393                           	opt callstack 0
   394  0000A1                     	ds	7
   395  0000A8                     _sensorChannels:
   396                           	opt callstack 0
   397  0000A8                     	ds	6
   398  0000AE                     PRC@F6011:
   399                           	opt callstack 0
   400  0000AE                     	ds	5
   401  0000B3                     calibrate@F6000:
   402                           	opt callstack 0
   403  0000B3                     	ds	5
   404  0000B8                     _sensorVals:
   405                           	opt callstack 0
   406  0000B8                     	ds	5
   407  0000BD                     _RRranges:
   408                           	opt callstack 0
   409  0000BD                     	ds	5
   410  0000C2                     _Rranges:
   411                           	opt callstack 0
   412  0000C2                     	ds	5
   413  0000C7                     _Mranges:
   414                           	opt callstack 0
   415  0000C7                     	ds	5
   416  0000CC                     _Lranges:
   417                           	opt callstack 0
   418  0000CC                     	ds	5
   419                           
   420                           	psect	cstackCOMRAM
   421  000001                     __pcstackCOMRAM:
   422                           	opt callstack 0
   423  000001                     ??_classifyColors:
   424  000001                     ??_displayColorDetected:
   425  000001                     ??_setADCChannel:
   426  000001                     ?___xxtofl:
   427                           	opt callstack 0
   428  000001                     trans@s:
   429                           	opt callstack 0
   430  000001                     ___xxtofl@val:
   431                           	opt callstack 0
   432                           
   433                           ; 4 bytes @ 0x0
   434  000001                     	ds	1
   435  000002                     error@message:
   436                           	opt callstack 0
   437                           
   438                           ; 7 bytes @ 0x1
   439  000002                     	ds	1
   440  000003                     displayColorDetected@sensor:
   441                           	opt callstack 0
   442  000003                     setADCChannel@channel:
   443                           	opt callstack 0
   444                           
   445                           ; 1 bytes @ 0x2
   446  000003                     	ds	1
   447  000004                     ??_aveSensor:
   448                           
   449                           ; 1 bytes @ 0x3
   450  000004                     	ds	1
   451  000005                     ??___xxtofl:
   452  000005                     classifyColors@sensorRanges:
   453                           	opt callstack 0
   454                           
   455                           ; 10 bytes @ 0x4
   456  000005                     	ds	1
   457  000006                     aveSensor@s:
   458                           	opt callstack 0
   459                           
   460                           ; 1 bytes @ 0x5
   461  000006                     	ds	1
   462  000007                     aveSensor@measurements:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x6
   466  000007                     	ds	2
   467  000009                     aveSensor@result:
   468                           	opt callstack 0
   469  000009                     error@a:
   470                           	opt callstack 0
   471  000009                     ___xxtofl@sign:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0x8
   475  000009                     	ds	1
   476  00000A                     ??_PRC:
   477  00000A                     aveSensor@a:
   478                           	opt callstack 0
   479  00000A                     ___xxtofl@exp:
   480                           	opt callstack 0
   481                           
   482                           ; 1 bytes @ 0x9
   483  00000A                     	ds	1
   484  00000B                     readAllSensors@a:
   485                           	opt callstack 0
   486  00000B                     ___xxtofl@arg:
   487                           	opt callstack 0
   488                           
   489                           ; 4 bytes @ 0xA
   490  00000B                     	ds	1
   491  00000C                     PRC@message:
   492                           	opt callstack 0
   493                           
   494                           ; 32 bytes @ 0xB
   495  00000C                     	ds	3
   496  00000F                     ?___flmul:
   497                           	opt callstack 0
   498  00000F                     classifyColors@a:
   499                           	opt callstack 0
   500  00000F                     ___flmul@b:
   501                           	opt callstack 0
   502                           
   503                           ; 4 bytes @ 0xE
   504  00000F                     	ds	1
   505  000010                     
   506                           ; 1 bytes @ 0xF
   507  000010                     	ds	3
   508  000013                     ___flmul@a:
   509                           	opt callstack 0
   510                           
   511                           ; 4 bytes @ 0x12
   512  000013                     	ds	4
   513  000017                     ??___flmul:
   514                           
   515                           ; 1 bytes @ 0x16
   516  000017                     	ds	4
   517  00001B                     ___flmul@sign:
   518                           	opt callstack 0
   519                           
   520                           ; 1 bytes @ 0x1A
   521  00001B                     	ds	1
   522  00001C                     ___flmul@grs:
   523                           	opt callstack 0
   524                           
   525                           ; 4 bytes @ 0x1B
   526  00001C                     	ds	4
   527  000020                     ___flmul@aexp:
   528                           	opt callstack 0
   529                           
   530                           ; 1 bytes @ 0x1F
   531  000020                     	ds	1
   532  000021                     ___flmul@bexp:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x20
   536  000021                     	ds	1
   537  000022                     ___flmul@prod:
   538                           	opt callstack 0
   539                           
   540                           ; 4 bytes @ 0x21
   541  000022                     	ds	4
   542  000026                     ___flmul@temp:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x25
   546  000026                     	ds	2
   547  000028                     ?___fltol:
   548                           	opt callstack 0
   549  000028                     ___fltol@f1:
   550                           	opt callstack 0
   551                           
   552                           ; 4 bytes @ 0x27
   553  000028                     	ds	4
   554  00002C                     ??___fltol:
   555  00002C                     PRC@message2:
   556                           	opt callstack 0
   557                           
   558                           ; 5 bytes @ 0x2B
   559  00002C                     	ds	4
   560  000030                     ___fltol@sign1:
   561                           	opt callstack 0
   562                           
   563                           ; 1 bytes @ 0x2F
   564  000030                     	ds	1
   565  000031                     PRC@a:
   566                           	opt callstack 0
   567  000031                     ___fltol@exp1:
   568                           	opt callstack 0
   569                           
   570                           ; 1 bytes @ 0x30
   571  000031                     	ds	1
   572  000032                     PRC@a_1114:
   573                           	opt callstack 0
   574  000032                     msDelay@delayInMs:
   575                           	opt callstack 0
   576                           
   577                           ; 1 bytes @ 0x31
   578  000032                     	ds	1
   579  000033                     PRC@a_1115:
   580                           	opt callstack 0
   581  000033                     oneSecDelay@a:
   582                           	opt callstack 0
   583                           
   584                           ; 1 bytes @ 0x32
   585  000033                     	ds	1
   586  000034                     PRC@a_1116:
   587                           	opt callstack 0
   588  000034                     pyCal@a:
   589                           	opt callstack 0
   590  000034                     calibrate@sensors:
   591                           	opt callstack 0
   592                           
   593                           ; 5 bytes @ 0x33
   594  000034                     	ds	1
   595  000035                     PRC@a_1117:
   596                           	opt callstack 0
   597                           
   598                           ; 1 bytes @ 0x34
   599  000035                     	ds	1
   600  000036                     PRC@a_1118:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x35
   604  000036                     	ds	1
   605  000037                     PRC@a_1119:
   606                           	opt callstack 0
   607                           
   608                           ; 1 bytes @ 0x36
   609  000037                     	ds	1
   610  000038                     PRC@a_1120:
   611                           	opt callstack 0
   612                           
   613                           ; 1 bytes @ 0x37
   614  000038                     	ds	1
   615  000039                     calibrate@samples:
   616                           	opt callstack 0
   617  000039                     PRC@a_1121:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0x38
   621  000039                     	ds	1
   622  00003A                     calibrate@samples_1097:
   623                           	opt callstack 0
   624                           
   625                           ; 1 bytes @ 0x39
   626  00003A                     	ds	1
   627  00003B                     calibrate@samples_1098:
   628                           	opt callstack 0
   629                           
   630                           ; 1 bytes @ 0x3A
   631  00003B                     	ds	1
   632  00003C                     calibrate@samples_1099:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0x3B
   636  00003C                     	ds	1
   637  00003D                     calibrate@samples_1100:
   638                           	opt callstack 0
   639                           
   640                           ; 1 bytes @ 0x3C
   641  00003D                     	ds	1
   642  00003E                     calibrate@temp:
   643                           	opt callstack 0
   644                           
   645                           ; 1 bytes @ 0x3D
   646  00003E                     	ds	1
   647  00003F                     ??_RCE:
   648                           
   649                           ; 1 bytes @ 0x3E
   650  00003F                     	ds	2
   651  000041                     RCE@message:
   652                           	opt callstack 0
   653                           
   654                           ; 14 bytes @ 0x40
   655  000041                     	ds	14
   656  00004F                     RCE@commandReceived:
   657                           	opt callstack 0
   658                           
   659                           ; 3 bytes @ 0x4E
   660  00004F                     	ds	3
   661  000052                     RCE@nCharsReceived:
   662                           	opt callstack 0
   663                           
   664                           ; 1 bytes @ 0x51
   665  000052                     	ds	1
   666  000053                     RCE@a:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x52
   670  000053                     	ds	1
   671  000054                     RCE@a_1237:
   672                           	opt callstack 0
   673                           
   674                           ; 1 bytes @ 0x53
   675  000054                     	ds	1
   676  000055                     
   677                           ; 1 bytes @ 0x54
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 78 in file "sanic.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   697 ;;      Params:         0       0       0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0
   700 ;;      Totals:         0       0       0       0       0       0       0
   701 ;;Total ram usage:        0 bytes
   702 ;; Hardware stack levels required when called:    5
   703 ;; This function calls:
   704 ;;		_RCE
   705 ;;		_init
   706 ;; This function is called by:
   707 ;;		Startup code after reset
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text0
   712  006FD4                     __ptext0:
   713                           	opt callstack 0
   714  006FD4                     _main:
   715                           	opt callstack 26
   716                           
   717                           ;sanic.c: 95:     init();
   718                           
   719                           ;incstack = 0
   720  006FD4  EC08  F038         	call	_init	;wreg free
   721                           
   722                           ;sanic.c: 96:     RCE();
   723  006FD8  EC9D  F03A         	call	_RCE	;wreg free
   724  006FDC                     l400:
   725  006FDC  D7FF               	goto	l400
   726  006FDE                     __end_of_main:
   727                           	opt callstack 0
   728                           
   729 ;; *************** function _init *****************
   730 ;; Defined at:
   731 ;;		line 107 in file "sanic.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   745 ;;      Params:         0       0       0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0
   748 ;;      Totals:         0       0       0       0       0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    1
   752 ;; This function calls:
   753 ;;		_clearPorts
   754 ;;		_setupADC
   755 ;;		_setupOSC
   756 ;;		_setupSerial
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text1
   763  007010                     __ptext1:
   764                           	opt callstack 0
   765  007010                     _init:
   766                           	opt callstack 29
   767                           
   768                           ;sanic.c: 108:     raceColor[3] = 1;
   769                           
   770                           ;incstack = 0
   771  007010  0E01               	movlw	1
   772  007012  0100               	movlb	0	; () banked
   773  007014  6F9B               	movwf	(_raceColor+3)& (0+255),b
   774                           
   775                           ; BSR set to: 0
   776                           ;sanic.c: 109:     setupOSC();
   777  007016  ECE5  F037         	call	_setupOSC	;wreg free
   778                           
   779                           ;sanic.c: 110:     clearPorts();
   780  00701A  EC21  F039         	call	_clearPorts	;wreg free
   781                           
   782                           ;sanic.c: 111:     setupSerial();
   783  00701E  EC25  F038         	call	_setupSerial	;wreg free
   784                           
   785                           ;sanic.c: 112:     setupADC();
   786  007022  EC14  F038         	call	_setupADC	;wreg free
   787  007026  0012               	return		;funcret
   788  007028                     __end_of_init:
   789                           	opt callstack 0
   790                           
   791 ;; *************** function _setupSerial *****************
   792 ;; Defined at:
   793 ;;		line 100 in file "./functions.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   807 ;;      Params:         0       0       0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0
   810 ;;      Totals:         0       0       0       0       0       0       0
   811 ;;Total ram usage:        0 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text2
   821  00704A                     __ptext2:
   822                           	opt callstack 0
   823  00704A                     _setupSerial:
   824                           	opt callstack 29
   825                           
   826                           ;./functions.c: 102:     PIE1bits.RC1IE = 0;
   827                           
   828                           ;incstack = 0
   829  00704A  9A9D               	bcf	3997,5,c	;volatile
   830                           
   831                           ;./functions.c: 103:     PIE1bits.TX1IE = 0;
   832  00704C  989D               	bcf	3997,4,c	;volatile
   833                           
   834                           ;./functions.c: 104:     PIR1bits.RCIF = 0;
   835  00704E  9A9E               	bcf	3998,5,c	;volatile
   836                           
   837                           ;./functions.c: 106:     FSR0 = 0;
   838  007050  0E00               	movlw	0
   839  007052  6EEA               	movwf	fsr0h,c	;volatile
   840  007054  0E00               	movlw	0
   841  007056  6EE9               	movwf	fsr0l,c	;volatile
   842                           
   843                           ;./functions.c: 107:     TXSTA1 = 0b00100100;
   844  007058  0E24               	movlw	36
   845  00705A  6EAC               	movwf	4012,c	;volatile
   846                           
   847                           ;./functions.c: 108:     RCSTA1 = 0b10010000;
   848  00705C  0E90               	movlw	144
   849  00705E  6EAB               	movwf	4011,c	;volatile
   850                           
   851                           ;./functions.c: 110:     SPBRG1 = 25;
   852  007060  0E19               	movlw	25
   853  007062  6EAF               	movwf	4015,c	;volatile
   854                           
   855                           ;./functions.c: 111:     SPBRGH1 = 0;
   856  007064  0E00               	movlw	0
   857  007066  6EB0               	movwf	4016,c	;volatile
   858                           
   859                           ;./functions.c: 112:     BAUDCON1bits.BRG16 = 0;
   860  007068  96B8               	bcf	4024,3,c	;volatile
   861                           
   862                           ;./functions.c: 113:     TRISCbits.RC6 = 1;
   863  00706A  8C94               	bsf	3988,6,c	;volatile
   864                           
   865                           ;./functions.c: 114:     TRISCbits.RC7 = 1;
   866  00706C  8E94               	bsf	3988,7,c	;volatile
   867                           
   868                           ;./functions.c: 116:     PORTC = 0;
   869  00706E  0E00               	movlw	0
   870  007070  6E82               	movwf	3970,c	;volatile
   871                           
   872                           ;./functions.c: 117:     ANSELC = 0;
   873  007072  0E00               	movlw	0
   874  007074  010F               	movlb	15	; () banked
   875  007076  6F3A               	movwf	58,b	;volatile
   876                           
   877                           ; BSR set to: 15
   878  007078  0012               	return		;funcret
   879  00707A                     __end_of_setupSerial:
   880                           	opt callstack 0
   881                           
   882 ;; *************** function _setupOSC *****************
   883 ;; Defined at:
   884 ;;		line 94 in file "./functions.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   898 ;;      Params:         0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_init
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text3
   912  006FCA                     __ptext3:
   913                           	opt callstack 0
   914  006FCA                     _setupOSC:
   915                           	opt callstack 29
   916                           
   917                           ;./functions.c: 96:     OSCCONbits.IRCF = 0b101;
   918                           
   919                           ; BSR set to: 15
   920                           ;incstack = 0
   921  006FCA  50D3               	movf	4051,w,c	;volatile
   922  006FCC  0B8F               	andlw	-113
   923  006FCE  0950               	iorlw	80
   924  006FD0  6ED3               	movwf	4051,c	;volatile
   925  006FD2  0012               	return		;funcret
   926  006FD4                     __end_of_setupOSC:
   927                           	opt callstack 0
   928                           
   929 ;; *************** function _clearPorts *****************
   930 ;; Defined at:
   931 ;;		line 63 in file "./functions.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   945 ;;      Params:         0       0       0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0
   948 ;;      Totals:         0       0       0       0       0       0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_init
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text4
   959  007242                     __ptext4:
   960                           	opt callstack 0
   961  007242                     _clearPorts:
   962                           	opt callstack 29
   963                           
   964                           ;./functions.c: 65:     PORTA = 0;
   965                           
   966                           ;incstack = 0
   967  007242  0E00               	movlw	0
   968  007244  6E80               	movwf	3968,c	;volatile
   969                           
   970                           ;./functions.c: 66:     LATA = 0;
   971  007246  0E00               	movlw	0
   972  007248  6E89               	movwf	3977,c	;volatile
   973                           
   974                           ;./functions.c: 67:     TRISA = 0;
   975  00724A  0E00               	movlw	0
   976  00724C  6E92               	movwf	3986,c	;volatile
   977                           
   978                           ;./functions.c: 68:     ANSELA = 0;
   979  00724E  0E00               	movlw	0
   980  007250  010F               	movlb	15	; () banked
   981  007252  6F38               	movwf	56,b	;volatile
   982                           
   983                           ;./functions.c: 70:     PORTB = 0;
   984  007254  0E00               	movlw	0
   985  007256  6E81               	movwf	3969,c	;volatile
   986                           
   987                           ;./functions.c: 71:     LATB = 0;
   988  007258  0E00               	movlw	0
   989  00725A  6E8A               	movwf	3978,c	;volatile
   990                           
   991                           ;./functions.c: 72:     TRISB = 0;
   992  00725C  0E00               	movlw	0
   993  00725E  6E93               	movwf	3987,c	;volatile
   994                           
   995                           ;./functions.c: 73:     ANSELB = 0;
   996  007260  0E00               	movlw	0
   997  007262  6F39               	movwf	57,b	;volatile
   998                           
   999                           ;./functions.c: 75:     PORTC = 0;
  1000  007264  0E00               	movlw	0
  1001  007266  6E82               	movwf	3970,c	;volatile
  1002                           
  1003                           ;./functions.c: 76:     LATC = 0;
  1004  007268  0E00               	movlw	0
  1005  00726A  6E8B               	movwf	3979,c	;volatile
  1006                           
  1007                           ;./functions.c: 77:     TRISC = 0;
  1008  00726C  0E00               	movlw	0
  1009  00726E  6E94               	movwf	3988,c	;volatile
  1010                           
  1011                           ;./functions.c: 78:     ANSELC = 0;
  1012  007270  0E00               	movlw	0
  1013  007272  6F3A               	movwf	58,b	;volatile
  1014                           
  1015                           ;./functions.c: 80:     PORTD = 0;
  1016  007274  0E00               	movlw	0
  1017  007276  6E83               	movwf	3971,c	;volatile
  1018                           
  1019                           ;./functions.c: 81:     LATD = 0;
  1020  007278  0E00               	movlw	0
  1021  00727A  6E8C               	movwf	3980,c	;volatile
  1022                           
  1023                           ;./functions.c: 82:     TRISD = 0;
  1024  00727C  0E00               	movlw	0
  1025  00727E  6E95               	movwf	3989,c	;volatile
  1026                           
  1027                           ;./functions.c: 83:     ANSELD = 0;
  1028  007280  0E00               	movlw	0
  1029  007282  6F3B               	movwf	59,b	;volatile
  1030                           
  1031                           ;./functions.c: 85:     PORTE = 0;
  1032  007284  0E00               	movlw	0
  1033  007286  6E84               	movwf	3972,c	;volatile
  1034                           
  1035                           ;./functions.c: 86:     LATE = 0;
  1036  007288  0E00               	movlw	0
  1037  00728A  6E8D               	movwf	3981,c	;volatile
  1038                           
  1039                           ;./functions.c: 87:     TRISE = 0;
  1040  00728C  0E00               	movlw	0
  1041  00728E  6E96               	movwf	3990,c	;volatile
  1042                           
  1043                           ;./functions.c: 88:     ANSELE = 0;
  1044  007290  0E00               	movlw	0
  1045  007292  6F3C               	movwf	60,b	;volatile
  1046                           
  1047                           ;./functions.c: 89:     raceColor[3] = 1;
  1048  007294  0E01               	movlw	1
  1049  007296  0100               	movlb	0	; () banked
  1050  007298  6F9B               	movwf	(_raceColor+3)& (0+255),b
  1051                           
  1052                           ; BSR set to: 0
  1053  00729A  0012               	return		;funcret
  1054  00729C                     __end_of_clearPorts:
  1055                           	opt callstack 0
  1056                           
  1057 ;; *************** function _RCE *****************
  1058 ;; Defined at:
  1059 ;;		line 115 in file "sanic.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  a               1   83[COMRAM] unsigned char 
  1064 ;;  a               1   82[COMRAM] unsigned char 
  1065 ;;  message        14   64[COMRAM] unsigned char [14]
  1066 ;;  commandRecei    3   78[COMRAM] unsigned char [3]
  1067 ;;  nCharsReceiv    1   81[COMRAM] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1077 ;;      Params:         0       0       0       0       0       0       0
  1078 ;;      Locals:        20       0       0       0       0       0       0
  1079 ;;      Temps:          2       0       0       0       0       0       0
  1080 ;;      Totals:        22       0       0       0       0       0       0
  1081 ;;Total ram usage:       22 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    4
  1084 ;; This function calls:
  1085 ;;		_PRC
  1086 ;;		_calibrate
  1087 ;;		_error
  1088 ;;		_navigate
  1089 ;;		_pyCal
  1090 ;;		_trans
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text5
  1097  00753A                     __ptext5:
  1098                           	opt callstack 0
  1099  00753A                     _RCE:
  1100                           	opt callstack 26
  1101                           
  1102                           ;sanic.c: 117:         PORTD = 0b10100100;
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;incstack = 0
  1106                           ;sanic.c: 116:     while(1){
  1107  00753A  0EA4               	movlw	164
  1108  00753C  6E83               	movwf	3971,c	;volatile
  1109                           
  1110                           ;sanic.c: 119:         unsigned char message[] = "\nSanic races ";
  1111  00753E  EE20  F080         	lfsr	2,RCE@F6064
  1112  007542  EE10  F041         	lfsr	1,RCE@message
  1113  007546  0E0D               	movlw	13
  1114  007548                     u2241:
  1115  007548  CFDB FFE3          	movff	plusw2,plusw1
  1116  00754C  06E8               	decf	wreg,f,c
  1117  00754E  E2FC               	bc	u2241
  1118                           
  1119                           ;sanic.c: 121:         for (unsigned char a = 0; a < 13; a++)
  1120  007550  0E00               	movlw	0
  1121  007552  6E53               	movwf	RCE@a,c
  1122  007554                     l3008:
  1123                           
  1124                           ;sanic.c: 122:         {;sanic.c: 123:             trans(message[a]);
  1125  007554  0E41               	movlw	low RCE@message
  1126  007556  2453               	addwf	RCE@a,w,c
  1127  007558  6ED9               	movwf	fsr2l,c
  1128  00755A  6ADA               	clrf	fsr2h,c
  1129  00755C  0E00               	movlw	high RCE@message
  1130  00755E  22DA               	addwfc	fsr2h,f,c
  1131  007560  50DF               	movf	indf2,w,c
  1132  007562  ECEF  F037         	call	_trans
  1133                           
  1134                           ;sanic.c: 124:         }
  1135  007566  2A53               	incf	RCE@a,f,c
  1136  007568  0E0C               	movlw	12
  1137  00756A  6453               	cpfsgt	RCE@a,c
  1138  00756C  D7F3               	goto	l3008
  1139                           
  1140                           ;sanic.c: 126:         if (raceColor[3] == 1){
  1141  00756E  0100               	movlb	0	; () banked
  1142  007570  059B               	decf	(_raceColor+3)& (0+255),w,b
  1143  007572  A4D8               	btfss	status,2,c
  1144  007574  D004               	goto	l3018
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;sanic.c: 127:             trans('B');
  1148  007576  0E42               	movlw	66
  1149  007578  ECEF  F037         	call	_trans
  1150                           
  1151                           ;sanic.c: 128:         }
  1152  00757C  D011               	goto	l415
  1153  00757E                     l3018:
  1154                           
  1155                           ; BSR set to: 0
  1156  00757E  059A               	decf	(_raceColor+2)& (0+255),w,b
  1157  007580  A4D8               	btfss	status,2,c
  1158  007582  D004               	goto	l3022
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;sanic.c: 130:             trans('R');
  1162  007584  0E52               	movlw	82
  1163  007586  ECEF  F037         	call	_trans
  1164                           
  1165                           ;sanic.c: 131:         }
  1166  00758A  D00A               	goto	l415
  1167  00758C                     l3022:
  1168                           
  1169                           ; BSR set to: 0
  1170  00758C  0599               	decf	(_raceColor+1)& (0+255),w,b
  1171  00758E  A4D8               	btfss	status,2,c
  1172  007590  D004               	goto	l3026
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;sanic.c: 133:             trans('G');
  1176  007592  0E47               	movlw	71
  1177  007594  ECEF  F037         	call	_trans
  1178                           
  1179                           ;sanic.c: 134:         }
  1180  007598  D003               	goto	l415
  1181  00759A                     l3026:
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;sanic.c: 136:             trans('n');
  1185  00759A  0E6E               	movlw	110
  1186  00759C  ECEF  F037         	call	_trans
  1187  0075A0                     l415:
  1188                           
  1189                           ;sanic.c: 138:         trans('\n');
  1190  0075A0  0E0A               	movlw	10
  1191  0075A2  ECEF  F037         	call	_trans
  1192                           
  1193                           ;sanic.c: 141:         INTCONbits.GIE = 0;
  1194  0075A6  9EF2               	bcf	4082,7,c	;volatile
  1195                           
  1196                           ;sanic.c: 142:         INTCONbits.PEIE = 0;
  1197  0075A8  9CF2               	bcf	4082,6,c	;volatile
  1198                           
  1199                           ;sanic.c: 143:         unsigned char nCharsReceived = 0;
  1200  0075AA  0E00               	movlw	0
  1201  0075AC  6E52               	movwf	RCE@nCharsReceived,c
  1202                           
  1203                           ;sanic.c: 144:         unsigned char commandReceived[3];;sanic.c: 146:         while(nCh
      +                          arsReceived < 3){
  1204  0075AE  D00B               	goto	l3038
  1205  0075B0                     l421:
  1206                           
  1207                           ;sanic.c: 147:             if (PIR1bits.RC1IF){
  1208  0075B0  AA9E               	btfss	3998,5,c	;volatile
  1209  0075B2  D009               	goto	l3038
  1210                           
  1211                           ;sanic.c: 148:                 commandReceived[nCharsReceived] = RCREG;
  1212  0075B4  0E4F               	movlw	low RCE@commandReceived
  1213  0075B6  2452               	addwf	RCE@nCharsReceived,w,c
  1214  0075B8  6ED9               	movwf	fsr2l,c
  1215  0075BA  6ADA               	clrf	fsr2h,c
  1216  0075BC  0E00               	movlw	high RCE@commandReceived
  1217  0075BE  22DA               	addwfc	fsr2h,f,c
  1218  0075C0  CFAE FFDF          	movff	4014,indf2	;volatile
  1219                           
  1220                           ;sanic.c: 149:                 nCharsReceived++;
  1221  0075C4  2A52               	incf	RCE@nCharsReceived,f,c
  1222  0075C6                     l3038:
  1223                           
  1224                           ;sanic.c: 146:         while(nCharsReceived < 3){
  1225  0075C6  0E02               	movlw	2
  1226  0075C8  6452               	cpfsgt	RCE@nCharsReceived,c
  1227  0075CA  D7F2               	goto	l421
  1228  0075CC  D00F               	goto	l3052
  1229  0075CE                     l3040:
  1230                           
  1231                           ;sanic.c: 160:             PRC();
  1232  0075CE  EC56  F03C         	call	_PRC	;wreg free
  1233                           
  1234                           ;sanic.c: 161:             break;
  1235  0075D2  D023               	goto	l3054
  1236  0075D4                     l3042:
  1237                           
  1238                           ;sanic.c: 163:             navigate();
  1239  0075D4  EC3D  F038         	call	_navigate	;wreg free
  1240                           
  1241                           ;sanic.c: 164:             break;
  1242  0075D8  D020               	goto	l3054
  1243  0075DA                     l3044:
  1244                           
  1245                           ;sanic.c: 166:             pyCal();
  1246  0075DA  ECD1  F038         	call	_pyCal	;wreg free
  1247                           
  1248                           ;sanic.c: 167:             break;
  1249  0075DE  D01D               	goto	l3054
  1250  0075E0                     l3046:
  1251                           
  1252                           ;sanic.c: 169:             calibrate();
  1253  0075E0  EC18  F03D         	call	_calibrate	;wreg free
  1254                           
  1255                           ;sanic.c: 170:             break;
  1256  0075E4  D01A               	goto	l3054
  1257  0075E6                     l3048:
  1258                           
  1259                           ;sanic.c: 173:             error();
  1260  0075E6  EC56  F038         	call	_error	;wreg free
  1261                           
  1262                           ;sanic.c: 174:             break;
  1263  0075EA  D017               	goto	l3054
  1264  0075EC                     l3052:
  1265  0075EC  504F               	movf	RCE@commandReceived,w,c
  1266  0075EE  6E3F               	movwf	??_RCE& (0+255),c
  1267  0075F0  6A40               	clrf	(??_RCE+1)& (0+255),c
  1268                           
  1269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1270                           ; Switch size 1, requested type "simple"
  1271                           ; Number of cases is 1, Range of values is 0 to 0
  1272                           ; switch strategies available:
  1273                           ; Name         Instructions Cycles
  1274                           ; simple_byte            4     3 (average)
  1275                           ;	Chosen strategy is simple_byte
  1276  0075F2  5040               	movf	??_RCE+1,w,c
  1277  0075F4  0A00               	xorlw	0	; case 0
  1278  0075F6  A4D8               	btfss	status,2,c
  1279  0075F8  D7F6               	goto	l3048
  1280                           
  1281                           ; Switch size 1, requested type "simple"
  1282                           ; Number of cases is 5, Range of values is 67 to 82
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte           16     9 (average)
  1286                           ;	Chosen strategy is simple_byte
  1287  0075FA  503F               	movf	??_RCE,w,c
  1288  0075FC  0A43               	xorlw	67	; case 67
  1289  0075FE  B4D8               	btfsc	status,2,c
  1290  007600  D7EF               	goto	l3046
  1291  007602  0A0D               	xorlw	13	; case 78
  1292  007604  B4D8               	btfsc	status,2,c
  1293  007606  D7E6               	goto	l3042
  1294  007608  0A1E               	xorlw	30	; case 80
  1295  00760A  B4D8               	btfsc	status,2,c
  1296  00760C  D7E0               	goto	l3040
  1297  00760E  0A01               	xorlw	1	; case 81
  1298  007610  B4D8               	btfsc	status,2,c
  1299  007612  D7E3               	goto	l3044
  1300  007614  0A03               	xorlw	3	; case 82
  1301  007616  A4D8               	btfss	status,2,c
  1302  007618  D7E6               	goto	l3048
  1303  00761A                     l3054:
  1304                           
  1305                           ;sanic.c: 177:         for (unsigned char a = 0; a < 3; a++){
  1306  00761A  0E00               	movlw	0
  1307  00761C  6E54               	movwf	RCE@a_1237,c
  1308  00761E                     l3060:
  1309                           
  1310                           ;sanic.c: 178:             commandReceived[a] = 0;
  1311  00761E  0E4F               	movlw	low RCE@commandReceived
  1312  007620  2454               	addwf	RCE@a_1237,w,c
  1313  007622  6ED9               	movwf	fsr2l,c
  1314  007624  6ADA               	clrf	fsr2h,c
  1315  007626  0E00               	movlw	high RCE@commandReceived
  1316  007628  22DA               	addwfc	fsr2h,f,c
  1317  00762A  0E00               	movlw	0
  1318  00762C  6EDF               	movwf	indf2,c
  1319                           
  1320                           ;sanic.c: 179:         }
  1321  00762E  2A54               	incf	RCE@a_1237,f,c
  1322  007630  0E02               	movlw	2
  1323  007632  6454               	cpfsgt	RCE@a_1237,c
  1324  007634  D7F4               	goto	l3060
  1325  007636  D781               	goto	_RCE
  1326  007638                     __end_of_RCE:
  1327                           	opt callstack 0
  1328                           
  1329 ;; *************** function _pyCal *****************
  1330 ;; Defined at:
  1331 ;;		line 396 in file "./functions.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  a               1   51[COMRAM] unsigned char 
  1336 ;;  done            1    0        unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1346 ;;      Params:         0       0       0       0       0       0       0
  1347 ;;      Locals:         2       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0
  1349 ;;      Totals:         2       0       0       0       0       0       0
  1350 ;;Total ram usage:        2 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    2
  1353 ;; This function calls:
  1354 ;;		_aveSensor
  1355 ;;		_msDelay
  1356 ;;		_setupADC
  1357 ;;		_trans
  1358 ;; This function is called by:
  1359 ;;		_RCE
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text6
  1364  0071A2                     __ptext6:
  1365                           	opt callstack 0
  1366  0071A2                     _pyCal:
  1367                           	opt callstack 27
  1368                           
  1369                           ;./functions.c: 398:     setupADC();
  1370                           
  1371                           ;incstack = 0
  1372  0071A2  EC14  F038         	call	_setupADC	;wreg free
  1373  0071A6                     
  1374                           ;./functions.c: 401:     {;./functions.c: 402:         msDelay(9);
  1375  0071A6  0E09               	movlw	9
  1376  0071A8  EC4E  F039         	call	_msDelay
  1377                           
  1378                           ;./functions.c: 403:         for (unsigned char a = 0; a < 5; a++)
  1379  0071AC  0E00               	movlw	0
  1380  0071AE  6E34               	movwf	pyCal@a,c
  1381  0071B0                     l2952:
  1382                           
  1383                           ;./functions.c: 404:         {;./functions.c: 405:             trans(aveSensor(sensorCha
      +                          nnels[a]));
  1384  0071B0  0EA8               	movlw	low _sensorChannels
  1385  0071B2  2434               	addwf	pyCal@a,w,c
  1386  0071B4  6ED9               	movwf	fsr2l,c
  1387  0071B6  6ADA               	clrf	fsr2h,c
  1388  0071B8  0E00               	movlw	high _sensorChannels
  1389  0071BA  22DA               	addwfc	fsr2h,f,c
  1390  0071BC  50DF               	movf	indf2,w,c
  1391  0071BE  ECAE  F038         	call	_aveSensor
  1392  0071C2  ECEF  F037         	call	_trans
  1393                           
  1394                           ;./functions.c: 406:         }
  1395  0071C6  2A34               	incf	pyCal@a,f,c
  1396  0071C8  0E04               	movlw	4
  1397  0071CA  6434               	cpfsgt	pyCal@a,c
  1398  0071CC  D7F1               	goto	l2952
  1399                           
  1400                           ;./functions.c: 407:         trans('\n');
  1401  0071CE  0E0A               	movlw	10
  1402  0071D0  ECEF  F037         	call	_trans
  1403                           
  1404                           ;./functions.c: 409:         if (PIR1bits.RC1IF)
  1405  0071D4  AA9E               	btfss	3998,5,c	;volatile
  1406  0071D6  D7E7               	goto	l2942
  1407                           
  1408                           ;./functions.c: 410:         {;./functions.c: 411:             PIR1bits.RC1IF = 0;
  1409  0071D8  9A9E               	bcf	3998,5,c	;volatile
  1410                           
  1411                           ;./functions.c: 412:             if (RCREG == 'S' || RCREG == 's')
  1412  0071DA  0E53               	movlw	83
  1413  0071DC  18AE               	xorwf	4014,w,c	;volatile
  1414  0071DE  B4D8               	btfsc	status,2,c
  1415  0071E0  0012               	return	
  1416  0071E2  0E73               	movlw	115
  1417  0071E4  18AE               	xorwf	4014,w,c	;volatile
  1418  0071E6  B4D8               	btfsc	status,2,c
  1419  0071E8  0012               	return	
  1420  0071EA  D7DD               	goto	l2942
  1421  0071EC                     __end_of_pyCal:
  1422                           	opt callstack 0
  1423                           
  1424 ;; *************** function _navigate *****************
  1425 ;; Defined at:
  1426 ;;		line 420 in file "./functions.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1440 ;;      Params:         0       0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    3
  1447 ;; This function calls:
  1448 ;;		_classifyColors
  1449 ;;		_displayColorDetected
  1450 ;;		_displayRaceColor
  1451 ;;		_readAllSensors
  1452 ;;		_setupADC
  1453 ;;		_stopMotors
  1454 ;; This function is called by:
  1455 ;;		_RCE
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text7
  1460  00707A                     __ptext7:
  1461                           	opt callstack 0
  1462  00707A                     _navigate:
  1463                           	opt callstack 26
  1464                           
  1465                           ;./functions.c: 421:     displayRaceColor();
  1466                           
  1467                           ;incstack = 0
  1468  00707A  EC8F  F038         	call	_displayRaceColor	;wreg free
  1469  00707E                     l279:
  1470                           
  1471                           ;./functions.c: 423:         setupADC();
  1472  00707E  EC14  F038         	call	_setupADC	;wreg free
  1473                           
  1474                           ;./functions.c: 424:         readAllSensors();
  1475  007082  EC71  F038         	call	_readAllSensors	;wreg free
  1476                           
  1477                           ;./functions.c: 425:         classifyColors();
  1478  007086  EC1C  F03B         	call	_classifyColors	;wreg free
  1479                           
  1480                           ;./functions.c: 426:         displayColorDetected(2);
  1481  00708A  0E02               	movlw	2
  1482  00708C  ECFC  F039         	call	_displayColorDetected
  1483                           
  1484                           ;./functions.c: 428:         if (PIR1bits.RC1IF)
  1485  007090  AA9E               	btfss	3998,5,c	;volatile
  1486  007092  D7F5               	goto	l279
  1487                           
  1488                           ;./functions.c: 429:         {;./functions.c: 430:             PIR1bits.RC1IF = 0;
  1489  007094  9A9E               	bcf	3998,5,c	;volatile
  1490                           
  1491                           ;./functions.c: 431:             if (RCREG == 'S' || RCREG == 's')
  1492  007096  0E53               	movlw	83
  1493  007098  18AE               	xorwf	4014,w,c	;volatile
  1494  00709A  B4D8               	btfsc	status,2,c
  1495  00709C  D004               	goto	u2230
  1496  00709E  0E73               	movlw	115
  1497  0070A0  18AE               	xorwf	4014,w,c	;volatile
  1498  0070A2  A4D8               	btfss	status,2,c
  1499  0070A4  D7EC               	goto	l279
  1500  0070A6                     u2230:
  1501                           
  1502                           ;./functions.c: 432:             {;./functions.c: 433:                 stopMotors();
  1503  0070A6  ECF5  F037         	call	_stopMotors	;wreg free
  1504  0070AA  0012               	return		;funcret
  1505  0070AC                     __end_of_navigate:
  1506                           	opt callstack 0
  1507                           
  1508 ;; *************** function _stopMotors *****************
  1509 ;; Defined at:
  1510 ;;		line 547 in file "./functions.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1524 ;;      Params:         0       0       0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_navigate
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text8
  1538  006FEA                     __ptext8:
  1539                           	opt callstack 0
  1540  006FEA                     _stopMotors:
  1541                           	opt callstack 28
  1542                           
  1543                           ;./functions.c: 548:     PORTCbits.RC0 = 0;
  1544                           
  1545                           ;incstack = 0
  1546  006FEA  9082               	bcf	3970,0,c	;volatile
  1547                           
  1548                           ;./functions.c: 549:     PORTCbits.RC1 = 0;
  1549  006FEC  9282               	bcf	3970,1,c	;volatile
  1550                           
  1551                           ;./functions.c: 550:     TRISCbits.TRISC2 = 1;
  1552  006FEE  8494               	bsf	3988,2,c	;volatile
  1553                           
  1554                           ;./functions.c: 551:     PORTEbits.RE0 = 0;
  1555  006FF0  9084               	bcf	3972,0,c	;volatile
  1556                           
  1557                           ;./functions.c: 552:     PORTEbits.RE1 = 0;
  1558  006FF2  9284               	bcf	3972,1,c	;volatile
  1559                           
  1560                           ;./functions.c: 553:     TRISEbits.TRISE2 = 1;
  1561  006FF4  8496               	bsf	3990,2,c	;volatile
  1562                           
  1563                           ;./functions.c: 554:     PORTA = 0;
  1564  006FF6  0E00               	movlw	0
  1565  006FF8  6E80               	movwf	3968,c	;volatile
  1566  006FFA  0012               	return		;funcret
  1567  006FFC                     __end_of_stopMotors:
  1568                           	opt callstack 0
  1569                           
  1570 ;; *************** function _setupADC *****************
  1571 ;; Defined at:
  1572 ;;		line 123 in file "./functions.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1586 ;;      Params:         0       0       0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_pyCal
  1596 ;;		_navigate
  1597 ;;		_init
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text9
  1602  007028                     __ptext9:
  1603                           	opt callstack 0
  1604  007028                     _setupADC:
  1605                           	opt callstack 29
  1606                           
  1607                           ;./functions.c: 125:     ADCON2bits.ADCS = 0b100;
  1608                           
  1609                           ;incstack = 0
  1610  007028  50C0               	movf	4032,w,c	;volatile
  1611  00702A  0BF8               	andlw	-8
  1612  00702C  0904               	iorlw	4
  1613  00702E  6EC0               	movwf	4032,c	;volatile
  1614                           
  1615                           ;./functions.c: 126:     ADCON1 = 0;
  1616  007030  0E00               	movlw	0
  1617  007032  6EC1               	movwf	4033,c	;volatile
  1618                           
  1619                           ;./functions.c: 127:     ADCON0bits.CHS = 0b01100;
  1620  007034  50C2               	movf	4034,w,c	;volatile
  1621  007036  0B83               	andlw	-125
  1622  007038  0930               	iorlw	48
  1623  00703A  6EC2               	movwf	4034,c	;volatile
  1624                           
  1625                           ;./functions.c: 128:     ADCON2bits.ADFM = 0;
  1626  00703C  9EC0               	bcf	4032,7,c	;volatile
  1627                           
  1628                           ;./functions.c: 129:     ADCON2bits.ACQT = 0b101;
  1629  00703E  50C0               	movf	4032,w,c	;volatile
  1630  007040  0BC7               	andlw	-57
  1631  007042  0928               	iorlw	40
  1632  007044  6EC0               	movwf	4032,c	;volatile
  1633                           
  1634                           ;./functions.c: 130:     ADCON0bits.ADON = 1;
  1635  007046  80C2               	bsf	4034,0,c	;volatile
  1636  007048  0012               	return		;funcret
  1637  00704A                     __end_of_setupADC:
  1638                           	opt callstack 0
  1639                           
  1640 ;; *************** function _readAllSensors *****************
  1641 ;; Defined at:
  1642 ;;		line 579 in file "./functions.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  a               2   10[COMRAM] unsigned int 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1656 ;;      Params:         0       0       0       0       0       0       0
  1657 ;;      Locals:         2       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0
  1659 ;;      Totals:         2       0       0       0       0       0       0
  1660 ;;Total ram usage:        2 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    2
  1663 ;; This function calls:
  1664 ;;		_aveSensor
  1665 ;; This function is called by:
  1666 ;;		_navigate
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text10
  1671  0070E2                     __ptext10:
  1672                           	opt callstack 0
  1673  0070E2                     _readAllSensors:
  1674                           	opt callstack 26
  1675                           
  1676                           ;./functions.c: 580:     for (unsigned a = 0; a < 5; a++){
  1677                           
  1678                           ;incstack = 0
  1679  0070E2  0E00               	movlw	0
  1680  0070E4  6E0C               	movwf	readAllSensors@a+1,c
  1681  0070E6  0E00               	movlw	0
  1682  0070E8  6E0B               	movwf	readAllSensors@a,c
  1683  0070EA                     l2506:
  1684                           
  1685                           ;./functions.c: 581:         sensorVals[a] = aveSensor(sensorChannels[a]);
  1686  0070EA  0EB8               	movlw	low _sensorVals
  1687  0070EC  240B               	addwf	readAllSensors@a,w,c
  1688  0070EE  6ED9               	movwf	fsr2l,c
  1689  0070F0  0E00               	movlw	high _sensorVals
  1690  0070F2  200C               	addwfc	readAllSensors@a+1,w,c
  1691  0070F4  6EDA               	movwf	fsr2h,c
  1692  0070F6  0EA8               	movlw	low _sensorChannels
  1693  0070F8  240B               	addwf	readAllSensors@a,w,c
  1694  0070FA  6EE1               	movwf	fsr1l,c
  1695  0070FC  0E00               	movlw	high _sensorChannels
  1696  0070FE  200C               	addwfc	readAllSensors@a+1,w,c
  1697  007100  6EE2               	movwf	fsr1h,c
  1698  007102  50E7               	movf	indf1,w,c
  1699  007104  ECAE  F038         	call	_aveSensor
  1700  007108  6EDF               	movwf	indf2,c
  1701                           
  1702                           ;./functions.c: 582:     }
  1703  00710A  4A0B               	infsnz	readAllSensors@a,f,c
  1704  00710C  2A0C               	incf	readAllSensors@a+1,f,c
  1705  00710E  500C               	movf	readAllSensors@a+1,w,c
  1706  007110  E105               	bnz	u1670
  1707  007112  0E05               	movlw	5
  1708  007114  5C0B               	subwf	readAllSensors@a,w,c
  1709  007116  B0D8               	btfsc	status,0,c
  1710  007118  0012               	return	
  1711  00711A  D7E7               	goto	l2506
  1712  00711C                     u1670:
  1713  00711C  0012               	return		;funcret
  1714  00711E                     __end_of_readAllSensors:
  1715                           	opt callstack 0
  1716                           
  1717 ;; *************** function _displayRaceColor *****************
  1718 ;; Defined at:
  1719 ;;		line 559 in file "./functions.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1733 ;;      Params:         0       0       0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_navigate
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text11
  1747  00711E                     __ptext11:
  1748                           	opt callstack 0
  1749  00711E                     _displayRaceColor:
  1750                           	opt callstack 28
  1751                           
  1752                           ;./functions.c: 560:     if (raceColor[0]){
  1753                           
  1754                           ;incstack = 0
  1755  00711E  0100               	movlb	0	; () banked
  1756  007120  5198               	movf	_raceColor& (0+255),w,b
  1757  007122  B4D8               	btfsc	status,2,c
  1758  007124  D003               	goto	l2482
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;./functions.c: 561:         PORTD = 0b10111111;
  1762  007126  0EBF               	movlw	191
  1763  007128  6E83               	movwf	3971,c	;volatile
  1764                           
  1765                           ;./functions.c: 562:     }
  1766  00712A  0012               	return	
  1767  00712C                     l2482:
  1768                           
  1769                           ; BSR set to: 0
  1770  00712C  5199               	movf	(_raceColor+1)& (0+255),w,b
  1771  00712E  B4D8               	btfsc	status,2,c
  1772  007130  D003               	goto	l2486
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;./functions.c: 564:         PORTD = 0b10000010;
  1776  007132  0E82               	movlw	130
  1777  007134  6E83               	movwf	3971,c	;volatile
  1778                           
  1779                           ;./functions.c: 565:     }
  1780  007136  0012               	return	
  1781  007138                     l2486:
  1782                           
  1783                           ; BSR set to: 0
  1784  007138  519A               	movf	(_raceColor+2)& (0+255),w,b
  1785  00713A  B4D8               	btfsc	status,2,c
  1786  00713C  D003               	goto	l2490
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;./functions.c: 567:         PORTD = 0b10001000;
  1790  00713E  0E88               	movlw	136
  1791  007140  6E83               	movwf	3971,c	;volatile
  1792                           
  1793                           ;./functions.c: 568:     }
  1794  007142  0012               	return	
  1795  007144                     l2490:
  1796                           
  1797                           ; BSR set to: 0
  1798  007144  519B               	movf	(_raceColor+3)& (0+255),w,b
  1799  007146  B4D8               	btfsc	status,2,c
  1800  007148  D003               	goto	l2494
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;./functions.c: 570:         PORTD = 0b10000000;
  1804  00714A  0E80               	movlw	128
  1805  00714C  6E83               	movwf	3971,c	;volatile
  1806                           
  1807                           ;./functions.c: 571:     }
  1808  00714E  0012               	return	
  1809  007150                     l2494:
  1810                           
  1811                           ; BSR set to: 0
  1812  007150  519C               	movf	(_raceColor+4)& (0+255),w,b
  1813  007152  B4D8               	btfsc	status,2,c
  1814  007154  0012               	return	
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;./functions.c: 573:         PORTD = 0b11001000;
  1818  007156  0EC8               	movlw	200
  1819  007158  6E83               	movwf	3971,c	;volatile
  1820  00715A  0012               	return	
  1821  00715C                     __end_of_displayRaceColor:
  1822                           	opt callstack 0
  1823                           
  1824 ;; *************** function _displayColorDetected *****************
  1825 ;; Defined at:
  1826 ;;		line 494 in file "./functions.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  sensor          1    wreg     unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  sensor          1    2[COMRAM] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1840 ;;      Params:         0       0       0       0       0       0       0
  1841 ;;      Locals:         1       0       0       0       0       0       0
  1842 ;;      Temps:          2       0       0       0       0       0       0
  1843 ;;      Totals:         3       0       0       0       0       0       0
  1844 ;;Total ram usage:        3 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_navigate
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text12
  1854  0073F8                     __ptext12:
  1855                           	opt callstack 0
  1856  0073F8                     _displayColorDetected:
  1857                           	opt callstack 28
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;incstack = 0
  1861                           ;displayColorDetected@sensor stored from wreg
  1862  0073F8  6E03               	movwf	displayColorDetected@sensor,c
  1863                           
  1864                           ;./functions.c: 495:     switch (colorsDetected[sensor])
  1865  0073FA  D024               	goto	l2546
  1866  0073FC                     l313:
  1867                           
  1868                           ;./functions.c: 498:         PORTAbits.RA0 = 1;
  1869  0073FC  8080               	bsf	3968,0,c	;volatile
  1870                           
  1871                           ;./functions.c: 499:         PORTAbits.RA1 = 0;
  1872  0073FE  9280               	bcf	3968,1,c	;volatile
  1873                           
  1874                           ;./functions.c: 500:         PORTAbits.RA2 = 0;
  1875  007400  9480               	bcf	3968,2,c	;volatile
  1876                           
  1877                           ;./functions.c: 501:         PORTAbits.RA3 = 0;
  1878  007402  9680               	bcf	3968,3,c	;volatile
  1879                           
  1880                           ;./functions.c: 502:         PORTAbits.RA4 = 0;
  1881  007404  9880               	bcf	3968,4,c	;volatile
  1882                           
  1883                           ;./functions.c: 503:         break;
  1884  007406  0012               	return	
  1885  007408                     l315:
  1886                           
  1887                           ;./functions.c: 505:         PORTAbits.RA0 = 0;
  1888  007408  9080               	bcf	3968,0,c	;volatile
  1889                           
  1890                           ;./functions.c: 506:         PORTAbits.RA1 = 1;
  1891  00740A  8280               	bsf	3968,1,c	;volatile
  1892                           
  1893                           ;./functions.c: 507:         PORTAbits.RA2 = 0;
  1894  00740C  9480               	bcf	3968,2,c	;volatile
  1895                           
  1896                           ;./functions.c: 508:         PORTAbits.RA3 = 0;
  1897  00740E  9680               	bcf	3968,3,c	;volatile
  1898                           
  1899                           ;./functions.c: 509:         PORTAbits.RA4 = 0;
  1900  007410  9880               	bcf	3968,4,c	;volatile
  1901                           
  1902                           ;./functions.c: 510:         break;
  1903  007412  0012               	return	
  1904  007414                     l316:
  1905                           
  1906                           ;./functions.c: 512:         PORTAbits.RA0 = 0;
  1907  007414  9080               	bcf	3968,0,c	;volatile
  1908                           
  1909                           ;./functions.c: 513:         PORTAbits.RA1 = 0;
  1910  007416  9280               	bcf	3968,1,c	;volatile
  1911                           
  1912                           ;./functions.c: 514:         PORTAbits.RA2 = 1;
  1913  007418  8480               	bsf	3968,2,c	;volatile
  1914                           
  1915                           ;./functions.c: 515:         PORTAbits.RA3 = 0;
  1916  00741A  9680               	bcf	3968,3,c	;volatile
  1917                           
  1918                           ;./functions.c: 516:         PORTAbits.RA4 = 0;
  1919  00741C  9880               	bcf	3968,4,c	;volatile
  1920                           
  1921                           ;./functions.c: 517:         break;
  1922  00741E  0012               	return	
  1923  007420                     l317:
  1924                           
  1925                           ;./functions.c: 519:         PORTAbits.RA0 = 0;
  1926  007420  9080               	bcf	3968,0,c	;volatile
  1927                           
  1928                           ;./functions.c: 520:         PORTAbits.RA1 = 0;
  1929  007422  9280               	bcf	3968,1,c	;volatile
  1930                           
  1931                           ;./functions.c: 521:         PORTAbits.RA2 = 0;
  1932  007424  9480               	bcf	3968,2,c	;volatile
  1933                           
  1934                           ;./functions.c: 522:         PORTAbits.RA3 = 1;
  1935  007426  8680               	bsf	3968,3,c	;volatile
  1936                           
  1937                           ;./functions.c: 523:         PORTAbits.RA4 = 0;
  1938  007428  9880               	bcf	3968,4,c	;volatile
  1939                           
  1940                           ;./functions.c: 524:         break;
  1941  00742A  0012               	return	
  1942  00742C                     l318:
  1943                           
  1944                           ;./functions.c: 526:         PORTAbits.RA0 = 0;
  1945  00742C  9080               	bcf	3968,0,c	;volatile
  1946                           
  1947                           ;./functions.c: 527:         PORTAbits.RA1 = 0;
  1948  00742E  9280               	bcf	3968,1,c	;volatile
  1949                           
  1950                           ;./functions.c: 528:         PORTAbits.RA2 = 0;
  1951  007430  9480               	bcf	3968,2,c	;volatile
  1952                           
  1953                           ;./functions.c: 529:         PORTAbits.RA3 = 0;
  1954  007432  9680               	bcf	3968,3,c	;volatile
  1955                           
  1956                           ;./functions.c: 530:         PORTAbits.RA4 = 1;
  1957  007434  8880               	bsf	3968,4,c	;volatile
  1958                           
  1959                           ;./functions.c: 531:         break;
  1960  007436  0012               	return	
  1961  007438                     l319:
  1962                           
  1963                           ;./functions.c: 534:         PORTAbits.RA0 = 1;
  1964  007438  8080               	bsf	3968,0,c	;volatile
  1965                           
  1966                           ;./functions.c: 535:         PORTAbits.RA1 = 1;
  1967  00743A  8280               	bsf	3968,1,c	;volatile
  1968                           
  1969                           ;./functions.c: 536:         PORTAbits.RA2 = 1;
  1970  00743C  8480               	bsf	3968,2,c	;volatile
  1971                           
  1972                           ;./functions.c: 537:         PORTAbits.RA3 = 1;
  1973  00743E  8680               	bsf	3968,3,c	;volatile
  1974                           
  1975                           ;./functions.c: 538:         PORTAbits.RA4 = 1;
  1976  007440  8880               	bsf	3968,4,c	;volatile
  1977                           
  1978                           ;./functions.c: 539:         break;
  1979  007442  0012               	return	
  1980  007444                     l2546:
  1981  007444  0ED1               	movlw	low _colorsDetected
  1982  007446  2403               	addwf	displayColorDetected@sensor,w,c
  1983  007448  6ED9               	movwf	fsr2l,c
  1984  00744A  6ADA               	clrf	fsr2h,c
  1985  00744C  0E00               	movlw	high _colorsDetected
  1986  00744E  22DA               	addwfc	fsr2h,f,c
  1987  007450  50DF               	movf	indf2,w,c
  1988  007452  6E01               	movwf	??_displayColorDetected& (0+255),c
  1989  007454  6A02               	clrf	(??_displayColorDetected+1)& (0+255),c
  1990                           
  1991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1992                           ; Switch size 1, requested type "simple"
  1993                           ; Number of cases is 1, Range of values is 0 to 0
  1994                           ; switch strategies available:
  1995                           ; Name         Instructions Cycles
  1996                           ; simple_byte            4     3 (average)
  1997                           ;	Chosen strategy is simple_byte
  1998  007456  5002               	movf	??_displayColorDetected+1,w,c
  1999  007458  0A00               	xorlw	0	; case 0
  2000  00745A  A4D8               	btfss	status,2,c
  2001  00745C  D7ED               	goto	l319
  2002                           
  2003                           ; Switch size 1, requested type "simple"
  2004                           ; Number of cases is 5, Range of values is 66 to 110
  2005                           ; switch strategies available:
  2006                           ; Name         Instructions Cycles
  2007                           ; simple_byte           16     9 (average)
  2008                           ;	Chosen strategy is simple_byte
  2009  00745E  5001               	movf	??_displayColorDetected,w,c
  2010  007460  0A42               	xorlw	66	; case 66
  2011  007462  B4D8               	btfsc	status,2,c
  2012  007464  D7DD               	goto	l317
  2013  007466  0A05               	xorlw	5	; case 71
  2014  007468  B4D8               	btfsc	status,2,c
  2015  00746A  D7CE               	goto	l315
  2016  00746C  0A15               	xorlw	21	; case 82
  2017  00746E  B4D8               	btfsc	status,2,c
  2018  007470  D7D1               	goto	l316
  2019  007472  0A05               	xorlw	5	; case 87
  2020  007474  B4D8               	btfsc	status,2,c
  2021  007476  D7C2               	goto	l313
  2022  007478  0A39               	xorlw	57	; case 110
  2023  00747A  B4D8               	btfsc	status,2,c
  2024  00747C  D7D7               	goto	l318
  2025  00747E  D7DC               	goto	l319
  2026  007480                     __end_of_displayColorDetected:
  2027                           	opt callstack 0
  2028                           
  2029 ;; *************** function _classifyColors *****************
  2030 ;; Defined at:
  2031 ;;		line 469 in file "./functions.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  a               1   14[COMRAM] unsigned char 
  2036 ;;  sensorRanges   10    4[COMRAM] PTR unsigned char [5]
  2037 ;;		 -> RRranges(5), Rranges(5), Mranges(5), Lranges(5), 
  2038 ;;		 -> LLranges(5), 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2048 ;;      Params:         0       0       0       0       0       0       0
  2049 ;;      Locals:        11       0       0       0       0       0       0
  2050 ;;      Temps:          4       0       0       0       0       0       0
  2051 ;;      Totals:        15       0       0       0       0       0       0
  2052 ;;Total ram usage:       15 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_navigate
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text13
  2062  007638                     __ptext13:
  2063                           	opt callstack 0
  2064  007638                     _classifyColors:
  2065                           	opt callstack 28
  2066                           
  2067                           ;./functions.c: 470:     unsigned char* sensorRanges[] = {LLranges, Lranges, Mranges, Rr
      +                          anges, RRranges};
  2068                           
  2069                           ;incstack = 0
  2070  007638  EE20  F08E         	lfsr	2,classifyColors@F6028
  2071  00763C  EE10  F005         	lfsr	1,classifyColors@sensorRanges
  2072  007640  0E09               	movlw	9
  2073  007642                     u1681:
  2074  007642  CFDB FFE3          	movff	plusw2,plusw1
  2075  007646  06E8               	decf	wreg,f,c
  2076  007648  E2FC               	bc	u1681
  2077                           
  2078                           ;./functions.c: 472:     for (unsigned char a = 0; a < 5; a++){
  2079  00764A  0E00               	movlw	0
  2080  00764C  6E0F               	movwf	classifyColors@a,c
  2081  00764E                     l2520:
  2082                           
  2083                           ;./functions.c: 473:         if (sensorVals[a] < sensorRanges[a][0]){
  2084  00764E  500F               	movf	classifyColors@a,w,c
  2085  007650  0D02               	mullw	2
  2086  007652  0E05               	movlw	low classifyColors@sensorRanges
  2087  007654  24F3               	addwf	prodl,w,c
  2088  007656  6ED9               	movwf	fsr2l,c
  2089  007658  0E00               	movlw	high classifyColors@sensorRanges
  2090  00765A  20F4               	addwfc	prodh,w,c
  2091  00765C  6EDA               	movwf	fsr2h,c
  2092  00765E  CFDE F001          	movff	postinc2,??_classifyColors
  2093  007662  CFDD F002          	movff	postdec2,??_classifyColors+1
  2094  007666  C001  FFD9         	movff	??_classifyColors,fsr2l
  2095  00766A  C002  FFDA         	movff	??_classifyColors+1,fsr2h
  2096  00766E  0EB8               	movlw	low _sensorVals
  2097  007670  240F               	addwf	classifyColors@a,w,c
  2098  007672  6EE1               	movwf	fsr1l,c
  2099  007674  6AE2               	clrf	fsr1h,c
  2100  007676  0E00               	movlw	high _sensorVals
  2101  007678  22E2               	addwfc	fsr1h,f,c
  2102  00767A  50DE               	movf	postinc2,w,c
  2103  00767C  5CE6               	subwf	postinc1,w,c
  2104  00767E  B0D8               	btfsc	status,0,c
  2105  007680  D008               	goto	l2524
  2106                           
  2107                           ;./functions.c: 474:             colorsDetected[a] = 'W';
  2108  007682  0ED1               	movlw	low _colorsDetected
  2109  007684  240F               	addwf	classifyColors@a,w,c
  2110  007686  6ED9               	movwf	fsr2l,c
  2111  007688  6ADA               	clrf	fsr2h,c
  2112  00768A  0E00               	movlw	high _colorsDetected
  2113  00768C  22DA               	addwfc	fsr2h,f,c
  2114  00768E  0E57               	movlw	87
  2115  007690  D067               	goto	L1
  2116  007692                     l2524:
  2117  007692  500F               	movf	classifyColors@a,w,c
  2118  007694  0D02               	mullw	2
  2119  007696  0E05               	movlw	low classifyColors@sensorRanges
  2120  007698  24F3               	addwf	prodl,w,c
  2121  00769A  6ED9               	movwf	fsr2l,c
  2122  00769C  0E00               	movlw	high classifyColors@sensorRanges
  2123  00769E  20F4               	addwfc	prodh,w,c
  2124  0076A0  6EDA               	movwf	fsr2h,c
  2125  0076A2  EE10 F001          	lfsr	1,1
  2126  0076A6  50DE               	movf	postinc2,w,c
  2127  0076A8  26E1               	addwf	fsr1l,f,c
  2128  0076AA  50DD               	movf	postdec2,w,c
  2129  0076AC  22E2               	addwfc	fsr1h,f,c
  2130  0076AE  0EB8               	movlw	low _sensorVals
  2131  0076B0  240F               	addwf	classifyColors@a,w,c
  2132  0076B2  6ED9               	movwf	fsr2l,c
  2133  0076B4  6ADA               	clrf	fsr2h,c
  2134  0076B6  0E00               	movlw	high _sensorVals
  2135  0076B8  22DA               	addwfc	fsr2h,f,c
  2136  0076BA  50E6               	movf	postinc1,w,c
  2137  0076BC  5CDE               	subwf	postinc2,w,c
  2138  0076BE  B0D8               	btfsc	status,0,c
  2139  0076C0  D008               	goto	l2528
  2140                           
  2141                           ;./functions.c: 477:             colorsDetected[a] = 'G';
  2142  0076C2  0ED1               	movlw	low _colorsDetected
  2143  0076C4  240F               	addwf	classifyColors@a,w,c
  2144  0076C6  6ED9               	movwf	fsr2l,c
  2145  0076C8  6ADA               	clrf	fsr2h,c
  2146  0076CA  0E00               	movlw	high _colorsDetected
  2147  0076CC  22DA               	addwfc	fsr2h,f,c
  2148  0076CE  0E47               	movlw	71
  2149  0076D0  D047               	goto	L1
  2150  0076D2                     l2528:
  2151  0076D2  500F               	movf	classifyColors@a,w,c
  2152  0076D4  0D02               	mullw	2
  2153  0076D6  0E05               	movlw	low classifyColors@sensorRanges
  2154  0076D8  24F3               	addwf	prodl,w,c
  2155  0076DA  6ED9               	movwf	fsr2l,c
  2156  0076DC  0E00               	movlw	high classifyColors@sensorRanges
  2157  0076DE  20F4               	addwfc	prodh,w,c
  2158  0076E0  6EDA               	movwf	fsr2h,c
  2159  0076E2  EE10 F002          	lfsr	1,2
  2160  0076E6  50DE               	movf	postinc2,w,c
  2161  0076E8  26E1               	addwf	fsr1l,f,c
  2162  0076EA  50DD               	movf	postdec2,w,c
  2163  0076EC  22E2               	addwfc	fsr1h,f,c
  2164  0076EE  0EB8               	movlw	low _sensorVals
  2165  0076F0  240F               	addwf	classifyColors@a,w,c
  2166  0076F2  6ED9               	movwf	fsr2l,c
  2167  0076F4  6ADA               	clrf	fsr2h,c
  2168  0076F6  0E00               	movlw	high _sensorVals
  2169  0076F8  22DA               	addwfc	fsr2h,f,c
  2170  0076FA  50E6               	movf	postinc1,w,c
  2171  0076FC  5CDE               	subwf	postinc2,w,c
  2172  0076FE  B0D8               	btfsc	status,0,c
  2173  007700  D008               	goto	l2532
  2174                           
  2175                           ;./functions.c: 480:             colorsDetected[a] = 'R';
  2176  007702  0ED1               	movlw	low _colorsDetected
  2177  007704  240F               	addwf	classifyColors@a,w,c
  2178  007706  6ED9               	movwf	fsr2l,c
  2179  007708  6ADA               	clrf	fsr2h,c
  2180  00770A  0E00               	movlw	high _colorsDetected
  2181  00770C  22DA               	addwfc	fsr2h,f,c
  2182  00770E  0E52               	movlw	82
  2183  007710  D027               	goto	L1
  2184  007712                     l2532:
  2185  007712  500F               	movf	classifyColors@a,w,c
  2186  007714  0D02               	mullw	2
  2187  007716  0E05               	movlw	low classifyColors@sensorRanges
  2188  007718  24F3               	addwf	prodl,w,c
  2189  00771A  6ED9               	movwf	fsr2l,c
  2190  00771C  0E00               	movlw	high classifyColors@sensorRanges
  2191  00771E  20F4               	addwfc	prodh,w,c
  2192  007720  6EDA               	movwf	fsr2h,c
  2193  007722  EE10 F003          	lfsr	1,3
  2194  007726  50DE               	movf	postinc2,w,c
  2195  007728  26E1               	addwf	fsr1l,f,c
  2196  00772A  50DD               	movf	postdec2,w,c
  2197  00772C  22E2               	addwfc	fsr1h,f,c
  2198  00772E  0EB8               	movlw	low _sensorVals
  2199  007730  240F               	addwf	classifyColors@a,w,c
  2200  007732  6ED9               	movwf	fsr2l,c
  2201  007734  6ADA               	clrf	fsr2h,c
  2202  007736  0E00               	movlw	high _sensorVals
  2203  007738  22DA               	addwfc	fsr2h,f,c
  2204  00773A  50E6               	movf	postinc1,w,c
  2205  00773C  5CDE               	subwf	postinc2,w,c
  2206  00773E  B0D8               	btfsc	status,0,c
  2207  007740  D008               	goto	l2536
  2208                           
  2209                           ;./functions.c: 483:             colorsDetected[a] = 'B';
  2210  007742  0ED1               	movlw	low _colorsDetected
  2211  007744  240F               	addwf	classifyColors@a,w,c
  2212  007746  6ED9               	movwf	fsr2l,c
  2213  007748  6ADA               	clrf	fsr2h,c
  2214  00774A  0E00               	movlw	high _colorsDetected
  2215  00774C  22DA               	addwfc	fsr2h,f,c
  2216  00774E  0E42               	movlw	66
  2217  007750  D007               	goto	L1
  2218  007752                     l2536:
  2219                           
  2220                           ;./functions.c: 486:             colorsDetected[a] = 'n';
  2221  007752  0ED1               	movlw	low _colorsDetected
  2222  007754  240F               	addwf	classifyColors@a,w,c
  2223  007756  6ED9               	movwf	fsr2l,c
  2224  007758  6ADA               	clrf	fsr2h,c
  2225  00775A  0E00               	movlw	high _colorsDetected
  2226  00775C  22DA               	addwfc	fsr2h,f,c
  2227  00775E  0E6E               	movlw	110
  2228  007760                     L1:
  2229  007760  6EDF               	movwf	indf2,c
  2230                           
  2231                           ;./functions.c: 488:     }
  2232  007762  2A0F               	incf	classifyColors@a,f,c
  2233  007764  0E04               	movlw	4
  2234  007766  640F               	cpfsgt	classifyColors@a,c
  2235  007768  D772               	goto	l2520
  2236  00776A  0012               	return	
  2237  00776C                     __end_of_classifyColors:
  2238                           	opt callstack 0
  2239                           
  2240 ;; *************** function _calibrate *****************
  2241 ;; Defined at:
  2242 ;;		line 141 in file "./functions.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  samples         1   60[COMRAM] unsigned char 
  2247 ;;  samples         1   59[COMRAM] unsigned char 
  2248 ;;  samples         1   58[COMRAM] unsigned char 
  2249 ;;  samples         1   57[COMRAM] unsigned char 
  2250 ;;  samples         1   56[COMRAM] unsigned char 
  2251 ;;  sensors         5   51[COMRAM] unsigned char [5]
  2252 ;;  temp            1   61[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2262 ;;      Params:         0       0       0       0       0       0       0
  2263 ;;      Locals:        11       0       0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0
  2265 ;;      Totals:        11       0       0       0       0       0       0
  2266 ;;Total ram usage:       11 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    3
  2269 ;; This function calls:
  2270 ;;		_aveSensor
  2271 ;;		_oneSecDelay
  2272 ;; This function is called by:
  2273 ;;		_RCE
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text14
  2278  007A30                     __ptext14:
  2279                           	opt callstack 0
  2280  007A30                     _calibrate:
  2281                           	opt callstack 26
  2282                           
  2283                           ;./functions.c: 143:     PORTA = 0;
  2284                           
  2285                           ;incstack = 0
  2286  007A30  0E00               	movlw	0
  2287  007A32  6E80               	movwf	3968,c	;volatile
  2288                           
  2289                           ;./functions.c: 144:     unsigned char sensors[5] = {12, 8, 9, 10, 13};
  2290  007A34  EE20  F0B3         	lfsr	2,calibrate@F6000
  2291  007A38  EE10  F034         	lfsr	1,calibrate@sensors
  2292  007A3C  0E04               	movlw	4
  2293  007A3E                     u1741:
  2294  007A3E  CFDB FFE3          	movff	plusw2,plusw1
  2295  007A42  06E8               	decf	wreg,f,c
  2296  007A44  E2FC               	bc	u1741
  2297                           
  2298                           ;./functions.c: 147:     PORTD = 0b11000001;
  2299  007A46  0EC1               	movlw	193
  2300  007A48  6E83               	movwf	3971,c	;volatile
  2301                           
  2302                           ;./functions.c: 148:     for (unsigned char samples = 0; samples < 250; samples++)
  2303  007A4A  0E00               	movlw	0
  2304  007A4C  6E39               	movwf	calibrate@samples,c
  2305  007A4E                     l2592:
  2306                           
  2307                           ;./functions.c: 149:     {;./functions.c: 150:         temp = aveSensor(12);
  2308  007A4E  0E0C               	movlw	12
  2309  007A50  ECAE  F038         	call	_aveSensor
  2310  007A54  6E3E               	movwf	calibrate@temp,c
  2311                           
  2312                           ;./functions.c: 151:         if (temp >= LLranges[0])
  2313  007A56  5057               	movf	_LLranges,w,c
  2314  007A58  5C3E               	subwf	calibrate@temp,w,c
  2315  007A5A  B0D8               	btfsc	status,0,c
  2316                           
  2317                           ;./functions.c: 152:         {;./functions.c: 153:             LLranges[0] = temp;
  2318  007A5C  C03E  F057         	movff	calibrate@temp,_LLranges
  2319                           
  2320                           ;./functions.c: 155:         temp = aveSensor(10);
  2321  007A60  0E0A               	movlw	10
  2322  007A62  ECAE  F038         	call	_aveSensor
  2323  007A66  6E3E               	movwf	calibrate@temp,c
  2324                           
  2325                           ;./functions.c: 156:         if (temp >= Lranges[0])
  2326  007A68  0100               	movlb	0	; () banked
  2327  007A6A  51CC               	movf	_Lranges& (0+255),w,b
  2328  007A6C  5C3E               	subwf	calibrate@temp,w,c
  2329  007A6E  B0D8               	btfsc	status,0,c
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;./functions.c: 157:         {;./functions.c: 158:             Lranges[0] = temp;
  2333  007A70  C03E  F0CC         	movff	calibrate@temp,_Lranges
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;./functions.c: 160:         temp = aveSensor(8);
  2337  007A74  0E08               	movlw	8
  2338  007A76  ECAE  F038         	call	_aveSensor
  2339  007A7A  6E3E               	movwf	calibrate@temp,c
  2340                           
  2341                           ;./functions.c: 161:         if (temp >= LLranges[0])
  2342  007A7C  5057               	movf	_LLranges,w,c
  2343  007A7E  5C3E               	subwf	calibrate@temp,w,c
  2344  007A80  B0D8               	btfsc	status,0,c
  2345                           
  2346                           ;./functions.c: 162:         {;./functions.c: 163:             Mranges[0] = temp;
  2347  007A82  C03E  F0C7         	movff	calibrate@temp,_Mranges
  2348                           
  2349                           ;./functions.c: 165:         temp = aveSensor(9);
  2350  007A86  0E09               	movlw	9
  2351  007A88  ECAE  F038         	call	_aveSensor
  2352  007A8C  6E3E               	movwf	calibrate@temp,c
  2353                           
  2354                           ;./functions.c: 166:         if (temp >= LLranges[0])
  2355  007A8E  5057               	movf	_LLranges,w,c
  2356  007A90  5C3E               	subwf	calibrate@temp,w,c
  2357  007A92  B0D8               	btfsc	status,0,c
  2358                           
  2359                           ;./functions.c: 167:         {;./functions.c: 168:             Rranges[0] = temp;
  2360  007A94  C03E  F0C2         	movff	calibrate@temp,_Rranges
  2361                           
  2362                           ;./functions.c: 170:         temp = aveSensor(13);
  2363  007A98  0E0D               	movlw	13
  2364  007A9A  ECAE  F038         	call	_aveSensor
  2365  007A9E  6E3E               	movwf	calibrate@temp,c
  2366                           
  2367                           ;./functions.c: 171:         if (temp >= LLranges[0])
  2368  007AA0  5057               	movf	_LLranges,w,c
  2369  007AA2  5C3E               	subwf	calibrate@temp,w,c
  2370  007AA4  B0D8               	btfsc	status,0,c
  2371                           
  2372                           ;./functions.c: 172:         {;./functions.c: 173:             RRranges[0] = temp;
  2373  007AA6  C03E  F0BD         	movff	calibrate@temp,_RRranges
  2374                           
  2375                           ;./functions.c: 175:     }
  2376  007AAA  2A39               	incf	calibrate@samples,f,c
  2377  007AAC  0EF9               	movlw	249
  2378  007AAE  6439               	cpfsgt	calibrate@samples,c
  2379  007AB0  D7CE               	goto	l2592
  2380                           
  2381                           ;./functions.c: 176:     PORTAbits.RA0 = 1;
  2382  007AB2  8080               	bsf	3968,0,c	;volatile
  2383                           
  2384                           ;./functions.c: 177:     oneSecDelay();
  2385  007AB4  ECFE  F037         	call	_oneSecDelay	;wreg free
  2386                           
  2387                           ;./functions.c: 178:     oneSecDelay();
  2388  007AB8  ECFE  F037         	call	_oneSecDelay	;wreg free
  2389                           
  2390                           ;./functions.c: 179:     oneSecDelay();
  2391  007ABC  ECFE  F037         	call	_oneSecDelay	;wreg free
  2392                           
  2393                           ;./functions.c: 181:     PORTD = 0b10000010;
  2394  007AC0  0E82               	movlw	130
  2395  007AC2  6E83               	movwf	3971,c	;volatile
  2396                           
  2397                           ;./functions.c: 182:     for (unsigned char samples = 0; samples < 250; samples++)
  2398  007AC4  0E00               	movlw	0
  2399  007AC6  6E3A               	movwf	calibrate@samples_1097,c
  2400  007AC8                     l2636:
  2401                           
  2402                           ;./functions.c: 183:     {;./functions.c: 184:         temp = aveSensor(12);
  2403  007AC8  0E0C               	movlw	12
  2404  007ACA  ECAE  F038         	call	_aveSensor
  2405  007ACE  6E3E               	movwf	calibrate@temp,c
  2406                           
  2407                           ;./functions.c: 185:         if (temp >= LLranges[1])
  2408  007AD0  5058               	movf	_LLranges+1,w,c
  2409  007AD2  5C3E               	subwf	calibrate@temp,w,c
  2410  007AD4  B0D8               	btfsc	status,0,c
  2411                           
  2412                           ;./functions.c: 186:         {;./functions.c: 187:             LLranges[1] = temp;
  2413  007AD6  C03E  F058         	movff	calibrate@temp,_LLranges+1
  2414                           
  2415                           ;./functions.c: 189:         temp = aveSensor(10);
  2416  007ADA  0E0A               	movlw	10
  2417  007ADC  ECAE  F038         	call	_aveSensor
  2418  007AE0  6E3E               	movwf	calibrate@temp,c
  2419                           
  2420                           ;./functions.c: 190:         if (temp >= Lranges[1])
  2421  007AE2  0100               	movlb	0	; () banked
  2422  007AE4  51CD               	movf	(_Lranges+1)& (0+255),w,b
  2423  007AE6  5C3E               	subwf	calibrate@temp,w,c
  2424  007AE8  B0D8               	btfsc	status,0,c
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;./functions.c: 191:         {;./functions.c: 192:             Lranges[1] = temp;
  2428  007AEA  C03E  F0CD         	movff	calibrate@temp,_Lranges+1
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;./functions.c: 194:         temp = aveSensor(8);
  2432  007AEE  0E08               	movlw	8
  2433  007AF0  ECAE  F038         	call	_aveSensor
  2434  007AF4  6E3E               	movwf	calibrate@temp,c
  2435                           
  2436                           ;./functions.c: 195:         if (temp >= LLranges[1])
  2437  007AF6  5058               	movf	_LLranges+1,w,c
  2438  007AF8  5C3E               	subwf	calibrate@temp,w,c
  2439  007AFA  B0D8               	btfsc	status,0,c
  2440                           
  2441                           ;./functions.c: 196:         {;./functions.c: 197:             Mranges[1] = temp;
  2442  007AFC  C03E  F0C8         	movff	calibrate@temp,_Mranges+1
  2443                           
  2444                           ;./functions.c: 199:         temp = aveSensor(9);
  2445  007B00  0E09               	movlw	9
  2446  007B02  ECAE  F038         	call	_aveSensor
  2447  007B06  6E3E               	movwf	calibrate@temp,c
  2448                           
  2449                           ;./functions.c: 200:         if (temp >= LLranges[1])
  2450  007B08  5058               	movf	_LLranges+1,w,c
  2451  007B0A  5C3E               	subwf	calibrate@temp,w,c
  2452  007B0C  B0D8               	btfsc	status,0,c
  2453                           
  2454                           ;./functions.c: 201:         {;./functions.c: 202:             Rranges[1] = temp;
  2455  007B0E  C03E  F0C3         	movff	calibrate@temp,_Rranges+1
  2456                           
  2457                           ;./functions.c: 204:         temp = aveSensor(13);
  2458  007B12  0E0D               	movlw	13
  2459  007B14  ECAE  F038         	call	_aveSensor
  2460  007B18  6E3E               	movwf	calibrate@temp,c
  2461                           
  2462                           ;./functions.c: 205:         if (temp >= LLranges[1])
  2463  007B1A  5058               	movf	_LLranges+1,w,c
  2464  007B1C  5C3E               	subwf	calibrate@temp,w,c
  2465  007B1E  B0D8               	btfsc	status,0,c
  2466                           
  2467                           ;./functions.c: 206:         {;./functions.c: 207:             RRranges[1] = temp;
  2468  007B20  C03E  F0BE         	movff	calibrate@temp,_RRranges+1
  2469                           
  2470                           ;./functions.c: 209:     }
  2471  007B24  2A3A               	incf	calibrate@samples_1097,f,c
  2472  007B26  0EF9               	movlw	249
  2473  007B28  643A               	cpfsgt	calibrate@samples_1097,c
  2474  007B2A  D7CE               	goto	l2636
  2475                           
  2476                           ;./functions.c: 210:     PORTAbits.RA1 = 1;
  2477  007B2C  8280               	bsf	3968,1,c	;volatile
  2478                           
  2479                           ;./functions.c: 211:     oneSecDelay();
  2480  007B2E  ECFE  F037         	call	_oneSecDelay	;wreg free
  2481                           
  2482                           ;./functions.c: 212:     oneSecDelay();
  2483  007B32  ECFE  F037         	call	_oneSecDelay	;wreg free
  2484                           
  2485                           ;./functions.c: 213:     oneSecDelay();
  2486  007B36  ECFE  F037         	call	_oneSecDelay	;wreg free
  2487                           
  2488                           ;./functions.c: 215:     PORTD = 0b10001000;
  2489  007B3A  0E88               	movlw	136
  2490  007B3C  6E83               	movwf	3971,c	;volatile
  2491                           
  2492                           ;./functions.c: 216:     for (unsigned char samples = 0; samples < 250; samples++)
  2493  007B3E  0E00               	movlw	0
  2494  007B40  6E3B               	movwf	calibrate@samples_1098,c
  2495  007B42                     l2680:
  2496                           
  2497                           ;./functions.c: 217:     {;./functions.c: 218:         temp = aveSensor(12);
  2498  007B42  0E0C               	movlw	12
  2499  007B44  ECAE  F038         	call	_aveSensor
  2500  007B48  6E3E               	movwf	calibrate@temp,c
  2501                           
  2502                           ;./functions.c: 219:         if (temp >= LLranges[2])
  2503  007B4A  5059               	movf	_LLranges+2,w,c
  2504  007B4C  5C3E               	subwf	calibrate@temp,w,c
  2505  007B4E  B0D8               	btfsc	status,0,c
  2506                           
  2507                           ;./functions.c: 220:         {;./functions.c: 221:             LLranges[2] = temp;
  2508  007B50  C03E  F059         	movff	calibrate@temp,_LLranges+2
  2509                           
  2510                           ;./functions.c: 223:         temp = aveSensor(10);
  2511  007B54  0E0A               	movlw	10
  2512  007B56  ECAE  F038         	call	_aveSensor
  2513  007B5A  6E3E               	movwf	calibrate@temp,c
  2514                           
  2515                           ;./functions.c: 224:         if (temp >= Lranges[2])
  2516  007B5C  0100               	movlb	0	; () banked
  2517  007B5E  51CE               	movf	(_Lranges+2)& (0+255),w,b
  2518  007B60  5C3E               	subwf	calibrate@temp,w,c
  2519  007B62  B0D8               	btfsc	status,0,c
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;./functions.c: 225:         {;./functions.c: 226:             Lranges[2] = temp;
  2523  007B64  C03E  F0CE         	movff	calibrate@temp,_Lranges+2
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;./functions.c: 228:         temp = aveSensor(8);
  2527  007B68  0E08               	movlw	8
  2528  007B6A  ECAE  F038         	call	_aveSensor
  2529  007B6E  6E3E               	movwf	calibrate@temp,c
  2530                           
  2531                           ;./functions.c: 229:         if (temp >= LLranges[2])
  2532  007B70  5059               	movf	_LLranges+2,w,c
  2533  007B72  5C3E               	subwf	calibrate@temp,w,c
  2534  007B74  B0D8               	btfsc	status,0,c
  2535                           
  2536                           ;./functions.c: 230:         {;./functions.c: 231:             Mranges[2] = temp;
  2537  007B76  C03E  F0C9         	movff	calibrate@temp,_Mranges+2
  2538                           
  2539                           ;./functions.c: 233:         temp = aveSensor(9);
  2540  007B7A  0E09               	movlw	9
  2541  007B7C  ECAE  F038         	call	_aveSensor
  2542  007B80  6E3E               	movwf	calibrate@temp,c
  2543                           
  2544                           ;./functions.c: 234:         if (temp >= LLranges[2])
  2545  007B82  5059               	movf	_LLranges+2,w,c
  2546  007B84  5C3E               	subwf	calibrate@temp,w,c
  2547  007B86  B0D8               	btfsc	status,0,c
  2548                           
  2549                           ;./functions.c: 235:         {;./functions.c: 236:             Rranges[2] = temp;
  2550  007B88  C03E  F0C4         	movff	calibrate@temp,_Rranges+2
  2551                           
  2552                           ;./functions.c: 238:         temp = aveSensor(13);
  2553  007B8C  0E0D               	movlw	13
  2554  007B8E  ECAE  F038         	call	_aveSensor
  2555  007B92  6E3E               	movwf	calibrate@temp,c
  2556                           
  2557                           ;./functions.c: 239:         if (temp >= LLranges[2])
  2558  007B94  5059               	movf	_LLranges+2,w,c
  2559  007B96  5C3E               	subwf	calibrate@temp,w,c
  2560  007B98  B0D8               	btfsc	status,0,c
  2561                           
  2562                           ;./functions.c: 240:         {;./functions.c: 241:             RRranges[2] = temp;
  2563  007B9A  C03E  F0BF         	movff	calibrate@temp,_RRranges+2
  2564                           
  2565                           ;./functions.c: 243:     }
  2566  007B9E  2A3B               	incf	calibrate@samples_1098,f,c
  2567  007BA0  0EF9               	movlw	249
  2568  007BA2  643B               	cpfsgt	calibrate@samples_1098,c
  2569  007BA4  D7CE               	goto	l2680
  2570                           
  2571                           ;./functions.c: 244:     PORTAbits.RA2 = 1;
  2572  007BA6  8480               	bsf	3968,2,c	;volatile
  2573                           
  2574                           ;./functions.c: 245:     oneSecDelay();
  2575  007BA8  ECFE  F037         	call	_oneSecDelay	;wreg free
  2576                           
  2577                           ;./functions.c: 246:     oneSecDelay();
  2578  007BAC  ECFE  F037         	call	_oneSecDelay	;wreg free
  2579                           
  2580                           ;./functions.c: 247:     oneSecDelay();
  2581  007BB0  ECFE  F037         	call	_oneSecDelay	;wreg free
  2582                           
  2583                           ;./functions.c: 249:     PORTD = 0b10000000;
  2584  007BB4  0E80               	movlw	128
  2585  007BB6  6E83               	movwf	3971,c	;volatile
  2586                           
  2587                           ;./functions.c: 250:     for (unsigned char samples = 0; samples < 250; samples++)
  2588  007BB8  0E00               	movlw	0
  2589  007BBA  6E3C               	movwf	calibrate@samples_1099,c
  2590  007BBC                     l2724:
  2591                           
  2592                           ;./functions.c: 251:     {;./functions.c: 252:         temp = aveSensor(12);
  2593  007BBC  0E0C               	movlw	12
  2594  007BBE  ECAE  F038         	call	_aveSensor
  2595  007BC2  6E3E               	movwf	calibrate@temp,c
  2596                           
  2597                           ;./functions.c: 253:         if (temp >= LLranges[3])
  2598  007BC4  505A               	movf	_LLranges+3,w,c
  2599  007BC6  5C3E               	subwf	calibrate@temp,w,c
  2600  007BC8  B0D8               	btfsc	status,0,c
  2601                           
  2602                           ;./functions.c: 254:         {;./functions.c: 255:             LLranges[3] = temp;
  2603  007BCA  C03E  F05A         	movff	calibrate@temp,_LLranges+3
  2604                           
  2605                           ;./functions.c: 257:         temp = aveSensor(10);
  2606  007BCE  0E0A               	movlw	10
  2607  007BD0  ECAE  F038         	call	_aveSensor
  2608  007BD4  6E3E               	movwf	calibrate@temp,c
  2609                           
  2610                           ;./functions.c: 258:         if (temp >= Lranges[3])
  2611  007BD6  0100               	movlb	0	; () banked
  2612  007BD8  51CF               	movf	(_Lranges+3)& (0+255),w,b
  2613  007BDA  5C3E               	subwf	calibrate@temp,w,c
  2614  007BDC  B0D8               	btfsc	status,0,c
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;./functions.c: 259:         {;./functions.c: 260:             Lranges[3] = temp;
  2618  007BDE  C03E  F0CF         	movff	calibrate@temp,_Lranges+3
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;./functions.c: 262:         temp = aveSensor(8);
  2622  007BE2  0E08               	movlw	8
  2623  007BE4  ECAE  F038         	call	_aveSensor
  2624  007BE8  6E3E               	movwf	calibrate@temp,c
  2625                           
  2626                           ;./functions.c: 263:         if (temp >= LLranges[3])
  2627  007BEA  505A               	movf	_LLranges+3,w,c
  2628  007BEC  5C3E               	subwf	calibrate@temp,w,c
  2629  007BEE  B0D8               	btfsc	status,0,c
  2630                           
  2631                           ;./functions.c: 264:         {;./functions.c: 265:             Mranges[3] = temp;
  2632  007BF0  C03E  F0CA         	movff	calibrate@temp,_Mranges+3
  2633                           
  2634                           ;./functions.c: 267:         temp = aveSensor(9);
  2635  007BF4  0E09               	movlw	9
  2636  007BF6  ECAE  F038         	call	_aveSensor
  2637  007BFA  6E3E               	movwf	calibrate@temp,c
  2638                           
  2639                           ;./functions.c: 268:         if (temp >= LLranges[3])
  2640  007BFC  505A               	movf	_LLranges+3,w,c
  2641  007BFE  5C3E               	subwf	calibrate@temp,w,c
  2642  007C00  B0D8               	btfsc	status,0,c
  2643                           
  2644                           ;./functions.c: 269:         {;./functions.c: 270:             Rranges[3] = temp;
  2645  007C02  C03E  F0C5         	movff	calibrate@temp,_Rranges+3
  2646                           
  2647                           ;./functions.c: 272:         temp = aveSensor(13);
  2648  007C06  0E0D               	movlw	13
  2649  007C08  ECAE  F038         	call	_aveSensor
  2650  007C0C  6E3E               	movwf	calibrate@temp,c
  2651                           
  2652                           ;./functions.c: 273:         if (temp >= LLranges[3])
  2653  007C0E  505A               	movf	_LLranges+3,w,c
  2654  007C10  5C3E               	subwf	calibrate@temp,w,c
  2655  007C12  B0D8               	btfsc	status,0,c
  2656                           
  2657                           ;./functions.c: 274:         {;./functions.c: 275:             RRranges[3] = temp;
  2658  007C14  C03E  F0C0         	movff	calibrate@temp,_RRranges+3
  2659                           
  2660                           ;./functions.c: 277:     }
  2661  007C18  2A3C               	incf	calibrate@samples_1099,f,c
  2662  007C1A  0EF9               	movlw	249
  2663  007C1C  643C               	cpfsgt	calibrate@samples_1099,c
  2664  007C1E  D7CE               	goto	l2724
  2665                           
  2666                           ;./functions.c: 278:     PORTAbits.RA3 = 1;
  2667  007C20  8680               	bsf	3968,3,c	;volatile
  2668                           
  2669                           ;./functions.c: 279:     oneSecDelay();
  2670  007C22  ECFE  F037         	call	_oneSecDelay	;wreg free
  2671                           
  2672                           ;./functions.c: 280:     oneSecDelay();
  2673  007C26  ECFE  F037         	call	_oneSecDelay	;wreg free
  2674                           
  2675                           ;./functions.c: 281:     oneSecDelay();
  2676  007C2A  ECFE  F037         	call	_oneSecDelay	;wreg free
  2677                           
  2678                           ;./functions.c: 283:     PORTD = 0b11001000;
  2679  007C2E  0EC8               	movlw	200
  2680  007C30  6E83               	movwf	3971,c	;volatile
  2681                           
  2682                           ;./functions.c: 284:     for (unsigned char samples = 0; samples < 250; samples++)
  2683  007C32  0E00               	movlw	0
  2684  007C34  6E3D               	movwf	calibrate@samples_1100,c
  2685  007C36                     l2768:
  2686                           
  2687                           ;./functions.c: 285:     {;./functions.c: 286:         temp = aveSensor(12);
  2688  007C36  0E0C               	movlw	12
  2689  007C38  ECAE  F038         	call	_aveSensor
  2690  007C3C  6E3E               	movwf	calibrate@temp,c
  2691                           
  2692                           ;./functions.c: 287:         if (temp >= LLranges[4])
  2693  007C3E  505B               	movf	_LLranges+4,w,c
  2694  007C40  5C3E               	subwf	calibrate@temp,w,c
  2695  007C42  B0D8               	btfsc	status,0,c
  2696                           
  2697                           ;./functions.c: 288:         {;./functions.c: 289:             LLranges[4] = temp;
  2698  007C44  C03E  F05B         	movff	calibrate@temp,_LLranges+4
  2699                           
  2700                           ;./functions.c: 291:         temp = aveSensor(10);
  2701  007C48  0E0A               	movlw	10
  2702  007C4A  ECAE  F038         	call	_aveSensor
  2703  007C4E  6E3E               	movwf	calibrate@temp,c
  2704                           
  2705                           ;./functions.c: 292:         if (temp >= Lranges[4])
  2706  007C50  0100               	movlb	0	; () banked
  2707  007C52  51D0               	movf	(_Lranges+4)& (0+255),w,b
  2708  007C54  5C3E               	subwf	calibrate@temp,w,c
  2709  007C56  B0D8               	btfsc	status,0,c
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;./functions.c: 293:         {;./functions.c: 294:             Lranges[4] = temp;
  2713  007C58  C03E  F0D0         	movff	calibrate@temp,_Lranges+4
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;./functions.c: 296:         temp = aveSensor(8);
  2717  007C5C  0E08               	movlw	8
  2718  007C5E  ECAE  F038         	call	_aveSensor
  2719  007C62  6E3E               	movwf	calibrate@temp,c
  2720                           
  2721                           ;./functions.c: 297:         if (temp >= LLranges[4])
  2722  007C64  505B               	movf	_LLranges+4,w,c
  2723  007C66  5C3E               	subwf	calibrate@temp,w,c
  2724  007C68  B0D8               	btfsc	status,0,c
  2725                           
  2726                           ;./functions.c: 298:         {;./functions.c: 299:             Mranges[4] = temp;
  2727  007C6A  C03E  F0CB         	movff	calibrate@temp,_Mranges+4
  2728                           
  2729                           ;./functions.c: 301:         temp = aveSensor(9);
  2730  007C6E  0E09               	movlw	9
  2731  007C70  ECAE  F038         	call	_aveSensor
  2732  007C74  6E3E               	movwf	calibrate@temp,c
  2733                           
  2734                           ;./functions.c: 302:         if (temp >= LLranges[4])
  2735  007C76  505B               	movf	_LLranges+4,w,c
  2736  007C78  5C3E               	subwf	calibrate@temp,w,c
  2737  007C7A  B0D8               	btfsc	status,0,c
  2738                           
  2739                           ;./functions.c: 303:         {;./functions.c: 304:             Rranges[4] = temp;
  2740  007C7C  C03E  F0C6         	movff	calibrate@temp,_Rranges+4
  2741                           
  2742                           ;./functions.c: 306:         temp = aveSensor(13);
  2743  007C80  0E0D               	movlw	13
  2744  007C82  ECAE  F038         	call	_aveSensor
  2745  007C86  6E3E               	movwf	calibrate@temp,c
  2746                           
  2747                           ;./functions.c: 307:         if (temp >= LLranges[4])
  2748  007C88  505B               	movf	_LLranges+4,w,c
  2749  007C8A  5C3E               	subwf	calibrate@temp,w,c
  2750  007C8C  B0D8               	btfsc	status,0,c
  2751                           
  2752                           ;./functions.c: 308:         {;./functions.c: 309:             RRranges[4] = temp;
  2753  007C8E  C03E  F0C1         	movff	calibrate@temp,_RRranges+4
  2754                           
  2755                           ;./functions.c: 311:     }
  2756  007C92  2A3D               	incf	calibrate@samples_1100,f,c
  2757  007C94  0EF9               	movlw	249
  2758  007C96  643D               	cpfsgt	calibrate@samples_1100,c
  2759  007C98  D7CE               	goto	l2768
  2760                           
  2761                           ;./functions.c: 312:     PORTAbits.RA4 = 1;
  2762  007C9A  8880               	bsf	3968,4,c	;volatile
  2763                           
  2764                           ;./functions.c: 313:     oneSecDelay();
  2765  007C9C  ECFE  F037         	call	_oneSecDelay	;wreg free
  2766                           
  2767                           ;./functions.c: 314:     oneSecDelay();
  2768  007CA0  ECFE  F037         	call	_oneSecDelay	;wreg free
  2769                           
  2770                           ;./functions.c: 315:     oneSecDelay();
  2771  007CA4  ECFE  F037         	call	_oneSecDelay	;wreg free
  2772                           
  2773                           ;./functions.c: 317:     PORTA = 0;
  2774  007CA8  0E00               	movlw	0
  2775  007CAA  6E80               	movwf	3968,c	;volatile
  2776  007CAC  0012               	return		;funcret
  2777  007CAE                     __end_of_calibrate:
  2778                           	opt callstack 0
  2779                           
  2780 ;; *************** function _oneSecDelay *****************
  2781 ;; Defined at:
  2782 ;;		line 697 in file "./functions.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  a               1   50[COMRAM] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2796 ;;      Params:         0       0       0       0       0       0       0
  2797 ;;      Locals:         1       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0
  2799 ;;      Totals:         1       0       0       0       0       0       0
  2800 ;;Total ram usage:        1 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    2
  2803 ;; This function calls:
  2804 ;;		_msDelay
  2805 ;; This function is called by:
  2806 ;;		_calibrate
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text15
  2811  006FFC                     __ptext15:
  2812                           	opt callstack 0
  2813  006FFC                     _oneSecDelay:
  2814                           	opt callstack 26
  2815                           
  2816                           ;./functions.c: 699:     for (unsigned char a = 0; a < 15; a++)
  2817                           
  2818                           ;incstack = 0
  2819  006FFC  0E00               	movlw	0
  2820  006FFE  6E33               	movwf	oneSecDelay@a,c
  2821  007000                     l2456:
  2822                           
  2823                           ;./functions.c: 700:     {;./functions.c: 701:         msDelay(63);
  2824  007000  0E3F               	movlw	63
  2825  007002  EC4E  F039         	call	_msDelay
  2826                           
  2827                           ;./functions.c: 702:     }
  2828  007006  2A33               	incf	oneSecDelay@a,f,c
  2829  007008  0E0E               	movlw	14
  2830  00700A  6433               	cpfsgt	oneSecDelay@a,c
  2831  00700C  D7F9               	goto	l2456
  2832  00700E  0012               	return	
  2833  007010                     __end_of_oneSecDelay:
  2834                           	opt callstack 0
  2835                           
  2836 ;; *************** function _msDelay *****************
  2837 ;; Defined at:
  2838 ;;		line 707 in file "./functions.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  delayInMs       1    wreg     unsigned char 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  delayInMs       1   49[COMRAM] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2852 ;;      Params:         0       0       0       0       0       0       0
  2853 ;;      Locals:         1       0       0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0
  2855 ;;      Totals:         1       0       0       0       0       0       0
  2856 ;;Total ram usage:        1 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    1
  2859 ;; This function calls:
  2860 ;;		___flmul
  2861 ;;		___fltol
  2862 ;;		___xxtofl
  2863 ;; This function is called by:
  2864 ;;		_pyCal
  2865 ;;		_oneSecDelay
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text16
  2870  00729C                     __ptext16:
  2871                           	opt callstack 0
  2872  00729C                     _msDelay:
  2873                           	opt callstack 27
  2874                           
  2875                           ;incstack = 0
  2876                           ;msDelay@delayInMs stored from wreg
  2877  00729C  6E32               	movwf	msDelay@delayInMs,c
  2878                           
  2879                           ;./functions.c: 707: void msDelay(unsigned char delayInMs);./functions.c: 708: {;./funct
      +                          ions.c: 709:     TMR6 = 0;
  2880  00729E  0E00               	movlw	0
  2881  0072A0  010F               	movlb	15	; () banked
  2882  0072A2  6F4C               	movwf	76,b	;volatile
  2883                           
  2884                           ; BSR set to: 15
  2885                           ;./functions.c: 710:     PR6 = 3.90625 * delayInMs;
  2886  0072A4  0E00               	movlw	0
  2887  0072A6  6E13               	movwf	___flmul@a,c
  2888  0072A8  0E00               	movlw	0
  2889  0072AA  6E14               	movwf	___flmul@a+1,c
  2890  0072AC  0E7A               	movlw	122
  2891  0072AE  6E15               	movwf	___flmul@a+2,c
  2892  0072B0  0E40               	movlw	64
  2893  0072B2  6E16               	movwf	___flmul@a+3,c
  2894  0072B4  5032               	movf	msDelay@delayInMs,w,c
  2895  0072B6  6E01               	movwf	___xxtofl@val,c
  2896  0072B8  6A02               	clrf	___xxtofl@val+1,c
  2897  0072BA  6A03               	clrf	___xxtofl@val+2,c
  2898  0072BC  6A04               	clrf	___xxtofl@val+3,c
  2899  0072BE  0E01               	movlw	1
  2900  0072C0  ECB6  F03B         	call	___xxtofl
  2901  0072C4  C001  F00F         	movff	?___xxtofl,___flmul@b
  2902  0072C8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2903  0072CC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2904  0072D0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2905  0072D4  EC57  F03E         	call	___flmul	;wreg free
  2906  0072D8  C00F  F028         	movff	?___flmul,___fltol@f1
  2907  0072DC  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  2908  0072E0  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  2909  0072E4  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  2910  0072E8  EC40  F03A         	call	___fltol	;wreg free
  2911  0072EC  5028               	movf	?___fltol,w,c
  2912  0072EE  010F               	movlb	15	; () banked
  2913  0072F0  6F4B               	movwf	75,b	;volatile
  2914                           
  2915                           ; BSR set to: 15
  2916                           ;./functions.c: 711:     T6CON = 0xFF;
  2917  0072F2  694A               	setf	74,b	;volatile
  2918  0072F4                     l389:
  2919  0072F4  A47E               	btfss	3966,2,c	;volatile
  2920  0072F6  D7FE               	goto	l389
  2921                           
  2922                           ;./functions.c: 714:     PIR5bits.TMR6IF = 0;
  2923  0072F8  947E               	bcf	3966,2,c	;volatile
  2924                           
  2925                           ;./functions.c: 715:     T6CON = 0;
  2926  0072FA  0E00               	movlw	0
  2927  0072FC  010F               	movlb	15	; () banked
  2928  0072FE  6F4A               	movwf	74,b	;volatile
  2929                           
  2930                           ; BSR set to: 15
  2931  007300  0012               	return		;funcret
  2932  007302                     __end_of_msDelay:
  2933                           	opt callstack 0
  2934                           
  2935 ;; *************** function ___xxtofl *****************
  2936 ;; Defined at:
  2937 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  sign            1    wreg     unsigned char 
  2940 ;;  val             4    0[COMRAM] long 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  sign            1    8[COMRAM] unsigned char 
  2943 ;;  arg             4   10[COMRAM] unsigned long 
  2944 ;;  exp             1    9[COMRAM] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  4    0[COMRAM] unsigned char 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2954 ;;      Params:         4       0       0       0       0       0       0
  2955 ;;      Locals:         6       0       0       0       0       0       0
  2956 ;;      Temps:          4       0       0       0       0       0       0
  2957 ;;      Totals:        14       0       0       0       0       0       0
  2958 ;;Total ram usage:       14 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_msDelay
  2964 ;;		_timer6Setup
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text17
  2969  00776C                     __ptext17:
  2970                           	opt callstack 0
  2971  00776C                     ___xxtofl:
  2972                           	opt callstack 27
  2973                           
  2974                           ; BSR set to: 15
  2975                           ;incstack = 0
  2976                           ;___xxtofl@sign stored from wreg
  2977  00776C  6E09               	movwf	___xxtofl@sign,c
  2978  00776E  5009               	movf	___xxtofl@sign,w,c
  2979  007770  A4D8               	btfss	status,2,c
  2980  007772  AE04               	btfss	___xxtofl@val+3,7,c
  2981  007774  D01A               	goto	l1094
  2982  007776  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2983  00777A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2984  00777E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2985  007782  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2986  007786  1E05               	comf	??___xxtofl,f,c
  2987  007788  1E06               	comf	??___xxtofl+1,f,c
  2988  00778A  1E07               	comf	??___xxtofl+2,f,c
  2989  00778C  1E08               	comf	??___xxtofl+3,f,c
  2990  00778E  2A05               	incf	??___xxtofl,f,c
  2991  007790  0E00               	movlw	0
  2992  007792  2206               	addwfc	??___xxtofl+1,f,c
  2993  007794  2207               	addwfc	??___xxtofl+2,f,c
  2994  007796  2208               	addwfc	??___xxtofl+3,f,c
  2995  007798  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2996  00779C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2997  0077A0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2998  0077A4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2999  0077A8  D008               	goto	l2364
  3000  0077AA                     l1094:
  3001  0077AA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3002  0077AE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3003  0077B2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3004  0077B6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3005  0077BA                     l2364:
  3006  0077BA  5001               	movf	___xxtofl@val,w,c
  3007  0077BC  1002               	iorwf	___xxtofl@val+1,w,c
  3008  0077BE  1003               	iorwf	___xxtofl@val+2,w,c
  3009  0077C0  1004               	iorwf	___xxtofl@val+3,w,c
  3010  0077C2  A4D8               	btfss	status,2,c
  3011  0077C4  D009               	goto	l2370
  3012  0077C6  0E00               	movlw	0
  3013  0077C8  6E01               	movwf	?___xxtofl,c
  3014  0077CA  0E00               	movlw	0
  3015  0077CC  6E02               	movwf	?___xxtofl+1,c
  3016  0077CE  0E00               	movlw	0
  3017  0077D0  6E03               	movwf	?___xxtofl+2,c
  3018  0077D2  0E00               	movlw	0
  3019  0077D4  6E04               	movwf	?___xxtofl+3,c
  3020  0077D6  0012               	return	
  3021  0077D8                     l2370:
  3022  0077D8  0E96               	movlw	150
  3023  0077DA  6E0A               	movwf	___xxtofl@exp,c
  3024  0077DC  D006               	goto	l2374
  3025  0077DE                     l2372:
  3026  0077DE  2A0A               	incf	___xxtofl@exp,f,c
  3027  0077E0  90D8               	bcf	status,0,c
  3028  0077E2  320E               	rrcf	___xxtofl@arg+3,f,c
  3029  0077E4  320D               	rrcf	___xxtofl@arg+2,f,c
  3030  0077E6  320C               	rrcf	___xxtofl@arg+1,f,c
  3031  0077E8  320B               	rrcf	___xxtofl@arg,f,c
  3032  0077EA                     l2374:
  3033  0077EA  0E00               	movlw	0
  3034  0077EC  140B               	andwf	___xxtofl@arg,w,c
  3035  0077EE  6E05               	movwf	??___xxtofl& (0+255),c
  3036  0077F0  0E00               	movlw	0
  3037  0077F2  140C               	andwf	___xxtofl@arg+1,w,c
  3038  0077F4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3039  0077F6  0E00               	movlw	0
  3040  0077F8  140D               	andwf	___xxtofl@arg+2,w,c
  3041  0077FA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3042  0077FC  0EFE               	movlw	254
  3043  0077FE  140E               	andwf	___xxtofl@arg+3,w,c
  3044  007800  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3045  007802  5005               	movf	??___xxtofl,w,c
  3046  007804  1006               	iorwf	??___xxtofl+1,w,c
  3047  007806  1007               	iorwf	??___xxtofl+2,w,c
  3048  007808  1008               	iorwf	??___xxtofl+3,w,c
  3049  00780A  B4D8               	btfsc	status,2,c
  3050  00780C  D00D               	goto	l1101
  3051  00780E  D7E7               	goto	l2372
  3052  007810                     l2376:
  3053  007810  2A0A               	incf	___xxtofl@exp,f,c
  3054  007812  0E01               	movlw	1
  3055  007814  260B               	addwf	___xxtofl@arg,f,c
  3056  007816  0E00               	movlw	0
  3057  007818  220C               	addwfc	___xxtofl@arg+1,f,c
  3058  00781A  220D               	addwfc	___xxtofl@arg+2,f,c
  3059  00781C  220E               	addwfc	___xxtofl@arg+3,f,c
  3060  00781E  90D8               	bcf	status,0,c
  3061  007820  320E               	rrcf	___xxtofl@arg+3,f,c
  3062  007822  320D               	rrcf	___xxtofl@arg+2,f,c
  3063  007824  320C               	rrcf	___xxtofl@arg+1,f,c
  3064  007826  320B               	rrcf	___xxtofl@arg,f,c
  3065  007828                     l1101:
  3066  007828  0E00               	movlw	0
  3067  00782A  140B               	andwf	___xxtofl@arg,w,c
  3068  00782C  6E05               	movwf	??___xxtofl& (0+255),c
  3069  00782E  0E00               	movlw	0
  3070  007830  140C               	andwf	___xxtofl@arg+1,w,c
  3071  007832  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  3072  007834  0E00               	movlw	0
  3073  007836  140D               	andwf	___xxtofl@arg+2,w,c
  3074  007838  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  3075  00783A  0EFF               	movlw	255
  3076  00783C  140E               	andwf	___xxtofl@arg+3,w,c
  3077  00783E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  3078  007840  5005               	movf	??___xxtofl,w,c
  3079  007842  1006               	iorwf	??___xxtofl+1,w,c
  3080  007844  1007               	iorwf	??___xxtofl+2,w,c
  3081  007846  1008               	iorwf	??___xxtofl+3,w,c
  3082  007848  B4D8               	btfsc	status,2,c
  3083  00784A  D007               	goto	l2384
  3084  00784C  D7E1               	goto	l2376
  3085  00784E                     l2382:
  3086  00784E  060A               	decf	___xxtofl@exp,f,c
  3087  007850  90D8               	bcf	status,0,c
  3088  007852  360B               	rlcf	___xxtofl@arg,f,c
  3089  007854  360C               	rlcf	___xxtofl@arg+1,f,c
  3090  007856  360D               	rlcf	___xxtofl@arg+2,f,c
  3091  007858  360E               	rlcf	___xxtofl@arg+3,f,c
  3092  00785A                     l2384:
  3093  00785A  BE0D               	btfsc	___xxtofl@arg+2,7,c
  3094  00785C  D003               	goto	u1520
  3095  00785E  0E02               	movlw	2
  3096  007860  600A               	cpfslt	___xxtofl@exp,c
  3097  007862  D7F5               	goto	l2382
  3098  007864                     u1520:
  3099  007864  A00A               	btfss	___xxtofl@exp,0,c
  3100  007866  9E0D               	bcf	___xxtofl@arg+2,7,c
  3101  007868  90D8               	bcf	status,0,c
  3102  00786A  320A               	rrcf	___xxtofl@exp,f,c
  3103  00786C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3104  007870  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  3105  007872  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  3106  007874  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  3107  007876  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3108  00787A  6A07               	clrf	??___xxtofl+2,c
  3109  00787C  6A06               	clrf	??___xxtofl+1,c
  3110  00787E  6A05               	clrf	??___xxtofl,c
  3111  007880  5005               	movf	??___xxtofl,w,c
  3112  007882  120B               	iorwf	___xxtofl@arg,f,c
  3113  007884  5006               	movf	??___xxtofl+1,w,c
  3114  007886  120C               	iorwf	___xxtofl@arg+1,f,c
  3115  007888  5007               	movf	??___xxtofl+2,w,c
  3116  00788A  120D               	iorwf	___xxtofl@arg+2,f,c
  3117  00788C  5008               	movf	??___xxtofl+3,w,c
  3118  00788E  120E               	iorwf	___xxtofl@arg+3,f,c
  3119  007890  5009               	movf	___xxtofl@sign,w,c
  3120  007892  A4D8               	btfss	status,2,c
  3121  007894  AE04               	btfss	___xxtofl@val+3,7,c
  3122  007896  D001               	goto	l2400
  3123  007898  8E0E               	bsf	___xxtofl@arg+3,7,c
  3124  00789A                     l2400:
  3125  00789A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3126  00789E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3127  0078A2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3128  0078A6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3129  0078AA  0012               	return		;funcret
  3130  0078AC                     __end_of___xxtofl:
  3131                           	opt callstack 0
  3132                           
  3133 ;; *************** function ___fltol *****************
  3134 ;; Defined at:
  3135 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  f1              4   39[COMRAM] unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  exp1            1   48[COMRAM] unsigned char 
  3140 ;;  sign1           1   47[COMRAM] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  4   39[COMRAM] long 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3150 ;;      Params:         4       0       0       0       0       0       0
  3151 ;;      Locals:         2       0       0       0       0       0       0
  3152 ;;      Temps:          4       0       0       0       0       0       0
  3153 ;;      Totals:        10       0       0       0       0       0       0
  3154 ;;Total ram usage:       10 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_msDelay
  3160 ;;		_timer6Setup
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text18
  3165  007480                     __ptext18:
  3166                           	opt callstack 0
  3167  007480                     ___fltol:
  3168                           	opt callstack 27
  3169                           
  3170                           ;incstack = 0
  3171  007480  342A               	rlcf	___fltol@f1+2,w,c
  3172  007482  342B               	rlcf	___fltol@f1+3,w,c
  3173  007484  6E31               	movwf	___fltol@exp1,c
  3174  007486  5031               	movf	___fltol@exp1,w,c
  3175  007488  A4D8               	btfss	status,2,c
  3176  00748A  D009               	goto	l2320
  3177  00748C                     u1390:
  3178  00748C  0E00               	movlw	0
  3179  00748E  6E28               	movwf	?___fltol,c
  3180  007490  0E00               	movlw	0
  3181  007492  6E29               	movwf	?___fltol+1,c
  3182  007494  0E00               	movlw	0
  3183  007496  6E2A               	movwf	?___fltol+2,c
  3184  007498  0E00               	movlw	0
  3185  00749A  6E2B               	movwf	?___fltol+3,c
  3186  00749C  0012               	return	
  3187  00749E                     l2320:
  3188  00749E  C028  F02C         	movff	___fltol@f1,??___fltol
  3189  0074A2  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3190  0074A6  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3191  0074AA  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3192  0074AE  0E20               	movlw	32
  3193  0074B0  D005               	goto	u1400
  3194  0074B2                     u1405:
  3195  0074B2  90D8               	bcf	status,0,c
  3196  0074B4  322F               	rrcf	??___fltol+3,f,c
  3197  0074B6  322E               	rrcf	??___fltol+2,f,c
  3198  0074B8  322D               	rrcf	??___fltol+1,f,c
  3199  0074BA  322C               	rrcf	??___fltol,f,c
  3200  0074BC                     u1400:
  3201  0074BC  2EE8               	decfsz	wreg,f,c
  3202  0074BE  D7F9               	goto	u1405
  3203  0074C0  502C               	movf	??___fltol,w,c
  3204  0074C2  6E30               	movwf	___fltol@sign1,c
  3205  0074C4  8E2A               	bsf	___fltol@f1+2,7,c
  3206  0074C6  0EFF               	movlw	255
  3207  0074C8  1628               	andwf	___fltol@f1,f,c
  3208  0074CA  0EFF               	movlw	255
  3209  0074CC  1629               	andwf	___fltol@f1+1,f,c
  3210  0074CE  0EFF               	movlw	255
  3211  0074D0  162A               	andwf	___fltol@f1+2,f,c
  3212  0074D2  0E00               	movlw	0
  3213  0074D4  162B               	andwf	___fltol@f1+3,f,c
  3214  0074D6  0E96               	movlw	150
  3215  0074D8  5E31               	subwf	___fltol@exp1,f,c
  3216  0074DA  AE31               	btfss	___fltol@exp1,7,c
  3217  0074DC  D00D               	goto	l2340
  3218  0074DE  5031               	movf	___fltol@exp1,w,c
  3219  0074E0  0A80               	xorlw	128
  3220  0074E2  0F97               	addlw	151
  3221  0074E4  A0D8               	btfss	status,0,c
  3222  0074E6  D7D2               	goto	u1390
  3223  0074E8                     l2336:
  3224  0074E8  90D8               	bcf	status,0,c
  3225  0074EA  322B               	rrcf	___fltol@f1+3,f,c
  3226  0074EC  322A               	rrcf	___fltol@f1+2,f,c
  3227  0074EE  3229               	rrcf	___fltol@f1+1,f,c
  3228  0074F0  3228               	rrcf	___fltol@f1,f,c
  3229  0074F2  3E31               	incfsz	___fltol@exp1,f,c
  3230  0074F4  D7F9               	goto	l2336
  3231  0074F6  D00D               	goto	u1440
  3232  0074F8                     l2340:
  3233  0074F8  0E1F               	movlw	31
  3234  0074FA  6431               	cpfsgt	___fltol@exp1,c
  3235  0074FC  D007               	goto	l2348
  3236  0074FE  D7C6               	goto	u1390
  3237  007500                     l2346:
  3238  007500  90D8               	bcf	status,0,c
  3239  007502  3628               	rlcf	___fltol@f1,f,c
  3240  007504  3629               	rlcf	___fltol@f1+1,f,c
  3241  007506  362A               	rlcf	___fltol@f1+2,f,c
  3242  007508  362B               	rlcf	___fltol@f1+3,f,c
  3243  00750A  0631               	decf	___fltol@exp1,f,c
  3244  00750C                     l2348:
  3245  00750C  5031               	movf	___fltol@exp1,w,c
  3246  00750E  A4D8               	btfss	status,2,c
  3247  007510  D7F7               	goto	l2346
  3248  007512                     u1440:
  3249  007512  5030               	movf	___fltol@sign1,w,c
  3250  007514  B4D8               	btfsc	status,2,c
  3251  007516  D008               	goto	l2354
  3252  007518  1E2B               	comf	___fltol@f1+3,f,c
  3253  00751A  1E2A               	comf	___fltol@f1+2,f,c
  3254  00751C  1E29               	comf	___fltol@f1+1,f,c
  3255  00751E  6C28               	negf	___fltol@f1,c
  3256  007520  0E00               	movlw	0
  3257  007522  2229               	addwfc	___fltol@f1+1,f,c
  3258  007524  222A               	addwfc	___fltol@f1+2,f,c
  3259  007526  222B               	addwfc	___fltol@f1+3,f,c
  3260  007528                     l2354:
  3261  007528  C028  F028         	movff	___fltol@f1,?___fltol
  3262  00752C  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3263  007530  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3264  007534  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3265  007538  0012               	return		;funcret
  3266  00753A                     __end_of___fltol:
  3267                           	opt callstack 0
  3268                           
  3269 ;; *************** function ___flmul *****************
  3270 ;; Defined at:
  3271 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  b               4   14[COMRAM] long 
  3274 ;;  a               4   18[COMRAM] long 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  prod            4   33[COMRAM] struct .
  3277 ;;  grs             4   27[COMRAM] unsigned long 
  3278 ;;  temp            2   37[COMRAM] struct .
  3279 ;;  bexp            1   32[COMRAM] unsigned char 
  3280 ;;  aexp            1   31[COMRAM] unsigned char 
  3281 ;;  sign            1   26[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  4   14[COMRAM] unsigned char 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0, prodl, prodh
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3291 ;;      Params:         8       0       0       0       0       0       0
  3292 ;;      Locals:        13       0       0       0       0       0       0
  3293 ;;      Temps:          4       0       0       0       0       0       0
  3294 ;;      Totals:        25       0       0       0       0       0       0
  3295 ;;Total ram usage:       25 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_msDelay
  3301 ;;		_timer6Setup
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text19
  3306  007CAE                     __ptext19:
  3307                           	opt callstack 0
  3308  007CAE                     ___flmul:
  3309                           	opt callstack 27
  3310                           
  3311                           ;incstack = 0
  3312  007CAE  5012               	movf	___flmul@b+3,w,c
  3313  007CB0  0B80               	andlw	128
  3314  007CB2  6E1B               	movwf	___flmul@sign,c
  3315  007CB4  5012               	movf	___flmul@b+3,w,c
  3316  007CB6  2412               	addwf	___flmul@b+3,w,c
  3317  007CB8  6E21               	movwf	___flmul@bexp,c
  3318  007CBA  BE11               	btfsc	___flmul@b+2,7,c
  3319  007CBC  8021               	bsf	___flmul@bexp,0,c
  3320  007CBE  5021               	movf	___flmul@bexp,w,c
  3321  007CC0  B4D8               	btfsc	status,2,c
  3322  007CC2  D00D               	goto	l2198
  3323  007CC4  2821               	incf	___flmul@bexp,w,c
  3324  007CC6  A4D8               	btfss	status,2,c
  3325  007CC8  D008               	goto	l2196
  3326  007CCA  0E00               	movlw	0
  3327  007CCC  6E0F               	movwf	___flmul@b,c
  3328  007CCE  0E00               	movlw	0
  3329  007CD0  6E10               	movwf	___flmul@b+1,c
  3330  007CD2  0E00               	movlw	0
  3331  007CD4  6E11               	movwf	___flmul@b+2,c
  3332  007CD6  0E00               	movlw	0
  3333  007CD8  6E12               	movwf	___flmul@b+3,c
  3334  007CDA                     l2196:
  3335  007CDA  8E11               	bsf	___flmul@b+2,7,c
  3336  007CDC  D008               	goto	l2200
  3337  007CDE                     l2198:
  3338  007CDE  0E00               	movlw	0
  3339  007CE0  6E0F               	movwf	___flmul@b,c
  3340  007CE2  0E00               	movlw	0
  3341  007CE4  6E10               	movwf	___flmul@b+1,c
  3342  007CE6  0E00               	movlw	0
  3343  007CE8  6E11               	movwf	___flmul@b+2,c
  3344  007CEA  0E00               	movlw	0
  3345  007CEC  6E12               	movwf	___flmul@b+3,c
  3346  007CEE                     l2200:
  3347  007CEE  5016               	movf	___flmul@a+3,w,c
  3348  007CF0  0B80               	andlw	128
  3349  007CF2  1A1B               	xorwf	___flmul@sign,f,c
  3350  007CF4  5016               	movf	___flmul@a+3,w,c
  3351  007CF6  2416               	addwf	___flmul@a+3,w,c
  3352  007CF8  6E20               	movwf	___flmul@aexp,c
  3353  007CFA  BE15               	btfsc	___flmul@a+2,7,c
  3354  007CFC  8020               	bsf	___flmul@aexp,0,c
  3355  007CFE  5020               	movf	___flmul@aexp,w,c
  3356  007D00  B4D8               	btfsc	status,2,c
  3357  007D02  D00D               	goto	l2216
  3358  007D04  2820               	incf	___flmul@aexp,w,c
  3359  007D06  A4D8               	btfss	status,2,c
  3360  007D08  D008               	goto	l2214
  3361  007D0A  0E00               	movlw	0
  3362  007D0C  6E13               	movwf	___flmul@a,c
  3363  007D0E  0E00               	movlw	0
  3364  007D10  6E14               	movwf	___flmul@a+1,c
  3365  007D12  0E00               	movlw	0
  3366  007D14  6E15               	movwf	___flmul@a+2,c
  3367  007D16  0E00               	movlw	0
  3368  007D18  6E16               	movwf	___flmul@a+3,c
  3369  007D1A                     l2214:
  3370  007D1A  8E15               	bsf	___flmul@a+2,7,c
  3371  007D1C  D008               	goto	l1053
  3372  007D1E                     l2216:
  3373  007D1E  0E00               	movlw	0
  3374  007D20  6E13               	movwf	___flmul@a,c
  3375  007D22  0E00               	movlw	0
  3376  007D24  6E14               	movwf	___flmul@a+1,c
  3377  007D26  0E00               	movlw	0
  3378  007D28  6E15               	movwf	___flmul@a+2,c
  3379  007D2A  0E00               	movlw	0
  3380  007D2C  6E16               	movwf	___flmul@a+3,c
  3381  007D2E                     l1053:
  3382  007D2E  5020               	movf	___flmul@aexp,w,c
  3383  007D30  B4D8               	btfsc	status,2,c
  3384  007D32  D003               	goto	u1270
  3385  007D34  5021               	movf	___flmul@bexp,w,c
  3386  007D36  A4D8               	btfss	status,2,c
  3387  007D38  D009               	goto	l2224
  3388  007D3A                     u1270:
  3389  007D3A  0E00               	movlw	0
  3390  007D3C  6E0F               	movwf	?___flmul,c
  3391  007D3E  0E00               	movlw	0
  3392  007D40  6E10               	movwf	?___flmul+1,c
  3393  007D42  0E00               	movlw	0
  3394  007D44  6E11               	movwf	?___flmul+2,c
  3395  007D46  0E00               	movlw	0
  3396  007D48  6E12               	movwf	?___flmul+3,c
  3397  007D4A  0012               	return	
  3398  007D4C                     l2224:
  3399  007D4C  5015               	movf	___flmul@a+2,w,c
  3400  007D4E  020F               	mulwf	___flmul@b,c
  3401  007D50  CFF3 F026          	movff	prodl,___flmul@temp
  3402  007D54  CFF4 F027          	movff	prodh,___flmul@temp+1
  3403  007D58  5026               	movf	___flmul@temp,w,c
  3404  007D5A  6E1C               	movwf	___flmul@grs,c
  3405  007D5C  6A1D               	clrf	___flmul@grs+1,c
  3406  007D5E  6A1E               	clrf	___flmul@grs+2,c
  3407  007D60  6A1F               	clrf	___flmul@grs+3,c
  3408  007D62  5027               	movf	___flmul@temp+1,w,c
  3409  007D64  6E22               	movwf	___flmul@prod,c
  3410  007D66  6A23               	clrf	___flmul@prod+1,c
  3411  007D68  6A24               	clrf	___flmul@prod+2,c
  3412  007D6A  6A25               	clrf	___flmul@prod+3,c
  3413  007D6C  5014               	movf	___flmul@a+1,w,c
  3414  007D6E  0210               	mulwf	___flmul@b+1,c
  3415  007D70  CFF3 F026          	movff	prodl,___flmul@temp
  3416  007D74  CFF4 F027          	movff	prodh,___flmul@temp+1
  3417  007D78  5026               	movf	___flmul@temp,w,c
  3418  007D7A  261C               	addwf	___flmul@grs,f,c
  3419  007D7C  0E00               	movlw	0
  3420  007D7E  221D               	addwfc	___flmul@grs+1,f,c
  3421  007D80  221E               	addwfc	___flmul@grs+2,f,c
  3422  007D82  221F               	addwfc	___flmul@grs+3,f,c
  3423  007D84  5027               	movf	___flmul@temp+1,w,c
  3424  007D86  2622               	addwf	___flmul@prod,f,c
  3425  007D88  0E00               	movlw	0
  3426  007D8A  2223               	addwfc	___flmul@prod+1,f,c
  3427  007D8C  2224               	addwfc	___flmul@prod+2,f,c
  3428  007D8E  2225               	addwfc	___flmul@prod+3,f,c
  3429  007D90  5013               	movf	___flmul@a,w,c
  3430  007D92  0211               	mulwf	___flmul@b+2,c
  3431  007D94  CFF3 F026          	movff	prodl,___flmul@temp
  3432  007D98  CFF4 F027          	movff	prodh,___flmul@temp+1
  3433  007D9C  5026               	movf	___flmul@temp,w,c
  3434  007D9E  261C               	addwf	___flmul@grs,f,c
  3435  007DA0  0E00               	movlw	0
  3436  007DA2  221D               	addwfc	___flmul@grs+1,f,c
  3437  007DA4  221E               	addwfc	___flmul@grs+2,f,c
  3438  007DA6  221F               	addwfc	___flmul@grs+3,f,c
  3439  007DA8  5027               	movf	___flmul@temp+1,w,c
  3440  007DAA  2622               	addwf	___flmul@prod,f,c
  3441  007DAC  0E00               	movlw	0
  3442  007DAE  2223               	addwfc	___flmul@prod+1,f,c
  3443  007DB0  2224               	addwfc	___flmul@prod+2,f,c
  3444  007DB2  2225               	addwfc	___flmul@prod+3,f,c
  3445  007DB4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3446  007DB8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3447  007DBC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3448  007DC0  6A1C               	clrf	___flmul@grs,c
  3449  007DC2  5013               	movf	___flmul@a,w,c
  3450  007DC4  0210               	mulwf	___flmul@b+1,c
  3451  007DC6  CFF3 F026          	movff	prodl,___flmul@temp
  3452  007DCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3453  007DCE  5026               	movf	___flmul@temp,w,c
  3454  007DD0  261C               	addwf	___flmul@grs,f,c
  3455  007DD2  5027               	movf	___flmul@temp+1,w,c
  3456  007DD4  221D               	addwfc	___flmul@grs+1,f,c
  3457  007DD6  0E00               	movlw	0
  3458  007DD8  221E               	addwfc	___flmul@grs+2,f,c
  3459  007DDA  0E00               	movlw	0
  3460  007DDC  221F               	addwfc	___flmul@grs+3,f,c
  3461  007DDE  5014               	movf	___flmul@a+1,w,c
  3462  007DE0  020F               	mulwf	___flmul@b,c
  3463  007DE2  CFF3 F026          	movff	prodl,___flmul@temp
  3464  007DE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3465  007DEA  5026               	movf	___flmul@temp,w,c
  3466  007DEC  261C               	addwf	___flmul@grs,f,c
  3467  007DEE  5027               	movf	___flmul@temp+1,w,c
  3468  007DF0  221D               	addwfc	___flmul@grs+1,f,c
  3469  007DF2  0E00               	movlw	0
  3470  007DF4  221E               	addwfc	___flmul@grs+2,f,c
  3471  007DF6  0E00               	movlw	0
  3472  007DF8  221F               	addwfc	___flmul@grs+3,f,c
  3473  007DFA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3474  007DFE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3475  007E02  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3476  007E06  6A1C               	clrf	___flmul@grs,c
  3477  007E08  5013               	movf	___flmul@a,w,c
  3478  007E0A  020F               	mulwf	___flmul@b,c
  3479  007E0C  CFF3 F026          	movff	prodl,___flmul@temp
  3480  007E10  CFF4 F027          	movff	prodh,___flmul@temp+1
  3481  007E14  5026               	movf	___flmul@temp,w,c
  3482  007E16  261C               	addwf	___flmul@grs,f,c
  3483  007E18  5027               	movf	___flmul@temp+1,w,c
  3484  007E1A  221D               	addwfc	___flmul@grs+1,f,c
  3485  007E1C  0E00               	movlw	0
  3486  007E1E  221E               	addwfc	___flmul@grs+2,f,c
  3487  007E20  0E00               	movlw	0
  3488  007E22  221F               	addwfc	___flmul@grs+3,f,c
  3489  007E24  5015               	movf	___flmul@a+2,w,c
  3490  007E26  0210               	mulwf	___flmul@b+1,c
  3491  007E28  CFF3 F026          	movff	prodl,___flmul@temp
  3492  007E2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3493  007E30  5026               	movf	___flmul@temp,w,c
  3494  007E32  2622               	addwf	___flmul@prod,f,c
  3495  007E34  5027               	movf	___flmul@temp+1,w,c
  3496  007E36  2223               	addwfc	___flmul@prod+1,f,c
  3497  007E38  0E00               	movlw	0
  3498  007E3A  2224               	addwfc	___flmul@prod+2,f,c
  3499  007E3C  0E00               	movlw	0
  3500  007E3E  2225               	addwfc	___flmul@prod+3,f,c
  3501  007E40  5014               	movf	___flmul@a+1,w,c
  3502  007E42  0211               	mulwf	___flmul@b+2,c
  3503  007E44  CFF3 F026          	movff	prodl,___flmul@temp
  3504  007E48  CFF4 F027          	movff	prodh,___flmul@temp+1
  3505  007E4C  5026               	movf	___flmul@temp,w,c
  3506  007E4E  2622               	addwf	___flmul@prod,f,c
  3507  007E50  5027               	movf	___flmul@temp+1,w,c
  3508  007E52  2223               	addwfc	___flmul@prod+1,f,c
  3509  007E54  0E00               	movlw	0
  3510  007E56  2224               	addwfc	___flmul@prod+2,f,c
  3511  007E58  0E00               	movlw	0
  3512  007E5A  2225               	addwfc	___flmul@prod+3,f,c
  3513  007E5C  5015               	movf	___flmul@a+2,w,c
  3514  007E5E  0211               	mulwf	___flmul@b+2,c
  3515  007E60  CFF3 F026          	movff	prodl,___flmul@temp
  3516  007E64  CFF4 F027          	movff	prodh,___flmul@temp+1
  3517  007E68  5026               	movf	___flmul@temp,w,c
  3518  007E6A  6E17               	movwf	??___flmul& (0+255),c
  3519  007E6C  5027               	movf	___flmul@temp+1,w,c
  3520  007E6E  6E18               	movwf	(??___flmul+1)& (0+255),c
  3521  007E70  6A19               	clrf	(??___flmul+2)& (0+255),c
  3522  007E72  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3523  007E74  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3524  007E78  C018  F019         	movff	??___flmul+1,??___flmul+2
  3525  007E7C  C017  F018         	movff	??___flmul,??___flmul+1
  3526  007E80  6A17               	clrf	??___flmul,c
  3527  007E82  5017               	movf	??___flmul,w,c
  3528  007E84  2622               	addwf	___flmul@prod,f,c
  3529  007E86  5018               	movf	??___flmul+1,w,c
  3530  007E88  2223               	addwfc	___flmul@prod+1,f,c
  3531  007E8A  5019               	movf	??___flmul+2,w,c
  3532  007E8C  2224               	addwfc	___flmul@prod+2,f,c
  3533  007E8E  501A               	movf	??___flmul+3,w,c
  3534  007E90  2225               	addwfc	___flmul@prod+3,f,c
  3535  007E92  C01C  F017         	movff	___flmul@grs,??___flmul
  3536  007E96  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3537  007E9A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3538  007E9E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3539  007EA2  0E19               	movlw	25
  3540  007EA4  D005               	goto	u1280
  3541  007EA6                     u1285:
  3542  007EA6  90D8               	bcf	status,0,c
  3543  007EA8  321A               	rrcf	??___flmul+3,f,c
  3544  007EAA  3219               	rrcf	??___flmul+2,f,c
  3545  007EAC  3218               	rrcf	??___flmul+1,f,c
  3546  007EAE  3217               	rrcf	??___flmul,f,c
  3547  007EB0                     u1280:
  3548  007EB0  2EE8               	decfsz	wreg,f,c
  3549  007EB2  D7F9               	goto	u1285
  3550  007EB4  5017               	movf	??___flmul,w,c
  3551  007EB6  2622               	addwf	___flmul@prod,f,c
  3552  007EB8  5018               	movf	??___flmul+1,w,c
  3553  007EBA  2223               	addwfc	___flmul@prod+1,f,c
  3554  007EBC  5019               	movf	??___flmul+2,w,c
  3555  007EBE  2224               	addwfc	___flmul@prod+2,f,c
  3556  007EC0  501A               	movf	??___flmul+3,w,c
  3557  007EC2  2225               	addwfc	___flmul@prod+3,f,c
  3558  007EC4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3559  007EC8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3560  007ECC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3561  007ED0  6A1C               	clrf	___flmul@grs,c
  3562  007ED2  5020               	movf	___flmul@aexp,w,c
  3563  007ED4  C021  F017         	movff	___flmul@bexp,??___flmul
  3564  007ED8  6A18               	clrf	(??___flmul+1)& (0+255),c
  3565  007EDA  2617               	addwf	??___flmul,f,c
  3566  007EDC  0E00               	movlw	0
  3567  007EDE  2218               	addwfc	??___flmul+1,f,c
  3568  007EE0  0E82               	movlw	130
  3569  007EE2  2417               	addwf	??___flmul,w,c
  3570  007EE4  6E26               	movwf	___flmul@temp,c
  3571  007EE6  0EFF               	movlw	255
  3572  007EE8  2018               	addwfc	??___flmul+1,w,c
  3573  007EEA  6E27               	movwf	___flmul@temp+1,c
  3574  007EEC  D00F               	goto	l2272
  3575  007EEE                     l2266:
  3576  007EEE  90D8               	bcf	status,0,c
  3577  007EF0  3622               	rlcf	___flmul@prod,f,c
  3578  007EF2  3623               	rlcf	___flmul@prod+1,f,c
  3579  007EF4  3624               	rlcf	___flmul@prod+2,f,c
  3580  007EF6  3625               	rlcf	___flmul@prod+3,f,c
  3581  007EF8  BE1F               	btfsc	___flmul@grs+3,7,c
  3582  007EFA  8022               	bsf	___flmul@prod,0,c
  3583  007EFC  90D8               	bcf	status,0,c
  3584  007EFE  361C               	rlcf	___flmul@grs,f,c
  3585  007F00  361D               	rlcf	___flmul@grs+1,f,c
  3586  007F02  361E               	rlcf	___flmul@grs+2,f,c
  3587  007F04  361F               	rlcf	___flmul@grs+3,f,c
  3588  007F06  0626               	decf	___flmul@temp,f,c
  3589  007F08  A0D8               	btfss	status,0,c
  3590  007F0A  0627               	decf	___flmul@temp+1,f,c
  3591  007F0C                     l2272:
  3592  007F0C  AE24               	btfss	___flmul@prod+2,7,c
  3593  007F0E  D7EF               	goto	l2266
  3594  007F10  0E00               	movlw	0
  3595  007F12  6E20               	movwf	___flmul@aexp,c
  3596  007F14  AE1F               	btfss	___flmul@grs+3,7,c
  3597  007F16  D017               	goto	l1062
  3598  007F18  0EFF               	movlw	255
  3599  007F1A  141C               	andwf	___flmul@grs,w,c
  3600  007F1C  6E17               	movwf	??___flmul& (0+255),c
  3601  007F1E  0EFF               	movlw	255
  3602  007F20  141D               	andwf	___flmul@grs+1,w,c
  3603  007F22  6E18               	movwf	(??___flmul+1)& (0+255),c
  3604  007F24  0EFF               	movlw	255
  3605  007F26  141E               	andwf	___flmul@grs+2,w,c
  3606  007F28  6E19               	movwf	(??___flmul+2)& (0+255),c
  3607  007F2A  0E7F               	movlw	127
  3608  007F2C  141F               	andwf	___flmul@grs+3,w,c
  3609  007F2E  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3610  007F30  5017               	movf	??___flmul,w,c
  3611  007F32  1018               	iorwf	??___flmul+1,w,c
  3612  007F34  1019               	iorwf	??___flmul+2,w,c
  3613  007F36  101A               	iorwf	??___flmul+3,w,c
  3614  007F38  B4D8               	btfsc	status,2,c
  3615  007F3A  D003               	goto	l1063
  3616  007F3C                     u1320:
  3617  007F3C  0E01               	movlw	1
  3618  007F3E  6E20               	movwf	___flmul@aexp,c
  3619  007F40  D002               	goto	l1062
  3620  007F42                     l1063:
  3621  007F42  B022               	btfsc	___flmul@prod,0,c
  3622  007F44  D7FB               	goto	u1320
  3623  007F46                     l1062:
  3624  007F46  5020               	movf	___flmul@aexp,w,c
  3625  007F48  B4D8               	btfsc	status,2,c
  3626  007F4A  D01F               	goto	l2292
  3627  007F4C  0E01               	movlw	1
  3628  007F4E  2622               	addwf	___flmul@prod,f,c
  3629  007F50  0E00               	movlw	0
  3630  007F52  2223               	addwfc	___flmul@prod+1,f,c
  3631  007F54  2224               	addwfc	___flmul@prod+2,f,c
  3632  007F56  2225               	addwfc	___flmul@prod+3,f,c
  3633  007F58  A025               	btfss	___flmul@prod+3,0,c
  3634  007F5A  D017               	goto	l2292
  3635  007F5C  C022  F017         	movff	___flmul@prod,??___flmul
  3636  007F60  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3637  007F64  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3638  007F68  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3639  007F6C  341A               	rlcf	??___flmul+3,w,c
  3640  007F6E  321A               	rrcf	??___flmul+3,f,c
  3641  007F70  3219               	rrcf	??___flmul+2,f,c
  3642  007F72  3218               	rrcf	??___flmul+1,f,c
  3643  007F74  3217               	rrcf	??___flmul,f,c
  3644  007F76  C017  F022         	movff	??___flmul,___flmul@prod
  3645  007F7A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3646  007F7E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3647  007F82  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3648  007F86  4A26               	infsnz	___flmul@temp,f,c
  3649  007F88  2A27               	incf	___flmul@temp+1,f,c
  3650  007F8A                     l2292:
  3651  007F8A  BE27               	btfsc	___flmul@temp+1,7,c
  3652  007F8C  D00D               	goto	l2296
  3653  007F8E  5027               	movf	___flmul@temp+1,w,c
  3654  007F90  E103               	bnz	u1360
  3655  007F92  2826               	incf	___flmul@temp,w,c
  3656  007F94  A0D8               	btfss	status,0,c
  3657  007F96  D008               	goto	l2296
  3658  007F98                     u1360:
  3659  007F98  0E00               	movlw	0
  3660  007F9A  6E22               	movwf	___flmul@prod,c
  3661  007F9C  0E00               	movlw	0
  3662  007F9E  6E23               	movwf	___flmul@prod+1,c
  3663  007FA0  0E80               	movlw	128
  3664  007FA2  6E24               	movwf	___flmul@prod+2,c
  3665  007FA4  0E7F               	movlw	127
  3666  007FA6  D020               	goto	L2
  3667  007FA8                     l2296:
  3668  007FA8  BE27               	btfsc	___flmul@temp+1,7,c
  3669  007FAA  D005               	goto	u1370
  3670  007FAC  5027               	movf	___flmul@temp+1,w,c
  3671  007FAE  E10E               	bnz	l1070
  3672  007FB0  0426               	decf	___flmul@temp,w,c
  3673  007FB2  B0D8               	btfsc	status,0,c
  3674  007FB4  D00B               	goto	l1070
  3675  007FB6                     u1370:
  3676  007FB6  0E00               	movlw	0
  3677  007FB8  6E22               	movwf	___flmul@prod,c
  3678  007FBA  0E00               	movlw	0
  3679  007FBC  6E23               	movwf	___flmul@prod+1,c
  3680  007FBE  0E00               	movlw	0
  3681  007FC0  6E24               	movwf	___flmul@prod+2,c
  3682  007FC2  0E00               	movlw	0
  3683  007FC4  6E25               	movwf	___flmul@prod+3,c
  3684  007FC6  0E00               	movlw	0
  3685  007FC8  6E1B               	movwf	___flmul@sign,c
  3686  007FCA  D00F               	goto	l2308
  3687  007FCC                     l1070:
  3688  007FCC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3689  007FD0  0EFF               	movlw	255
  3690  007FD2  1622               	andwf	___flmul@prod,f,c
  3691  007FD4  0EFF               	movlw	255
  3692  007FD6  1623               	andwf	___flmul@prod+1,f,c
  3693  007FD8  0E7F               	movlw	127
  3694  007FDA  1624               	andwf	___flmul@prod+2,f,c
  3695  007FDC  0E00               	movlw	0
  3696  007FDE  1625               	andwf	___flmul@prod+3,f,c
  3697  007FE0  B021               	btfsc	___flmul@bexp,0,c
  3698  007FE2  8E24               	bsf	___flmul@prod+2,7,c
  3699  007FE4  90D8               	bcf	status,0,c
  3700  007FE6  3021               	rrcf	___flmul@bexp,w,c
  3701  007FE8                     L2:
  3702  007FE8  6E25               	movwf	___flmul@prod+3,c
  3703  007FEA                     l2308:
  3704  007FEA  501B               	movf	___flmul@sign,w,c
  3705  007FEC  1225               	iorwf	___flmul@prod+3,f,c
  3706  007FEE  C022  F00F         	movff	___flmul@prod,?___flmul
  3707  007FF2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3708  007FF6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3709  007FFA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3710  007FFE  0012               	return		;funcret
  3711  008000                     __end_of___flmul:
  3712                           	opt callstack 0
  3713                           
  3714 ;; *************** function _aveSensor *****************
  3715 ;; Defined at:
  3716 ;;		line 653 in file "./functions.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  s               1    wreg     unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  s               1    5[COMRAM] unsigned char 
  3721 ;;  a               1    9[COMRAM] unsigned char 
  3722 ;;  measurements    2    6[COMRAM] unsigned int 
  3723 ;;  result          1    8[COMRAM] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      unsigned char 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3733 ;;      Params:         0       0       0       0       0       0       0
  3734 ;;      Locals:         5       0       0       0       0       0       0
  3735 ;;      Temps:          2       0       0       0       0       0       0
  3736 ;;      Totals:         7       0       0       0       0       0       0
  3737 ;;Total ram usage:        7 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    1
  3740 ;; This function calls:
  3741 ;;		_readADC
  3742 ;;		_setADCChannel
  3743 ;; This function is called by:
  3744 ;;		_calibrate
  3745 ;;		_pyCal
  3746 ;;		_readAllSensors
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text20
  3751  00715C                     __ptext20:
  3752                           	opt callstack 0
  3753  00715C                     _aveSensor:
  3754                           	opt callstack 27
  3755                           
  3756                           ;incstack = 0
  3757                           ;aveSensor@s stored from wreg
  3758  00715C  6E06               	movwf	aveSensor@s,c
  3759                           
  3760                           ;./functions.c: 653: unsigned char aveSensor(unsigned char s);./functions.c: 654: {;./fu
      +                          nctions.c: 655:     setADCChannel(s);
  3761  00715E  5006               	movf	aveSensor@s,w,c
  3762  007160  ECBA  F039         	call	_setADCChannel
  3763                           
  3764                           ;./functions.c: 656:     unsigned int measurements = 0;
  3765  007164  0E00               	movlw	0
  3766  007166  6E08               	movwf	aveSensor@measurements+1,c
  3767  007168  0E00               	movlw	0
  3768  00716A  6E07               	movwf	aveSensor@measurements,c
  3769                           
  3770                           ;./functions.c: 658:     for (unsigned char a = 0; a < 4; a++)
  3771  00716C  0E00               	movlw	0
  3772  00716E  6E0A               	movwf	aveSensor@a,c
  3773  007170                     l2414:
  3774                           
  3775                           ;./functions.c: 659:     {;./functions.c: 660:         measurements += readADC();
  3776  007170  ECE0  F037         	call	_readADC	;wreg free
  3777  007174  6E04               	movwf	??_aveSensor& (0+255),c
  3778  007176  5004               	movf	??_aveSensor,w,c
  3779  007178  2607               	addwf	aveSensor@measurements,f,c
  3780  00717A  0E00               	movlw	0
  3781  00717C  2208               	addwfc	aveSensor@measurements+1,f,c
  3782                           
  3783                           ;./functions.c: 661:     }
  3784  00717E  2A0A               	incf	aveSensor@a,f,c
  3785  007180  0E03               	movlw	3
  3786  007182  640A               	cpfsgt	aveSensor@a,c
  3787  007184  D7F5               	goto	l2414
  3788                           
  3789                           ;./functions.c: 663:     unsigned char result = measurements / 4;
  3790  007186  C007  F004         	movff	aveSensor@measurements,??_aveSensor
  3791  00718A  C008  F005         	movff	aveSensor@measurements+1,??_aveSensor+1
  3792  00718E  90D8               	bcf	status,0,c
  3793  007190  3205               	rrcf	??_aveSensor+1,f,c
  3794  007192  3204               	rrcf	??_aveSensor,f,c
  3795  007194  90D8               	bcf	status,0,c
  3796  007196  3205               	rrcf	??_aveSensor+1,f,c
  3797  007198  3204               	rrcf	??_aveSensor,f,c
  3798  00719A  5004               	movf	??_aveSensor,w,c
  3799  00719C  6E09               	movwf	aveSensor@result,c
  3800                           
  3801                           ;./functions.c: 665:     return result;
  3802  00719E  5009               	movf	aveSensor@result,w,c
  3803  0071A0  0012               	return		;funcret
  3804  0071A2                     __end_of_aveSensor:
  3805                           	opt callstack 0
  3806                           
  3807 ;; *************** function _setADCChannel *****************
  3808 ;; Defined at:
  3809 ;;		line 602 in file "./functions.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  channel         1    wreg     unsigned char 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  channel         1    2[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3823 ;;      Params:         0       0       0       0       0       0       0
  3824 ;;      Locals:         1       0       0       0       0       0       0
  3825 ;;      Temps:          2       0       0       0       0       0       0
  3826 ;;      Totals:         3       0       0       0       0       0       0
  3827 ;;Total ram usage:        3 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_aveSensor
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text21
  3837  007374                     __ptext21:
  3838                           	opt callstack 0
  3839  007374                     _setADCChannel:
  3840                           	opt callstack 27
  3841                           
  3842                           ;incstack = 0
  3843                           ;setADCChannel@channel stored from wreg
  3844  007374  6E03               	movwf	setADCChannel@channel,c
  3845                           
  3846                           ;./functions.c: 602: void setADCChannel(unsigned char channel);./functions.c: 603: {;./f
      +                          unctions.c: 604:     ADCON0bits.CHS = channel;
  3847  007376  C003  F001         	movff	setADCChannel@channel,??_setADCChannel
  3848  00737A  4601               	rlncf	??_setADCChannel,f,c
  3849  00737C  4601               	rlncf	??_setADCChannel,f,c
  3850  00737E  50C2               	movf	4034,w,c	;volatile
  3851  007380  1801               	xorwf	??_setADCChannel,w,c
  3852  007382  0B83               	andlw	-125
  3853  007384  1801               	xorwf	??_setADCChannel,w,c
  3854  007386  6EC2               	movwf	4034,c	;volatile
  3855                           
  3856                           ;./functions.c: 606:     switch (channel)
  3857  007388  D01C               	goto	l2172
  3858  00738A                     l350:
  3859                           
  3860                           ;./functions.c: 609:         TRISBbits.TRISB2 = 1;
  3861  00738A  8493               	bsf	3987,2,c	;volatile
  3862                           
  3863                           ;./functions.c: 610:         ANSELBbits.ANSB2 = 1;
  3864  00738C  010F               	movlb	15	; () banked
  3865  00738E  8539               	bsf	57,2,b	;volatile
  3866                           
  3867                           ;./functions.c: 611:         break;
  3868  007390  0012               	return	
  3869  007392                     l352:
  3870                           
  3871                           ;./functions.c: 613:         TRISBbits.TRISB3 = 1;
  3872  007392  8693               	bsf	3987,3,c	;volatile
  3873                           
  3874                           ;./functions.c: 614:         ANSELBbits.ANSB3 = 1;
  3875  007394  010F               	movlb	15	; () banked
  3876  007396  8739               	bsf	57,3,b	;volatile
  3877                           
  3878                           ;./functions.c: 615:         break;
  3879  007398  0012               	return	
  3880  00739A                     l353:
  3881                           
  3882                           ;./functions.c: 617:         TRISBbits.TRISB1 = 1;
  3883  00739A  8293               	bsf	3987,1,c	;volatile
  3884                           
  3885                           ;./functions.c: 618:         ANSELBbits.ANSB1 = 1;
  3886  00739C  010F               	movlb	15	; () banked
  3887  00739E  8339               	bsf	57,1,b	;volatile
  3888                           
  3889                           ;./functions.c: 619:         break;
  3890  0073A0  0012               	return	
  3891  0073A2                     l354:
  3892                           
  3893                           ;./functions.c: 621:         TRISBbits.TRISB0 = 1;
  3894  0073A2  8093               	bsf	3987,0,c	;volatile
  3895                           
  3896                           ;./functions.c: 622:         ANSELBbits.ANSB0 = 1;
  3897  0073A4  010F               	movlb	15	; () banked
  3898  0073A6  8139               	bsf	57,0,b	;volatile
  3899                           
  3900                           ;./functions.c: 623:         break;
  3901  0073A8  0012               	return	
  3902  0073AA                     l355:
  3903                           
  3904                           ;./functions.c: 625:         TRISBbits.TRISB5 = 1;
  3905  0073AA  8A93               	bsf	3987,5,c	;volatile
  3906                           
  3907                           ;./functions.c: 626:         ANSELBbits.ANSB5 = 1;
  3908  0073AC  010F               	movlb	15	; () banked
  3909  0073AE  8B39               	bsf	57,5,b	;volatile
  3910                           
  3911                           ;./functions.c: 627:         break;
  3912  0073B0  0012               	return	
  3913  0073B2                     l356:
  3914                           
  3915                           ;./functions.c: 629:         TRISCbits.TRISC3 = 1;
  3916  0073B2  8694               	bsf	3988,3,c	;volatile
  3917                           
  3918                           ;./functions.c: 630:         ANSELCbits.ANSC3 = 1;
  3919  0073B4  010F               	movlb	15	; () banked
  3920  0073B6  873A               	bsf	58,3,b	;volatile
  3921                           
  3922                           ;./functions.c: 631:         break;
  3923  0073B8  0012               	return	
  3924  0073BA                     l357:
  3925                           
  3926                           ;./functions.c: 634:         TRISBbits.TRISB0 = 1;
  3927  0073BA  8093               	bsf	3987,0,c	;volatile
  3928                           
  3929                           ;./functions.c: 635:         ANSELBbits.ANSB0 = 1;
  3930  0073BC  010F               	movlb	15	; () banked
  3931  0073BE  8139               	bsf	57,0,b	;volatile
  3932                           
  3933                           ;./functions.c: 636:         break;
  3934  0073C0  0012               	return	
  3935  0073C2                     l2172:
  3936  0073C2  5003               	movf	setADCChannel@channel,w,c
  3937  0073C4  6E01               	movwf	??_setADCChannel& (0+255),c
  3938  0073C6  6A02               	clrf	(??_setADCChannel+1)& (0+255),c
  3939                           
  3940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3941                           ; Switch size 1, requested type "simple"
  3942                           ; Number of cases is 1, Range of values is 0 to 0
  3943                           ; switch strategies available:
  3944                           ; Name         Instructions Cycles
  3945                           ; simple_byte            4     3 (average)
  3946                           ;	Chosen strategy is simple_byte
  3947  0073C8  5002               	movf	??_setADCChannel+1,w,c
  3948  0073CA  0A00               	xorlw	0	; case 0
  3949  0073CC  A4D8               	btfss	status,2,c
  3950  0073CE  D7F5               	goto	l357
  3951                           
  3952                           ; Switch size 1, requested type "simple"
  3953                           ; Number of cases is 6, Range of values is 8 to 15
  3954                           ; switch strategies available:
  3955                           ; Name         Instructions Cycles
  3956                           ; simple_byte           19    10 (average)
  3957                           ;	Chosen strategy is simple_byte
  3958  0073D0  5001               	movf	??_setADCChannel,w,c
  3959  0073D2  0A08               	xorlw	8	; case 8
  3960  0073D4  B4D8               	btfsc	status,2,c
  3961  0073D6  D7D9               	goto	l350
  3962  0073D8  0A01               	xorlw	1	; case 9
  3963  0073DA  B4D8               	btfsc	status,2,c
  3964  0073DC  D7DA               	goto	l352
  3965  0073DE  0A03               	xorlw	3	; case 10
  3966  0073E0  B4D8               	btfsc	status,2,c
  3967  0073E2  D7DB               	goto	l353
  3968  0073E4  0A06               	xorlw	6	; case 12
  3969  0073E6  B4D8               	btfsc	status,2,c
  3970  0073E8  D7DC               	goto	l354
  3971  0073EA  0A01               	xorlw	1	; case 13
  3972  0073EC  B4D8               	btfsc	status,2,c
  3973  0073EE  D7DD               	goto	l355
  3974  0073F0  0A02               	xorlw	2	; case 15
  3975  0073F2  B4D8               	btfsc	status,2,c
  3976  0073F4  D7DE               	goto	l356
  3977  0073F6  D7E1               	goto	l357
  3978  0073F8                     __end_of_setADCChannel:
  3979                           	opt callstack 0
  3980                           
  3981 ;; *************** function _readADC *****************
  3982 ;; Defined at:
  3983 ;;		line 643 in file "./functions.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      unsigned char 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3997 ;;      Params:         0       0       0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0
  4000 ;;      Totals:         0       0       0       0       0       0       0
  4001 ;;Total ram usage:        0 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_aveSensor
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text22
  4011  006FC0                     __ptext22:
  4012                           	opt callstack 0
  4013  006FC0                     _readADC:
  4014                           	opt callstack 27
  4015                           
  4016                           ;./functions.c: 645:     ADCON0bits.GO = 1;
  4017                           
  4018                           ; BSR set to: 15
  4019                           ;incstack = 0
  4020  006FC0  82C2               	bsf	4034,1,c	;volatile
  4021  006FC2                     l361:
  4022                           
  4023                           ;./functions.c: 647:     while (ADCON0bits.GO)
  4024  006FC2  B2C2               	btfsc	4034,1,c	;volatile
  4025  006FC4  D7FE               	goto	l361
  4026                           
  4027                           ;./functions.c: 649:     return ADRESH;
  4028  006FC6  50C4               	movf	4036,w,c	;volatile
  4029  006FC8  0012               	return		;funcret
  4030  006FCA                     __end_of_readADC:
  4031                           	opt callstack 0
  4032                           
  4033 ;; *************** function _PRC *****************
  4034 ;; Defined at:
  4035 ;;		line 321 in file "./functions.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  a               1   56[COMRAM] unsigned char 
  4040 ;;  a               1   55[COMRAM] unsigned char 
  4041 ;;  a               1   54[COMRAM] unsigned char 
  4042 ;;  a               1   53[COMRAM] unsigned char 
  4043 ;;  a               1   52[COMRAM] unsigned char 
  4044 ;;  a               1   51[COMRAM] unsigned char 
  4045 ;;  a               1   50[COMRAM] unsigned char 
  4046 ;;  a               1   49[COMRAM] unsigned char 
  4047 ;;  a               1   48[COMRAM] unsigned char 
  4048 ;;  message        32   11[COMRAM] unsigned char [32]
  4049 ;;  message2        5   43[COMRAM] unsigned char [5]
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4059 ;;      Params:         0       0       0       0       0       0       0
  4060 ;;      Locals:        46       0       0       0       0       0       0
  4061 ;;      Temps:          2       0       0       0       0       0       0
  4062 ;;      Totals:        48       0       0       0       0       0       0
  4063 ;;Total ram usage:       48 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    2
  4066 ;; This function calls:
  4067 ;;		_error
  4068 ;;		_trans
  4069 ;; This function is called by:
  4070 ;;		_RCE
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text23
  4075  0078AC                     __ptext23:
  4076                           	opt callstack 0
  4077  0078AC                     _PRC:
  4078                           	opt callstack 27
  4079                           
  4080                           ;./functions.c: 323:     PORTD = 0b11111001;
  4081                           
  4082                           ;incstack = 0
  4083  0078AC  0EF9               	movlw	249
  4084  0078AE  6E83               	movwf	3971,c	;volatile
  4085  0078B0                     l2810:
  4086                           
  4087                           ;./functions.c: 325:     {;./functions.c: 326:         unsigned char message[] = "\nWhat
      +                           color should sanic race?\n";
  4088  0078B0  EE20  F060         	lfsr	2,PRC@F6009
  4089  0078B4  EE10  F00C         	lfsr	1,PRC@message
  4090  0078B8  0E1F               	movlw	31
  4091  0078BA                     u2051:
  4092  0078BA  CFDB FFE3          	movff	plusw2,plusw1
  4093  0078BE  06E8               	decf	wreg,f,c
  4094  0078C0  E2FC               	bc	u2051
  4095                           
  4096                           ;./functions.c: 327:         unsigned char message2[] = "\nSet";
  4097  0078C2  EE20  F0AE         	lfsr	2,PRC@F6011
  4098  0078C6  EE10  F02C         	lfsr	1,PRC@message2
  4099  0078CA  0E04               	movlw	4
  4100  0078CC                     u2061:
  4101  0078CC  CFDB FFE3          	movff	plusw2,plusw1
  4102  0078D0  06E8               	decf	wreg,f,c
  4103  0078D2  E2FC               	bc	u2061
  4104                           
  4105                           ;./functions.c: 329:         for (unsigned char a = 0; a < 31; a++)
  4106  0078D4  0E00               	movlw	0
  4107  0078D6  6E31               	movwf	PRC@a,c
  4108  0078D8                     l2818:
  4109                           
  4110                           ;./functions.c: 330:         {;./functions.c: 331:             trans(message[a]);
  4111  0078D8  0E0C               	movlw	low PRC@message
  4112  0078DA  2431               	addwf	PRC@a,w,c
  4113  0078DC  6ED9               	movwf	fsr2l,c
  4114  0078DE  6ADA               	clrf	fsr2h,c
  4115  0078E0  0E00               	movlw	high PRC@message
  4116  0078E2  22DA               	addwfc	fsr2h,f,c
  4117  0078E4  50DF               	movf	indf2,w,c
  4118  0078E6  ECEF  F037         	call	_trans
  4119                           
  4120                           ;./functions.c: 332:         }
  4121  0078EA  2A31               	incf	PRC@a,f,c
  4122  0078EC  0E1E               	movlw	30
  4123  0078EE  6431               	cpfsgt	PRC@a,c
  4124  0078F0  D7F3               	goto	l2818
  4125  0078F2                     u2070:
  4126  0078F2  BA9E               	btfsc	3998,5,c	;volatile
  4127  0078F4  D088               	goto	l2934
  4128  0078F6  D7FD               	goto	u2070
  4129  0078F8                     l2824:
  4130                           
  4131                           ;./functions.c: 338:             for (unsigned char a = 0; a < 8; a++)
  4132  0078F8  0E00               	movlw	0
  4133  0078FA  6E32               	movwf	PRC@a_1114,c
  4134  0078FC                     l2830:
  4135                           
  4136                           ;./functions.c: 339:             {;./functions.c: 340:                 raceColor[a] = 0;
  4137  0078FC  0E98               	movlw	low _raceColor
  4138  0078FE  2432               	addwf	PRC@a_1114,w,c
  4139  007900  6ED9               	movwf	fsr2l,c
  4140  007902  6ADA               	clrf	fsr2h,c
  4141  007904  0E00               	movlw	high _raceColor
  4142  007906  22DA               	addwfc	fsr2h,f,c
  4143  007908  0E00               	movlw	0
  4144  00790A  6EDF               	movwf	indf2,c
  4145                           
  4146                           ;./functions.c: 341:             }
  4147  00790C  2A32               	incf	PRC@a_1114,f,c
  4148  00790E  0E07               	movlw	7
  4149  007910  6432               	cpfsgt	PRC@a_1114,c
  4150  007912  D7F4               	goto	l2830
  4151                           
  4152                           ;./functions.c: 342:             raceColor[3] = 1;
  4153  007914  0E01               	movlw	1
  4154  007916  0100               	movlb	0	; () banked
  4155  007918  6F9B               	movwf	(_raceColor+3)& (0+255),b
  4156                           
  4157                           ;./functions.c: 343:             for (unsigned char a = 0; a < 4; a++)
  4158  00791A  0E00               	movlw	0
  4159  00791C  6E33               	movwf	PRC@a_1115,c
  4160  00791E                     l2842:
  4161                           
  4162                           ;./functions.c: 344:             {;./functions.c: 345:                 trans(message2[a]
      +                          );
  4163  00791E  0E2C               	movlw	low PRC@message2
  4164  007920  2433               	addwf	PRC@a_1115,w,c
  4165  007922  6ED9               	movwf	fsr2l,c
  4166  007924  6ADA               	clrf	fsr2h,c
  4167  007926  0E00               	movlw	high PRC@message2
  4168  007928  22DA               	addwfc	fsr2h,f,c
  4169  00792A  50DF               	movf	indf2,w,c
  4170  00792C  ECEF  F037         	call	_trans
  4171                           
  4172                           ;./functions.c: 346:             }
  4173  007930  2A33               	incf	PRC@a_1115,f,c
  4174  007932  0E03               	movlw	3
  4175  007934  6433               	cpfsgt	PRC@a_1115,c
  4176  007936  D7F3               	goto	l2842
  4177  007938  0012               	return	
  4178  00793A                     l2850:
  4179                           
  4180                           ;./functions.c: 350:             for (unsigned char a = 0; a < 8; a++)
  4181  00793A  0E00               	movlw	0
  4182  00793C  6E34               	movwf	PRC@a_1116,c
  4183  00793E                     l2856:
  4184                           
  4185                           ;./functions.c: 351:             {;./functions.c: 352:                 raceColor[a] = 0;
  4186  00793E  0E98               	movlw	low _raceColor
  4187  007940  2434               	addwf	PRC@a_1116,w,c
  4188  007942  6ED9               	movwf	fsr2l,c
  4189  007944  6ADA               	clrf	fsr2h,c
  4190  007946  0E00               	movlw	high _raceColor
  4191  007948  22DA               	addwfc	fsr2h,f,c
  4192  00794A  0E00               	movlw	0
  4193  00794C  6EDF               	movwf	indf2,c
  4194                           
  4195                           ;./functions.c: 353:             }
  4196  00794E  2A34               	incf	PRC@a_1116,f,c
  4197  007950  0E07               	movlw	7
  4198  007952  6434               	cpfsgt	PRC@a_1116,c
  4199  007954  D7F4               	goto	l2856
  4200                           
  4201                           ;./functions.c: 354:             raceColor[1] = 1;
  4202  007956  0E01               	movlw	1
  4203  007958  0100               	movlb	0	; () banked
  4204  00795A  6F99               	movwf	(_raceColor+1)& (0+255),b
  4205                           
  4206                           ;./functions.c: 355:             for (unsigned char a = 0; a < 4; a++)
  4207  00795C  0E00               	movlw	0
  4208  00795E  6E35               	movwf	PRC@a_1117,c
  4209  007960                     l2868:
  4210                           
  4211                           ;./functions.c: 356:             {;./functions.c: 357:                 trans(message2[a]
      +                          );
  4212  007960  0E2C               	movlw	low PRC@message2
  4213  007962  2435               	addwf	PRC@a_1117,w,c
  4214  007964  6ED9               	movwf	fsr2l,c
  4215  007966  6ADA               	clrf	fsr2h,c
  4216  007968  0E00               	movlw	high PRC@message2
  4217  00796A  22DA               	addwfc	fsr2h,f,c
  4218  00796C  50DF               	movf	indf2,w,c
  4219  00796E  ECEF  F037         	call	_trans
  4220                           
  4221                           ;./functions.c: 358:             }
  4222  007972  2A35               	incf	PRC@a_1117,f,c
  4223  007974  0E03               	movlw	3
  4224  007976  6435               	cpfsgt	PRC@a_1117,c
  4225  007978  D7F3               	goto	l2868
  4226  00797A  0012               	return	
  4227  00797C                     l2876:
  4228                           
  4229                           ;./functions.c: 362:             for (unsigned char a = 0; a < 8; a++)
  4230  00797C  0E00               	movlw	0
  4231  00797E  6E36               	movwf	PRC@a_1118,c
  4232  007980                     l2882:
  4233                           
  4234                           ;./functions.c: 363:             {;./functions.c: 364:                 raceColor[a] = 0;
  4235  007980  0E98               	movlw	low _raceColor
  4236  007982  2436               	addwf	PRC@a_1118,w,c
  4237  007984  6ED9               	movwf	fsr2l,c
  4238  007986  6ADA               	clrf	fsr2h,c
  4239  007988  0E00               	movlw	high _raceColor
  4240  00798A  22DA               	addwfc	fsr2h,f,c
  4241  00798C  0E00               	movlw	0
  4242  00798E  6EDF               	movwf	indf2,c
  4243                           
  4244                           ;./functions.c: 365:             }
  4245  007990  2A36               	incf	PRC@a_1118,f,c
  4246  007992  0E07               	movlw	7
  4247  007994  6436               	cpfsgt	PRC@a_1118,c
  4248  007996  D7F4               	goto	l2882
  4249                           
  4250                           ;./functions.c: 366:             raceColor[2] = 1;
  4251  007998  0E01               	movlw	1
  4252  00799A  0100               	movlb	0	; () banked
  4253  00799C  6F9A               	movwf	(_raceColor+2)& (0+255),b
  4254                           
  4255                           ;./functions.c: 367:             for (unsigned char a = 0; a < 4; a++)
  4256  00799E  0E00               	movlw	0
  4257  0079A0  6E37               	movwf	PRC@a_1119,c
  4258  0079A2                     l2894:
  4259                           
  4260                           ;./functions.c: 368:             {;./functions.c: 369:                 trans(message2[a]
      +                          );
  4261  0079A2  0E2C               	movlw	low PRC@message2
  4262  0079A4  2437               	addwf	PRC@a_1119,w,c
  4263  0079A6  6ED9               	movwf	fsr2l,c
  4264  0079A8  6ADA               	clrf	fsr2h,c
  4265  0079AA  0E00               	movlw	high PRC@message2
  4266  0079AC  22DA               	addwfc	fsr2h,f,c
  4267  0079AE  50DF               	movf	indf2,w,c
  4268  0079B0  ECEF  F037         	call	_trans
  4269                           
  4270                           ;./functions.c: 370:             }
  4271  0079B4  2A37               	incf	PRC@a_1119,f,c
  4272  0079B6  0E03               	movlw	3
  4273  0079B8  6437               	cpfsgt	PRC@a_1119,c
  4274  0079BA  D7F3               	goto	l2894
  4275  0079BC  0012               	return	
  4276  0079BE                     l2902:
  4277                           
  4278                           ;./functions.c: 374:             for (unsigned char a = 0; a < 8; a++)
  4279  0079BE  0E00               	movlw	0
  4280  0079C0  6E38               	movwf	PRC@a_1120,c
  4281  0079C2                     l2908:
  4282                           
  4283                           ;./functions.c: 375:             {;./functions.c: 376:                 raceColor[a] = 0;
  4284  0079C2  0E98               	movlw	low _raceColor
  4285  0079C4  2438               	addwf	PRC@a_1120,w,c
  4286  0079C6  6ED9               	movwf	fsr2l,c
  4287  0079C8  6ADA               	clrf	fsr2h,c
  4288  0079CA  0E00               	movlw	high _raceColor
  4289  0079CC  22DA               	addwfc	fsr2h,f,c
  4290  0079CE  0E00               	movlw	0
  4291  0079D0  6EDF               	movwf	indf2,c
  4292                           
  4293                           ;./functions.c: 377:             }
  4294  0079D2  2A38               	incf	PRC@a_1120,f,c
  4295  0079D4  0E07               	movlw	7
  4296  0079D6  6438               	cpfsgt	PRC@a_1120,c
  4297  0079D8  D7F4               	goto	l2908
  4298                           
  4299                           ;./functions.c: 378:             raceColor[4] = 1;
  4300  0079DA  0E01               	movlw	1
  4301  0079DC  0100               	movlb	0	; () banked
  4302  0079DE  6F9C               	movwf	(_raceColor+4)& (0+255),b
  4303                           
  4304                           ;./functions.c: 379:             for (unsigned char a = 0; a < 4; a++)
  4305  0079E0  0E00               	movlw	0
  4306  0079E2  6E39               	movwf	PRC@a_1121,c
  4307  0079E4                     l2920:
  4308                           
  4309                           ;./functions.c: 380:             {;./functions.c: 381:                 trans(message2[a]
      +                          );
  4310  0079E4  0E2C               	movlw	low PRC@message2
  4311  0079E6  2439               	addwf	PRC@a_1121,w,c
  4312  0079E8  6ED9               	movwf	fsr2l,c
  4313  0079EA  6ADA               	clrf	fsr2h,c
  4314  0079EC  0E00               	movlw	high PRC@message2
  4315  0079EE  22DA               	addwfc	fsr2h,f,c
  4316  0079F0  50DF               	movf	indf2,w,c
  4317  0079F2  ECEF  F037         	call	_trans
  4318                           
  4319                           ;./functions.c: 382:             }
  4320  0079F6  2A39               	incf	PRC@a_1121,f,c
  4321  0079F8  0E03               	movlw	3
  4322  0079FA  6439               	cpfsgt	PRC@a_1121,c
  4323  0079FC  D7F3               	goto	l2920
  4324  0079FE  0012               	return	
  4325  007A00                     l2928:
  4326                           
  4327                           ;./functions.c: 387:             error();
  4328  007A00  EC56  F038         	call	_error	;wreg free
  4329                           
  4330                           ;./functions.c: 388:             continue;
  4331  007A04  D755               	goto	l2810
  4332  007A06                     l2934:
  4333  007A06  50AE               	movf	4014,w,c	;volatile
  4334  007A08  6E0A               	movwf	??_PRC& (0+255),c
  4335  007A0A  6A0B               	clrf	(??_PRC+1)& (0+255),c
  4336                           
  4337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4338                           ; Switch size 1, requested type "simple"
  4339                           ; Number of cases is 1, Range of values is 0 to 0
  4340                           ; switch strategies available:
  4341                           ; Name         Instructions Cycles
  4342                           ; simple_byte            4     3 (average)
  4343                           ;	Chosen strategy is simple_byte
  4344  007A0C  500B               	movf	??_PRC+1,w,c
  4345  007A0E  0A00               	xorlw	0	; case 0
  4346  007A10  A4D8               	btfss	status,2,c
  4347  007A12  D7F6               	goto	l2928
  4348                           
  4349                           ; Switch size 1, requested type "simple"
  4350                           ; Number of cases is 4, Range of values is 66 to 110
  4351                           ; switch strategies available:
  4352                           ; Name         Instructions Cycles
  4353                           ; simple_byte           13     7 (average)
  4354                           ;	Chosen strategy is simple_byte
  4355  007A14  500A               	movf	??_PRC,w,c
  4356  007A16  0A42               	xorlw	66	; case 66
  4357  007A18  B4D8               	btfsc	status,2,c
  4358  007A1A  D76E               	goto	l2824
  4359  007A1C  0A05               	xorlw	5	; case 71
  4360  007A1E  B4D8               	btfsc	status,2,c
  4361  007A20  D78C               	goto	l2850
  4362  007A22  0A15               	xorlw	21	; case 82
  4363  007A24  B4D8               	btfsc	status,2,c
  4364  007A26  D7AA               	goto	l2876
  4365  007A28  0A3C               	xorlw	60	; case 110
  4366  007A2A  B4D8               	btfsc	status,2,c
  4367  007A2C  D7C8               	goto	l2902
  4368  007A2E  D7E8               	goto	l2928
  4369  007A30                     __end_of_PRC:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _error *****************
  4373 ;; Defined at:
  4374 ;;		line 681 in file "./functions.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  a               1    8[COMRAM] unsigned char 
  4379 ;;  message         7    1[COMRAM] unsigned char [7]
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4389 ;;      Params:         0       0       0       0       0       0       0
  4390 ;;      Locals:         8       0       0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0
  4392 ;;      Totals:         8       0       0       0       0       0       0
  4393 ;;Total ram usage:        8 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    1
  4396 ;; This function calls:
  4397 ;;		_trans
  4398 ;; This function is called by:
  4399 ;;		_PRC
  4400 ;;		_RCE
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text24
  4405  0070AC                     __ptext24:
  4406                           	opt callstack 0
  4407  0070AC                     _error:
  4408                           	opt callstack 28
  4409                           
  4410                           ;./functions.c: 683:     unsigned char message[] = "ERROR\n";
  4411                           
  4412                           ;incstack = 0
  4413  0070AC  EE20  F0A1         	lfsr	2,error@F6050
  4414  0070B0  EE10  F002         	lfsr	1,error@message
  4415  0070B4  0E06               	movlw	6
  4416  0070B6                     u1601:
  4417  0070B6  CFDB FFE3          	movff	plusw2,plusw1
  4418  0070BA  06E8               	decf	wreg,f,c
  4419  0070BC  E2FC               	bc	u1601
  4420                           
  4421                           ;./functions.c: 685:     for (unsigned char a = 0; a < 6; a++)
  4422  0070BE  0E00               	movlw	0
  4423  0070C0  6E09               	movwf	error@a,c
  4424  0070C2                     l2470:
  4425                           
  4426                           ;./functions.c: 686:     {;./functions.c: 687:         trans(message[a]);
  4427  0070C2  0E02               	movlw	low error@message
  4428  0070C4  2409               	addwf	error@a,w,c
  4429  0070C6  6ED9               	movwf	fsr2l,c
  4430  0070C8  6ADA               	clrf	fsr2h,c
  4431  0070CA  0E00               	movlw	high error@message
  4432  0070CC  22DA               	addwfc	fsr2h,f,c
  4433  0070CE  50DF               	movf	indf2,w,c
  4434  0070D0  ECEF  F037         	call	_trans
  4435                           
  4436                           ;./functions.c: 688:     }
  4437  0070D4  2A09               	incf	error@a,f,c
  4438  0070D6  0E05               	movlw	5
  4439  0070D8  6409               	cpfsgt	error@a,c
  4440  0070DA  D7F3               	goto	l2470
  4441                           
  4442                           ;./functions.c: 690:     RCREG = 0;
  4443  0070DC  0E00               	movlw	0
  4444  0070DE  6EAE               	movwf	4014,c	;volatile
  4445  0070E0  0012               	return		;funcret
  4446  0070E2                     __end_of_error:
  4447                           	opt callstack 0
  4448                           
  4449 ;; *************** function _trans *****************
  4450 ;; Defined at:
  4451 ;;		line 586 in file "./functions.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  s               1    wreg     unsigned char 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  s               1    0[COMRAM] unsigned char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4465 ;;      Params:         0       0       0       0       0       0       0
  4466 ;;      Locals:         1       0       0       0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0
  4468 ;;      Totals:         1       0       0       0       0       0       0
  4469 ;;Total ram usage:        1 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_PRC
  4475 ;;		_pyCal
  4476 ;;		_error
  4477 ;;		_RCE
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text25
  4482  006FDE                     __ptext25:
  4483                           	opt callstack 0
  4484  006FDE                     _trans:
  4485                           	opt callstack 29
  4486                           
  4487                           ;incstack = 0
  4488                           ;trans@s stored from wreg
  4489  006FDE  6E01               	movwf	trans@s,c
  4490  006FE0                     
  4491                           ;./functions.c: 588:     while (!PIR1bits.TX1IF)
  4492                           
  4493                           ;./functions.c: 589:         ;
  4494  006FE0  A89E               	btfss	3998,4,c	;volatile
  4495  006FE2  D7FE               	goto	l2426
  4496                           
  4497                           ;./functions.c: 590:     TXREG = s;
  4498  006FE4  C001  FFAD         	movff	trans@s,4013	;volatile
  4499  006FE8  0012               	return		;funcret
  4500  006FEA                     __end_of_trans:
  4501                           	opt callstack 0
  4502  0000                     
  4503                           	psect	rparam
  4504  0000                     tosu	equ	0xFFF
  4505                           tosh	equ	0xFFE
  4506                           tosl	equ	0xFFD
  4507                           stkptr	equ	0xFFC
  4508                           pclatu	equ	0xFFB
  4509                           pclath	equ	0xFFA
  4510                           pcl	equ	0xFF9
  4511                           tblptru	equ	0xFF8
  4512                           tblptrh	equ	0xFF7
  4513                           tblptrl	equ	0xFF6
  4514                           tablat	equ	0xFF5
  4515                           prodh	equ	0xFF4
  4516                           prodl	equ	0xFF3
  4517                           indf0	equ	0xFEF
  4518                           postinc0	equ	0xFEE
  4519                           postdec0	equ	0xFED
  4520                           preinc0	equ	0xFEC
  4521                           plusw0	equ	0xFEB
  4522                           fsr0h	equ	0xFEA
  4523                           fsr0l	equ	0xFE9
  4524                           wreg	equ	0xFE8
  4525                           indf1	equ	0xFE7
  4526                           postinc1	equ	0xFE6
  4527                           postdec1	equ	0xFE5
  4528                           preinc1	equ	0xFE4
  4529                           plusw1	equ	0xFE3
  4530                           fsr1h	equ	0xFE2
  4531                           fsr1l	equ	0xFE1
  4532                           bsr	equ	0xFE0
  4533                           indf2	equ	0xFDF
  4534                           postinc2	equ	0xFDE
  4535                           postdec2	equ	0xFDD
  4536                           preinc2	equ	0xFDC
  4537                           plusw2	equ	0xFDB
  4538                           fsr2h	equ	0xFDA
  4539                           fsr2l	equ	0xFD9
  4540                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        120
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     84      91
    BANK0           160      0     118
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    classifyColors@sensorRanges	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 

    classifyColors@F6028	PTR unsigned char [5] size(2) Largest target is 5
		 -> RRranges(BANK0[5]), Rranges(BANK0[5]), Mranges(BANK0[5]), Lranges(BANK0[5]), 
		 -> LLranges(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_RCE
    _RCE->_calibrate
    _pyCal->_msDelay
    _navigate->_classifyColors
    _readAllSensors->_aveSensor
    _calibrate->_oneSecDelay
    _oneSecDelay->_msDelay
    _msDelay->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _aveSensor->_setADCChannel
    _PRC->_error
    _error->_trans

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9332
                                _RCE
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _clearPorts
                           _setupADC
                           _setupOSC
                        _setupSerial
 ---------------------------------------------------------------------------------
 (2) _setupSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupOSC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RCE                                                 22    22      0    9332
                                             62 COMRAM    22    22      0
                                _PRC
                          _calibrate
                              _error
                           _navigate
                              _pyCal
                              _trans
 ---------------------------------------------------------------------------------
 (2) _pyCal                                                2     2      0    3023
                                             50 COMRAM     2     2      0
                          _aveSensor
                            _msDelay
                           _setupADC
                              _trans
 ---------------------------------------------------------------------------------
 (2) _navigate                                             0     0      0     696
                     _classifyColors
               _displayColorDetected
                   _displayRaceColor
                     _readAllSensors
                           _setupADC
                         _stopMotors
 ---------------------------------------------------------------------------------
 (3) _stopMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readAllSensors                                       2     2      0     249
                                             10 COMRAM     2     2      0
                          _aveSensor
 ---------------------------------------------------------------------------------
 (3) _displayRaceColor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displayColorDetected                                 3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _classifyColors                                      15    15      0     425
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (2) _calibrate                                           11    11      0    4335
                                             51 COMRAM    11    11      0
                          _aveSensor
                        _oneSecDelay
 ---------------------------------------------------------------------------------
 (3) _oneSecDelay                                          1     1      0    2819
                                             50 COMRAM     1     1      0
                            _msDelay
 ---------------------------------------------------------------------------------
 (3) _msDelay                                              1     1      0    2773
                                             49 COMRAM     1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _aveSensor                                            7     7      0     159
                                              3 COMRAM     7     7      0
                            _readADC
                      _setADCChannel
 ---------------------------------------------------------------------------------
 (4) _setADCChannel                                        3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PRC                                                 48    48      0     865
                                              9 COMRAM    48    48      0
                              _error
                              _trans
 ---------------------------------------------------------------------------------
 (2) _error                                                8     8      0     114
                                              1 COMRAM     8     8      0
                              _trans
 ---------------------------------------------------------------------------------
 (2) _trans                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RCE
     _PRC
       _error
         _trans
       _trans
     _calibrate
       _aveSensor
         _readADC
         _setADCChannel
       _oneSecDelay
         _msDelay
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _error
       _trans
     _navigate
       _classifyColors
       _displayColorDetected
       _displayRaceColor
       _readAllSensors
         _aveSensor
           _readADC
           _setADCChannel
       _setupADC
       _stopMotors
     _pyCal
       _aveSensor
         _readADC
         _setADCChannel
       _msDelay
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _setupADC
       _trans
     _trans
   _init
     _clearPorts
     _setupADC
     _setupOSC
     _setupSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      76       4       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     54      5B       1       95.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D1       9        0.0%
DATA                 0      0      D1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 25 20:53:00 2019

               _colorsDetected 00D1                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_LVP$ON 000000  
                          l400 6FDC                            l313 73FC                            l315 7408  
                          l316 7414                            l317 7420                            l421 75B0  
                          l350 738A                            l318 742C                            l319 7438  
                          l415 75A0                            l352 7392                            l361 6FC2  
                          l353 739A                            l354 73A2                            l355 73AA  
                          l356 73B2                            l357 73BA                            l279 707E  
                          l389 72F4                   __CFG_CPB$OFF 000000                            _RCE 753A  
                          _PR2 000FBB                            _PR4 000F52                   __CFG_CPD$OFF 000000  
                          _PR6 000F4B                            _PRC 78AC                            _col 0055  
                          prod 000FF3                            wreg 000FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                           ?_RCE 0001                           ?_PRC 0001  
                         RCE@a 0053                   ___fltol@exp1 0031                           PRC@a 0031  
                         l1101 7828                           l1053 7D2E                           l1070 7FCC  
                         l1062 7F46                           l1063 7F42                           l2200 7CEE  
                         l2214 7D1A                           l1094 77AA                           l3022 758C  
                         l2224 7D4C                           l2216 7D1E                           l2320 749E  
                         l2400 789A                           l3040 75CE                           l3008 7554  
                         l3042 75D4                           l3026 759A                           l3018 757E  
                         l2172 73C2                           l2308 7FEA                           l2340 74F8  
                         l3060 761E                           l3044 75DA                           l3052 75EC  
                         l2414 7170                           l3046 75E0                           l3054 761A  
                         l3038 75C6                           l2272 7F0C                           l2336 74E8  
                         l2520 764E                           l3048 75E6                           l2426 6FE0  
                         l2266 7EEE                           l2354 7528                           l2346 7500  
                         l2370 77D8                           l2506 70EA                           l2292 7F8A  
                         l2196 7CDA                           l2348 750C                           l2372 77DE  
                         l2364 77BA                           l2532 7712                           l2524 7692  
                         l2470 70C2                           l2198 7CDE                           l2382 784E  
                         l2374 77EA                           l2296 7FA8                           l2384 785A  
                         l2376 7810                           l2456 7000                           l2536 7752  
                         l2528 76D2                           l2810 78B0                           l2546 7444  
                         l2490 7144                           l2482 712C                           l2724 7BBC  
                         l2636 7AC8                           l2902 79BE                           l2830 78FC  
                         l2494 7150                           l2486 7138                           l2920 79E4  
                         l2824 78F8                           l2680 7B42                           l2592 7A4E  
                         l2850 793A                           l2842 791E                           l2818 78D8  
                         l2908 79C2                           l2934 7A06                           l2942 71A6  
                         l2928 7A00                           l2856 793E                           l2768 7C36  
                         l2952 71B0                           l2882 7980                           l2876 797C  
                         l2868 7960                           l2894 79A2                           u1320 7F3C  
                         u1400 74BC                           u2051 78BA                           u2061 78CC  
                         u1405 74B2                           _LATA 000F89                           u2070 78F2  
                         u1270 7D3A                           u2230 70A6                           _LATB 000F8A  
                         _LATC 000F8B                           u1360 7F98                           u1280 7EB0  
                         u1440 7512                           u1520 7864                           _LATD 000F8C  
                         _FSR0 000FE9                           u1601 70B6                           u2241 7548  
                         _LATE 000F8D                           u1370 7FB6                           u1285 7EA6  
                         u1390 748C                           u1741 7A3E                           u1670 711C  
                         u1681 7642                           _TMR2 000FBC                           _TMR6 000F4C  
                         _main 6FD4                           _init 7010                           _size 0056  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                __CFG_BORV$190 000000                           prodh 000FF4                           prodl 000FF3  
                         start 0000                  __CFG_IESO$OFF 000000          ?_displayColorDetected 0001  
                 ___param_bank 000000                          ??_RCE 003F                          ??_PRC 000A  
                 _BAUDCON1bits 000FB8                  ___fltol@sign1 0030                          ?_main 0001  
                        ?_init 0001                __end_of___flmul 8000                __end_of___fltol 753A  
                        _T2CON 000FBA                          _T6CON 000F4A                          _RCREG 000FAE  
                        _PORTA 000F80                          _PORTB 000F81                          _PORTC 000F82  
                        _PORTD 000F83                          _PORTE 000F84                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                          _TXREG 000FAD         __size_of_setADCChannel 0084  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                   ?_oneSecDelay 0001  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                __end_of_msDelay 7302                __end_of_readADC 6FCA  
               __CFG_EBTRB$OFF 000000                          _error 70AC                          _pyCal 71A2  
           __CFG_MCLRE$EXTMCLR 000000                          _trans 6FDE                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
               __CFG_HFOFST$ON 000000                 __CFG_PBADEN$ON 000000                __initialization 71EC  
                 __end_of_main 6FDE                   __end_of_init 7028                  calibrate@temp 003E  
                       ??_main 0055                         ??_init 0001                  __activetblptr 000002  
                       _ADCON1 000FC1                         ?_error 0001                         ?_pyCal 0001  
                       _ADRESH 000FC4                         _CCPR1L 000FBE                         _CCPR5L 000F55  
                       ?_trans 0001                         _ANSELA 000F38                         _ANSELB 000F39  
                       _ANSELC 000F3A                         _ANSELD 000F3B                         _ANSELE 000F3C  
             calibrate@samples 0039                 __CFG_WDTEN$OFF 000000               calibrate@sensors 0034  
                       _RCSTA1 000FAB                         _SPBRG1 000FAF               __end_of___xxtofl 78AC  
                       _TXSTA1 000FAC         ??_displayColorDetected 0001                  _setADCChannel 7374  
               __CFG_XINST$OFF 000000                 __CFG_STVREN$ON 000000                      ??___flmul 0017  
                    ??___fltol 002C               __end_of_navigate 70AC                classifyColors@a 000F  
      __size_of_readAllSensors 003C                      ??_msDelay 0032                      ??_readADC 0001  
                       error@a 0009                         pyCal@a 0034                   __pdataCOMRAM 0055  
             __end_of_setupADC 704A               __end_of_setupOSC 6FD4                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             RCE@commandReceived 004F  
                       trans@s 0001                   ?_setupSerial 0001                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 7238                 ?_setADCChannel 0001                  ___rparam_used 000001  
                   ___fltol@f1 0028              ?_displayRaceColor 0001                 __pcstackCOMRAM 0001  
               calibrate@F6000 00B3             __size_of_calibrate 027E                   __pidataBANK0 7303  
           ??_displayRaceColor 0001           setADCChannel@channel 0003                  __end_of_error 70E2  
                __end_of_pyCal 71EC                  __end_of_trans 6FEA                      RCE@a_1237 0054  
           __size_of_aveSensor 0046                        ??_error 0002                        ??_pyCal 0033  
         __size_of_oneSecDelay 0014                        ??_trans 0001                     __pbssBANK0 00D1  
              __CFG_PLLCFG$OFF 000000                      PRC@a_1120 0038                      PRC@a_1121 0039  
                    PRC@a_1114 0032                      PRC@a_1115 0033                      PRC@a_1116 0034  
                    PRC@a_1117 0035                      PRC@a_1118 0036                      PRC@a_1119 0037  
                   _clearPorts 7242             __CFG_CCP2MX$PORTC1 000000        __size_of_classifyColors 0134  
           __CFG_CCP3MX$PORTB5 000000                        _CCP1CON 000FBD                        _CCP5CON 000F54  
                    ?___xxtofl 0001                        _SPBRGH1 000FB0              __end_of_calibrate 7CAE  
   displayColorDetected@sensor 0003                ??_setADCChannel 0001                      ?_navigate 0001  
                  PRC@message2 002C              __end_of_aveSensor 71A2                __CFG_PWRTEN$OFF 000000  
                      _Lranges 00CC                        __Hparam 0000                        _Mranges 00C7  
                      __Lparam 0000                      ?_setupADC 0001                        _Rranges 00C2  
            RCE@nCharsReceived 0052                      ?_setupOSC 0001                        ___flmul 7CAE  
                      ___fltol 7480                   error@message 0002                        __pcinit 71EC  
                      __ramtop 0600                        __ptext0 6FD4                        __ptext1 7010  
                      __ptext2 704A                        __ptext3 6FCA                        __ptext4 7242  
                      __ptext5 753A                        __ptext6 71A2                        __ptext7 707A  
                      __ptext8 6FEA                        __ptext9 7028                 _readAllSensors 70E2  
                      _msDelay 729C                        _readADC 6FC0                   __size_of_RCE 00FE  
                 __size_of_PRC 0184                      _T2CONbits 000FBA                     ??___xxtofl 0005  
                    _T4CONbits 000F51           end_of_initialization 7238           __size_of_setupSerial 0030  
                __Lmediumconst 0000                     ??_navigate 0010                    ?_clearPorts 0001  
                   aveSensor@a 000A                     aveSensor@s 0006                     ??_setupADC 0001  
                 oneSecDelay@a 0033                     ??_setupOSC 0001                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     _sensorVals 00B8         __end_of_readAllSensors 711E  
                    _PORTAbits 000F80                      _PORTCbits 000F82                      _PORTEbits 000F84  
          classifyColors@F6028 008E                  ___xxtofl@sign 0009                      _TRISBbits 000F93  
                    _TRISCbits 000F94                      _TRISEbits 000F96                    ___flmul@grs 001C  
        aveSensor@measurements 0007               msDelay@delayInMs 0032                     _stopMotors 6FEA  
__size_of_displayColorDetected 0088                 _classifyColors 7638                ?_readAllSensors 0001  
                __pidataCOMRAM 6FB9            start_initialization 71EC      __size_of_displayRaceColor 003E  
                  __end_of_RCE 7638                    __end_of_PRC 7A30            __size_of_clearPorts 005A  
                   error@F6050 00A1         __end_of_classifyColors 776C                 _sensorChannels 00A8  
                   RCE@message 0041                    __pdataBANK0 0060                       RCE@F6064 0080  
                    ___flmul@a 0013                      ___flmul@b 000F                  ??_oneSecDelay 0033  
            __size_of___xxtofl 0140     classifyColors@sensorRanges 0005                       PRC@F6011 00AE  
                     PRC@F6009 0060                      _calibrate 7A30                    ?_stopMotors 0001  
              ?_classifyColors 0001              __size_of_navigate 0032                      _aveSensor 715C  
                     ?___flmul 000F                       ?___fltol 0028              __size_of_setupADC 0022  
            __size_of_setupOSC 000A               __CFG_PRICLKEN$ON 000000                       ?_msDelay 0001  
                     ?_readADC 0001                     PRC@message 000C                      _raceColor 0098  
                     _CCPTMRS0 000F49                       _CCPTMRS1 000F48          calibrate@samples_1100 003D  
        calibrate@samples_1097 003A          calibrate@samples_1098 003B          calibrate@samples_1099 003C  
               __size_of_error 0036                 __size_of_pyCal 004A                 __size_of_trans 000C  
          __end_of_oneSecDelay 7010                     ?_calibrate 0001          __end_of_setADCChannel 73F8  
                     _PIE1bits 000F9D                       _PIE5bits 000F7D                   ??_clearPorts 0001  
                     _PIR1bits 000F9E                       _PIR5bits 000F7E               __CFG_WDTPS$32768 000000  
                   ?_aveSensor 0001                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
              readAllSensors@a 000B                       _LLranges 0057               _displayRaceColor 711E  
          __size_of_stopMotors 0012                  ??_setupSerial 0001             __end_of_clearPorts 729C  
                    copy_data0 7200                      copy_data1 7220                       _RRranges 00BD  
                     __Hrparam 0000               ??_readAllSensors 000B                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000              __CFG_P2BMX$PORTD2 000000               __size_of___flmul 0352  
             __size_of___fltol 00BA                     _ANSELBbits 000F39                     _ANSELCbits 000F3A  
             __size_of_msDelay 0066               __size_of_readADC 000A                       ___xxtofl 776C  
 __end_of_displayColorDetected 7480                    _oneSecDelay 6FFC                       __ptext10 70E2  
                     __ptext11 711E                       __ptext20 715C                       __ptext12 73F8  
                     __ptext21 7374                       __ptext13 7638                       __ptext22 6FC0  
                     __ptext14 7A30                       __ptext23 78AC                       __ptext15 6FFC  
                     __ptext24 70AC                       __ptext16 729C                       __ptext25 6FDE  
                     __ptext17 776C                       __ptext18 7480                       __ptext19 7CAE  
                  ??_calibrate 0034                  __size_of_main 000A                  __size_of_init 0018  
                     _navigate 707A            __end_of_setupSerial 707A                       _setupADC 7028  
                     _setupOSC 6FCA                    ??_aveSensor 0004                     _INTCONbits 000FF2  
             ??_classifyColors 0001                   ??_stopMotors 0001                     _OSCCONbits 000FD3  
              aveSensor@result 0009              __CFG_T3CMX$PORTC0 000000             __end_of_stopMotors 6FFC  
                  _setupSerial 704A              __CFG_FOSC$INTIO67 000000       __end_of_displayRaceColor 715C  
         _displayColorDetected 73F8  
